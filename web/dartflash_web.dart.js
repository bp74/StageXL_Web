// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString$0$abfnosu(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    return t1 != null ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Dynamic_ = {"": "Object;"};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;message",
  toString$0: function() {
    return this.message;
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.get$length$as($.$$index$a(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  start$1: function(arg0) {
    return this.start.call$1(arg0);
  },
  group$1: function(index) {
    return $.$$index$as(this._groups, index);
  },
  $index: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index$as(t1, index);
  },
  get$groupCount: function() {
    return $.$$sub$n($.get$length$as(this._groups), 1);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib3$_current",
  get$current: function() {
    return this._liblib3$_current;
  },
  moveNext$0: function() {
    this._liblib3$_current = this._re.firstMatch$1(this._str);
    return this._liblib3$_current != null;
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  $index: function(g) {
    return this.group$1(g);
  },
  get$groupCount: function() {
    return 0;
  },
  group$1: function(group_) {
    if ($.$$eq$o(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  },
  start$1: function(arg0) {
    return this.start.call$1(arg0);
  }
};

$$.Collection = {"": "Iterable;",
  addAll$1: function(elements) {
    var t1;
    for (t1 = $.get$iterator$a(elements); t1.moveNext$0() === true;)
      this.add$1(t1.get$current());
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  clear$0: function() {
    $.IterableMixinWorkaround_removeMatching(this, new $.Collection_clear_anon());
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  }
};

$$.DateTime = {"": "Object;millisecondsSinceEpoch>,isUtc",
  $eq: function(other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDateTime))
      return false;
    return $.$$eq$o(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch) === true && $.$$eq$o(this.isUtc, other.isUtc) === true;
  },
  $lt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$lt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$lt$bailout(2, 0, t1, t3);
    return t1 < t3;
  },
  $$lt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$lt$n(t1, t3);
    }
  },
  $le: function(other) {
    return $.$$le$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $gt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$gt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$gt$bailout(2, 0, t1, t3);
    return t1 > t3;
  },
  $$gt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$gt$n(t1, t3);
    }
  },
  $ge: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$ge$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$ge$bailout(2, 0, t1, t3);
    return t1 >= t3;
  },
  $$ge$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$ge$n(t1, t3);
    }
  },
  compareTo$1: function(other) {
    return $.compareTo$1$ns(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function() {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function() {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_fourDigits();
    t2 = new $.DateTime_toString_threeDigits();
    t3 = new $.DateTime_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(duration) {
    var ms, t2;
    ms = this.millisecondsSinceEpoch;
    t2 = duration.get$inMilliseconds();
    if (typeof ms !== "number")
      return this.add$1$bailout(1, duration, ms);
    if (typeof t2 !== "number")
      return this.add$1$bailout(2, 0, ms, t2);
    return $.DateTime$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
  },
  add$1$bailout: function(state0, duration, ms, t2) {
    switch (state0) {
      case 0:
        ms = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t2 = duration.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.DateTime$fromMillisecondsSinceEpoch($.$$add$n(ms, t2), this.isUtc);
    }
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.abs$0$n(millisecondsSinceEpoch) > 8640000000000000)
      throw $.$$throw($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.$$throw($.ArgumentError$(isUtc));
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  $isDateTime: true
};

$$.Duration = {"": "Object;inMilliseconds>",
  $add: function(other) {
    var t1, t3;
    t1 = this.inMilliseconds;
    t3 = other.get$inMilliseconds();
    if (typeof t1 !== "number")
      return this.$$add$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$add$bailout(2, 0, t1, t3);
    return $.Duration$(0, 0, t1 + t3, 0, 0);
  },
  $$add$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.inMilliseconds;
      case 1:
        state0 = 0;
        t3 = other.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.Duration$(0, 0, $.$$add$n(t1, t3), 0, 0);
    }
  },
  $sub: function(other) {
    var t1, t3;
    t1 = this.inMilliseconds;
    t3 = other.get$inMilliseconds();
    if (typeof t1 !== "number")
      return this.$$sub$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$sub$bailout(2, 0, t1, t3);
    return $.Duration$(0, 0, t1 - t3, 0, 0);
  },
  $$sub$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.inMilliseconds;
      case 1:
        state0 = 0;
        t3 = other.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.Duration$(0, 0, $.$$sub$n(t1, t3), 0, 0);
    }
  },
  $mul: function(factor) {
    var t2 = this.inMilliseconds;
    if (typeof t2 !== "number")
      return this.$$mul$bailout(2, factor, t2);
    if (typeof factor !== "number")
      return this.$$mul$bailout(1, factor);
    return $.Duration$(0, 0, t2 * factor, 0, 0);
  },
  $$mul$bailout: function(state0, factor, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this.inMilliseconds;
      case 2:
        state0 = 0;
        return $.Duration$(0, 0, $.$$mul$n(t2, factor), 0, 0);
    }
  },
  $tdiv: function(quotient) {
    var t1;
    if (typeof quotient !== "number")
      return this.$$tdiv$bailout(1, quotient);
    if (quotient === 0)
      throw $.$$throw($.IntegerDivisionByZeroException$());
    t1 = this.inMilliseconds;
    if (typeof t1 !== "number")
      return this.$$tdiv$bailout(2, quotient, t1);
    return $.Duration$(0, 0, $.CONSTANT4.$tdiv(t1, quotient), 0, 0);
  },
  $$tdiv$bailout: function(state0, quotient, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if ($.$$eq$o(quotient, 0) === true)
          throw $.$$throw($.IntegerDivisionByZeroException$());
        t1 = this.inMilliseconds;
      case 2:
        state0 = 0;
        return $.Duration$(0, 0, $.$$tdiv$n(t1, quotient), 0, 0);
    }
  },
  $lt: function(other) {
    var t1, t3;
    t1 = this.inMilliseconds;
    t3 = other.get$inMilliseconds();
    if (typeof t1 !== "number")
      return this.$$lt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$lt$bailout(2, 0, t1, t3);
    return t1 < t3;
  },
  $$lt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.inMilliseconds;
      case 1:
        state0 = 0;
        t3 = other.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.$$lt$n(t1, t3);
    }
  },
  $gt: function(other) {
    var t1, t3;
    t1 = this.inMilliseconds;
    t3 = other.get$inMilliseconds();
    if (typeof t1 !== "number")
      return this.$$gt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$gt$bailout(2, 0, t1, t3);
    return t1 > t3;
  },
  $$gt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.inMilliseconds;
      case 1:
        state0 = 0;
        t3 = other.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.$$gt$n(t1, t3);
    }
  },
  $le: function(other) {
    return $.$$le$n(this.inMilliseconds, other.get$inMilliseconds());
  },
  $ge: function(other) {
    var t1, t3;
    t1 = this.inMilliseconds;
    t3 = other.get$inMilliseconds();
    if (typeof t1 !== "number")
      return this.$$ge$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$ge$bailout(2, 0, t1, t3);
    return t1 >= t3;
  },
  $$ge$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.inMilliseconds;
      case 1:
        state0 = 0;
        t3 = other.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.$$ge$n(t1, t3);
    }
  },
  get$inHours: function() {
    return $.$$tdiv$n(this.inMilliseconds, 3600000);
  },
  get$inMinutes: function() {
    return $.$$tdiv$n(this.inMilliseconds, 60000);
  },
  get$inSeconds: function() {
    return $.$$tdiv$n(this.inMilliseconds, 1000);
  },
  $eq: function(other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDuration))
      return false;
    return $.$$eq$o(this.inMilliseconds, other.inMilliseconds);
  },
  get$hashCode: function() {
    return $.get$hashCode$abnosu(this.inMilliseconds);
  },
  compareTo$1: function(other) {
    return $.compareTo$1$ns(this.inMilliseconds, other.get$inMilliseconds());
  },
  toString$0: function() {
    var t1, t2, t3, t4, twoDigitMinutes, twoDigitSeconds, threeDigitMs;
    t1 = new $.Duration_toString_threeDigits();
    t2 = new $.Duration_toString_twoDigits();
    t3 = this.inMilliseconds;
    t4 = $.getInterceptor$n(t3);
    if (t4.$lt(t3, 0) === true)
      return "-" + $.S($.Duration$(0, 0, t4.$negate(t3), 0, 0));
    twoDigitMinutes = t2.call$1($.remainder$1$n(this.get$inMinutes(), 60));
    twoDigitSeconds = t2.call$1($.remainder$1$n(this.get$inSeconds(), 60));
    threeDigitMs = t1.call$1(t4.remainder$1(t3, 1000));
    return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(threeDigitMs);
  },
  $isDuration: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.StringBuffer$("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(1, t1, t2);
    for (; $.$$lt$n(t1.i_1, t2.length) === true; t1.i_1 = $.$$add$n(t1.i_1, 1)) {
      if ($.$$gt$n(t1.i_1, 0) === true)
        $.add$1$a(t1.sb_0, ", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      $.add$1$a(t3, $.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    if (t2 != null)
      $.forEach$1$a(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(2, t1, t2);
    actualParameters = $.toString$0$abfnosu(t1.sb_0);
    t1.sb_0 = $.StringBuffer$("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0)
        $.add$1$a(t1.sb_0, ", ");
      t3 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      $.add$1$a(t3, t2[i]);
    }
    formalParameters = $.toString$0$abfnosu(t1.sb_0);
    t2 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
  },
  toString$0$bailout1: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer$("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (t2 != null)
          for (t3 = $.getInterceptor$as(t2); $.$$lt$n(t1.i_1, t3.get$length(t2)) === true; t1.i_1 = $.$$add$n(t1.i_1, 1)) {
            if ($.$$gt$n(t1.i_1, 0) === true)
              $.add$1$a(t1.sb_0, ", ");
            $.add$1$a(t1.sb_0, $.Error_safeToString(t3.$index(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (t2 != null)
          $.forEach$1$a(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t3, actualParameters, i, formalParameters;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          actualParameters = $.toString$0$abfnosu(t1.sb_0);
          t1.sb_0 = $.StringBuffer$("");
          for (t3 = $.getInterceptor$as(t2), i = 0; $.CONSTANT4.$lt(i, t3.get$length(t2)); ++i) {
            if (i > 0)
              $.add$1$a(t1.sb_0, ", ");
            $.add$1$a(t1.sb_0, t3.$index(t2, i));
          }
          formalParameters = $.toString$0$abfnosu(t1.sb_0);
          t2 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message",
  toString$0: function() {
    return "Unsupported operation: " + this.message;
  }
};

$$.UnimplementedError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    return t1 != null ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function() {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.FormatException = {"": "Object;message",
  toString$0: function() {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
};

$$.IllegalJSRegExpException = {"": "FormatException;message"};

$$.IntegerDivisionByZeroException = {"": "Object;",
  toString$0: function() {
    return "IntegerDivisionByZeroException";
  },
  $isException: true
};

$$.Iterable = {"": "Object;",
  map$1: function(f) {
    return $.MappedIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  contains$1: function(element) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      if ($.$$eq$o(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    var iterator, buffer;
    if (typeof separator !== "string")
      return this.join$1$bailout(1, separator);
    iterator = this.get$iterator();
    if (iterator.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer$("");
    if (separator === "")
      do
        buffer.add$1($.S(iterator.get$current()));
      while (iterator.moveNext$0() === true);
    else {
      buffer.add$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0() === true;) {
        buffer.add$1(separator);
        buffer.add$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0();
  },
  join$1$bailout: function(state0, separator) {
    var iterator, buffer;
    iterator = this.get$iterator();
    if (iterator.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer$("");
    if (separator == null || $.$$eq$o(separator, "") === true)
      do
        buffer.add$1($.S(iterator.get$current()));
      while (iterator.moveNext$0() === true);
    else {
      buffer.add$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0() === true;) {
        buffer.add$1(separator);
        buffer.add$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0();
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$length: function() {
    var it, count;
    it = this.get$iterator();
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function() {
    return this.get$iterator().moveNext$0() !== true;
  },
  get$last: function() {
    var it, result;
    it = this.get$iterator();
    if (it.moveNext$0() !== true)
      throw $.$$throw($.StateError$("No elements"));
    do
      result = it.get$current();
    while (it.moveNext$0() === true);
    return result;
  },
  elementAt$1: function(index) {
    var t1, remaining, t2;
    if (typeof index !== "number")
      return this.elementAt$1$bailout(1, index);
    if (!(typeof index === "number" && Math.floor(index) === index) || index < 0)
      throw $.$$throw($.RangeError$value(index));
    for (t1 = this.get$iterator(), remaining = index; t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (remaining === 0)
        return t2;
      --remaining;
    }
    throw $.$$throw($.RangeError$value(index));
  },
  elementAt$1$bailout: function(state0, index) {
    var t1, remaining, t2, t3;
    if (!(typeof index === "number" && Math.floor(index) === index) || index < 0)
      throw $.$$throw($.RangeError$value(index));
    for (t1 = this.get$iterator(), remaining = index; t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = $.getInterceptor(remaining);
      if (t3.$eq(remaining, 0) === true)
        return t2;
      remaining = t3.$sub(remaining, 1);
    }
    throw $.$$throw($.RangeError$value(index));
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(other) {
    if (other == null)
      return false;
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.StringBuffer = {"": "Object;_contents",
  get$length: function() {
    return $.get$length$as(this._contents);
  },
  get$isEmpty: function() {
    return $.$$eq$o(this.get$length(), 0);
  },
  add$1: function(obj) {
    return this.write$1(obj);
  },
  write$1: function(obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  addAll$1: function(objects) {
    var t1;
    for (t1 = $.get$iterator$a(objects); t1.moveNext$0() === true;)
      this.write$1(t1.get$current());
  },
  clear$0: function() {
    this._contents = "";
  },
  toString$0: function() {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    if (typeof $content === "string")
      this._contents = $content;
    else
      this.write$1($content);
  }
};

$$.ObjectInterceptor = {"": "Object;",
  $mod: function(receiver, a0) {
    return receiver.$mod(a0);
  },
  $and: function(receiver, a0) {
    return receiver.$and(a0);
  },
  $mul: function(receiver, a0) {
    return receiver.$mul(a0);
  },
  $add: function(receiver, a0) {
    return receiver.$add(a0);
  },
  $sub: function(receiver, a0) {
    return receiver.$sub(a0);
  },
  $div: function(receiver, a0) {
    return receiver.$div(a0);
  },
  $lt: function(receiver, a0) {
    return receiver.$lt(a0);
  },
  $shl: function(receiver, a0) {
    return receiver.$shl(a0);
  },
  $le: function(receiver, a0) {
    return receiver.$le(a0);
  },
  $eq: function(receiver, a0) {
    return receiver.$eq(a0);
  },
  $gt: function(receiver, a0) {
    return receiver.$gt(a0);
  },
  $ge: function(receiver, a0) {
    return receiver.$ge(a0);
  },
  $shr: function(receiver, a0) {
    return receiver.$shr(a0);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  addAll$1: function(receiver, a0) {
    return receiver.addAll$1(a0);
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  clear$0: function(receiver) {
    return receiver.clear$0();
  },
  codeUnitAt$1: function(receiver, a0) {
    return receiver.codeUnitAt$1(a0);
  },
  compareTo$1: function(receiver, a0) {
    return receiver.compareTo$1(a0);
  },
  get$contains: function(receiver) {
    return receiver.get$contains();
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  },
  contains$2: function(receiver, a0, a1) {
    return receiver.contains$2(a0, a1);
  },
  elementAt$1: function(receiver, a0) {
    return receiver.elementAt$1(a0);
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  indexOf$1: function(receiver, a0) {
    return receiver.indexOf$1(a0);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  insertRange$3: function(receiver, a0, a1, a2) {
    return receiver.insertRange$3(a0, a1, a2);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  get$isEven: function(receiver) {
    return receiver.get$isEven();
  },
  get$isInfinite: function(receiver) {
    return receiver.get$isInfinite();
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  join$1: function(receiver, a0) {
    return receiver.join$1(a0);
  },
  get$last: function(receiver) {
    return receiver.get$last();
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  map$1: function(receiver, a0) {
    return receiver.map$1(a0);
  },
  remainder$1: function(receiver, a0) {
    return receiver.remainder$1(a0);
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  removeAt$1: function(receiver, a0) {
    return receiver.removeAt$1(a0);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  round$0: function(receiver) {
    return receiver.round$0();
  },
  setRange$4: function(receiver, a0, a1, a2, a3) {
    return receiver.setRange$4(a0, a1, a2, a3);
  },
  sort$1: function(receiver, a0) {
    return receiver.sort$1(a0);
  },
  split$1: function(receiver, a0) {
    return receiver.split$1(a0);
  },
  startsWith$1: function(receiver, a0) {
    return receiver.startsWith$1(a0);
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  toDouble$0: function(receiver) {
    return receiver.toDouble$0();
  },
  toInt$0: function(receiver) {
    return receiver.toInt$0();
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase$0();
  },
  toSet$0: function(receiver) {
    return receiver.toSet$0();
  },
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  trim$0: function(receiver) {
    return receiver.trim$0();
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  where$1: function(receiver, a0) {
    return receiver.where$1(a0);
  },
  $index: function(receiver, a0) {
    return receiver.$index(a0);
  },
  $indexSet: function(receiver, a0, a1) {
    return receiver.$indexSet(a0, a1);
  },
  $xor: function(receiver, a0) {
    return receiver.$xor(a0);
  },
  $negate: function(receiver) {
    return receiver.$negate();
  },
  $or: function(receiver, a0) {
    return receiver.$or(a0);
  },
  $tdiv: function(receiver, a0) {
    return receiver.$tdiv(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isJSBool: true,
  $isbool: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  $eq: function(receiver, a) {
    return receiver == a;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeAt$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    $.checkGrowable(receiver, "removeAt");
    return receiver.splice(index, 1)[0];
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$$eq$o(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  where$1: function(receiver, f) {
    return $.WhereIterable$(receiver, f);
  },
  addAll$1: function(receiver, collection) {
    var t1, t2;
    for (t1 = $.get$iterator$a(collection); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      $.checkGrowable(receiver, "add");
      receiver.push(t2);
    }
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(receiver, f) {
    return $.MappedListIterable$(receiver, f);
  },
  join$1: function(receiver, separator) {
    var list, i, t1;
    if (separator == null)
      separator = "";
    list = $.List_List(receiver.length);
    for (i = 0; i < receiver.length; ++i) {
      t1 = $.S(receiver[i]);
      if (i >= list.length)
        throw $.ioore(i);
      list[i] = t1;
    }
    return list.join(separator);
  },
  elementAt$1: function(receiver, index) {
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  insertRange$3: function(receiver, start, $length, initialValue) {
    return $.listInsertRange(receiver, start, $length, initialValue);
  },
  get$last: function(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw $.$$throw($.StateError$("No elements"));
  },
  setRange$4: function(receiver, start, $length, from, startFrom) {
    var t1;
    $.checkMutable(receiver, "set range");
    if ($.$$eq$o($length, 0) === true)
      return;
    $.checkNull(start);
    $.checkNull($length);
    $.checkNull(from);
    $.checkNull(startFrom);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof $length === "number" && Math.floor($length) === $length))
      throw $.$$throw($.ArgumentError$($length));
    if (!(typeof startFrom === "number" && Math.floor(startFrom) === startFrom))
      throw $.$$throw($.ArgumentError$(startFrom));
    if ($length < 0)
      throw $.$$throw($.ArgumentError$($length));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + $length;
    if (t1 > receiver.length)
      throw $.$$throw($.RangeError$value(t1));
    $.Arrays_copy(from, startFrom, receiver, start, $length);
  },
  sort$1: function(receiver, compare) {
    $.checkMutable(receiver, "sort");
    $.IterableMixinWorkaround_sortList(receiver, compare);
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = $.getInterceptor(other), i = 0; i < receiver.length; ++i)
      if (t1.$eq(other, receiver[i]) === true)
        return true;
    return false;
  },
  get$contains: function(receiver) {
    return new $.BoundClosure$i1(this, "contains$1", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.ToString_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    return $.List_List$from(receiver);
  },
  toSet$0: function(receiver) {
    var t1 = $.HashSet$();
    t1.addAll$1(receiver);
    return t1;
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNumber = {"": "Object;",
  compareTo$1: function(receiver, b) {
    var bIsNegative;
    if (!(typeof b === "number"))
      throw $.$$throw($.ArgumentError$(b));
    if (receiver < b)
      return -1;
    else if (receiver > b)
      return 1;
    else if (receiver === b) {
      if (receiver === 0) {
        bIsNegative = this.get$isNegative(b);
        if ($.$$eq$o(this.get$isNegative(receiver), bIsNegative) === true)
          return 0;
        if (this.get$isNegative(receiver) === true)
          return -1;
        return 1;
      }
      return 0;
    } else if (this.get$isNaN(receiver)) {
      if (this.get$isNaN(b))
        return 0;
      return 1;
    } else
      return -1;
  },
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  remainder$1: function(receiver, b) {
    $.checkNull(b);
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver))
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver))
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  round$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  toDouble$0: function(receiver) {
    return receiver;
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result;
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $isJSNumber: true,
  $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSInt = {"": "JSNumber;",
  get$isEven: function(receiver) {
    return (receiver & 1) === 0;
  },
  $is$int: true,
  $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSDouble = {"": "JSNumber;", $is$double: true, $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    return this.codeUnitAt$1(receiver, index);
  },
  codeUnitAt$1: function(receiver, index) {
    if (!(typeof index === "number"))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  startsWith$1: function(receiver, other) {
    var otherLength;
    $.checkString(other);
    otherLength = other.length;
    if (otherLength > receiver.length)
      return false;
    return other == receiver.substring(0, otherLength);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$n(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$$gt$n(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  trim$0: function(receiver) {
    return receiver.trim();
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$contains: function(receiver) {
    return new $.Bound_contains_JSString(this, "contains$2", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  compareTo$1: function(receiver, other) {
    var t1;
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (receiver === other)
      t1 = 0;
    else
      t1 = receiver < other ? -1 : 1;
    return t1;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isJSString: true,
  $isString: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.ListQueue = {"": "Collection;_table>,_head,_tail,_modificationCount>",
  get$iterator: function() {
    return $._ListQueueIterator$(this);
  },
  forEach$1: function(action) {
    var modificationCount, i, i0, t1;
    modificationCount = this._modificationCount;
    i = this._head;
    if (i !== (i | 0))
      return this.forEach$1$bailout1(1, action, modificationCount, i);
    for (; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      this._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout1: function(state0, action, modificationCount, i) {
    var i0, t1;
    for (; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      this._checkModification$1(modificationCount);
    }
  },
  get$isEmpty: function() {
    return this._head === this._tail;
  },
  get$length: function() {
    var t1, t3;
    t1 = this._tail;
    t3 = this._head;
    if (t1 !== (t1 | 0))
      return this.get$length$bailout1(1, t1);
    if (t3 !== (t3 | 0))
      return this.get$length$bailout1(2, t1, t3);
    return (t1 - t3 & this._table.length - 1) >>> 0;
  },
  get$length$bailout1: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._tail;
      case 1:
        state0 = 0;
        t3 = this._head;
      case 2:
        state0 = 0;
        t3 = $.$$sub$n(t1, t3);
      case 3:
        state0 = 0;
        return $.$$and$n(t3, this._table.length - 1);
    }
  },
  get$last: function() {
    var t1, t2, t3;
    t1 = this._head;
    t2 = this._tail;
    if (t1 === t2)
      throw $.$$throw($.StateError$("No elements"));
    t1 = this._table;
    t3 = $.$$and$n($.$$sub$n(t2, 1), this._table.length - 1);
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  elementAt$1: function(index) {
    var t1, t2, t3, t4;
    t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) === true || t1.$gt(index, this.get$length()) === true)
      throw $.$$throw($.RangeError$range(index, 0, this.get$length()));
    t1 = this._table;
    t2 = this._head;
    if (typeof index !== "number")
      throw $.iae(index);
    t3 = t1.length;
    t4 = (t2 + index & t3 - 1) >>> 0;
    if (t4 < 0 || t4 >= t3)
      throw $.ioore(t4);
    return t1[t4];
  },
  toList$0: function() {
    var list = $.List_List(this.get$length());
    this._writeToList$1(list);
    return list;
  },
  add$1: function(element) {
    this._liblib4$_add$1(element);
  },
  addAll$1: function(elements) {
    var addCount, $length, t1, t2, endSpace, preSpace;
    if (typeof elements === "object" && elements !== null && (elements.constructor === Array || elements.$isList())) {
      addCount = $.get$length$a(elements);
      $length = this.get$length();
      t1 = $.getInterceptor$n($length);
      if ($.$$ge$n(t1.$add($length, addCount), this._table.length) === true) {
        this._preGrow$1(t1.$add($length, addCount));
        $.CONSTANT1.setRange$4(this._table, $length, addCount, elements, 0);
        this._tail = $.$$add$n(this._tail, addCount);
      } else {
        t1 = this._table.length;
        t2 = this._tail;
        if (typeof t2 !== "number")
          throw $.iae(t2);
        endSpace = t1 - t2;
        t1 = $.getInterceptor$n(addCount);
        if (t1.$lt(addCount, endSpace) === true) {
          $.CONSTANT1.setRange$4(this._table, this._tail, addCount, elements, 0);
          this._tail = $.$$add$n(this._tail, addCount);
        } else {
          preSpace = t1.$sub(addCount, endSpace);
          $.CONSTANT1.setRange$4(this._table, this._tail, endSpace, elements, 0);
          $.CONSTANT1.setRange$4(this._table, 0, preSpace, elements, endSpace);
          this._tail = preSpace;
        }
      }
      this._modificationCount = $.$$add$n(this._modificationCount, 1);
    } else
      for (t1 = $.get$iterator$a(elements); t1.moveNext$0() === true;)
        this._liblib4$_add$1(t1.get$current());
  },
  remove$1: function(object) {
    var i, i0, t1;
    i = this._head;
    if (i !== (i | 0))
      return this.remove$1$bailout1(1, object, i);
    for (; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq$o(t1[i], object) === true) {
        this._remove$1(i);
        return;
      }
    }
    t1 = this._modificationCount;
    if (typeof t1 !== "number")
      return this.remove$1$bailout1(2, 0, 0, t1);
    this._modificationCount = t1 + 1;
  },
  remove$1$bailout1: function(state0, object, i, t1) {
    switch (state0) {
      case 0:
        i = this._head;
      case 1:
        state0 = 0;
        for (; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
          t1 = this._table;
          if (i !== (i | 0))
            throw $.iae(i);
          if (i < 0 || i >= t1.length)
            throw $.ioore(i);
          if ($.$$eq$o(t1[i], object) === true) {
            this._remove$1(i);
            return;
          }
        }
        t1 = this._modificationCount;
      case 2:
        var i0;
        state0 = 0;
        this._modificationCount = $.$$add$n(t1, 1);
    }
  },
  removeAll$1: function(objectsToRemove) {
    $.IterableMixinWorkaround_removeAllList(this, objectsToRemove);
  },
  _filterMatching$2: function(test, removeMatching) {
    var index, modificationCount, i, t1, remove, i0;
    index = this._head;
    if (index !== (index | 0))
      return this._filterMatching$2$bailout(1, test, removeMatching, index);
    modificationCount = this._modificationCount;
    if (typeof modificationCount !== "number")
      return this._filterMatching$2$bailout(2, test, removeMatching, index, modificationCount);
    for (i = index; !$.$$eq$o(i, this._tail);) {
      t1 = this._table;
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      remove = $.$$eq$o(test.call$1(t1[i]), removeMatching);
      this._checkModification$1(modificationCount);
      if (remove === true) {
        i = this._remove$1(i);
        modificationCount = $.$$add$n(this._modificationCount, 1);
        this._modificationCount = modificationCount;
      } else {
        i0 = (i + 1 & this._table.length - 1) >>> 0;
        i = i0;
      }
    }
  },
  _filterMatching$2$bailout: function(state0, test, removeMatching, index, modificationCount) {
    switch (state0) {
      case 0:
        index = this._head;
      case 1:
        state0 = 0;
        modificationCount = this._modificationCount;
      case 2:
        var i, t1, remove, i0;
        state0 = 0;
        for (i = index; !$.$$eq$o(i, this._tail);) {
          t1 = this._table;
          if (i !== (i | 0))
            throw $.iae(i);
          if (i < 0 || i >= t1.length)
            throw $.ioore(i);
          remove = $.$$eq$o(test.call$1(t1[i]), removeMatching);
          this._checkModification$1(modificationCount);
          if (remove === true) {
            i = this._remove$1(i);
            modificationCount = $.$$add$n(this._modificationCount, 1);
            this._modificationCount = modificationCount;
          } else {
            i0 = (i + 1 & this._table.length - 1) >>> 0;
            i = i0;
          }
        }
    }
  },
  removeMatching$1: function(test) {
    this._filterMatching$2(test, true);
  },
  clear$0: function() {
    var t1, t3, t2, t4, t5, i, i0;
    t1 = this._head;
    if (t1 !== (t1 | 0))
      return this.clear$0$bailout1(1, t1);
    t3 = this._tail;
    if (t1 !== t3) {
      for (t2 = this._table, t4 = t2.length, t5 = t4 - 1, i = t1; i !== t3; i0 = (i + 1 & t5) >>> 0, i = i0) {
        if (i < 0 || i >= t4)
          throw $.ioore(i);
        t2[i] = null;
      }
      this._tail = 0;
      this._head = 0;
      this._modificationCount = $.$$add$n(this._modificationCount, 1);
    }
  },
  clear$0$bailout1: function(state0, t1) {
    var t3, t2, t4, t5, i, i0;
    t3 = this._tail;
    if (t1 !== t3) {
      for (t2 = this._table, t4 = t2.length, t5 = t4 - 1, i = t1; i !== t3; i0 = (i + 1 & t5) >>> 0, i = i0) {
        if (i !== (i | 0))
          throw $.iae(i);
        if (i < 0 || i >= t4)
          throw $.ioore(i);
        t2[i] = null;
      }
      this._tail = 0;
      this._head = 0;
      this._modificationCount = $.$$add$n(this._modificationCount, 1);
    }
  },
  toString$0: function() {
    return $.ToString_collectionToString(this);
  },
  addLast$1: function(element) {
    this._liblib4$_add$1(element);
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = $.$$add$n(this._modificationCount, 1);
    t1 = this._table;
    t2 = this._head;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  removeLast$0: function() {
    var t1, t2;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = $.$$add$n(this._modificationCount, 1);
    this._tail = $.$$and$n($.$$sub$n(this._tail, 1), this._table.length - 1);
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  _checkModification$1: function(expectedModificationCount) {
    if ($.$$eq$o(expectedModificationCount, this._modificationCount) !== true)
      throw $.$$throw($.ConcurrentModificationError$(this));
  },
  _liblib4$_add$1: function(element) {
    var t1, t2, t3;
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    t1[t2] = element;
    this._tail = (t2 + 1 & t3 - 1) >>> 0;
    if (this._head === this._tail)
      this._grow$0();
    t1 = this._modificationCount;
    if (typeof t1 !== "number")
      return this._liblib4$_add$1$bailout(1, t1);
    this._modificationCount = t1 + 1;
  },
  _liblib4$_add$1$bailout: function(state0, t1) {
    this._modificationCount = $.$$add$n(t1, 1);
  },
  _remove$1: function(offset) {
    var t1, t2, mask, t3, startDistance, t5, i, prevOffset, t4, nextOffset;
    if (offset !== (offset | 0))
      return this._remove$1$bailout(1, offset);
    t1 = this._table;
    t2 = t1.length;
    mask = t2 - 1;
    t3 = this._head;
    if (t3 !== (t3 | 0))
      return this._remove$1$bailout(2, offset, mask, t3);
    startDistance = (offset - t3 & mask) >>> 0;
    t5 = this._tail;
    if (t5 !== (t5 | 0))
      return this._remove$1$bailout(4, offset, mask, t5, $.CONSTANT8, startDistance);
    if (startDistance < (t5 - offset & mask) >>> 0) {
      for (i = offset; i !== t3; i = prevOffset) {
        prevOffset = (i - 1 & mask) >>> 0;
        if (prevOffset < 0 || prevOffset >= t2)
          throw $.ioore(prevOffset);
        t4 = t1[prevOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t4;
      }
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      this._head = (t3 + 1 & mask) >>> 0;
      return (offset + 1 & mask) >>> 0;
    } else {
      this._tail = (t5 - 1 & mask) >>> 0;
      for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._tail, i !== t3; i = nextOffset) {
        nextOffset = (i + 1 & mask) >>> 0;
        if (nextOffset < 0 || nextOffset >= t2)
          throw $.ioore(nextOffset);
        t3 = t1[nextOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t3;
      }
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      return offset;
    }
  },
  _remove$1$bailout: function(state0, offset, mask, t1, t3, startDistance, i, prevOffset, t2, nextOffset) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        mask = this._table.length - 1;
        t1 = this._head;
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$n(offset);
        t1 = t3.$sub(offset, t1);
      case 3:
        state0 = 0;
        startDistance = $.$$and$n(t1, mask);
        t1 = this._tail;
      case 4:
        state0 = 0;
        t1 = $.$$sub$n(t1, offset);
      case 5:
        state0 = 0;
      default:
        var t4, t5, t6;
        if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 0 && startDistance < $.$$and$n(t1, mask))
          switch (state0) {
            case 0:
              i = offset;
            default:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      t1 = $.getInterceptor(i);
                      if (!(t1.$eq(i, this._head) !== true))
                        break L0;
                      t1 = t1.$sub(i, 1);
                    case 6:
                      state0 = 0;
                      prevOffset = $.$$and$n(t1, mask);
                    case 7:
                      state0 = 0;
                      t4 = this._table;
                      if (prevOffset !== (prevOffset | 0))
                        throw $.iae(prevOffset);
                      t5 = t4.length;
                      if (prevOffset < 0 || prevOffset >= t5)
                        throw $.ioore(prevOffset);
                      t6 = t4[prevOffset];
                      if (i !== (i | 0))
                        throw $.iae(i);
                      if (i < 0 || i >= t5)
                        throw $.ioore(i);
                      t4[i] = t6;
                      i = prevOffset;
                  }
              t1 = this._table;
              t2 = this._head;
            case 8:
              state0 = 0;
              if (t2 !== (t2 | 0))
                throw $.iae(t2);
              if (t2 < 0 || t2 >= t1.length)
                throw $.ioore(t2);
              t1[t2] = null;
              this._head = (t2 + 1 & mask) >>> 0;
              t3 = t3.$add(offset, 1);
            case 9:
              state0 = 0;
              return $.$$and$n(t3, mask);
          }
        else
          switch (state0) {
            case 0:
              t1 = this._tail;
            case 10:
              state0 = 0;
              t1 = $.$$sub$n(t1, 1);
            case 11:
              state0 = 0;
              this._tail = $.$$and$n(t1, mask);
              i = offset;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t1 = $.getInterceptor(i);
                      if (!(t1.$eq(i, this._tail) !== true))
                        break L1;
                      t1 = t1.$add(i, 1);
                    case 12:
                      state0 = 0;
                      nextOffset = $.$$and$n(t1, mask);
                    case 13:
                      state0 = 0;
                      t3 = this._table;
                      if (nextOffset !== (nextOffset | 0))
                        throw $.iae(nextOffset);
                      t4 = t3.length;
                      if (nextOffset < 0 || nextOffset >= t4)
                        throw $.ioore(nextOffset);
                      t5 = t3[nextOffset];
                      if (i !== (i | 0))
                        throw $.iae(i);
                      if (i < 0 || i >= t4)
                        throw $.ioore(i);
                      t3[i] = t5;
                      i = nextOffset;
                  }
              t1 = this._table;
              t2 = this._tail;
              if (t2 !== (t2 | 0))
                throw $.iae(t2);
              if (t2 < 0 || t2 >= t1.length)
                throw $.ioore(t2);
              t1[t2] = null;
              return offset;
          }
    }
  },
  _grow$0: function() {
    var newTable, t1, t2, t3, split;
    newTable = $.List_List$fixedLength(this._table.length * 2, null);
    t1 = this._table;
    t2 = t1.length;
    t3 = this._head;
    split = t2 - t3;
    $.CONSTANT1.setRange$4(newTable, 0, split, t1, t3);
    $.CONSTANT1.setRange$4(newTable, split, this._head, this._table, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  _writeToList$1: function(target) {
    var t1, t2, $length, firstPartSize;
    t1 = $.CONSTANT4.$le(this._head, this._tail);
    t2 = this._head;
    if (t1) {
      $length = $.$$sub$n(this._tail, t2);
      $.CONSTANT1.setRange$4(target, 0, $length, this._table, this._head);
      return $length;
    } else {
      t1 = this._table;
      firstPartSize = t1.length - t2;
      $.CONSTANT1.setRange$4(target, 0, firstPartSize, t1, t2);
      $.CONSTANT1.setRange$4(target, firstPartSize, this._tail, this._table, 0);
      return $.$$add$n(this._tail, firstPartSize);
    }
  },
  _preGrow$1: function(newElementCount) {
    var newTable = $.List_List$fixedLength($.ListQueue__nextPowerOf2(newElementCount), null);
    this._tail = this._writeToList$1(newTable);
    this._table = newTable;
    this._head = 0;
  },
  ListQueue$1: function(initialCapacity) {
    if (initialCapacity == null || $.$$lt$n(initialCapacity, 8) === true)
      initialCapacity = 8;
    else if ($.ListQueue__isPowerOf2(initialCapacity) !== true)
      initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    this._table = $.List_List$fixedLength(initialCapacity, null);
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._ListQueueIterator = {"": "Object;_queue,_end,_modificationCount>,_liblib4$_position,_liblib4$_current",
  get$current: function() {
    return this._liblib4$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3, t4;
    t1 = this._queue;
    t1._checkModification$1(this._modificationCount);
    if ($.$$eq$o(this._liblib4$_position, this._end) === true) {
      this._liblib4$_current = null;
      return false;
    }
    t2 = t1._table;
    t3 = this._liblib4$_position;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    this._liblib4$_current = t2[t3];
    t4 = this._liblib4$_position;
    if (t4 !== (t4 | 0))
      return this.moveNext$0$bailout(1, t4, t1);
    this._liblib4$_position = (t4 + 1 & t1._table.length - 1) >>> 0;
    return true;
  },
  moveNext$0$bailout: function(state0, t4, t1) {
    switch (state0) {
      case 0:
        t1 = this._queue;
        t1._checkModification$1(this._modificationCount);
        if ($.$$eq$o(this._liblib4$_position, this._end) === true) {
          this._liblib4$_current = null;
          return false;
        }
        t2 = t1._table;
        t3 = this._liblib4$_position;
        if (t3 !== (t3 | 0))
          throw $.iae(t3);
        if (t3 < 0 || t3 >= t2.length)
          throw $.ioore(t3);
        this._liblib4$_current = t2[t3];
        t4 = this._liblib4$_position;
      case 1:
        state0 = 0;
        t4 = $.$$add$n(t4, 1);
      case 2:
        var t2, t3;
        state0 = 0;
        this._liblib4$_position = $.$$and$n(t4, t1._table.length - 1);
        return true;
    }
  }
};

$$._DeadEntry = {"": "Object;"};

$$._NullKey = {"": "Object;",
  get$hashCode: function() {
    return $.CONSTANT5.get$hashCode(null);
  }
};

$$._HashTable = {"": "Object;_table>,_capacity,_entryCount,_deletedCount,_modificationCount>,_container",
  _key$1: function(offset) {
    var t1, key;
    t1 = this._table;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._key$1$bailout(1, offset, t1);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    key = t1[offset];
    if (key !== $.CONSTANT3)
      return key;
    return;
  },
  _key$1$bailout: function(state0, offset, t1) {
    var key = $.$$index$as(t1, offset);
    if (key !== $.CONSTANT3)
      return key;
    return;
  },
  get$_elementCount: function() {
    return $.$$sub$n(this._entryCount, this._deletedCount);
  },
  get$_entrySize: function() {
    return 1;
  },
  _checkModification$1: function(expectedModificationCount) {
    if (this._modificationCount !== expectedModificationCount)
      throw $.$$throw($.ConcurrentModificationError$(this._container));
  },
  _recordModification$0: function() {
    this._modificationCount = this._modificationCount + 1 & 1073741823;
  },
  _createTable$1: function(capacity) {
    return $.List_List$fixedLength($.$$mul$n(capacity, this.get$_entrySize()), null);
  },
  _nextProbe$3: function(previousIndex, probeCount, capacity) {
    if (typeof capacity !== "number")
      return this._nextProbe$3$bailout(1, previousIndex, probeCount, capacity);
    return (previousIndex + probeCount & capacity - 1) >>> 0;
  },
  _nextProbe$3$bailout: function(state0, previousIndex, probeCount, capacity) {
    var t2 = $.$$sub$n(capacity, 1);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return (previousIndex + probeCount & t2) >>> 0;
  },
  _isFree$1: function(marker) {
    return marker == null || marker === $.CONSTANT2;
  },
  _probeForAdd$2: function(hashCode, object) {
    var entrySize, index, t1, firstTombstone, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = $.$$and$n(hashCode, $.$$sub$n(this._capacity, 1));
    for (t1 = null == object, firstTombstone = -1, probeCount = 0; true;) {
      offset = index * entrySize;
      entry = $.$$index$as(this._table, offset);
      if (entry === $.CONSTANT2) {
        if (firstTombstone < 0)
          firstTombstone = offset;
      } else if (entry == null) {
        if (firstTombstone < 0)
          return offset;
        return firstTombstone;
      } else if (($.CONSTANT3 === entry ? t1 : $.$$eq$o(entry, object)) === true)
        return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _probeForLookup$2: function(hashCode, object) {
    var entrySize, index, t1, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = $.$$and$n(hashCode, $.$$sub$n(this._capacity, 1));
    for (t1 = null == object, probeCount = 0; true;) {
      offset = index * entrySize;
      entry = $.$$index$as(this._table, offset);
      if (entry == null)
        return -1;
      else if ($.CONSTANT2 !== entry)
        if (($.CONSTANT3 === entry ? t1 : $.$$eq$o(entry, object)) === true)
          return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _checkCapacity$0: function() {
    var freeCount, t1;
    freeCount = $.$$sub$n(this._capacity, this._entryCount);
    t1 = $.getInterceptor$n(freeCount);
    if ($.$$lt$n(t1.$mul(freeCount, 4), this._capacity) === true || t1.$lt(freeCount, this._deletedCount) === true)
      this._grow$1($.$$sub$n(this._entryCount, this._deletedCount));
  },
  _grow$1: function(contentCount) {
    var capacity, minCapacity, oldTable;
    capacity = this._capacity;
    if (typeof capacity !== "number")
      return this._grow$1$bailout(1, contentCount, capacity);
    minCapacity = $.$$mul$n(contentCount, 2);
    if (typeof minCapacity !== "number")
      return this._grow$1$bailout(2, 0, capacity, minCapacity);
    for (; capacity < minCapacity;)
      capacity *= 2;
    oldTable = this._table;
    this._table = this._createTable$1(capacity);
    this._capacity = capacity;
    this._entryCount = 0;
    this._deletedCount = 0;
    this._addAllEntries$1(oldTable);
    this._recordModification$0();
  },
  _grow$1$bailout: function(state0, contentCount, capacity, minCapacity) {
    switch (state0) {
      case 0:
        capacity = this._capacity;
      case 1:
        state0 = 0;
        minCapacity = $.$$mul$n(contentCount, 2);
      case 2:
        var t1, oldTable;
        state0 = 0;
        for (; t1 = $.getInterceptor$n(capacity), t1.$lt(capacity, minCapacity) === true;)
          capacity = t1.$mul(capacity, 2);
        oldTable = this._table;
        this._table = this._createTable$1(capacity);
        this._capacity = capacity;
        this._entryCount = 0;
        this._deletedCount = 0;
        this._addAllEntries$1(oldTable);
        this._recordModification$0();
    }
  },
  _addAllEntries$1: function(oldTable) {
    var i, t1, object;
    if (typeof oldTable !== "string" && (typeof oldTable !== "object" || oldTable === null || oldTable.constructor !== Array && !oldTable.$isJavaScriptIndexingBehavior()))
      return this._addAllEntries$1$bailout(1, oldTable);
    for (i = 0; t1 = oldTable.length, i < t1; i += this.get$_entrySize()) {
      if (i < 0)
        throw $.ioore(i);
      object = oldTable[i];
      if (!(object == null || object === $.CONSTANT2))
        this._copyEntry$3(oldTable, i, this._put$1(object));
    }
  },
  _addAllEntries$1$bailout: function(state0, oldTable) {
    var t1, i, object;
    for (t1 = $.getInterceptor$as(oldTable), i = 0; $.CONSTANT4.$lt(i, t1.get$length(oldTable)); i += this.get$_entrySize()) {
      object = t1.$index(oldTable, i);
      if (!(object == null || object === $.CONSTANT2))
        this._copyEntry$3(oldTable, i, this._put$1(object));
    }
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
  },
  _get$1: function(key) {
    return this._probeForLookup$2($.get$hashCode$abnosu(key), key);
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2($.get$hashCode$abnosu(key), key);
    t1 = this._table;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._put$1$bailout(1, key, t1, offset);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry == null) {
      t1 = this._entryCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout(2, key, t1, offset);
      this._entryCount = t1 + 1;
    } else if (oldEntry === $.CONSTANT2) {
      t1 = this._deletedCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout(3, key, t1, offset);
      this._deletedCount = t1 - 1;
    } else
      return offset;
    if (key == null)
      key = $.CONSTANT3;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout(4, key, t1, offset);
    if (offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._recordModification$0();
    return offset;
  },
  _put$1$bailout: function(state0, key, t1, offset) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2($.get$hashCode$abnosu(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$$index$as(t1, offset);
      default:
        if (state0 === 2 || state0 === 0 && oldEntry == null)
          switch (state0) {
            case 0:
              t1 = this._entryCount;
            case 2:
              state0 = 0;
              this._entryCount = $.$$add$n(t1, 1);
          }
        else
          switch (state0) {
            case 0:
            case 3:
              if (state0 === 3 || state0 === 0 && oldEntry === $.CONSTANT2)
                switch (state0) {
                  case 0:
                    t1 = this._deletedCount;
                  case 3:
                    state0 = 0;
                    this._deletedCount = $.$$sub$n(t1, 1);
                }
              else
                return offset;
          }
        if (key == null)
          key = $.CONSTANT3;
        t1 = this._table;
      case 4:
        var oldEntry;
        state0 = 0;
        $.$$indexSet$a(t1, offset, key);
        this._recordModification$0();
        return offset;
    }
  },
  _remove$1: function(key) {
    var offset = this._probeForLookup$2($.get$hashCode$abnosu(key), key);
    if ($.$$ge$n(offset, 0) === true)
      this._deleteEntry$1(offset);
    return offset;
  },
  _clear$0: function() {
    var i;
    if ($.$$eq$o(this.get$_elementCount(), 0) === true)
      return;
    for (var i = 0; $.CONSTANT4.$lt(i, $.get$length$as(this._table)); ++i)
      $.$$indexSet$a(this._table, i, null);
    this._deletedCount = 0;
    this._entryCount = 0;
    this._recordModification$0();
  },
  _deleteEntry$1: function(offset) {
    var key = $.CONSTANT2;
    $.$$indexSet$a(this._table, offset, key);
    this._deletedCount = $.$$add$n(this._deletedCount, 1);
    this._recordModification$0();
  },
  _HashTable$1: function(initialCapacity) {
    this._table = this._createTable$1(initialCapacity);
  }
};

$$._HashTableIterable = {"": "Iterable;_hashTable>",
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  get$isEmpty: function() {
    var t1 = this._hashTable.get$_elementCount();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout1(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout1: function(state0, t1) {
    return $.$$eq$o(t1, 0);
  },
  forEach$1: function(action) {
    var t1, entrySize, table, modificationCount, offset, t2, entry;
    t1 = this._hashTable;
    entrySize = t1.get$_entrySize();
    table = t1._table;
    if (typeof table !== "string" && (typeof table !== "object" || table === null || table.constructor !== Array && !table.$isJavaScriptIndexingBehavior()))
      return this.forEach$1$bailout1(1, action, entrySize, t1, table);
    modificationCount = t1._modificationCount;
    for (offset = 0; t2 = table.length, offset < t2; offset += entrySize) {
      if (offset < 0)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout1: function(state0, action, entrySize, t1, table) {
    var modificationCount, t2, offset, entry;
    modificationCount = t1._modificationCount;
    for (t2 = $.getInterceptor$as(table), offset = 0; $.CONSTANT4.$lt(offset, t2.get$length(table)); offset += entrySize) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
    }
  }
};

$$._HashTableIterator = {"": "Object;_hashTable>,_modificationCount>",
  moveNext$0: function() {
    var t1, table, entrySize, t2, t3, entry;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    table = t1.get$_table();
    if (typeof table !== "string" && (typeof table !== "object" || table === null || table.constructor !== Array && !table.$isJavaScriptIndexingBehavior()))
      return this.moveNext$0$bailout(1, t1, table);
    entrySize = t1.get$_entrySize();
    for (; t2 = this._offset, t3 = table.length, t2 < t3;) {
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t3)
        throw $.ioore(t2);
      entry = table[t2];
      this._offset = t2 + entrySize;
      if (!t1._isFree$1(entry)) {
        this._liblib4$_current = this._valueAt$2(t2, entry);
        return true;
      }
    }
    this._liblib4$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, table, entrySize, t3, t2, t4) {
    switch (state0) {
      case 0:
        t1 = this._hashTable;
        t1._checkModification$1(this._modificationCount);
        table = t1.get$_table();
      case 1:
        state0 = 0;
        entrySize = t1.get$_entrySize();
        t2 = $.getInterceptor$as(table);
      case 2:
        var currentOffset, entry;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t3 = this._offset;
                t4 = t2.get$length(table);
              case 2:
                state0 = 0;
                if (!$.CONSTANT4.$lt(t3, t4))
                  break L0;
                currentOffset = this._offset;
                entry = t2.$index(table, currentOffset);
                this._offset = currentOffset + entrySize;
                if (!t1._isFree$1(entry)) {
                  this._liblib4$_current = this._valueAt$2(currentOffset, entry);
                  return true;
                }
            }
        this._liblib4$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib4$_current;
  }
};

$$._HashTableKeyIterable = {"": "_HashTableIterable;_hashTable",
  get$iterator: function() {
    return $._HashTableKeyIterator$(this._hashTable);
  },
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT3)
      return;
    return key;
  },
  contains$1: function(value) {
    return $.$$ge$n(this._hashTable._get$1(value), 0);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  }
};

$$._HashTableKeyIterator = {"": "_HashTableIterator;_hashTable,_modificationCount,_offset,_liblib4$_current",
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT3)
      return;
    return key;
  }
};

$$._HashTableValueIterable = {"": "_HashTableIterable;_entryIndex,_hashTable",
  get$iterator: function() {
    return $._HashTableValueIterator$(this._hashTable, this._entryIndex);
  },
  _valueAt$2: function(offset, key) {
    var t1, t3;
    t1 = this._hashTable._table;
    t3 = this._entryIndex;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._valueAt$2$bailout1(1, offset, t1);
    t3 = offset + t3;
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _valueAt$2$bailout1: function(state0, offset, t1) {
    return $.$$index$as(t1, offset + this._entryIndex);
  }
};

$$._HashTableValueIterator = {"": "_HashTableIterator;_entryIndex,_hashTable,_modificationCount,_offset,_liblib4$_current",
  _valueAt$2: function(offset, key) {
    return $.$$index$as(this._hashTable.get$_table(), $.$$add$n(offset, this._entryIndex));
  }
};

$$.HashSet = {"": "Collection;_table>",
  get$iterator: function() {
    return $._HashTableKeyIterator$(this._table);
  },
  get$isEmpty: function() {
    var t1 = this._table.get$_elementCount();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout1(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout1: function(state0, t1) {
    return $.$$eq$o(t1, 0);
  },
  contains$1: function(object) {
    return $.$$ge$n(this._table._get$1(object), 0);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  add$1: function(element) {
    var t1 = this._table;
    t1._put$1(element);
    t1._checkCapacity$0();
  },
  addAll$1: function(objects) {
    var t1, t2;
    for (t1 = $.get$iterator$a(objects), t2 = this._table; t1.moveNext$0() === true;) {
      t2._put$1(t1.get$current());
      t2._checkCapacity$0();
    }
  },
  remove$1: function(object) {
    var t1, offset;
    t1 = this._table;
    offset = t1._remove$1(object);
    t1._checkCapacity$0();
    if (typeof offset !== "number")
      return this.remove$1$bailout1(1, offset, t1);
    return offset >= 0;
  },
  remove$1$bailout1: function(state0, offset, t1) {
    t1._checkCapacity$0();
    return $.$$ge$n(offset, 0);
  },
  removeAll$1: function(objectsToRemove) {
    var t1, t2;
    for (t1 = $.CONSTANT1.get$iterator(objectsToRemove), t2 = this._table; t1.moveNext$0();) {
      t2._remove$1(t1.get$current());
      t2._checkCapacity$0();
    }
  },
  clear$0: function() {
    this._table._clear$0();
  },
  toString$0: function() {
    return $.ToString_collectionToString(this);
  },
  HashSet$0: function() {
    this._table._container = this;
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._HashMapTable = {"": "_HashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 2;
  },
  _value$1: function(offset) {
    var t2, t4;
    t2 = this._table;
    if (typeof offset !== "number")
      return this._value$1$bailout(1, offset);
    t4 = offset + 1;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this._value$1$bailout(2, offset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    return t2[t4];
  },
  _value$1$bailout: function(state0, offset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        return $.$$index$as(t2, $.$$add$n(offset, 1));
    }
  },
  _setValue$2: function(offset, value) {
    $.$$indexSet$a(this._table, $.$$add$n(offset, 1), value);
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
    var t2, t4, t5;
    t2 = this._table;
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    t4 = toOffset + 1;
    if (typeof fromTable !== "string" && (typeof fromTable !== "object" || fromTable === null || fromTable.constructor !== Array && !fromTable.$isJavaScriptIndexingBehavior()))
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    t5 = fromOffset + 1;
    if (t5 < 0 || t5 >= fromTable.length)
      throw $.ioore(t5);
    t5 = fromTable[t5];
    if (typeof t2 !== "object" || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, fromTable, fromOffset, toOffset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    t2[t4] = t5;
  },
  _copyEntry$3$bailout1: function(state0, fromTable, fromOffset, toOffset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        $.$$indexSet$a(t2, $.$$add$n(toOffset, 1), $.$$index$as(fromTable, fromOffset + 1));
    }
  }
};

$$.HashMap = {"": "Object;_hashTable>",
  containsKey$1: function(key) {
    return $.$$ge$n(this._hashTable._get$1(key), 0);
  },
  addAll$1: function(other) {
    $.forEach$1$a(other, new $.HashMap_addAll_anon(this));
  },
  $index: function(key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if (typeof offset !== "number")
      return this.$$index$bailout(1, t1, offset);
    if (offset >= 0)
      return t1._value$1(offset);
    return;
  },
  $$index$bailout: function(state0, t1, offset) {
    if ($.$$ge$n(offset, 0) === true)
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  remove$1: function(key) {
    var t1, offset, oldValue;
    t1 = this._hashTable;
    offset = t1._remove$1(key);
    if (typeof offset !== "number")
      return this.remove$1$bailout(1, offset, t1);
    if (offset < 0)
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  remove$1$bailout: function(state0, offset, t1) {
    var oldValue;
    if ($.$$lt$n(offset, 0) === true)
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  clear$0: function() {
    this._hashTable._clear$0();
  },
  forEach$1: function(action) {
    var t1, modificationCount, table, entrySize, offset, t2, entry;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    table = t1._table;
    if (typeof table !== "string" && (typeof table !== "object" || table === null || table.constructor !== Array && !table.$isJavaScriptIndexingBehavior()))
      return this.forEach$1$bailout(1, action, table, t1, modificationCount);
    entrySize = t1.get$_entrySize();
    for (offset = 0; t2 = table.length, offset < t2; offset += entrySize) {
      if (offset < 0)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
    }
  },
  forEach$1$bailout: function(state0, action, table, t1, modificationCount) {
    var entrySize, t2, offset, entry;
    entrySize = t1.get$_entrySize();
    for (t2 = $.getInterceptor$as(table), offset = 0; $.CONSTANT4.$lt(offset, t2.get$length(table)); offset += entrySize) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
    }
  },
  get$keys: function() {
    return $._HashTableKeyIterable$(this._hashTable);
  },
  get$values: function() {
    return $._HashTableValueIterable$(this._hashTable, 1);
  },
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  get$isEmpty: function() {
    return $.$$eq$o(this._hashTable.get$_elementCount(), 0);
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  HashMap$0: function() {
    this._hashTable._container = this;
  },
  $isMap: true
};

$$._LinkedHashTableHeadMarker = {"": "Object;"};

$$._LinkedHashTable = {"": "_HashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 3;
  },
  _createTable$1: function(capacity) {
    var result, t1;
    result = $.List_List$fixedLength($.$$mul$n(capacity, this.get$_entrySize()), null);
    t1 = result.length;
    if (0 >= t1)
      throw $.ioore(0);
    result[0] = $.CONSTANT7;
    if (1 >= t1)
      throw $.ioore(1);
    result[1] = 0;
    if (2 >= t1)
      throw $.ioore(2);
    result[2] = 0;
    return result;
  },
  _next$1: function(offset) {
    var t2, t4;
    t2 = this._table;
    if (typeof offset !== "number")
      return this._next$1$bailout(1, offset);
    t4 = offset + 1;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this._next$1$bailout(2, offset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    return t2[t4];
  },
  _next$1$bailout: function(state0, offset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        return $.$$index$as(t2, $.$$add$n(offset, 1));
    }
  },
  _prev$1: function(offset) {
    return $.$$index$as(this._table, offset + 2);
  },
  _linkLast$1: function(offset) {
    var last, t1;
    last = $.$$index$as(this._table, 2);
    t1 = $.getInterceptor$n(offset);
    $.$$indexSet$a(this._table, t1.$add(offset, 1), 0);
    $.$$indexSet$a(this._table, t1.$add(offset, 2), last);
    $.$$indexSet$a(this._table, $.$$add$n(last, 1), offset);
    $.$$indexSet$a(this._table, 2, offset);
  },
  _unlink$1: function(offset) {
    var t1, next, prev;
    t1 = $.getInterceptor$n(offset);
    next = $.$$index$as(this._table, t1.$add(offset, 1));
    prev = $.$$index$as(this._table, t1.$add(offset, 2));
    $.$$indexSet$a(this._table, t1.$add(offset, 1), null);
    $.$$indexSet$a(this._table, t1.$add(offset, 2), null);
    $.$$indexSet$a(this._table, $.$$add$n(prev, 1), next);
    $.$$indexSet$a(this._table, $.$$add$n(next, 2), prev);
  },
  _addAllEntries$1: function(oldTable) {
    var t1, offset, object, t2, nextOffset;
    if (typeof oldTable !== "string" && (typeof oldTable !== "object" || oldTable === null || oldTable.constructor !== Array && !oldTable.$isJavaScriptIndexingBehavior()))
      return this._addAllEntries$1$bailout1(1, oldTable);
    t1 = $.getInterceptor$as(oldTable);
    if (1 >= oldTable.length)
      throw $.ioore(1);
    offset = oldTable[1];
    if (typeof offset !== "number")
      return this._addAllEntries$1$bailout1(2, oldTable, offset, t1);
    for (; !$.$$eq$o(offset, 0); offset = nextOffset) {
      if (offset !== (offset | 0))
        throw $.iae(offset);
      t1 = oldTable.length;
      if (offset < 0 || offset >= t1)
        throw $.ioore(offset);
      object = oldTable[offset];
      t2 = offset + 1;
      if (t2 >= t1)
        throw $.ioore(t2);
      nextOffset = oldTable[t2];
      this._copyEntry$3(oldTable, offset, this._put$1(object));
    }
  },
  _addAllEntries$1$bailout1: function(state0, oldTable, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$as(oldTable);
        offset = t1.$index(oldTable, 1);
      case 2:
        var t2, object, nextOffset;
        state0 = 0;
        for (; t2 = $.getInterceptor(offset), t2.$eq(offset, 0) !== true; offset = nextOffset) {
          object = t1.$index(oldTable, offset);
          nextOffset = t1.$index(oldTable, t2.$add(offset, 1));
          this._copyEntry$3(oldTable, offset, this._put$1(object));
        }
    }
  },
  _clear$0: function() {
    var i;
    if ($.$$eq$o(this.get$_elementCount(), 0) === true)
      return;
    $.$$indexSet$a(this._table, 1, 0);
    $.$$indexSet$a(this._table, 2, 0);
    for (var i = this.get$_entrySize(); $.CONSTANT4.$lt(i, $.get$length$as(this._table)); ++i)
      $.$$indexSet$a(this._table, i, null);
    this._deletedCount = 0;
    this._entryCount = 0;
    this._recordModification$0();
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2($.get$hashCode$abnosu(key), key);
    t1 = this._table;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._put$1$bailout1(1, key, t1, offset);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry === $.CONSTANT2) {
      t1 = this._deletedCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout1(2, key, t1, offset);
      this._deletedCount = t1 - 1;
    } else if (oldEntry == null) {
      t1 = this._entryCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout1(3, key, t1, offset);
      this._entryCount = t1 + 1;
    } else
      return offset;
    this._recordModification$0();
    if (key == null)
      key = $.CONSTANT3;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout1(4, key, t1, offset);
    if (offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._linkLast$1(offset);
    return offset;
  },
  _put$1$bailout1: function(state0, key, t1, offset) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2($.get$hashCode$abnosu(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$$index$as(t1, offset);
      default:
        if (state0 === 2 || state0 === 0 && oldEntry === $.CONSTANT2)
          switch (state0) {
            case 0:
              t1 = this._deletedCount;
            case 2:
              state0 = 0;
              this._deletedCount = $.$$sub$n(t1, 1);
          }
        else
          switch (state0) {
            case 0:
            case 3:
              if (state0 === 3 || state0 === 0 && oldEntry == null)
                switch (state0) {
                  case 0:
                    t1 = this._entryCount;
                  case 3:
                    state0 = 0;
                    this._entryCount = $.$$add$n(t1, 1);
                }
              else
                return offset;
          }
        this._recordModification$0();
        if (key == null)
          key = $.CONSTANT3;
        t1 = this._table;
      case 4:
        var oldEntry;
        state0 = 0;
        $.$$indexSet$a(t1, offset, key);
        this._linkLast$1(offset);
        return offset;
    }
  },
  _deleteEntry$1: function(offset) {
    var key;
    this._unlink$1(offset);
    key = $.CONSTANT2;
    $.$$indexSet$a(this._table, offset, key);
    this._deletedCount = $.$$add$n(this._deletedCount, 1);
    this._recordModification$0();
  }
};

$$._LinkedHashTableKeyIterable = {"": "Iterable;_table>",
  get$iterator: function() {
    return $._LinkedHashTableKeyIterator$(this._table);
  },
  contains$1: function(value) {
    return $.$$ge$n(this._table._get$1(value), 0);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  get$length: function() {
    return this._table.get$_elementCount();
  }
};

$$._LinkedHashTableKeyIterator = {"": "_LinkedHashTableIterator;_hashTable,_modificationCount,_offset,_liblib4$_current",
  _getCurrent$1: function(offset) {
    return this._hashTable._key$1(offset);
  }
};

$$._LinkedHashTableValueIterable = {"": "Iterable;_hashTable>,_valueIndex",
  get$iterator: function() {
    return $._LinkedHashTableValueIterator$(this._hashTable, this._valueIndex);
  },
  get$length: function() {
    return this._hashTable.get$_elementCount();
  }
};

$$._LinkedHashTableValueIterator = {"": "_LinkedHashTableIterator;_valueIndex,_hashTable,_modificationCount,_offset,_liblib4$_current",
  _getCurrent$1: function(offset) {
    return $.$$index$as(this._hashTable.get$_table(), $.$$add$n(offset, this._valueIndex));
  }
};

$$._LinkedHashTableIterator = {"": "Object;_hashTable>,_modificationCount>",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    t2 = this._offset;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(1, t1, t2);
    if (t2 === 0) {
      this._liblib4$_current = null;
      return false;
    }
    this._liblib4$_current = this._getCurrent$1(t2);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  moveNext$0$bailout: function(state0, t1, t2) {
    if ($.$$eq$o(t2, 0) === true) {
      this._liblib4$_current = null;
      return false;
    }
    this._liblib4$_current = this._getCurrent$1(this._offset);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  get$current: function() {
    return this._liblib4$_current;
  }
};

$$.LinkedHashSet = {"": "Collection;_table>",
  get$iterator: function() {
    return $._LinkedHashTableKeyIterator$(this._table);
  },
  forEach$1: function(action) {
    var offset, modificationCount;
    offset = this._table._next$1(0);
    if (typeof offset !== "number")
      return this.forEach$1$bailout1(1, action, offset);
    modificationCount = this._table._modificationCount;
    for (; !$.$$eq$o(offset, 0);) {
      action.call$1(this._table._key$1(offset));
      this._table._checkModification$1(modificationCount);
      offset = this._table._next$1(offset);
    }
  },
  forEach$1$bailout1: function(state0, action, offset) {
    var modificationCount = this._table._modificationCount;
    for (; $.$$eq$o(offset, 0) !== true;) {
      action.call$1(this._table._key$1(offset));
      this._table._checkModification$1(modificationCount);
      offset = this._table._next$1(offset);
    }
  },
  get$isEmpty: function() {
    var t1 = this._table.get$_elementCount();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout1(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout1: function(state0, t1) {
    return $.$$eq$o(t1, 0);
  },
  contains$1: function(object) {
    return $.$$ge$n(this._table._get$1(object), 0);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  get$last: function() {
    var lastOffset = this._table._prev$1(0);
    if ($.$$eq$o(lastOffset, 0) === true)
      throw $.$$throw($.StateError$("No elements"));
    return this._table._key$1(lastOffset);
  },
  add$1: function(element) {
    this._table._put$1(element);
    this._table._checkCapacity$0();
  },
  addAll$1: function(objects) {
    var t1, t2;
    for (t1 = $.get$iterator$a(objects); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      this._table._put$1(t2);
      this._table._checkCapacity$0();
    }
  },
  remove$1: function(object) {
    var offset = this._table._remove$1(object);
    if (typeof offset !== "number")
      return this.remove$1$bailout1(1, offset);
    if (offset >= 0) {
      this._table._checkCapacity$0();
      return true;
    }
    return false;
  },
  remove$1$bailout1: function(state0, offset) {
    if ($.$$ge$n(offset, 0) === true) {
      this._table._checkCapacity$0();
      return true;
    }
    return false;
  },
  removeAll$1: function(objectsToRemove) {
    var t1, t2;
    for (t1 = $.CONSTANT1.get$iterator(objectsToRemove); t1.moveNext$0();) {
      t2 = t1.get$current();
      this._table._remove$1(t2);
      this._table._checkCapacity$0();
    }
  },
  clear$0: function() {
    this._table._clear$0();
  },
  toString$0: function() {
    return $.ToString_collectionToString(this);
  },
  LinkedHashSet$0: function() {
    this._table._container = this;
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._LinkedHashMapTable = {"": "_LinkedHashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 4;
  },
  _value$1: function(offset) {
    var t2, t4;
    t2 = this._table;
    if (typeof offset !== "number")
      return this._value$1$bailout(1, offset);
    t4 = offset + 3;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this._value$1$bailout(2, offset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    return t2[t4];
  },
  _value$1$bailout: function(state0, offset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        return $.$$index$as(t2, $.$$add$n(offset, 3));
    }
  },
  _setValue$2: function(offset, value) {
    $.$$indexSet$a(this._table, $.$$add$n(offset, 3), value);
  },
  _copyEntry$3: function(oldTable, fromOffset, toOffset) {
    var t2, t4, t5;
    t2 = this._table;
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    t4 = toOffset + 3;
    if (typeof fromOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    t5 = fromOffset + 3;
    if (typeof oldTable !== "string" && (typeof oldTable !== "object" || oldTable === null || oldTable.constructor !== Array && !oldTable.$isJavaScriptIndexingBehavior()))
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= oldTable.length)
      throw $.ioore(t5);
    t5 = oldTable[t5];
    if (typeof t2 !== "object" || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, oldTable, fromOffset, toOffset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    t2[t4] = t5;
  },
  _copyEntry$3$bailout1: function(state0, oldTable, fromOffset, toOffset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        $.$$indexSet$a(t2, $.$$add$n(toOffset, 3), $.$$index$as(oldTable, $.$$add$n(fromOffset, 3)));
    }
  }
};

$$.LinkedHashMap = {"": "Object;_hashTable>",
  containsKey$1: function(key) {
    return $.$$ge$n(this._hashTable._get$1(key), 0);
  },
  addAll$1: function(other) {
    $.forEach$1$a(other, new $.LinkedHashMap_addAll_anon(this));
  },
  $index: function(key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if (typeof offset !== "number")
      return this.$$index$bailout(1, t1, offset);
    if (offset >= 0)
      return t1._value$1(offset);
    return;
  },
  $$index$bailout: function(state0, t1, offset) {
    if ($.$$ge$n(offset, 0) === true)
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  remove$1: function(key) {
    var t1, offset, oldValue;
    t1 = this._hashTable;
    offset = t1._remove$1(key);
    if (typeof offset !== "number")
      return this.remove$1$bailout(1, offset, t1);
    if (offset < 0)
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  remove$1$bailout: function(state0, offset, t1) {
    var oldValue;
    if ($.$$lt$n(offset, 0) === true)
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  clear$0: function() {
    this._hashTable._clear$0();
  },
  forEach$1: function(action) {
    var t1, modificationCount, offset;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    offset = t1._next$1(0);
    if (typeof offset !== "number")
      return this.forEach$1$bailout(1, t1, modificationCount, action, offset);
    for (; !$.$$eq$o(offset, 0); offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout: function(state0, t1, modificationCount, action, offset) {
    for (; $.$$eq$o(offset, 0) !== true; offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  get$keys: function() {
    return $._LinkedHashTableKeyIterable$(this._hashTable);
  },
  get$values: function() {
    return $._LinkedHashTableValueIterable$(this._hashTable, 3);
  },
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  get$isEmpty: function() {
    return $.$$eq$o(this._hashTable.get$_elementCount(), 0);
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  LinkedHashMap$0: function() {
    this._hashTable._container = this;
  },
  $isMap: true
};

$$.ListIterable = {"": "Iterable;",
  get$iterator: function() {
    return $.ListIterator$(this);
  },
  forEach$1: function(action) {
    var $length, i;
    $length = this.get$length();
    if (typeof $length !== "number")
      return this.forEach$1$bailout1(1, action, $length);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.elementAt$1(i));
      if ($length !== this.get$length())
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
  },
  forEach$1$bailout1: function(state0, action, $length) {
    var t1, i;
    for (t1 = $.getInterceptor($length), i = 0; $.CONSTANT4.$lt(i, $length); ++i) {
      action.call$1(this.elementAt$1(i));
      if (t1.$eq($length, this.get$length()) !== true)
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout1(1, t1);
    return t1 !== 0;
  },
  get$isEmpty$bailout1: function(state0, t1) {
    return $.$$eq$o(t1, 0) !== true;
  },
  get$last: function() {
    if ($.$$eq$o(this.get$length(), 0) === true)
      throw $.$$throw($.StateError$("No elements"));
    return this.elementAt$1($.$$sub$n(this.get$length(), 1));
  },
  contains$1: function(element) {
    var $length, i;
    $length = this.get$length();
    if (typeof $length !== "number")
      return this.contains$1$bailout1(1, element, $length);
    for (i = 0; i < $length; ++i) {
      if ($.$$eq$o(this.elementAt$1(i), element) === true)
        return true;
      if ($length !== this.get$length())
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
    return false;
  },
  contains$1$bailout1: function(state0, element, $length) {
    var t1, i;
    for (t1 = $.getInterceptor($length), i = 0; $.CONSTANT4.$lt(i, $length); ++i) {
      if ($.$$eq$o(this.elementAt$1(i), element) === true)
        return true;
      if (t1.$eq($length, this.get$length()) !== true)
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  join$1: function(separator) {
    var $length, first, buffer, i;
    $length = this.get$length();
    if (typeof $length !== "number")
      return this.join$1$bailout1(1, separator, $length);
    if (separator != null && $.get$isEmpty$as(separator) !== true) {
      if ($length === 0)
        return "";
      first = $.S(this.elementAt$1(0));
      if ($length !== this.get$length())
        throw $.$$throw($.ConcurrentModificationError$(this));
      buffer = $.StringBuffer$(first);
      for (i = 1; i < $length; ++i) {
        buffer.add$1(separator);
        buffer.add$1($.S(this.elementAt$1(i)));
        if ($length !== this.get$length())
          throw $.$$throw($.ConcurrentModificationError$(this));
      }
      return buffer.toString$0();
    } else {
      buffer = $.StringBuffer$("");
      for (i = 0; i < $length; ++i) {
        buffer.add$1($.S(this.elementAt$1(i)));
        if ($length !== this.get$length())
          throw $.$$throw($.ConcurrentModificationError$(this));
      }
      return buffer.toString$0();
    }
  },
  join$1$bailout1: function(state0, separator, $length) {
    var t1, first, buffer, i;
    if (separator != null && $.get$isEmpty$as(separator) !== true) {
      t1 = $.getInterceptor($length);
      if (t1.$eq($length, 0) === true)
        return "";
      first = $.S(this.elementAt$1(0));
      if (t1.$eq($length, this.get$length()) !== true)
        throw $.$$throw($.ConcurrentModificationError$(this));
      buffer = $.StringBuffer$(first);
      for (i = 1; $.CONSTANT4.$lt(i, $length); ++i) {
        buffer.add$1(separator);
        buffer.add$1($.S(this.elementAt$1(i)));
        if (t1.$eq($length, this.get$length()) !== true)
          throw $.$$throw($.ConcurrentModificationError$(this));
      }
      return buffer.toString$0();
    } else {
      buffer = $.StringBuffer$("");
      for (t1 = $.getInterceptor($length), i = 0; $.CONSTANT4.$lt(i, $length); ++i) {
        buffer.add$1($.S(this.elementAt$1(i)));
        if (t1.$eq($length, this.get$length()) !== true)
          throw $.$$throw($.ConcurrentModificationError$(this));
      }
      return buffer.toString$0();
    }
  },
  where$1: function(test) {
    return $.Iterable.prototype.where$1.call(this, test);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  toList$0: function() {
    var result, i, t1;
    result = $.List_List(this.get$length());
    for (i = 0; $.CONSTANT4.$lt(i, this.get$length()); ++i) {
      t1 = this.elementAt$1(i);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  }
};

$$.ListIterator = {"": "Object;_iterable,_liblib$_length,_index,_liblib$_current",
  get$current: function() {
    return this._liblib$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._liblib$_length;
    t2 = this._iterable;
    if ($.$$eq$o(t1, $.get$length$as(t2)) !== true)
      throw $.$$throw($.ConcurrentModificationError$(t2));
    t3 = this._index;
    if (t3 === t1) {
      this._liblib$_current = null;
      return false;
    }
    this._liblib$_current = $.elementAt$1$a(t2, t3);
    this._index = this._index + 1;
    return true;
  }
};

$$.MappedIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.MappedIterator$(this._iterable.get$iterator(), this._f);
  },
  get$length: function() {
    return this._iterable.get$length();
  },
  get$isEmpty: function() {
    return this._iterable.get$isEmpty();
  },
  get$last: function() {
    return this._f$1(this._iterable.get$last());
  },
  elementAt$1: function(index) {
    return this._f$1(this._iterable.elementAt$1(index));
  }
};

$$.MappedIterator = {"": "Iterator;_liblib$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib$_current = this._f$1(t1.get$current());
      return true;
    }
    this._liblib$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.MappedListIterable = {"": "ListIterable;_liblib$_source,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$length: function() {
    return $.get$length$as(this._liblib$_source);
  },
  elementAt$1: function(index) {
    return this._f$1($.elementAt$1$a(this._liblib$_source, index));
  }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  get$iterator: function() {
    return $.WhereIterator$($.get$iterator$a(this._iterable), this._f);
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId,nextManagerId,currentContext>,rootContext,topEventLoop>,fromCommandLine,isWorker>,supportsWorkers,isolates,mainManager,managers",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = $.get$globalWorker() != null && $.get$IsolateNatives_thisScript() != null;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true && $.get$isEmpty$as(this.isolates) === true && $.$$eq$o(this.topEventLoop.get$activeTimerCount(), 0) === true)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id=,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null)
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    return $.$$index$as(this.ports, portId);
  },
  register$2: function(portId, port) {
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($._ExceptionImplementation$("Registry: ports must be registered only once."));
    $.$$indexSet$a(this.ports, portId, port);
    $.$$indexSet$a($globalState.isolates, this.id, this);
  },
  unregister$1: function(portId) {
    $.remove$1$a(this.ports, portId);
    if ($.get$isEmpty$as(this.ports) === true)
      $.remove$1$a($globalState.isolates, this.id);
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.$$add$n(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount=",
  enqueue$3: function(isolate, fn, msg) {
    this.events.addLast$1($._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if (t1.get$isEmpty() === true)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null && $globalState.isolates.containsKey$1($globalState.rootContext.get$id()) === true && $globalState.fromCommandLine === true && $.get$isEmpty$as($globalState.rootContext.get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  set$id: function(i) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (replyTo != null && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_BufferingSendPort))
      throw $.$$throw($._ExceptionImplementation$("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $._CompleterImpl$();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.future;
  },
  $isSendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$$eq$o(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function() {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$$eq$o(this._workerId, other._workerId) === true && $.$$eq$o(this._isolateId, other._isolateId) === true && $.$$eq$o(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    var t1, t2;
    t1 = $.$$xor$n($.$$shl$n(this._workerId, 16), $.$$shl$n(this._isolateId, 8));
    t2 = this._receivePortId;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return (t1 ^ t2) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_callback>",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function() {
    this._callback = null;
    $globalState.currentContext.unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $globalState.currentContext.get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    if ($.$$index$as(this._visited, list) != null)
      return;
    $.$$indexSet$a(this._visited, list, true);
    $.forEach$1$a(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    if ($.$$index$as(this._visited, map) != null)
      return;
    $.$$indexSet$a(this._visited, map, true);
    $.forEach$1$a(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (!!port.$is_BufferingSendPort && port.get$_port() == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.currentManagerId, port._isolateId, port._receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port.get$_port();
    if (t1 != null)
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port.get$_port();
    if (t1 != null)
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$as(x);
    managerId = t1.$index(x, 1);
    isolateId = t1.$index(x, 2);
    receivePortId = t1.$index(x, 3);
    if ($.$$eq$o(managerId, $globalState.currentManagerId) === true) {
      isolate = $.$$index$as($globalState.isolates, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(object, info) {
    $.add$1$a(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    this.tagged = $.List_List(0);
  },
  cleanup$0: function() {
    var $length, i;
    $length = $.get$length$a(this.tagged);
    if (typeof $length !== "number")
      return this.cleanup$0$bailout(1, $length);
    i = 0;
    for (; i < $length; ++i)
      $.$$index$a(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, $length) {
    var i = 0;
    for (; $.CONSTANT4.$lt(i, $length); ++i)
      $.$$index$a(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(object) {
    return;
  },
  $indexSet: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!x.$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copy, len, i, t1;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior())
      return this.visitList$1$bailout1(1, list);
    copy = $.$$index$as(this._visited, list);
    if (copy != null)
      return copy;
    len = list.length;
    copy = $.List_List(len);
    $.$$indexSet$a(this._visited, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list) {
    var copy, t1, len, i, t2;
    copy = $.$$index$as(this._visited, list);
    if (copy != null)
      return copy;
    t1 = $.getInterceptor$as(list);
    len = t1.get$length(list);
    copy = $.List_List(len);
    $.$$indexSet$a(this._visited, list, copy);
    for (i = 0; $.CONSTANT4.$lt(i, len); ++i) {
      t2 = this._dispatch$1(t1.$index(list, i));
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t2;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t1.copy_0 = $.$$index$as(this._visited, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = $.HashMap$();
    $.$$indexSet$a(this._visited, map, t1.copy_0);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copyId, id;
    copyId = $.$$index$as(this._visited, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet$a(this._visited, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var copyId, id;
    copyId = $.$$index$as(this._visited, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet$a(this._visited, map, id);
    return ["map", id, this._serializeList$1($.toList$0$a(map.get$keys())), this._serializeList$1($.toList$0$a(map.get$values()))];
  },
  _serializeList$1: function(list) {
    var len, result, i, t1;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$as(list);
        len = t1.get$length(list);
      case 2:
        var result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        for (i = 0; $.CONSTANT4.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap$();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$$index$as(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var id = $.$$index$as(x, 1);
    return $.$$index$as(this._deserialized, id);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$as(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    $.$$indexSet$a(this._deserialized, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id) {
    var t2, len, i;
    $.$$indexSet$a(this._deserialized, id, dartList);
    t2 = $.getInterceptor$as(dartList);
    len = t2.get$length(dartList);
    for (i = 0; $.CONSTANT4.$lt(i, len); ++i)
      t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, keys, values, len, i, key;
    result = $.HashMap$();
    t1 = $.getInterceptor$as(x);
    id = t1.$index(x, 1);
    $.$$indexSet$a(this._deserialized, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, 0, result, keys, 0, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values, t3, len) {
    switch (state0) {
      case 0:
        result = $.HashMap$();
        t1 = $.getInterceptor$as(x);
        id = t1.$index(x, 1);
        $.$$indexSet$a(this._deserialized, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$as(keys);
        len = t3.get$length(keys);
      case 3:
        var id, i;
        state0 = 0;
        for (t1 = $.getInterceptor$as(values), i = 0; $.CONSTANT4.$lt(i, len); ++i)
          result.$indexSet(this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle<",
  cancel$0: function() {
    if ($.get$globalThis().setTimeout != null) {
      if (this._inEventLoop === true)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.set$activeTimerCount($.$$sub$n(t1.get$activeTimerCount(), 1));
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if ($.$$eq$o(milliseconds, 0) === true)
      t1 = $.hasTimer() !== true || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), callback, "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add$n(t1.get$activeTimerCount(), 1));
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer) {
    var message, exception, t1;
    buffer.add$1("'");
    message = null;
    try {
      message = $.toString$0$abfnosu(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    buffer.add$1(message);
    buffer.add$1("'\n");
    t1 = this.stackTrace;
    if (t1 != null) {
      buffer.add$1("Stack trace:\n");
      buffer.add$1($.toString$0$abfnosu(t1));
      buffer.add$1("\n");
    }
  },
  toString$0: function() {
    var buffer, cause;
    buffer = $.StringBuffer$("");
    buffer.add$1("AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; cause != null;) {
      buffer.add$1("Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return buffer.toString$0();
  },
  throwDelayed$0: function() {
    var reportError, exception;
    reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.Timer_Timer($.CONSTANT10, new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  $isAsyncError: true
};

$$._CompleterImpl = {"": "Object;future>,_isComplete",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._liblib0$_setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future>,_nextListener=",
  _sendValue$1: function(value) {
    this.future._liblib0$_setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state=,_resultOrListeners>",
  get$_isComplete: function() {
    return $.$$eq$o(this._state, 0) !== true;
  },
  get$_hasValue: function() {
    return $.$$eq$o(this._state, 1);
  },
  get$_hasError: function() {
    return $.$$and$n(this._state, 2) !== 0;
  },
  get$_hasUnhandledError: function() {
    return $.$$and$n(this._state, 4) !== 0;
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (onError != null)
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  whenComplete$1: function(action) {
    var whenFuture = $._WhenFuture$(action);
    if (this.get$_isComplete() !== true)
      this._addListener$1(whenFuture);
    else if (this.get$_hasValue() === true)
      $.Timer_Timer($.CONSTANT10, new $._FutureImpl_whenComplete_anon(whenFuture, this._resultOrListeners));
    else {
      this._state = $.$$and$n(this._state, 4294967291);
      $.Timer_Timer($.CONSTANT10, new $._FutureImpl_whenComplete_anon0(whenFuture, this._resultOrListeners));
    }
    return whenFuture;
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_Timer($.CONSTANT10, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._state = $.$$and$n(this._state, 4294967291);
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_Timer($.CONSTANT10, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _liblib0$_setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_liblib0$_setValue: function() {
    return new $.BoundClosure$1(this, "_liblib0$_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (listeners0 != null) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = $.$$or$n(this._state, 4);
    $.Timer_Timer($.CONSTANT10, new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue() === true)
      future._liblib0$_setValue$1(this._resultOrListeners);
    else {
      this._state = $.$$and$n(this._state, 4294967291);
      future._setError$1(this._resultOrListeners);
    }
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_liblib0$_setValue(), this.get$_setError());
        return;
      }
    else
      this._liblib0$_setValue$1(result);
  },
  _asListener$0: function() {
    return $._FutureListenerWrapper$(this);
  },
  _FutureImpl$immediateError$2: function(error, stackTrace) {
    this._setError$1(typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace));
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._liblib0$_setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (this._test != null) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._WhenFuture = {"": "_TransformFuture;_action,_nextListener,_state,_resultOrListeners",
  _action$0: function() {
    return this._action.call$0();
  },
  _sendValue$1: function(value) {
    var result, resultFuture, e, e0, s, t1, exception;
    try {
      result = this._action$0();
      t1 = result;
      if (typeof t1 === "object" && t1 !== null && !!t1.$isFuture) {
        resultFuture = result;
        resultFuture.then$2$onError(new $._WhenFuture__sendValue_anon(this, value), this.get$_setError());
        return;
      }
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._liblib0$_setValue$1(value);
  },
  _sendError$1: function(error) {
    var t1, result, resultFuture, e, e0, s, t2, exception;
    t1 = {};
    t1.error_0 = error;
    try {
      result = this._action$0();
      t2 = result;
      if (typeof t2 === "object" && t2 !== null && !!t2.$isFuture) {
        resultFuture = result;
        resultFuture.then$2$onError(new $._WhenFuture__sendError_anon(t1, this), this.get$_setError());
        return;
      }
    } catch (exception) {
      t2 = $.unwrapException(exception);
      if (typeof t2 === "object" && t2 !== null && !!t2.$isAsyncError) {
        e = t2;
        t1.error_0 = e;
      } else {
        e0 = t2;
        s = $.getTraceFromException(exception);
        t1.error_0 = $.AsyncError$withCause(e0, s, t1.error_0);
      }
    }

    this._setError$1(t1.error_0);
  },
  $as_FutureImpl: null,
  $asFuture: null
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  whenComplete$1: function(action) {
    return this._future.whenComplete$1(action);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  get$isBroadcast: function() {
    return false;
  },
  asBroadcastStream$0: function() {
    if (this.get$isBroadcast() === true)
      return this;
    return $._SingleStreamMultiplexer$(this);
  },
  where$1: function(test) {
    return $._WhereStream$(this, test);
  },
  map$1: function(convert) {
    return $._MapStream$(this, convert);
  },
  contains$1: function(match) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_contains_anon(t1, match, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_contains_anon0(future), t3, true);
    return future;
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  get$length: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  },
  get$isEmpty: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_isEmpty_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_isEmpty_anon0(future), t3, true);
    return future;
  },
  toList$0: function() {
    var result, future, t1, t2;
    result = [];
    future = $._FutureImpl$();
    t1 = new $.Stream_toList_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toList_anon0(result, future), t2, true);
    return future;
  },
  get$last: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.result_0 = null;
    t1.foundResult_1 = false;
    t2 = new $.Stream_last_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_last_anon0(t1, future), t3, true);
    return future;
  },
  elementAt$1: function(index) {
    var t1, t2, future, t3;
    t1 = {};
    t1.index_0 = index;
    t2 = t1.index_0;
    if (!(typeof t2 === "number" && Math.floor(t2) === t2) || $.$$lt$n(t2, 0) === true)
      throw $.$$throw($.ArgumentError$(t1.index_0));
    future = $._FutureImpl$();
    t1.subscription_1 = null;
    t2 = new $.Stream_elementAt_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_1 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_elementAt_anon0(future), t3, true);
    return future;
  }
};

$$.StreamSubscription = {"": "Object;"};

$$.StreamController = {"": "Object;stream>",
  get$isPaused: function() {
    return this.stream.get$_isPaused();
  },
  add$1: function(value) {
    return this.stream._add$1(value);
  },
  close$0: function() {
    this.stream._close$0();
  }
};

$$._SingleControllerStream = {"": "_SingleStreamImpl;_subscriptionHandler,_pauseHandler,_subscriber,_state,_pendingEvents",
  _subscriptionHandler$0: function() {
    return this._subscriptionHandler.call$0();
  },
  _pauseHandler$0: function() {
    return this._pauseHandler.call$0();
  },
  _onSubscriptionStateChange$0: function() {
    if (this._subscriptionHandler != null)
      this._subscriptionHandler$0();
  },
  _onPauseStateChange$0: function() {
    if (this._pauseHandler != null)
      this._pauseHandler$0();
  }
};

$$._StreamImpl = {"": "Stream;_state=",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    var subscription;
    if (this.get$_isComplete() === true)
      return $._DoneSubscription$(onDone);
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    subscription = this._createSubscription$4(onData, onError, onDone, true === unsubscribeOnError);
    this._addListener$1(subscription);
    return subscription;
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  _add$1: function(value) {
    if (this.get$_isClosed() === true)
      throw $.$$throw($.StateError$("Sending on closed stream"));
    if (!this.get$_canFireEvent()) {
      this._addPendingEvent$1($._DelayedData$(value));
      return;
    }
    this._sendData$1(value);
    this._handlePendingEvents$0();
  },
  get$_add: function() {
    return new $.BoundClosure$1(this, "_add$1");
  },
  _signalError$1: function(error) {
    if (this.get$_isClosed() === true)
      throw $.$$throw($.StateError$("Sending on closed stream"));
    if (!this.get$_canFireEvent()) {
      this._addPendingEvent$1($._DelayedError$(error));
      return;
    }
    this._sendError$1(error);
    this._handlePendingEvents$0();
  },
  get$_signalError: function() {
    return new $.BoundClosure$1(this, "_signalError$1");
  },
  _close$0: function() {
    if (this.get$_isClosed() === true)
      return;
    this._state = $.$$or$n(this._state, 1);
    if (!this.get$_canFireEvent()) {
      this._addPendingEvent$1($.CONSTANT24);
      return;
    }
    this._sendDone$0();
  },
  get$_close: function() {
    return new $.Bound__close__StreamImpl(this, "_close$0");
  },
  get$_isClosed: function() {
    return $.$$and$n(this._state, 1) !== 0;
  },
  get$_isComplete: function() {
    return $.$$and$n(this._state, 2) !== 0;
  },
  get$_isPaused: function() {
    var t1 = this._state;
    if (typeof t1 !== "number")
      return this.get$_isPaused$bailout(1, t1);
    return t1 >= 32;
  },
  get$_isPaused$bailout: function(state0, t1) {
    return $.$$ge$n(t1, 32);
  },
  get$_isInCallback: function() {
    return $.$$and$n(this._state, 16) !== 0;
  },
  get$_hasPendingEvent: function() {
    var t1 = this._pendingEvents;
    return t1 != null && $.get$isEmpty$as(t1) !== true;
  },
  get$_isFiring: function() {
    return $.$$and$n(this._state, 8) !== 0;
  },
  get$_mayFireState: function() {
    return $.$$and$n(this._state, 4294967288) === 0;
  },
  get$_currentEventIdBit: function() {
    var t1 = this._state;
    if (t1 !== (t1 | 0))
      return this.get$_currentEventIdBit$bailout(1, t1);
    return $.CONSTANT4.$shr(t1 & 4, 2);
  },
  get$_currentEventIdBit$bailout: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = this._state;
      case 1:
        state0 = 0;
        t1 = $.$$and$n(t1, 4);
      case 2:
        state0 = 0;
        return $.CONSTANT4.$shr(t1, 2);
    }
  },
  get$_canFireEvent: function() {
    return this.get$_mayFireState() === true && !this.get$_hasPendingEvent();
  },
  _decrementPauseCount$1: function(listener) {
    listener._decrementPauseCount$0();
    this._updatePauseCount$1(-1);
  },
  _updatePauseCount$1: function(by) {
    var oldState, t1;
    oldState = this._state;
    t1 = $.getInterceptor$n(oldState);
    if (by >= 0)
      this._state = t1.$add(oldState, by << 5 >>> 0);
    else
      this._state = t1.$sub(oldState, -by << 5 >>> 0);
  },
  _startFiring$0: function() {
    this._state = $.$$xor$n(this._state, 12);
  },
  _endFiring$0: function() {
    this._state = $.$$xor$n(this._state, 8);
    if (this.get$_hasSubscribers() !== true)
      this._callOnSubscriptionStateChange$0();
    else if (this.get$_isPaused() === true)
      this._callOnPauseStateChange$0();
  },
  _pause$2: function(listener, resumeSignal) {
    var wasPaused;
    if (listener.get$_isSubscribed() !== true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    wasPaused = this.get$_isPaused();
    listener._incrementPauseCount$0();
    this._updatePauseCount$1(1);
    if (resumeSignal != null)
      resumeSignal.whenComplete$1(new $._StreamImpl__pause_anon(this, listener));
    if (wasPaused !== true && this.get$_isFiring() !== true)
      this._callOnPauseStateChange$0();
  },
  _resume$2: function(listener, fromEvent) {
    if (listener.get$isPaused() !== true)
      return;
    this._decrementPauseCount$1(listener);
    if (this.get$_isPaused() !== true) {
      if (this.get$_isFiring() !== true)
        this._callOnPauseStateChange$0();
      if (this.get$_hasPendingEvent())
        if (fromEvent && this.get$_isFiring() !== true)
          this._handlePendingEvents$0();
        else
          this._pendingEvents.schedule$1(this);
    }
  },
  _callOnPauseStateChange$0: function() {
    if (this.get$_isClosed() === true)
      return;
    if (this.get$_isInCallback() !== true) {
      this._state = $.$$or$n(this._state, 16);
      this._onPauseStateChange$0();
      this._state = $.$$xor$n(this._state, 16);
    } else
      this._onPauseStateChange$0();
  },
  _callOnSubscriptionStateChange$0: function() {
    if (this.get$_isInCallback() !== true) {
      this._state = $.$$or$n(this._state, 16);
      this._onSubscriptionStateChange$0();
      this._state = $.$$xor$n(this._state, 16);
    } else
      this._onSubscriptionStateChange$0();
  },
  _onPauseStateChange$0: function() {
  },
  _onSubscriptionStateChange$0: function() {
  },
  _addPendingEvent$1: function($event) {
    if (this._pendingEvents == null)
      this._pendingEvents = $._StreamImplEvents$();
    $.add$1$a(this._pendingEvents, $event);
  },
  _handlePendingEvents$0: function() {
    var events, t1;
    events = this._pendingEvents;
    t1 = $.getInterceptor(events);
    if (events == null)
      return;
    while (true) {
      if (!(t1.get$isEmpty(events) !== true && this.get$_isPaused() !== true))
        break;
      events.handleNext$1(this);
    }
  },
  _sendData$1: function(value) {
    this._forEachSubscriber$1(new $._StreamImpl__sendData_anon(value));
  },
  _sendError$1: function(error) {
    this._forEachSubscriber$1(new $._StreamImpl__sendError_anon(error));
  },
  _sendDone$0: function() {
    this._state = $.$$or$n(this._state, 2);
    if (this.get$_hasSubscribers() !== true)
      return;
    this._forEachSubscriber$1(new $._StreamImpl__sendDone_anon(this));
  }
};

$$._SingleStreamImpl = {"": "_StreamImpl;",
  get$_isPaused: function() {
    return this.get$_hasSubscribers() !== true && this.get$_isComplete() !== true || $._StreamImpl.prototype.get$_isPaused.call(this) === true;
  },
  get$_canFireEvent: function() {
    return this.get$_mayFireState() === true && !this.get$_hasPendingEvent() && this.get$_hasSubscribers() === true;
  },
  get$_hasSubscribers: function() {
    return this._subscriber != null;
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._StreamSubscriptionImpl$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _addListener$1: function(subscription) {
    if (this.get$_hasSubscribers() === true)
      throw $.$$throw($.StateError$("Stream already has subscriber."));
    this._subscriber = subscription;
    subscription._setSubscribed$1(0);
    this._callOnSubscriptionStateChange$0();
    if (this.get$_hasPendingEvent())
      this._pendingEvents.schedule$1(this);
  },
  _cancel$1: function(subscriber) {
    var t1 = this._subscriber;
    if (t1 == null ? subscriber != null : t1 !== subscriber)
      return;
    this._subscriber = null;
    this._updatePauseCount$1($.$$negate$n(subscriber._setUnsubscribed$0()));
    if (this.get$_isFiring() !== true)
      this._callOnSubscriptionStateChange$0();
  },
  _forEachSubscriber$1: function(action) {
    var subscription = this._subscriber;
    this._startFiring$0();
    action.call$1(subscription);
    this._endFiring$0();
  }
};

$$._MultiStreamImpl = {"": "_StreamImpl;_nextLink=,_previousLink=",
  get$isBroadcast: function() {
    return true;
  },
  asBroadcastStream$0: function() {
    return this;
  },
  get$_hasSubscribers: function() {
    return !$._InternalLinkList_isEmpty(this);
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._StreamSubscriptionImpl$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _forEachSubscriber$1: function(action) {
    var cursor, cursor0;
    if (!this.get$_hasSubscribers())
      return;
    this._startFiring$0();
    cursor = this._nextLink;
    for (; cursor !== this; cursor = cursor0) {
      if (cursor._needsEvent$1(this.get$_currentEventIdBit()) === true) {
        action.call$1(cursor);
        cursor._toggleEventReceived$0();
      }
      cursor0 = cursor.get$_nextLink();
      if (cursor.get$_isPendingUnsubscribe() === true)
        this._removeListener$1(cursor);
    }
    this._endFiring$0();
  },
  _addListener$1: function(listener) {
    var t1;
    listener._setSubscribed$1(this.get$_currentEventIdBit());
    t1 = this.get$_hasSubscribers();
    $._InternalLinkList_add(this, listener);
    if (!t1)
      this._callOnSubscriptionStateChange$0();
  },
  _cancel$1: function(listener) {
    var t1, wasPaused;
    t1 = listener.get$_nextLink();
    if (listener == null ? t1 == null : listener === t1)
      return;
    if (this.get$_isFiring() === true)
      if (listener._needsEvent$1(this.get$_currentEventIdBit()) === true)
        listener._setPendingUnsubscribe$0();
      else
        this._removeListener$1(listener);
    else {
      wasPaused = this.get$_isPaused();
      this._removeListener$1(listener);
      if ($.$$eq$o(wasPaused, this.get$_isPaused()) !== true)
        ;
      if (!this.get$_hasSubscribers())
        this._callOnSubscriptionStateChange$0();
    }
  },
  _removeListener$1: function(listener) {
    var pauseCount = listener._setUnsubscribed$0();
    if (typeof pauseCount !== "number")
      return this._removeListener$1$bailout(1, listener, pauseCount);
    this._updatePauseCount$1(-pauseCount);
    $._InternalLink_unlink(listener);
  },
  _removeListener$1$bailout: function(state0, listener, pauseCount) {
    this._updatePauseCount$1($.$$negate$n(pauseCount));
    $._InternalLink_unlink(listener);
  },
  _MultiStreamImpl$0: function() {
    this._previousLink = this;
    this._nextLink = this;
  }
};

$$._StreamSubscriptionImpl = {"": "_StreamListener;_unsubscribeOnError,_liblib0$_onData,_onError,_onDone,_source,_state,_nextLink,_previousLink",
  _liblib0$_onData$1: function(arg0) {
    return this._liblib0$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  onError$1: function(handleError) {
    this._onError = handleError == null ? $._nullErrorHandler : handleError;
  },
  get$onError: function() {
    return new $.BoundClosure$1(this, "onError$1");
  },
  _sendData$1: function(data) {
    this._liblib0$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
    if (this._unsubscribeOnError)
      this._source._cancel$1(this);
  },
  _sendDone$0: function() {
    this._onDone$0();
  },
  cancel$0: function() {
    this._source._cancel$1(this);
  },
  pause$1: function(resumeSignal) {
    this._source._pause$2(this, resumeSignal);
  },
  pause$0: function() {
    return this.pause$1(null);
  },
  resume$0: function() {
    if (this.get$isPaused() !== true)
      throw $.$$throw($.StateError$("Resuming unpaused subscription"));
    this._source._resume$2(this, false);
  }
};

$$._DelayedEvent = {"": "Object;next="};

$$._DelayedData = {"": "_DelayedEvent;value=,next",
  perform$1: function(stream) {
    stream._sendData$1(this.value);
  }
};

$$._DelayedError = {"": "_DelayedEvent;error>,next",
  perform$1: function(stream) {
    stream._sendError$1(this.error);
  }
};

$$._DelayedDone = {"": "Object;",
  perform$1: function(stream) {
    stream._sendDone$0();
  },
  get$next: function() {
    return;
  },
  set$next: function(_) {
    throw $.$$throw($.StateError$("No events after a done."));
  }
};

$$._InternalLink = {"": "Object;_nextLink=,_previousLink=",
  _InternalLink$0: function() {
    this._nextLink = this;
    this._previousLink = this;
  }
};

$$._StreamListener = {"": "_InternalLink;_state=",
  get$isPaused: function() {
    return $.$$ge$n(this._state, 8);
  },
  get$_isPendingUnsubscribe: function() {
    var t1 = this._state;
    if (t1 !== (t1 | 0))
      return this.get$_isPendingUnsubscribe$bailout(1, t1);
    return (t1 & 2) !== 0;
  },
  get$_isPendingUnsubscribe$bailout: function(state0, t1) {
    return $.$$and$n(t1, 2) !== 0;
  },
  get$_isSubscribed: function() {
    return $.$$and$n(this._state, 1) !== 0;
  },
  _needsEvent$1: function(currentEventIdBit) {
    var t1 = this._state;
    if (t1 !== (t1 | 0))
      return this._needsEvent$1$bailout(1, currentEventIdBit, t1);
    return $.CONSTANT4.$shr(t1 & 4, 2) !== currentEventIdBit;
  },
  _needsEvent$1$bailout: function(state0, currentEventIdBit, t1) {
    switch (state0) {
      case 0:
        t1 = this._state;
      case 1:
        state0 = 0;
        t1 = $.$$and$n(t1, 4);
      case 2:
        state0 = 0;
        return $.CONSTANT4.$shr(t1, 2) !== currentEventIdBit;
    }
  },
  _toggleEventReceived$0: function() {
    var t1 = this._state;
    if (t1 !== (t1 | 0))
      return this._toggleEventReceived$0$bailout(1, t1);
    this._state = (t1 ^ 4) >>> 0;
  },
  _toggleEventReceived$0$bailout: function(state0, t1) {
    this._state = $.$$xor$n(t1, 4);
  },
  _setSubscribed$1: function(eventIdBit) {
    var t1 = $.$$shl$n(eventIdBit, 2);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    this._state = (1 | t1) >>> 0;
  },
  _setPendingUnsubscribe$0: function() {
    this._state = $.$$or$n(this._state, 2);
  },
  _setUnsubscribed$0: function() {
    var timesPaused = $.$$shr$n(this._state, 3);
    this._state = 0;
    return timesPaused;
  },
  _incrementPauseCount$0: function() {
    this._state = $.$$add$n(this._state, 8);
  },
  _decrementPauseCount$0: function() {
    this._state = $.$$sub$n(this._state, 8);
  }
};

$$._PendingEvents = {"": "Object;scheduleTimer<",
  get$isScheduled: function() {
    return this.scheduleTimer != null;
  },
  schedule$1: function(stream) {
    if (this.get$isScheduled() === true)
      return;
    this.scheduleTimer = $.Timer_Timer($.CONSTANT10, new $._PendingEvents_schedule_anon(this, stream));
  }
};

$$._StreamImplEvents = {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,scheduleTimer",
  get$isEmpty: function() {
    return this.lastPendingEvent == null;
  },
  get$isScheduled: function() {
    return this.scheduleTimer != null;
  },
  add$1: function($event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = $event;
      this.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      this.lastPendingEvent = $event;
    }
  },
  handleNext$1: function(stream) {
    var $event;
    if (this.get$isScheduled() === true) {
      this.scheduleTimer.cancel$0();
      this.scheduleTimer = null;
    }
    $event = this.firstPendingEvent;
    this.firstPendingEvent = $event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    $event.perform$1(stream);
  }
};

$$._DoneSubscription = {"": "Object;_handler>,_timer,_liblib0$_pauseCount",
  _handler$0: function() {
    return this._handler.call$0();
  },
  _delayDone$0: function() {
    this._timer = $.Timer_Timer($.CONSTANT10, new $._DoneSubscription__delayDone_anon(this));
  },
  get$_isComplete: function() {
    return this._timer == null && $.$$eq$o(this._liblib0$_pauseCount, 0) === true;
  },
  onError$1: function(handleError) {
  },
  get$onError: function() {
    return new $.BoundClosure$1(this, "onError$1");
  },
  pause$1: function(signal) {
    var t1;
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    t1 = this._timer;
    if (t1 != null)
      t1.cancel$0();
    this._liblib0$_pauseCount = $.$$add$n(this._liblib0$_pauseCount, 1);
  },
  pause$0: function() {
    return this.pause$1(null);
  },
  resume$0: function() {
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    if ($.$$eq$o(this._liblib0$_pauseCount, 0) === true)
      return;
    this._liblib0$_pauseCount = $.$$sub$n(this._liblib0$_pauseCount, 1);
    if ($.$$eq$o(this._liblib0$_pauseCount, 0) === true)
      this._delayDone$0();
  },
  get$isPaused: function() {
    return $.$$gt$n(this._liblib0$_pauseCount, 0);
  },
  cancel$0: function() {
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._timer;
    if (t1 != null) {
      t1.cancel$0();
      this._timer = null;
    }
    this._liblib0$_pauseCount = 0;
  },
  _DoneSubscription$1: function(_handler) {
    this._delayDone$0();
  }
};

$$._SingleStreamMultiplexer = {"": "_MultiStreamImpl;_source,_subscription,_nextLink,_previousLink,_state,_pendingEvents",
  _callOnPauseStateChange$0: function() {
    if (this.get$_isPaused() === true) {
      var t1 = this._subscription;
      if (t1 != null)
        t1.pause$0();
    } else {
      t1 = this._subscription;
      if (t1 != null)
        t1.resume$0();
    }
  },
  _onSubscriptionStateChange$0: function() {
    var t1, t2, t3;
    if (this.get$_hasSubscribers()) {
      t1 = this._source;
      t2 = this.get$_add();
      t3 = this.get$_signalError();
      this._subscription = t1.listen$3$onDone$onError(t2, this.get$_close(), t3);
    } else {
      t1 = this._subscription;
      if (t1 == null)
        return;
      t1.cancel$0();
      this._subscription = null;
    }
  }
};

$$._ForwardingStream = {"": "Stream;",
  get$isBroadcast: function() {
    return this._source.get$isBroadcast();
  },
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    return this._createSubscription$4(onData, onError, onDone, true === unsubscribeOnError);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._ForwardingStreamSubscription$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _handleData$2: function(data, sink) {
    sink._sendData$1(data);
  },
  _handleError$2: function(error, sink) {
    sink._sendError$1(error);
  },
  _handleDone$1: function(sink) {
    sink._sendDone$0();
  }
};

$$._BaseStreamSubscription = {"": "Object;",
  _liblib0$_onData$1: function(arg0) {
    return this._liblib0$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  onError$1: function(handleError) {
    this._onError = handleError == null ? $._nullErrorHandler : handleError;
  },
  get$onError: function() {
    return new $.BoundClosure$1(this, "onError$1");
  },
  _BaseStreamSubscription$3: function(_onData, _onError, _onDone) {
    if (this._liblib0$_onData == null)
      this._liblib0$_onData = $._nullDataHandler;
    if (this._onError == null)
      this._onError = $._nullErrorHandler;
    if (this._onDone == null)
      this._onDone = $._nullDoneHandler;
  }
};

$$._ForwardingStreamSubscription = {"": "_BaseStreamSubscription;_stream,_unsubscribeOnError,_subscription,_liblib0$_onData,_onError,_onDone",
  pause$1: function(resumeSignal) {
    var t1 = this._subscription;
    if (t1 == null)
      throw $.$$throw($.StateError$("Subscription has been unsubscribed"));
    t1.pause$1(resumeSignal);
  },
  pause$0: function() {
    return this.pause$1(null);
  },
  resume$0: function() {
    var t1 = this._subscription;
    if (t1 == null)
      throw $.$$throw($.StateError$("Subscription has been unsubscribed"));
    t1.resume$0();
  },
  cancel$0: function() {
    var t1 = this._subscription;
    if (t1 == null)
      throw $.$$throw($.StateError$("Subscription has been unsubscribed"));
    t1.cancel$0();
    this._subscription = null;
  },
  _sendData$1: function(data) {
    this._liblib0$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
    if (this._unsubscribeOnError) {
      this._subscription.cancel$0();
      this._subscription = null;
    }
  },
  _sendDone$0: function() {
    var t1 = this._subscription;
    if (t1 != null) {
      t1.cancel$0();
      this._subscription = null;
    }
    this._onDone$0();
  },
  _handleData$1: function(data) {
    this._stream._handleData$2(data, this);
  },
  get$_handleData: function() {
    return new $.Bound__handleData__ForwardingStreamSubscription(this, "_handleData$1");
  },
  _handleError$1: function(error) {
    this._stream._handleError$2(error, this);
  },
  get$_handleError: function() {
    return new $.BoundClosure$1(this, "_handleError$1");
  },
  _handleDone$0: function() {
    this._subscription = null;
    this._stream._handleDone$1(this);
  },
  get$_handleDone: function() {
    return new $.Bound__handleDone__ForwardingStreamSubscription(this, "_handleDone$0");
  },
  _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, _unsubscribeOnError) {
    var t1, t2, t3;
    t1 = this._stream._source;
    t2 = this.get$_handleData();
    t3 = this.get$_handleError();
    this._subscription = t1.listen$3$onDone$onError(t2, this.get$_handleDone(), t3);
  }
};

$$._WhereStream = {"": "_ForwardingStream;_test,_source",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var satisfies, e, s, exception, t1;
    satisfies = null;
    try {
      satisfies = this._test$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      sink._sendError$1($._asyncError(e, s, null));
      return;
    }

    if (satisfies === true)
      sink._sendData$1(inputEvent);
  }
};

$$._MapStream = {"": "_ForwardingStream;_transform,_source",
  _transform$1: function(arg0) {
    return this._transform.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var outputEvent, e, s, exception, t1;
    outputEvent = null;
    try {
      outputEvent = this._transform$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      sink._sendError$1($._asyncError(e, s, null));
      return;
    }

    sink._sendData$1(outputEvent);
  }
};

$$.FilterDemo = {"": "DisplayObjectContainer;_filters,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  FilterDemo$0: function() {
    var targetBitmapData, sourceBitmapData, backgroundBitmapData, t1, i, x, y, filter, $name, backgroundBitmap, textField;
    targetBitmapData = $.BitmapData$(940, 500, true, 0);
    sourceBitmapData = $.resourceManager.getBitmapData$1("king");
    backgroundBitmapData = $.BitmapData$(230, 245, true, 4293980400);
    this.addChild$1($.Bitmap$(targetBitmapData, "auto"));
    for (t1 = this._filters, i = 0; i < t1.length; ++i) {
      x = 235 * $.CONSTANT4.$mod(i, 4);
      y = 250 * $.CONSTANT4.$tdiv(i, 4);
      filter = $.propertyTypeCast($.$$index$as(t1[i], "filter"), "$isBitmapFilter");
      if (i >= t1.length)
        throw $.ioore(i);
      $name = $.stringTypeCast($.$$index$as(t1[i], "name"));
      targetBitmapData.applyFilter$4(sourceBitmapData, $.Rectangle$(0, 0, sourceBitmapData.get$width(), sourceBitmapData.get$height()), $.Point$(x + 40, y + 45), filter);
      backgroundBitmap = $.Bitmap$(backgroundBitmapData, "auto");
      backgroundBitmap.set$x(x);
      backgroundBitmap.set$y(y);
      this.addChildAt$2(backgroundBitmap, 0);
      textField = $.TextField$();
      textField.set$defaultTextFormat($.TextFormat$("Helvetica Neue, Helvetica, Arial", 14, 4278190080, "left", false, 0, false, 0, 0, 0, false));
      textField.set$x(x + 5);
      textField.set$y(y + 5);
      textField.set$width(200);
      textField.set$text($name);
      this.addChild$1(textField);
    }
  }
};

$$.MaskingDemo = {"": "DisplayObjectContainer;_random,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  MaskingDemo$0: function() {
    var flowerField, t1, i, t2, bitmap, tween, starPath, a1, a2, rectangleMask, circleMask, customMask;
    flowerField = $.Sprite$();
    flowerField.set$pivotX(470);
    flowerField.set$pivotY(250);
    flowerField.set$x(470);
    flowerField.set$y(250);
    this.addChild$1(flowerField);
    for (t1 = this._random, i = 0; i < 150; ++i) {
      t2 = t1.nextInt$1(3);
      bitmap = $.Bitmap$($.resourceManager.getBitmapData$1("flower" + $.S(1 + t2)), "auto");
      bitmap.set$pivotX(64);
      bitmap.set$pivotY(64);
      bitmap.set$x(64 + t1.nextInt$1(812));
      bitmap.set$y(64 + t1.nextInt$1(372));
      bitmap.addTo$1(flowerField);
      tween = $.Tween$(bitmap, 600, $.TransitionFunction_linear);
      tween.animate$2("rotation", 188.49555921538757);
      $.add$1$a($.juggler, tween);
    }
    starPath = $.List_List(0);
    for (i = 0; i < 6; ++i) {
      t1 = i * 60;
      a1 = t1 * 3.141592653589793 / 180;
      a2 = (t1 + 30) * 3.141592653589793 / 180;
      starPath.push($.Point$(470 + 200 * $.cos(a1), 250 + 200 * $.sin(a1)));
      starPath.push($.Point$(470 + 100 * $.cos(a2), 250 + 100 * $.sin(a2)));
    }
    rectangleMask = $.Mask$rectangle(100, 100, 740, 300);
    circleMask = $.Mask$circle(470, 250, 200);
    customMask = $.Mask$custom(starPath);
    $.query("#mask-none").get$onClick().listen$1(new $.anon8(flowerField));
    $.query("#mask-rectangle").get$onClick().listen$1(new $.anon9(flowerField, rectangleMask));
    $.query("#mask-circle").get$onClick().listen$1(new $.anon10(flowerField, circleMask));
    $.query("#mask-custom").get$onClick().listen$1(new $.anon11(flowerField, customMask));
    $.query("#mask-spin").get$onClick().listen$1(new $.anon12(flowerField));
  }
};

$$.MovieClipDemo = {"": "DisplayObjectContainer;_random,_liblib6$_textureAtlas,_bitmapDatas,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  _startWalkingMan$0: function() {
    var scale, movieClip, t1, tween;
    scale = this._random.nextDouble$0();
    movieClip = $.MovieClip$(this._bitmapDatas, 30, true);
    movieClip.set$x(-128);
    movieClip.set$y(20 + 180 * scale);
    t1 = 0.5 + 0.5 * scale;
    movieClip.set$scaleY(t1);
    movieClip.set$scaleX(t1);
    movieClip.play$0();
    this.addChild$1(movieClip);
    t1 = new $.MovieClipDemo__startWalkingMan_anon();
    $.CONSTANT1.sort$1(this._children, t1);
    tween = $.Tween$(movieClip, 5 + (1 - scale) * 5, $.TransitionFunction_linear);
    tween.animate$2("x", 940);
    tween.set$onComplete(new $.MovieClipDemo__startWalkingMan_anon0(this, movieClip));
    $.add$1$a($.juggler, movieClip);
    $.add$1$a($.juggler, tween);
    $.juggler.delayCall$2(this.get$_startWalkingMan(), 0.2);
  },
  get$_startWalkingMan: function() {
    return new $.Bound__startWalkingMan_MovieClipDemo(this, "_startWalkingMan$0");
  },
  MovieClipDemo$0: function() {
    this._liblib6$_textureAtlas = $.resourceManager.getTextureAtlas$1("walkTextureAtlas");
    this._bitmapDatas = this._liblib6$_textureAtlas.getBitmapDatas$1("walk");
    this._startWalkingMan$0();
  }
};

$$.FlyingFlag = {"": "Bitmap;vx,vy,bitmapData,pixelSnapping,clipRectangle,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  advanceTime$1: function(time) {
    var t1, t3, tx, t5, ty;
    t1 = this.get$x();
    t3 = this.vx;
    if (typeof t1 !== "number")
      return this.advanceTime$1$bailout(1, time, t1);
    tx = t1 + t3 * time;
    t1 = this.get$y();
    t5 = this.vy;
    if (typeof t1 !== "number")
      return this.advanceTime$1$bailout(2, time, t1, tx);
    ty = t1 + t5 * time;
    if (tx > 910 || tx < 30)
      this.vx = -this.vx;
    else
      this.set$x(tx);
    if (ty > 470 || ty < 30)
      this.vy = -this.vy;
    else
      this.set$y(ty);
    return true;
  },
  advanceTime$1$bailout: function(state0, time, t1, tx) {
    switch (state0) {
      case 0:
        t1 = this.get$x();
      case 1:
        state0 = 0;
        tx = $.$$add$n(t1, this.vx * time);
        t1 = this.get$y();
      case 2:
        var ty;
        state0 = 0;
        ty = $.$$add$n(t1, this.vy * time);
        t1 = $.getInterceptor$n(tx);
        if (t1.$gt(tx, 910) === true || t1.$lt(tx, 30) === true)
          this.vx = -this.vx;
        else
          this.set$x(tx);
        t1 = $.getInterceptor$n(ty);
        if (t1.$gt(ty, 470) === true || t1.$lt(ty, 30) === true)
          this.vy = -this.vy;
        else
          this.set$y(ty);
        return true;
    }
  },
  FlyingFlag$3: function(bitmapData, vx, vy) {
    this.set$pivotX($.$$div$n(bitmapData.get$width(), 2));
    this.set$pivotY($.$$div$n(bitmapData.get$height(), 2));
  },
  $isAnimatable: true
};

$$.PerformanceDemo = {"": "DisplayObjectContainer;_fpsAverage,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  _onEnterFrame$1: function(e) {
    var t1, t2;
    if (this._fpsAverage == null) {
      t1 = e.get$passedTime();
      if (typeof t1 !== "number")
        throw $.iae(t1);
      this._fpsAverage = 1 / t1;
    } else {
      t1 = e.get$passedTime();
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t2 = this._fpsAverage;
      if (typeof t2 !== "number")
        throw $.iae(t2);
      this._fpsAverage = 0.05 / t1 + 0.95 * t2;
    }
    t1 = "fps: " + $.S($.round$0$n(this._fpsAverage));
    document.query$1("#fpsMeter").set$innerHtml(t1);
  },
  get$_onEnterFrame: function() {
    return new $.BoundClosure$1(this, "_onEnterFrame$1");
  },
  _addFlags$1: function(amount) {
    var textureAtlas, flagNames, t1, flyingFlag;
    textureAtlas = $.resourceManager.getTextureAtlas$1("flags");
    flagNames = textureAtlas.get$frameNames();
    if (typeof flagNames !== "string" && (typeof flagNames !== "object" || flagNames === null || flagNames.constructor !== Array && !flagNames.$isJavaScriptIndexingBehavior()))
      return this._addFlags$1$bailout(1, flagNames, amount, textureAtlas);
    for (; --amount, amount >= 0;) {
      t1 = $.CONSTANT35.nextInt$1(flagNames.length);
      if (t1 < 0 || t1 >= flagNames.length)
        throw $.ioore(t1);
      flyingFlag = $.FlyingFlag$(textureAtlas.getBitmapData$1(flagNames[t1]), $.CONSTANT35.nextInt$1(200) - 100, $.CONSTANT35.nextInt$1(200) - 100);
      flyingFlag.set$x(30 + $.CONSTANT35.nextInt$1(880));
      flyingFlag.set$y(30 + $.CONSTANT35.nextInt$1(440));
      this.addChild$1(flyingFlag);
      $.add$1$a($.juggler, flyingFlag);
    }
    t1 = "Flags: " + $.S(this.get$numChildren());
    document.query$1("#flagCounter").set$innerHtml(t1);
  },
  _addFlags$1$bailout: function(state0, flagNames, amount, textureAtlas) {
    var t1, flyingFlag;
    for (t1 = $.getInterceptor$as(flagNames); --amount, amount >= 0;) {
      flyingFlag = $.FlyingFlag$(textureAtlas.getBitmapData$1(t1.$index(flagNames, $.CONSTANT35.nextInt$1(t1.get$length(flagNames)))), $.CONSTANT35.nextInt$1(200) - 100, $.CONSTANT35.nextInt$1(200) - 100);
      flyingFlag.set$x(30 + $.CONSTANT35.nextInt$1(880));
      flyingFlag.set$y(30 + $.CONSTANT35.nextInt$1(440));
      this.addChild$1(flyingFlag);
      $.add$1$a($.juggler, flyingFlag);
    }
    t1 = "Flags: " + $.S(this.get$numChildren());
    document.query$1("#flagCounter").set$innerHtml(t1);
  },
  _removeFlags$1: function(amount) {
    var displayObject, t1;
    while (true) {
      --amount;
      if (!(amount >= 0 && $.$$gt$n(this.get$numChildren(), 0) === true))
        break;
      displayObject = this.getChildAt$1(0);
      displayObject.removeFromParent$0();
      $.remove$1$a($.juggler, displayObject);
    }
    t1 = "Flags: " + $.S(this.get$numChildren());
    document.query$1("#flagCounter").set$innerHtml(t1);
  },
  PerformanceDemo$0: function() {
    this._addFlags$1(250);
    $.query("#minus10").get$onClick().listen$1(new $.anon4(this));
    $.query("#minus50").get$onClick().listen$1(new $.anon5(this));
    $.query("#plus50").get$onClick().listen$1(new $.anon6(this));
    $.query("#plus10").get$onClick().listen$1(new $.anon7(this));
    this.get$onEnterFrame().listen$1(this.get$_onEnterFrame());
  }
};

$$.SoundDemo = {"": "DisplayObjectContainer;_heyJudeNotes,_heyJudeLyrics,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  SoundDemo$0: function() {
    this.addChild$1($.Bitmap$($.resourceManager.getBitmapData$1("Background"), "auto"));
    var piano = $.Piano$(this._heyJudeNotes, this._heyJudeLyrics);
    piano.set$x(120);
    piano.set$y(30);
    this.addChild$1(piano);
    $.query("#startOver").get$onClick().listen$1(new $.anon3(piano));
  }
};

$$.Piano = {"": "DisplayObjectContainer;_songNotes,_songLyrics,_pianoNotes,_noteIndex,_noteFinger,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  checkSongNote$1: function(note) {
    var t1, t2, t3;
    t1 = this._noteIndex;
    t2 = this._songNotes;
    if ($.$$lt$n(t1, t2.length) === true) {
      t1 = this._noteIndex;
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      t3 = $.$$eq$o(t2[t1], note) === true;
      t1 = t3;
    } else
      t1 = false;
    if (t1) {
      if ($.$$eq$o(this._noteIndex, t2.length - 1) === true)
        $.resourceManager.getSound$1("Cheer").play$0();
      this._noteIndex = $.$$add$n(this._noteIndex, 1);
      this._update$0();
    }
  },
  resetSong$0: function() {
    this._noteIndex = 0;
    this._noteFinger.set$alpha(1);
    this._update$0();
  },
  _update$0: function() {
    var lyricsDiv, t1, wordIndex, w, last, t2, i, displayObject, t3, tweenX, tweenY;
    lyricsDiv = document.query$1("#lyrics");
    lyricsDiv.set$innerHtml("");
    for (t1 = this._songLyrics, wordIndex = -1, w = 0, last = 0; w < t1.length; ++w) {
      if ($.$$eq$o(t1[w], "") !== true)
        last = w;
      if (w === this._noteIndex)
        wordIndex = last;
    }
    for (w = 0; w < t1.length; ++w)
      if (w === wordIndex)
        lyricsDiv.appendHtml$1("<span id=\"word\">" + $.S(t1[w]) + "</span>");
      else
        lyricsDiv.appendHtml$1(t1[w]);
    t1 = this._noteIndex;
    t2 = this._songNotes;
    if ($.$$lt$n(t1, t2.length) === true)
      for (i = 0; $.CONSTANT4.$lt(i, this.get$numChildren()); ++i) {
        displayObject = this.getChildAt$1(i);
        if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isPianoKey) {
          t1 = displayObject.note;
          t3 = this._noteIndex;
          if (t3 !== (t3 | 0))
            throw $.iae(t3);
          if (t3 < 0 || t3 >= t2.length)
            throw $.ioore(t3);
          if ($.$$eq$o(t1, t2[t3]) === true) {
            this._noteFinger.set$y(0);
            tweenX = $.Tween$(this._noteFinger, 0.4, $.TransitionFunction_easeInOutCubic);
            tweenX.animate$2("x", $.$$add$n(displayObject.get$x(), $.$$div$n(displayObject.get$width(), 2)));
            tweenY = $.Tween$(this._noteFinger, 0.4, $.TransitionFunction_sine);
            tweenY.animate$2("y", -10);
            $.juggler.removeTweens$1(this._noteFinger);
            $.add$1$a($.juggler, tweenX);
            $.add$1$a($.juggler, tweenY);
          }
        }
      }
    else {
      tweenY = $.Tween$(this._noteFinger, 0.4, $.TransitionFunction_linear);
      tweenY.animate$2("alpha", 0);
      $.add$1$a($.juggler, tweenY);
    }
  },
  Piano$2: function(_songNotes, _songLyrics) {
    var t1, n, x, t2, t3, n0, sound, pianoKey;
    for (t1 = this._pianoNotes, n = 0, x = 0; t2 = t1.length, t3 = $.resourceManager, n < t2; n = n0) {
      n0 = n + 1;
      sound = t3.getSound$1("Note" + $.S(n0));
      if (n >= t1.length)
        throw $.ioore(n);
      pianoKey = $.PianoKey$(this, t1[n], sound);
      if (n >= t1.length)
        throw $.ioore(n);
      if ($.endsWith$1$s(t1[n], "#") === true) {
        pianoKey.set$x(x - 16);
        pianoKey.set$y(35);
        this.addChild$1(pianoKey);
      } else {
        pianoKey.set$x(x);
        pianoKey.set$y(35);
        this.addChildAt$2(pianoKey, 0);
        x += 47;
      }
    }
    this._noteIndex = 0;
    this._noteFinger = $.Bitmap$(t3.getBitmapData$1("Finger"), "auto");
    this._noteFinger.set$pivotX(20);
    this.addChild$1(this._noteFinger);
    this._update$0();
  }
};

$$.PianoKey = {"": "Sprite;piano,note,sound,buttonMode,useHandCursor,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  _keyDown$1: function(me) {
    if (me.get$buttonDown() === true) {
      this.sound.play$0();
      this.set$alpha(0.7);
      this.piano.checkSongNote$1(this.note);
    }
  },
  get$_keyDown: function() {
    return new $.BoundClosure$1(this, "_keyDown$1");
  },
  _keyUp$1: function(me) {
    this.set$alpha(1);
  },
  get$_keyUp: function() {
    return new $.BoundClosure$1(this, "_keyUp$1");
  },
  PianoKey$3: function(piano, note, sound) {
    var t1, t2, key, bitmapData, textColor, textFormat, textField;
    t1 = this.note;
    t2 = $.getInterceptor$s(t1);
    if (t2.endsWith$1(t1, "#") === true)
      key = "KeyBlack";
    else if (t2.startsWith$1(t1, "C5"))
      key = "KeyWhite0";
    else if (t2.startsWith$1(t1, "C") || t2.startsWith$1(t1, "F"))
      key = "KeyWhite1";
    else if (t2.startsWith$1(t1, "D") || t2.startsWith$1(t1, "G") || t2.startsWith$1(t1, "A"))
      key = "KeyWhite2";
    else
      key = t2.startsWith$1(t1, "E") || t2.startsWith$1(t1, "B") ? "KeyWhite3" : null;
    bitmapData = $.resourceManager.getBitmapData$1(key);
    this.addChild$1($.Bitmap$(bitmapData, "auto"));
    textColor = t2.endsWith$1(t1, "#") === true ? 4294967295 : 4278190080;
    textFormat = $.TextFormat$("Helvetica,Arial", 10, textColor, "center", false, 0, false, 0, 0, 0, false);
    textField = $.TextField$();
    textField.set$defaultTextFormat(textFormat);
    textField.set$text(t1);
    textField.set$width(bitmapData.get$width());
    textField.set$height(20);
    textField.mouseEnabled = false;
    textField.set$y($.$$sub$n(bitmapData.get$height(), 20));
    this.addChild$1(textField);
    this.useHandCursor = true;
    this.get$onMouseDown().listen$1(this.get$_keyDown());
    this.get$onMouseOver().listen$1(this.get$_keyDown());
    this.get$onMouseUp().listen$1(this.get$_keyUp());
    this.get$onMouseOut().listen$1(this.get$_keyUp());
  },
  $isPianoKey: true
};

$$.TextDemo = {"": "DisplayObjectContainer;sampleText,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  TextDemo$0: function() {
    var text, textField1, textField2, textField3, textField4;
    text = $.replaceAll$2$s($.CONSTANT0.replaceAll$2(this.sampleText, "\r", ""), "\n", "");
    textField1 = $.TextField$();
    textField1.set$defaultTextFormat($.TextFormat$("Helvetica,Arial", 14, 4278222848, "left", true, 0, true, 0, 0, 0, false));
    textField1.set$text(text);
    textField1.set$x(10);
    textField1.set$y(10);
    textField1.set$width(920);
    textField1.set$height(20);
    this.addChild$1(textField1);
    textField2 = $.TextField$();
    textField2.set$defaultTextFormat($.TextFormat$("Helvetica,Arial", 16, 4294901760, "left", false, 0, false, 0, 0, 0, false));
    textField2.set$text(text);
    textField2.set$x(10);
    textField2.set$y(50);
    textField2.set$width(200);
    textField2.set$height(300);
    textField2.set$wordWrap(true);
    this.addChild$1(textField2);
    textField3 = $.TextField$();
    textField3.set$defaultTextFormat($.TextFormat$("Helvetica,Arial", 16, 4278190335, "right", false, 0, false, 0, 0, 0, false));
    textField3.set$text(text);
    textField3.set$x(300);
    textField3.set$y(50);
    textField3.set$width(200);
    textField3.set$height(300);
    textField3.set$wordWrap(true);
    this.addChild$1(textField3);
    textField4 = $.TextField$();
    textField4.set$defaultTextFormat($.TextFormat$("Caesar Dressing", 30, 4278190080, "center", false, 0, false, 0, 0, 0, false));
    textField4.set$text(text);
    textField4.set$x(590);
    textField4.set$y(50);
    textField4.set$width(340);
    textField4.set$height(300);
    textField4.set$wordWrap(true);
    this.addChild$1(textField4);
  }
};

$$.TweenerDemo = {"": "DisplayObjectContainer;_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  TweenerDemo$0: function() {
    var textField1 = $.TextField$();
    textField1.set$defaultTextFormat($.TextFormat$("Helvetica,Arial", 14, 4289309097, "left", true, 0, false, 0, 0, 0, false));
    textField1.set$text("ToDo: show a cool demo ...");
    textField1.set$x(10);
    textField1.set$y(10);
    textField1.set$width(920);
    textField1.set$height(20);
    this.addChild$1(textField1);
  }
};

$$.FlumpDemo = {"": "DisplayObjectContainer;_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  FlumpDemo$0: function() {
    var flumpLibrary, idle, walk, attack, defeat;
    flumpLibrary = $.resourceManager.getFlumpLibrary$1("flump");
    idle = $.FlumpMovie$(flumpLibrary, "idle");
    idle.set$x(500);
    idle.set$y(200);
    this.addChild$1(idle);
    walk = $.FlumpMovie$(flumpLibrary, "walk");
    walk.set$x(150);
    walk.set$y(460);
    this.addChild$1(walk);
    attack = $.FlumpMovie$(flumpLibrary, "attack");
    attack.set$x(450);
    attack.set$y(460);
    this.addChild$1(attack);
    defeat = $.FlumpMovie$(flumpLibrary, "defeat");
    defeat.set$x(720);
    defeat.set$y(460);
    this.addChild$1(defeat);
    $.add$1$a($.juggler, idle);
    $.add$1$a($.juggler, walk);
    $.add$1$a($.juggler, attack);
    $.add$1$a($.juggler, defeat);
    $.BitmapData_load("images/flumpLibraryAtlas0.png").then$1(new $.anon2(this));
  }
};

$$.TexturePackerDemo = {"": "DisplayObjectContainer;_liblib6$_textureAtlas,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  _showLevelupAnimation$0: function() {
    var offset, i, bitmapData, bitmap, tween1, tween2, t1, offset0;
    for (offset = 330, i = 0; i < 7; ++i, offset = offset0) {
      bitmapData = this._liblib6$_textureAtlas.getBitmapData$1("LevelUp" + $.S(i));
      bitmap = $.Bitmap$(bitmapData, "auto");
      bitmap.set$pivotX($.$$div$n(bitmapData.get$width(), 2));
      bitmap.set$pivotY($.$$div$n(bitmapData.get$height(), 2));
      bitmap.set$x(offset + $.$$div$n(bitmapData.get$width(), 2));
      bitmap.set$y(150);
      bitmap.set$scaleX(0);
      bitmap.set$scaleY(0);
      this.addChild$1(bitmap);
      tween1 = $.Tween$(bitmap, 2, $.TransitionFunction_easeOutElastic);
      tween1.animate$2("scaleX", 1);
      tween1.animate$2("scaleY", 1);
      tween1.set$delay(i * 0.05);
      tween2 = $.Tween$(bitmap, 0.4, $.TransitionFunction_linear);
      tween2.animate$2("scaleX", 0);
      tween2.animate$2("scaleY", 0);
      tween2.set$delay(2);
      tween2.set$onComplete(new $.TexturePackerDemo__showLevelupAnimation_anon(bitmap));
      $.add$1$a($.juggler, tween1);
      $.add$1$a($.juggler, tween2);
      t1 = bitmapData.get$width();
      if (typeof t1 !== "number")
        throw $.iae(t1);
      offset0 = offset + 5 + t1;
    }
    $.juggler.delayCall$2(new $.TexturePackerDemo__showLevelupAnimation_anon0(this), 3);
  },
  TexturePackerDemo$0: function() {
    this._liblib6$_textureAtlas = $.resourceManager.getTextureAtlas$1("levelUp");
    this._showLevelupAnimation$0();
    $.BitmapData_load("images/LevelupTextureAtlas.png").then$1(new $.anon1(this));
  }
};

$$.TransititionTypeDemo = {"": "Object;_transitionFunctions",
  getTransitionDiv$0: function() {
    var transitionDivElement, t1, i, rowDiv, t2, j, t3, $name, cellDiv;
    transitionDivElement = document.createElement("div");
    for (t1 = this._transitionFunctions, i = 0; i < t1.length / 4; ++i) {
      rowDiv = document.createElement("div");
      $.add$1$a(rowDiv.get$classes(), "row");
      $.add$1$a(transitionDivElement.get$children(), rowDiv);
      for (t2 = i * 4, j = 0; j < 4; ++j) {
        t3 = t2 + j;
        if (t3 < 0 || t3 >= t1.length)
          throw $.ioore(t3);
        $name = $.$$index$as(t1[t3], "name");
        if (t3 >= t1.length)
          throw $.ioore(t3);
        cellDiv = this._drawTransition$2($name, $.$$index$as(t1[t3], "transition"));
        cellDiv.set$id("cell");
        $.add$1$a(rowDiv.get$children(), cellDiv);
      }
    }
    return transitionDivElement;
  },
  _drawTransition$2: function($name, transitionFunction) {
    var div, canvasElement, headline, stage, shape, graphics, i, ratio, t1;
    div = document.createElement("div");
    $.add$1$a(div.get$classes(), "span3");
    div.get$style().set$height("130px");
    canvasElement = $.CanvasElement_CanvasElement(140, 200);
    canvasElement.get$style().set$position("absolute");
    canvasElement.get$style().set$zIndex("1");
    $.add$1$a(div.get$children(), canvasElement);
    headline = document.createElement("div");
    headline.set$text($name);
    headline.get$style().set$position("relative");
    headline.get$style().set$zIndex("2");
    headline.get$style().set$top("6px");
    $.add$1$a(div.get$children(), headline);
    stage = $.Stage$("stage", canvasElement);
    shape = $.Shape$();
    graphics = shape.get$graphics();
    graphics.beginPath$0();
    graphics.moveTo$2(0.5, 30.5);
    graphics.lineTo$2(199.5, 30.5);
    graphics.lineTo$2(199.5, 109.5);
    graphics.lineTo$2(0.5, 109.5);
    graphics.closePath$0();
    graphics.strokeColor$1(4278190080);
    graphics.fillColor$1(4292861919);
    graphics.beginPath$0();
    graphics.moveTo$2(0.5, 109.5);
    for (i = 0; i <= 199; ++i) {
      ratio = i / 199;
      t1 = transitionFunction.call$1(ratio);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      graphics.lineTo$2(0.5 + ratio * 199, 109.5 - 79 * t1);
    }
    graphics.strokeColor$2(4278190335, 2);
    stage.addChild$1(shape);
    stage.materialize$0();
    return div;
  }
};

$$._Random = {"": "Object;",
  nextInt$1: function(max) {
    if (typeof max !== "number")
      return this.nextInt$1$bailout(1, max);
    if (max < 0)
      throw $.$$throw($.ArgumentError$("negative max: " + $.S(max)));
    if (max > 4294967295)
      max = 4294967295;
    return (Math.random() * max) >>> 0;
  },
  nextInt$1$bailout: function(state0, max) {
    var t1 = $.getInterceptor$n(max);
    if (t1.$lt(max, 0) === true)
      throw $.$$throw($.ArgumentError$("negative max: " + $.S(max)));
    if (t1.$gt(max, 4294967295) === true)
      max = 4294967295;
    return (Math.random() * max) >>> 0;
  },
  nextDouble$0: function() {
    return Math.random();
  }
};

$$._ChildrenElementList = {"": "Object;_element,_childElements",
  toList$0: function() {
    var t1, t3, output, len, i, t2;
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toList$0$bailout(1, t1);
    t3 = t1.length;
    output = $.List_List$fixedLength(t3, null);
    for (len = t1.length, i = 0; i < len; ++i) {
      t2 = t1[i];
      if (i >= t3)
        throw $.ioore(i);
      output[i] = t2;
    }
    return output;
  },
  toList$0$bailout: function(state0, t1, t3, len, output) {
    switch (state0) {
      case 0:
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$as(t1);
        output = $.List_List$fixedLength(t3.get$length(t1), null);
        len = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT4.$lt(i, len); ++i) {
          t2 = t3.$index(t1, i);
          if (i >= output.length)
            throw $.ioore(i);
          output[i] = t2;
        }
        return output;
    }
  },
  contains$1: function(element) {
    return $.contains$1$as(this._childElements, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.get$iterator$a(this._childElements); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  get$isEmpty: function() {
    return this._element.firstElementChild == null;
  },
  elementAt$1: function(index) {
    return $.$$index$as(this._childElements, index);
  },
  get$length: function() {
    return $.get$length$as(this._childElements);
  },
  $index: function(index) {
    var t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, t1, index) {
    return $.$$index$as(t1, index);
  },
  $indexSet: function(index, value) {
    var t1, t2;
    t1 = this._element;
    t2 = this._childElements;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.$$indexSet$bailout(1, index, value, t1, t2);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t2.length)
      throw $.ioore(index);
    t1.replaceChild(value, t2[index]);
  },
  $$indexSet$bailout: function(state0, index, value, t1, t2) {
    t1.replaceChild(value, $.$$index$as(t2, index));
  },
  add$1: function(value) {
    this._element.appendChild(value);
    return value;
  },
  get$iterator: function() {
    return $.get$iterator$a(this.toList$0());
  },
  addAll$1: function(iterable) {
    var t1, t2;
    if (typeof iterable === "object" && iterable !== null && !!iterable.$is_ChildNodeListLazy)
      iterable = $.List_List$from(iterable);
    for (t1 = $.get$iterator$a(iterable), t2 = this._element; t1.moveNext$0() === true;)
      t2.appendChild(t1.get$current());
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  remove$1: function(object) {
    var t1, t2;
    if (typeof object === "object" && object !== null && object.$isElement()) {
      t1 = object.parentNode;
      t2 = this._element;
      if (t1 === t2)
        t2.removeChild(object);
    }
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    this._element.textContent = "";
  },
  removeAt$1: function(index) {
    var result = $.$$index$as(this._childElements, index);
    if (result != null)
      this._element.removeChild(result);
    return result;
  },
  removeLast$0: function() {
    var result = this.get$last();
    if (result != null)
      this._element.removeChild(result);
    return result;
  },
  get$last: function() {
    var result = this._element.lastElementChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [null]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$._ElementCssClassSet = {"": "CssClassSet;_element",
  readClasses$0: function() {
    var s, t1, trimmed;
    s = $.LinkedHashSet$();
    for (t1 = $.CONSTANT1.get$iterator($.split$1$s(this._element.className, " ")); t1.moveNext$0();) {
      trimmed = $.trim$0$s(t1.get$current());
      if ($.CONSTANT0.get$isEmpty(trimmed) !== true)
        s.add$1(trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var t1;
    $.List_List$from(s);
    t1 = $.join$1$a(s, " ");
    this._element.className = t1;
  }
};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$last: function() {
    var result = this._this.lastChild;
    return result;
  },
  add$1: function(value) {
    this._this.appendChild(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    if (typeof iterable === "object" && iterable !== null && !!iterable.$is_ChildNodeListLazy)
      iterable = $.List_List$from(iterable);
    for (t1 = $.get$iterator$a(iterable), t2 = this._this; t1.moveNext$0() === true;)
      t2.appendChild(t1.get$current());
  },
  removeLast$0: function() {
    var result = this.get$last();
    if (result != null)
      this._this.removeChild(result);
    return result;
  },
  removeAt$1: function(index) {
    var t1, result;
    t1 = this._this;
    result = $.$$index$a(t1.childNodes, index);
    if (result != null)
      t1.removeChild(result);
    return result;
  },
  remove$1: function(object) {
    var t1;
    if (!(typeof object === "object" && object !== null && object.$isNode()))
      return;
    t1 = this._this;
    if (t1 !== object.parentNode)
      return;
    t1.removeChild(object);
  },
  clear$0: function() {
    this._this.textContent = "";
  },
  $indexSet: function(index, value) {
    var t1, t2;
    t1 = this._this;
    t2 = t1.childNodes;
    if (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior())
      return this.$$indexSet$bailout(1, index, value, t1, t2);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t2.length)
      throw $.ioore(index);
    t1.replaceChild(value, t2[index]);
  },
  $$indexSet$bailout: function(state0, index, value, t1, t2) {
    t1.replaceChild(value, $.$$index$a(t2, index));
  },
  get$iterator: function() {
    return $.get$iterator$a(this._this.childNodes);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq$o(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return $.$$index$a(this._this.childNodes, index);
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  get$length: function() {
    return $.get$length$a(this._this.childNodes);
  },
  $index: function(index) {
    var t1 = this._this.childNodes;
    if (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior())
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index$a(t1, index);
  },
  $is_ChildNodeListLazy: true,
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [null]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$._AttributeMap = {"": "Object;",
  clear$0: function() {
    for (var t1 = $.get$iterator$a(this.get$keys()); t1.moveNext$0() === true;)
      this.remove$1(t1.get$current());
  },
  forEach$1: function(f) {
    var t1, t2;
    for (t1 = $.get$iterator$a(this.get$keys()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      f.call$2(t2, this.$index(t2));
    }
  },
  get$keys: function() {
    var attributes, keys, len, i;
    attributes = this._element.attributes;
    keys = $.List_List(0);
    for (len = attributes.get$length(), i = 0; i < len; ++i)
      if (this._matches$1(attributes.$index(i)) === true)
        keys.push(attributes.$index(i).get$$$dom_localName());
    return keys;
  },
  get$values: function() {
    var attributes, values, len, i;
    attributes = this._element.attributes;
    values = $.List_List(0);
    for (len = attributes.get$length(), i = 0; i < len; ++i)
      if (this._matches$1(attributes.$index(i)) === true)
        values.push(attributes.$index(i).get$value());
    return values;
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq$o(t1, 0);
  },
  $isMap: true,
  $asMap: function () { return [$.String, $.String]; }
};

$$._ElementAttributeMap = {"": "_AttributeMap;_element",
  containsKey$1: function(key) {
    return this._element.hasAttribute(key);
  },
  $index: function(key) {
    return this._element.getAttribute(key);
  },
  $indexSet: function(key, value) {
    this._element.setAttribute(key, $.S(value));
  },
  remove$1: function(key) {
    var t1, value;
    t1 = this._element;
    value = t1.getAttribute(key);
    t1.removeAttribute(key);
    return value;
  },
  get$length: function() {
    return $.get$length$as(this.get$keys());
  },
  _matches$1: function(node) {
    return node.get$$$dom_namespaceUri() == null;
  }
};

$$.CssClassSet = {"": "Object;",
  toString$0: function() {
    return $.join$1$a(this.readClasses$0(), " ");
  },
  get$iterator: function() {
    return $.get$iterator$a(this.readClasses$0());
  },
  forEach$1: function(f) {
    $.forEach$1$a(this.readClasses$0(), f);
  },
  join$1: function(separator) {
    return $.join$1$a(this.readClasses$0(), separator);
  },
  map$1: function(f) {
    return $.map$1$a(this.readClasses$0(), f);
  },
  where$1: function(f) {
    return $.where$1$a(this.readClasses$0(), f);
  },
  get$isEmpty: function() {
    return $.get$isEmpty$as(this.readClasses$0());
  },
  get$length: function() {
    return $.get$length$as(this.readClasses$0());
  },
  contains$1: function(value) {
    return $.contains$1$as(this.readClasses$0(), value);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  add$1: function(value) {
    var t1, s;
    t1 = new $.CssClassSet_add_anon(value);
    s = this.readClasses$0();
    t1.call$1(s);
    this.writeClasses$1(s);
  },
  remove$1: function(value) {
    var s, result;
    if (!(typeof value === "string"))
      return false;
    s = this.readClasses$0();
    result = $.remove$1$a(s, value);
    this.writeClasses$1(s);
    return result;
  },
  addAll$1: function(iterable) {
    var t1, s;
    t1 = new $.CssClassSet_addAll_anon(iterable);
    s = this.readClasses$0();
    t1.call$1(s);
    this.writeClasses$1(s);
  },
  get$last: function() {
    return $.get$last$a(this.readClasses$0());
  },
  toList$0: function() {
    return $.toList$0$a(this.readClasses$0());
  },
  elementAt$1: function(index) {
    return $.elementAt$1$a(this.readClasses$0(), index);
  },
  clear$0: function() {
    var t1, s;
    t1 = new $.CssClassSet_clear_anon();
    s = this.readClasses$0();
    t1.call$1(s);
    this.writeClasses$1(s);
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.String]; };
  }
};

$$._EventStream = {"": "Stream;_liblib1$_target,_eventType,_useCapture",
  asBroadcastStream$0: function() {
    return this;
  },
  get$isBroadcast: function() {
    return true;
  },
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._liblib1$_target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_liblib1$_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (t1 != null)
      this._liblib1$_target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    this._liblib1$_target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._liblib1$_target == null;
  },
  onError$1: function(handleError) {
  },
  get$onError: function() {
    return new $.BoundClosure$1(this, "onError$1");
  },
  pause$1: function(resumeSignal) {
    var t1;
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    this._pauseCount = this._pauseCount + 1;
    t1 = this._onData;
    if (t1 != null)
      this._liblib1$_target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    if (resumeSignal != null)
      resumeSignal.whenComplete$1(this.get$resume());
  },
  pause$0: function() {
    return this.pause$1(null);
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  resume$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    if (this.get$_paused() !== true)
      throw $.$$throw($.StateError$("Subscription is not paused."));
    this._pauseCount = this._pauseCount - 1;
    this._tryResume$0();
  },
  get$resume: function() {
    return new $.Bound_resume__EventStreamSubscription(this, "resume$0");
  },
  _tryResume$0: function() {
    if (this._onData != null && this.get$_paused() !== true)
      this._liblib1$_target.$$dom_addEventListener$3(this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._CustomEventStreamProvider = {"": "Object;_eventTypeGetter",
  _eventTypeGetter$1: function(arg0) {
    return this._eventTypeGetter.call$1(arg0);
  },
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventTypeGetter$1(e), useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._TypedImageData = {"": "Object;data>,height>,width>", $is_TypedImageData: true,
  $isImageData: function() {
    return true;
  },
  $asImageData: function() {
    return null;
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$parent: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.parent);
  },
  get$top: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.top);
  },
  close$0: function() {
    return this._window.close();
  }
};

$$._LocationWrapper = {"": "Object;_ptr",
  get$pathname: function() {
    return $._LocationWrapper__get(this._ptr, "pathname");
  },
  toString$0: function() {
    return this._ptr.toString();
  },
  $isLocation: function() {
    return true;
  },
  $asLocation: function() {
    return null;
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._length;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(2, t1, nextPosition);
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, t1, nextPosition);
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, nextPosition) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.$$add$n(t1, 1);
        t1 = this._length;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && $.$$lt$n(nextPosition, t1) === true)
          switch (state0) {
            case 0:
              t1 = this._array;
            case 3:
              state0 = 0;
              this._current = $.$$index$as(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$.FilteredElementList = {"": "Object;_node,_childNodes",
  get$_filtered: function() {
    return $.List_List$from(this._childNodes.where$1(new $.FilteredElementList__filtered_anon()));
  },
  forEach$1: function(f) {
    $.forEach$1$a(this.get$_filtered(), f);
  },
  $indexSet: function(index, value) {
    var t1 = this.get$_filtered();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$indexSet$bailout(1, index, value, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1[index].replaceWith$1(value);
  },
  $$indexSet$bailout: function(state0, index, value, t1) {
    $.$$index$as(t1, index).replaceWith$1(value);
  },
  join$1: function(separator) {
    return $.join$1$a(this.get$_filtered(), separator);
  },
  add$1: function(value) {
    this._childNodes.add$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.get$iterator$a(iterable), t2 = this._childNodes; t1.moveNext$0() === true;)
      t2.add$1(t1.get$current());
  },
  contains$1: function(element) {
    return typeof element === "object" && element !== null && element.$isElement() && this._childNodes.contains$1(element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  clear$0: function() {
    this._childNodes.clear$0();
  },
  removeLast$0: function() {
    var result = this.get$last();
    if (result != null)
      result.remove$0();
    return result;
  },
  map$1: function(f) {
    return $.map$1$a(this.get$_filtered(), f);
  },
  where$1: function(f) {
    return $.where$1$a(this.get$_filtered(), f);
  },
  removeAt$1: function(index) {
    var result = $.$$index$as(this.get$_filtered(), index);
    result.remove$0();
    return result;
  },
  remove$1: function(element) {
    var i, t1, indexElement;
    if (!(typeof element === "object" && element !== null && element.$isElement()))
      return;
    i = 0;
    while (true) {
      t1 = this.get$length();
      if (typeof t1 !== "number")
        return this.remove$1$bailout(1, element, t1, i);
      if (!(i < t1))
        break;
      t1 = this.get$_filtered();
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.remove$1$bailout(2, element, t1, i);
      if (i >= t1.length)
        throw $.ioore(i);
      indexElement = t1[i];
      if (indexElement === element) {
        indexElement.remove$0();
        return;
      }
      ++i;
    }
  },
  remove$1$bailout: function(state0, element, t1, i) {
    switch (state0) {
      case 0:
        if (!(typeof element === "object" && element !== null && element.$isElement()))
          return;
        i = 0;
      default:
        var indexElement;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this.get$length();
              case 1:
                state0 = 0;
                if (!$.CONSTANT4.$lt(i, t1))
                  break L0;
                t1 = this.get$_filtered();
              case 2:
                state0 = 0;
                indexElement = $.$$index$as(t1, i);
                if (indexElement === element) {
                  indexElement.remove$0();
                  return;
                }
                ++i;
            }
    }
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  elementAt$1: function(index) {
    return $.$$index$as(this.get$_filtered(), index);
  },
  get$isEmpty: function() {
    return $.get$isEmpty$as(this.get$_filtered());
  },
  get$length: function() {
    return $.get$length$as(this.get$_filtered());
  },
  $index: function(index) {
    var t1 = this.get$_filtered();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index$as(t1, index);
  },
  get$iterator: function() {
    return $.get$iterator$a(this.get$_filtered());
  },
  indexOf$2: function(element, start) {
    return $.indexOf$2$as(this.get$_filtered(), element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    return $.get$last$a(this.get$_filtered());
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [null]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$.JsonListener = {"": "Object;",
  handleString$1: function(value) {
  },
  handleNumber$1: function(value) {
  },
  handleBool$1: function(value) {
  },
  handleNull$0: function() {
  },
  beginObject$0: function() {
  },
  propertyName$0: function() {
  },
  propertyValue$0: function() {
  },
  endObject$0: function() {
  },
  beginArray$0: function() {
  },
  arrayElement$0: function() {
  },
  endArray$0: function() {
  },
  fail$3: function(source, position, message) {
  }
};

$$.BuildJsonListener = {"": "JsonListener;stack,currentContainer,key,value=",
  popContainer$0: function() {
    var t1, t2;
    this.value = this.currentContainer;
    t1 = this.stack;
    if (0 >= t1.length)
      throw $.ioore(0);
    this.currentContainer = t1.pop();
    t2 = this.currentContainer;
    if (typeof t2 === "object" && t2 !== null && !!t2.$isMap) {
      if (0 >= t1.length)
        throw $.ioore(0);
      this.key = t1.pop();
    }
  },
  handleString$1: function(value) {
    this.value = value;
  },
  handleNumber$1: function(value) {
    this.value = value;
  },
  handleBool$1: function(value) {
    this.value = value;
  },
  handleNull$0: function() {
    this.value = this.value;
  },
  beginObject$0: function() {
    var t1 = this.currentContainer;
    if (typeof t1 === "object" && t1 !== null && !!t1.$isMap)
      this.stack.push(this.key);
    this.stack.push(this.currentContainer);
    this.currentContainer = $.makeLiteralMap([]);
  },
  propertyName$0: function() {
    this.key = this.value;
    this.value = null;
  },
  propertyValue$0: function() {
    $.$$indexSet$a(this.currentContainer, this.key, this.value);
    this.value = null;
    this.key = null;
  },
  endObject$0: function() {
    this.popContainer$0();
  },
  beginArray$0: function() {
    var t1 = this.currentContainer;
    if (typeof t1 === "object" && t1 !== null && !!t1.$isMap)
      this.stack.push(this.key);
    this.stack.push(this.currentContainer);
    this.currentContainer = [];
  },
  arrayElement$0: function() {
    $.add$1$a(this.currentContainer, this.value);
    this.value = null;
  },
  endArray$0: function() {
    this.popContainer$0();
  },
  get$result: function() {
    return this.value;
  }
};

$$.ReviverJsonListener = {"": "BuildJsonListener;reviver,stack,currentContainer,key,value",
  reviver$2: function(arg0, arg1) {
    return this.reviver.call$2(arg0, arg1);
  },
  arrayElement$0: function() {
    this.value = this.reviver$2($.get$length$as(this.currentContainer), this.value);
    $.BuildJsonListener.prototype.arrayElement$0.call(this);
  },
  propertyValue$0: function() {
    this.value = this.reviver$2(this.key, this.value);
    $.BuildJsonListener.prototype.propertyValue$0.call(this);
  },
  get$result: function() {
    return this.reviver$2("", this.value);
  }
};

$$.JsonParser = {"": "Object;source>,listener>",
  parse$0: function() {
    var states, t1, $length, t2, t3, state, position, t4, $char, position0;
    states = [];
    t1 = this.source;
    $length = $.get$length$as(t1);
    for (t2 = $.getInterceptor$s(t1), t3 = this.listener, state = 0, position = 0; t4 = $.getInterceptor$n(position), t4.$lt(position, $length);) {
      $char = t2.charCodeAt$1(t1, position);
      switch ($char) {
        case 32:
        case 13:
        case 10:
        case 9:
          position = t4.$add(position, 1);
          break;
        case 34:
          if ((state & 8) !== 0)
            this.fail$1(position);
          position0 = this.parseString$1(t4.$add(position, 1));
          state = (state | 28) >>> 0;
          position = position0;
          break;
        case 91:
          if ((state & 4) !== 0)
            this.fail$1(position);
          t3.beginArray$0();
          states.push(state);
          position = t4.$add(position, 1);
          state = 1;
          break;
        case 123:
          if ((state & 4) !== 0)
            this.fail$1(position);
          t3.beginObject$0();
          states.push(state);
          position = t4.$add(position, 1);
          state = 6;
          break;
        case 110:
          if ((state & 4) !== 0)
            this.fail$1(position);
          position = this.parseNull$1(position);
          state = (state | 28) >>> 0;
          break;
        case 102:
          if ((state & 4) !== 0)
            this.fail$1(position);
          position = this.parseFalse$1(position);
          state = (state | 28) >>> 0;
          break;
        case 116:
          if ((state & 4) !== 0)
            this.fail$1(position);
          position = this.parseTrue$1(position);
          state = (state | 28) >>> 0;
          break;
        case 58:
          if (state !== 30)
            this.fail$1(position);
          t3.propertyName$0();
          position = t4.$add(position, 1);
          state = 19;
          break;
        case 44:
          if (state === 31) {
            t3.propertyValue$0();
            position = t4.$add(position, 1);
            state = 22;
          } else if (state === 29) {
            t3.arrayElement$0();
            position = t4.$add(position, 1);
            state = 17;
          } else
            this.fail$1(position);
          break;
        case 93:
          if (state === 1)
            t3.endArray$0();
          else if (state === 29) {
            t3.arrayElement$0();
            t3.endArray$0();
          } else
            this.fail$1(position);
          if (0 >= states.length)
            throw $.ioore(0);
          state = $.$$or$n(states.pop(), 28);
          position = t4.$add(position, 1);
          break;
        case 125:
          if (state === 6)
            t3.endObject$0();
          else if (state === 31) {
            t3.propertyValue$0();
            t3.endObject$0();
          } else
            this.fail$1(position);
          if (0 >= states.length)
            throw $.ioore(0);
          state = $.$$or$n(states.pop(), 28);
          position = t4.$add(position, 1);
          break;
        default:
          if ((state & 4) !== 0)
            this.fail$1(position);
          position = this.parseNumber$2($char, position);
          state = (state | 28) >>> 0;
          break;
      }
    }
    if (state !== 28)
      this.fail$1(position);
  },
  parseTrue$1: function(position) {
    var t1, t2, t4;
    if (typeof position !== "number")
      return this.parseTrue$1$bailout(1, position);
    t1 = this.source;
    t2 = $.get$length$as(t1);
    t4 = position + 4;
    if (typeof t2 !== "number")
      return this.parseTrue$1$bailout(2, position, t1, t2);
    if (t2 < t4)
      this.fail$2(position, "Unexpected identifier");
    t2 = $.getInterceptor$s(t1);
    if (t2.charCodeAt$1(t1, position + 1) !== 114 || t2.charCodeAt$1(t1, position + 2) !== 117 || t2.charCodeAt$1(t1, position + 3) !== 101)
      this.fail$1(position);
    this.listener.handleBool$1(true);
    return t4;
  },
  parseTrue$1$bailout: function(state0, position, t1, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.get$length$as(t1);
      case 2:
        var t4;
        state0 = 0;
        t4 = $.getInterceptor$n(position);
        if ($.$$lt$n(t2, t4.$add(position, 4)) === true)
          this.fail$2(position, "Unexpected identifier");
        t2 = $.getInterceptor$s(t1);
        if (t2.charCodeAt$1(t1, t4.$add(position, 1)) !== 114 || t2.charCodeAt$1(t1, t4.$add(position, 2)) !== 117 || t2.charCodeAt$1(t1, t4.$add(position, 3)) !== 101)
          this.fail$1(position);
        this.listener.handleBool$1(true);
        return t4.$add(position, 4);
    }
  },
  parseFalse$1: function(position) {
    var t1, t2, t4;
    if (typeof position !== "number")
      return this.parseFalse$1$bailout(1, position);
    t1 = this.source;
    t2 = $.get$length$as(t1);
    t4 = position + 5;
    if (typeof t2 !== "number")
      return this.parseFalse$1$bailout(2, position, t1, t2);
    if (t2 < t4)
      this.fail$2(position, "Unexpected identifier");
    t2 = $.getInterceptor$s(t1);
    if (t2.charCodeAt$1(t1, position + 1) !== 97 || t2.charCodeAt$1(t1, position + 2) !== 108 || t2.charCodeAt$1(t1, position + 3) !== 115 || t2.charCodeAt$1(t1, position + 4) !== 101)
      this.fail$1(position);
    this.listener.handleBool$1(false);
    return t4;
  },
  parseFalse$1$bailout: function(state0, position, t1, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.get$length$as(t1);
      case 2:
        var t4;
        state0 = 0;
        t4 = $.getInterceptor$n(position);
        if ($.$$lt$n(t2, t4.$add(position, 5)) === true)
          this.fail$2(position, "Unexpected identifier");
        t2 = $.getInterceptor$s(t1);
        if (t2.charCodeAt$1(t1, t4.$add(position, 1)) !== 97 || t2.charCodeAt$1(t1, t4.$add(position, 2)) !== 108 || t2.charCodeAt$1(t1, t4.$add(position, 3)) !== 115 || t2.charCodeAt$1(t1, t4.$add(position, 4)) !== 101)
          this.fail$1(position);
        this.listener.handleBool$1(false);
        return t4.$add(position, 5);
    }
  },
  parseNull$1: function(position) {
    var t1, t2, t4;
    if (typeof position !== "number")
      return this.parseNull$1$bailout(1, position);
    t1 = this.source;
    t2 = $.get$length$as(t1);
    t4 = position + 4;
    if (typeof t2 !== "number")
      return this.parseNull$1$bailout(2, position, t1, t2);
    if (t2 < t4)
      this.fail$2(position, "Unexpected identifier");
    t2 = $.getInterceptor$s(t1);
    if (t2.charCodeAt$1(t1, position + 1) !== 117 || t2.charCodeAt$1(t1, position + 2) !== 108 || t2.charCodeAt$1(t1, position + 3) !== 108)
      this.fail$1(position);
    this.listener.handleNull$0();
    return t4;
  },
  parseNull$1$bailout: function(state0, position, t1, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.get$length$as(t1);
      case 2:
        var t4;
        state0 = 0;
        t4 = $.getInterceptor$n(position);
        if ($.$$lt$n(t2, t4.$add(position, 4)) === true)
          this.fail$2(position, "Unexpected identifier");
        t2 = $.getInterceptor$s(t1);
        if (t2.charCodeAt$1(t1, t4.$add(position, 1)) !== 117 || t2.charCodeAt$1(t1, t4.$add(position, 2)) !== 108 || t2.charCodeAt$1(t1, t4.$add(position, 3)) !== 108)
          this.fail$1(position);
        this.listener.handleNull$0();
        return t4.$add(position, 4);
    }
  },
  parseString$1: function(position) {
    var t1, t2, t3, t4, position0, $char, firstEscape, chars, hexStart, value, i, value0, char0, result;
    t1 = this.source;
    t2 = $.getInterceptor$s(t1);
    t3 = position - 1;
    t4 = $.getInterceptor$as(t1);
    position0 = position;
    do {
      if (position0 === t4.get$length(t1))
        this.fail$2(t3, "Unterminated string");
      $char = t2.charCodeAt$1(t1, position0);
      if ($char === 34) {
        this.listener.handleString$1(t2.substring$2(t1, position, position0));
        return position0 + 1;
      }
      if ($char < 32)
        this.fail$2(position0, "Control character in string");
      ++position0;
    } while ($char !== 92);
    firstEscape = position0 - 1;
    chars = [];
    for (; true;) {
      if (position0 === t4.get$length(t1))
        this.fail$2(t3, "Unterminated string");
      $char = t2.charCodeAt$1(t1, position0);
      switch ($char) {
        case 98:
          $char = 8;
          break;
        case 102:
          $char = 12;
          break;
        case 110:
          $char = 10;
          break;
        case 114:
          $char = 13;
          break;
        case 116:
          $char = 9;
          break;
        case 47:
        case 92:
        case 34:
          break;
        case 117:
          hexStart = position0 - 1;
          for (value = 0, i = 0; i < 4; ++i) {
            ++position0;
            if (position0 === t4.get$length(t1))
              this.fail$2(t3, "Unterminated string");
            $char = t2.charCodeAt$1(t1, position0) - 48;
            if ($char < 0)
              this.fail$2(hexStart, "Invalid unicode escape");
            if ($char < 10) {
              value0 = value * 16 + $char;
              value = value0;
            } else {
              char0 = (($char | 32) >>> 0) - 49;
              if (char0 < 0 || char0 > 5)
                this.fail$2(hexStart, "Invalid unicode escape");
              value0 = value * 16 + char0 + 10;
              value = value0;
            }
          }
          $char = value;
          break;
        default:
          if ($char < 32)
            this.fail$2(position0, "Control character in string");
          this.fail$2(position0, "Unrecognized string escape");
      }
      do {
        chars.push($char);
        ++position0;
        if (position0 === t4.get$length(t1))
          this.fail$2(t3, "Unterminated string");
        $char = t2.charCodeAt$1(t1, position0);
        if ($char === 34) {
          result = $.String_String$fromCharCodes(chars);
          if (position < firstEscape)
            result = t2.substring$2(t1, position, firstEscape) + $.S(result);
          this.listener.handleString$1(result);
          return position0 + 1;
        }
        if ($char < 32)
          this.fail$2(position0, "Control character in string");
      } while ($char !== 92);
      ++position0;
    }
  },
  parseNumber$2: function($char, position) {
    var t1, t2, $length, position0, t3, t4;
    t1 = {};
    if (typeof position !== "number")
      return this.parseNumber$2$bailout(1, $char, position, t1);
    t2 = this.source;
    $length = $.get$length$as(t2);
    t1.isDouble_0 = false;
    if ($char === 45) {
      position0 = position + 1;
      if (position0 === $length)
        this.fail$2(position0, "Missing expected digit");
      $char = $.charCodeAt$1$s(t2, position0);
    } else
      position0 = position;
    if ($char < 48 || $char > 57)
      this.fail$2(position0, "Missing expected digit");
    t3 = new $.JsonParser_parseNumber_handleLiteral(t1, this, position);
    if ($char === 48) {
      position = position0 + 1;
      if (position === $length)
        return t3.call$1(position);
      $char = $.charCodeAt$1$s(t2, position);
      if (48 <= $char && $char <= 57)
        this.fail$1(position);
    } else {
      t4 = $.getInterceptor$s(t2);
      position = position0;
      do {
        ++position;
        if (position === $length)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 46) {
      t1.isDouble_0 = true;
      ++position;
      if (position === $length)
        this.fail$2(position, "Missing expected digit");
      t4 = $.getInterceptor$s(t2);
      $char = t4.charCodeAt$1(t2, position);
      if ($char < 48 || $char > 57)
        this.fail$1(position);
      do {
        ++position;
        if (position === $length)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 101 || $char === 69) {
      t1.isDouble_0 = true;
      ++position;
      if (position === $length)
        this.fail$2(position, "Missing expected digit");
      t1 = $.getInterceptor$s(t2);
      $char = t1.charCodeAt$1(t2, position);
      if ($char === 43 || $char === 45) {
        ++position;
        if (position === $length)
          this.fail$2(position, "Missing expected digit");
        $char = t1.charCodeAt$1(t2, position);
      }
      if ($char < 48 || $char > 57)
        this.fail$2(position, "Missing expected digit");
      do {
        ++position;
        if (position === $length)
          return t3.call$1(position);
        $char = t1.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    return t3.call$1(position);
  },
  parseNumber$2$bailout: function(state0, $char, position, t1) {
    var t2, $length, position0, t3, t4;
    t2 = this.source;
    $length = $.get$length$as(t2);
    t1.isDouble_0 = false;
    if ($char === 45) {
      position0 = $.$$add$n(position, 1);
      if ($.$$eq$o(position0, $length) === true)
        this.fail$2(position0, "Missing expected digit");
      $char = $.charCodeAt$1$s(t2, position0);
    } else
      position0 = position;
    if ($char < 48 || $char > 57)
      this.fail$2(position0, "Missing expected digit");
    t3 = new $.JsonParser_parseNumber_handleLiteral(t1, this, position);
    if ($char === 48) {
      position = $.$$add$n(position0, 1);
      if ($.$$eq$o(position, $length) === true)
        return t3.call$1(position);
      $char = $.charCodeAt$1$s(t2, position);
      if (48 <= $char && $char <= 57)
        this.fail$1(position);
    } else {
      t4 = $.getInterceptor$s(t2);
      position = position0;
      do {
        position = $.$$add$n(position, 1);
        if ($.$$eq$o(position, $length) === true)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 46) {
      t1.isDouble_0 = true;
      position = $.$$add$n(position, 1);
      if ($.$$eq$o(position, $length) === true)
        this.fail$2(position, "Missing expected digit");
      t4 = $.getInterceptor$s(t2);
      $char = t4.charCodeAt$1(t2, position);
      if ($char < 48 || $char > 57)
        this.fail$1(position);
      do {
        position = $.$$add$n(position, 1);
        if ($.$$eq$o(position, $length) === true)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 101 || $char === 69) {
      t1.isDouble_0 = true;
      position = $.$$add$n(position, 1);
      t1 = $.getInterceptor(position);
      if (t1.$eq(position, $length) === true)
        this.fail$2(position, "Missing expected digit");
      t4 = $.getInterceptor$s(t2);
      $char = t4.charCodeAt$1(t2, position);
      if ($char === 43 || $char === 45) {
        position = t1.$add(position, 1);
        if ($.$$eq$o(position, $length) === true)
          this.fail$2(position, "Missing expected digit");
        $char = t4.charCodeAt$1(t2, position);
      }
      if ($char < 48 || $char > 57)
        this.fail$2(position, "Missing expected digit");
      do {
        position = $.$$add$n(position, 1);
        if ($.$$eq$o(position, $length) === true)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    return t3.call$1(position);
  },
  fail$2: function(position, message) {
    var t1, t2, sliceEnd, t4, slice;
    if (typeof position !== "number")
      return this.fail$2$bailout(1, position, message);
    if (typeof message !== "string")
      return this.fail$2$bailout(1, position, message);
    t1 = this.listener;
    t2 = this.source;
    t1.fail$3(t2, position, message);
    sliceEnd = position + 20;
    t1 = $.get$length$as(t2);
    if (typeof t1 !== "number")
      return this.fail$2$bailout(2, position, 0, t2, sliceEnd, t1);
    t4 = $.getInterceptor$s(t2);
    slice = sliceEnd > t1 ? "'" + t4.substring$1(t2, position) + "'" : "'" + t4.substring$2(t2, position, sliceEnd) + "...'";
    throw $.$$throw($.FormatException$("Unexpected character at " + $.S(position) + ": " + slice));
  },
  fail$2$bailout: function(state0, position, message, t2, sliceEnd, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if (message == null)
          message = "Unexpected character";
        t1 = this.listener;
        t2 = this.source;
        t1.fail$3(t2, position, message);
        sliceEnd = $.$$add$n(position, 20);
        t1 = $.get$length$as(t2);
      case 2:
        var t4, slice;
        state0 = 0;
        t4 = $.getInterceptor$s(t2);
        slice = $.$$gt$n(sliceEnd, t1) === true ? "'" + t4.substring$1(t2, position) + "'" : "'" + t4.substring$2(t2, position, sliceEnd) + "...'";
        throw $.$$throw($.FormatException$("Unexpected character at " + $.S(position) + ": " + slice));
    }
  },
  fail$1: function(position) {
    return this.fail$2(position, null);
  }
};

$$._AttributeClassSet = {"": "CssClassSet;_liblib5$_element",
  readClasses$0: function() {
    var classname, s, t1, trimmed;
    classname = this._liblib5$_element.get$attributes().$index("class");
    s = $.LinkedHashSet$();
    if (classname == null)
      return s;
    for (t1 = $.CONSTANT1.get$iterator($.split$1$s(classname, " ")); t1.moveNext$0();) {
      trimmed = $.trim$0$s(t1.get$current());
      if ($.CONSTANT0.get$isEmpty(trimmed) !== true)
        s.add$1(trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    this._liblib5$_element.get$attributes().$indexSet("class", $.join$1$a(s, " "));
  }
};

$$.DelayedCall = {"": "Object;_liblib2$_action,_currentTime,_totalTime,_repeatCount",
  _liblib2$_action$0: function() {
    return this._liblib2$_action.call$0();
  },
  advanceTime$1: function(time) {
    var t1, newTime;
    t1 = this._currentTime;
    if (typeof t1 !== "number")
      return this.advanceTime$1$bailout(1, time, t1);
    newTime = t1 + time;
    while (true) {
      t1 = this._totalTime;
      if (!(newTime >= t1 && this._repeatCount > 0))
        break;
      this._currentTime = t1;
      this._repeatCount = this._repeatCount - 1;
      this._liblib2$_action$0();
      newTime -= this._totalTime;
    }
    this._currentTime = newTime;
    return this._repeatCount > 0;
  },
  advanceTime$1$bailout: function(state0, time, t1) {
    var newTime = $.$$add$n(t1, time);
    while (true) {
      t1 = $.getInterceptor$n(newTime);
      if (!(t1.$ge(newTime, this._totalTime) === true && this._repeatCount > 0))
        break;
      this._currentTime = this._totalTime;
      this._repeatCount = this._repeatCount - 1;
      this._liblib2$_action$0();
      newTime = t1.$sub(newTime, this._totalTime);
    }
    this._currentTime = newTime;
    return this._repeatCount > 0;
  },
  get$currentTime: function() {
    return this._currentTime;
  },
  DelayedCall$2: function(action, delay) {
    this._totalTime = $.max(delay, 0.0001);
  },
  $isAnimatable: true
};

$$.Juggler = {"": "Object;_animatables,_animatablesCount,_elapsedTime",
  add$1: function(animatable) {
    var t1, t2, t4;
    if (animatable == null)
      return;
    t1 = this._animatablesCount;
    t2 = this._animatables;
    if (typeof t2 !== "object" || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.$isJavaScriptIndexingBehavior())
      return this.add$1$bailout(1, animatable, t1, t2);
    t4 = t2.length;
    if (t1 === t4)
      $.CONSTANT1.add$1(t2, animatable);
    else {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      t2[t1] = animatable;
    }
    this._animatablesCount = this._animatablesCount + 1;
  },
  add$1$bailout: function(state0, animatable, t1, t2) {
    if (t1 === t2.length)
      $.CONSTANT1.add$1(t2, animatable);
    else
      $.CONSTANT1.$indexSet(t2, t1, animatable);
    this._animatablesCount = this._animatablesCount + 1;
  },
  remove$1: function(animatable) {
    var t1, i;
    if (animatable == null)
      return;
    t1 = this._animatables;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.remove$1$bailout(1, animatable, t1);
    i = 0;
    for (; i < this._animatablesCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq$o(t1[i], animatable) === true) {
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i] = null;
        break;
      }
    }
  },
  remove$1$bailout: function(state0, animatable, t1) {
    var i = 0;
    for (; i < this._animatablesCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq$o(t1[i], animatable) === true) {
        $.CONSTANT1.$indexSet(t1, i, null);
        break;
      }
    }
  },
  removeTweens$1: function(displayObject) {
    var t1, i, animatable;
    if (displayObject == null)
      return;
    t1 = this._animatables;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.removeTweens$1$bailout(1, displayObject, t1);
    i = 0;
    for (; i < this._animatablesCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      animatable = t1[i];
      if (animatable != null && typeof animatable === "object" && animatable !== null && !!animatable.$isTween)
        if ($.$$eq$o(animatable.get$displayObject(), displayObject) === true) {
          if (i >= t1.length)
            throw $.ioore(i);
          t1[i] = null;
        }
    }
  },
  removeTweens$1$bailout: function(state0, displayObject, t1) {
    var i, animatable;
    i = 0;
    for (; i < this._animatablesCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      animatable = t1[i];
      if (animatable != null && typeof animatable === "object" && animatable !== null && !!animatable.$isTween)
        if ($.$$eq$o(animatable.get$displayObject(), displayObject) === true)
          $.CONSTANT1.$indexSet(t1, i, null);
    }
  },
  delayCall$2: function(action, delay) {
    var delayedCall = $.DelayedCall$(action, delay);
    this.add$1(delayedCall);
    return delayedCall;
  },
  advanceTime$1: function(time) {
    var animatablesCount, t1, tail, head, animatable, t2, tail0, t3;
    this._elapsedTime = this._elapsedTime + time;
    animatablesCount = this._animatablesCount;
    if (animatablesCount !== (animatablesCount | 0))
      return this.advanceTime$1$bailout(1, time, animatablesCount);
    t1 = this._animatables;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.advanceTime$1$bailout(2, time, animatablesCount, t1);
    tail = 0;
    head = 0;
    for (; head < animatablesCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      animatable = t1[head];
      if (animatable == null)
        continue;
      t2 = animatable.advanceTime$1(time);
      if (typeof t2 !== "boolean")
        return this.advanceTime$1$bailout(3, time, animatablesCount, t1, animatable, tail, head, t2);
      if (!t2) {
        if (head >= t1.length)
          throw $.ioore(head);
        t1[head] = null;
        continue;
      }
      if (tail !== head) {
        t2 = t1.length;
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = animatable;
        if (head >= t2)
          throw $.ioore(head);
        t1[head] = null;
      }
      ++tail;
    }
    if (tail !== animatablesCount) {
      for (t2 = t1.length, head = animatablesCount; head < this._animatablesCount; ++head, tail = tail0) {
        tail0 = tail + 1;
        if (head < 0 || head >= t2)
          throw $.ioore(head);
        t3 = t1[head];
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = t3;
        t1[head] = null;
      }
      this._animatablesCount = tail;
    }
    return true;
  },
  advanceTime$1$bailout: function(state0, time, animatablesCount, t1, animatable, tail, head, t2) {
    switch (state0) {
      case 0:
        this._elapsedTime = this._elapsedTime + time;
        animatablesCount = this._animatablesCount;
      case 1:
        state0 = 0;
        t1 = this._animatables;
      case 2:
        state0 = 0;
        tail = 0;
        head = 0;
      case 3:
        var tail0;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(head < animatablesCount))
                  break L0;
              case 3:
                c$0: {
                  switch (state0) {
                    case 0:
                      if (head >= t1.length)
                        throw $.ioore(head);
                      animatable = t1[head];
                      if (animatable == null)
                        break c$0;
                      t2 = animatable.advanceTime$1(time);
                    case 3:
                      state0 = 0;
                      if ($.$$eq$o(t2, false) === true) {
                        $.CONSTANT1.$indexSet(t1, head, null);
                        break c$0;
                      }
                      if (tail !== head) {
                        $.CONSTANT1.$indexSet(t1, tail, animatable);
                        $.CONSTANT1.$indexSet(t1, head, null);
                      }
                      ++tail;
                  }
                }
                ++head;
            }
        if (tail !== animatablesCount) {
          for (head = animatablesCount; head < this._animatablesCount; ++head, tail = tail0) {
            tail0 = tail + 1;
            if (head !== (head | 0))
              throw $.iae(head);
            if (head < 0 || head >= t1.length)
              throw $.ioore(head);
            $.CONSTANT1.$indexSet(t1, tail, t1[head]);
            $.CONSTANT1.$indexSet(t1, head, null);
          }
          this._animatablesCount = tail;
        }
        return true;
    }
  },
  $isAnimatable: true
};

$$._TweenProperty = {"": "Object;name>,startValue=,targetValue>"};

$$.Tween = {"": "Object;_displayObject,_transitionFunction,_tweenProperties,_onStart,_onUpdate,_onComplete,_totalTime,_currentTime,_delay,_roundToInt,_started",
  _transitionFunction$1: function(arg0) {
    return this._transitionFunction.call$1(arg0);
  },
  _onStart$0: function() {
    return this._onStart.call$0();
  },
  _onUpdate$0: function() {
    return this._onUpdate.call$0();
  },
  _onComplete$0: function() {
    return this._onComplete.call$0();
  },
  animate$2: function(property, targetValue) {
    var t1 = $.CONSTANT1.indexOf$1(["x", "y", "pivotX", "pivotY", "scaleX", "scaleY", "rotation", "alpha"], property);
    if (typeof t1 !== "number")
      return this.animate$2$bailout(1, property, targetValue, t1);
    if (t1 === -1)
      throw $.$$throw($.ArgumentError$("Error #9003: The supplied property ('" + property + "') is not supported at this time."));
    if (this._displayObject != null && !this._started)
      $.CONSTANT1.add$1(this._tweenProperties, $._TweenProperty$(property, 0, targetValue));
  },
  animate$2$bailout: function(state0, property, targetValue, t1) {
    if ($.$$eq$o(t1, -1) === true)
      throw $.$$throw($.ArgumentError$("Error #9003: The supplied property ('" + property + "') is not supported at this time."));
    if (this._displayObject != null && !this._started)
      $.CONSTANT1.add$1(this._tweenProperties, $._TweenProperty$(property, 0, targetValue));
  },
  moveTo$2: function(x, y) {
    this.animate$2("x", x);
    this.animate$2("y", y);
  },
  advanceTime$1: function(time) {
    var t1, t2, i, tp, transition, t3, t4, value;
    t1 = this._currentTime;
    if (t1 < this._totalTime || !this._started) {
      this._currentTime = t1 + time;
      t1 = this._currentTime;
      t2 = this._totalTime;
      if (t1 > t2)
        this._currentTime = t2;
      if (this._currentTime >= 0) {
        if (!this._started) {
          this._started = true;
          for (t1 = this._displayObject, t2 = this._tweenProperties, i = 0; i < t2.length; ++i) {
            tp = t2[i];
            switch (tp.get$name()) {
              case "x":
                tp.set$startValue(t1.get$x());
                break;
              case "y":
                tp.set$startValue(t1.get$y());
                break;
              case "pivotX":
                tp.set$startValue(t1.get$pivotX());
                break;
              case "pivotY":
                tp.set$startValue(t1.get$pivotY());
                break;
              case "scaleX":
                tp.set$startValue(t1.get$scaleX());
                break;
              case "scaleY":
                tp.set$startValue(t1.get$scaleY());
                break;
              case "rotation":
                tp.set$startValue(t1.get$rotation());
                break;
              case "alpha":
                tp.set$startValue(t1.get$alpha());
                break;
            }
          }
          if (this._onStart != null)
            this._onStart$0();
        }
        transition = this._transitionFunction$1(this._currentTime / this._totalTime);
        for (t1 = this._displayObject, t2 = this._tweenProperties, t3 = $.getInterceptor$n(transition), i = 0; i < t2.length; ++i) {
          tp = t2[i];
          t4 = tp.get$startValue();
          value = $.$$add$n(t4, t3.$mul(transition, $.$$sub$n(tp.get$targetValue(), t4)));
          if (this._roundToInt)
            value = $.round$0$n(value);
          switch (tp.get$name()) {
            case "x":
              t1.set$x(value);
              break;
            case "y":
              t1.set$y(value);
              break;
            case "pivotX":
              t1.set$pivotX(value);
              break;
            case "pivotY":
              t1.set$pivotY(value);
              break;
            case "scaleX":
              t1.set$scaleX(value);
              break;
            case "scaleY":
              t1.set$scaleY(value);
              break;
            case "rotation":
              t1.set$rotation(value);
              break;
            case "alpha":
              t1.set$alpha(value);
              break;
          }
        }
        if (this._onUpdate != null)
          this._onUpdate$0();
        if (this._onComplete != null && this._currentTime === this._totalTime)
          this._onComplete$0();
      }
    }
    return this._currentTime < this._totalTime;
  },
  get$displayObject: function() {
    return this._displayObject;
  },
  get$currentTime: function() {
    return this._currentTime;
  },
  set$delay: function(value) {
    var t1, t2;
    if (!this._started) {
      t1 = this._currentTime;
      t2 = this._delay;
      if (typeof t2 !== "number")
        throw $.iae(t2);
      if (typeof value !== "number")
        throw $.iae(value);
      this._currentTime = t1 + t2 - value;
    }
    this._delay = value;
  },
  set$onComplete: function($function) {
    this._onComplete = $function;
  },
  Tween$3: function(displayObject, time, transitionFunction) {
    this._currentTime = 0;
    this._totalTime = $.max(0.0001, time);
    this._delay = 0;
    this._roundToInt = false;
    this._started = false;
  },
  $isTween: true,
  $isAnimatable: true
};

$$.Point = {"": "Object;x=,y=",
  get$length: function() {
    var t1, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.get$length$bailout(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.get$length$bailout(2, t1, t3);
    return $.sqrt(t1 + t3 * t3);
  },
  get$length$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul$n(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        return $.sqrt($.$$add$n(t1, $.$$mul$n(t3, t3)));
    }
  },
  add$1: function(p) {
    var t1, t3, t6;
    t1 = this.x;
    t3 = p.get$x();
    if (typeof t1 !== "number")
      return this.add$1$bailout(1, p, t1);
    if (typeof t3 !== "number")
      return this.add$1$bailout(2, p, t1, t3);
    t3 = t1 + t3;
    t1 = this.y;
    t6 = p.get$y();
    if (typeof t1 !== "number")
      return this.add$1$bailout(3, p, t1, t3);
    if (typeof t6 !== "number")
      return this.add$1$bailout(4, 0, t1, t3, t6);
    return $.Point$(t3, t1 + t6);
  },
  add$1$bailout: function(state0, p, t1, t3, t6) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = p.get$x();
      case 2:
        state0 = 0;
        t3 = $.$$add$n(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t6 = p.get$y();
      case 4:
        state0 = 0;
        return $.Point$(t3, $.$$add$n(t1, t6));
    }
  },
  copyFrom$1: function(p) {
    this.x = p.get$x();
    this.y = p.get$y();
  },
  equals$1: function(p) {
    return $.$$eq$o(this.x, p.x) === true && $.$$eq$o(this.y, p.y) === true;
  }
};

$$.Rectangle = {"": "Object;x=,y=,width=,height=",
  get$left: function() {
    return this.x;
  },
  get$top: function() {
    return this.y;
  },
  get$right: function() {
    var t1, t3;
    t1 = this.x;
    t3 = this.width;
    if (typeof t1 !== "number")
      return this.get$right$bailout(1, t1);
    if (typeof t3 !== "number")
      return this.get$right$bailout(2, t1, t3);
    return t1 + t3;
  },
  get$right$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = this.width;
      case 2:
        state0 = 0;
        return $.$$add$n(t1, t3);
    }
  },
  get$bottom: function() {
    var t1, t3;
    t1 = this.y;
    t3 = this.height;
    if (typeof t1 !== "number")
      return this.get$bottom$bailout(1, t1);
    if (typeof t3 !== "number")
      return this.get$bottom$bailout(2, t1, t3);
    return t1 + t3;
  },
  get$bottom$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.y;
      case 1:
        state0 = 0;
        t3 = this.height;
      case 2:
        state0 = 0;
        return $.$$add$n(t1, t3);
    }
  },
  get$size: function() {
    return $.Point$(this.width, this.height);
  },
  set$top: function(value) {
    this.y = value;
  },
  contains$2: function(px, py) {
    return $.$$le$n(this.x, px) === true && $.$$le$n(this.y, py) === true && $.$$ge$n(this.get$right(), px) === true && $.$$ge$n(this.get$bottom(), py) === true;
  },
  get$contains: function() {
    return new $.BoundClosure$2(this, "contains$2");
  },
  equals$1: function(r) {
    return $.$$eq$o(this.x, r.x) === true && $.$$eq$o(this.y, r.y) === true && $.$$eq$o(this.width, r.get$width()) === true && $.$$eq$o(this.height, r.get$height()) === true;
  },
  get$isEmpty: function() {
    var t1 = this.width;
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    if (t1 === 0) {
      t1 = this.height;
      if (typeof t1 !== "number")
        return this.get$isEmpty$bailout(2, t1);
      t1 = t1 === 0;
    } else
      t1 = false;
    return t1;
  },
  get$isEmpty$bailout: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = this.width;
      case 1:
        state0 = 0;
      case 2:
        var t3;
        if (state0 === 2 || state0 === 0 && $.$$eq$o(t1, 0) === true)
          switch (state0) {
            case 0:
              t1 = this.height;
            case 2:
              state0 = 0;
              t3 = $.$$eq$o(t1, 0) === true;
              t1 = t3;
          }
        else
          t1 = false;
        return t1;
    }
  },
  copyFrom$1: function(r) {
    this.x = r.get$x();
    this.y = r.get$y();
    this.width = r.get$width();
    this.height = r.get$height();
  },
  union$1: function(rect) {
    var rLeft, rTop, rRight;
    rLeft = $.min(this.get$left(), rect.get$left());
    rTop = $.min(this.get$top(), rect.get$top());
    rRight = $.max(this.get$right(), rect.get$right());
    return $.Rectangle$(rLeft, rRight, rRight - rLeft, $.max(this.get$bottom(), rect.get$bottom()) - rTop);
  }
};

$$.Circle = {"": "Object;x=,y=,radius>"};

$$.Matrix = {"": "Object;_a,_b,_c,_d,_tx,_ty,_det",
  get$a: function() {
    return this._a;
  },
  get$b: function() {
    return this._b;
  },
  get$c: function() {
    return this._c;
  },
  get$d: function() {
    return this._d;
  },
  get$tx: function() {
    return this._tx;
  },
  get$ty: function() {
    return this._ty;
  },
  get$det: function() {
    return this._det;
  },
  transformPoint$1: function(p) {
    return $.Point$($.$$add$n($.$$add$n($.$$mul$n(p.x, this._a), $.$$mul$n(p.y, this._c)), this._tx), $.$$add$n($.$$add$n($.$$mul$n(p.x, this._b), $.$$mul$n(p.y, this._d)), this._ty));
  },
  concat$1: function(matrix) {
    var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
    a1 = this._a;
    if (typeof a1 !== "number")
      return this.concat$1$bailout(1, matrix, a1);
    b1 = this._b;
    if (typeof b1 !== "number")
      return this.concat$1$bailout(2, matrix, a1, b1);
    c1 = this._c;
    if (typeof c1 !== "number")
      return this.concat$1$bailout(3, matrix, a1, b1, c1);
    d1 = this._d;
    if (typeof d1 !== "number")
      return this.concat$1$bailout(4, matrix, a1, b1, c1, d1);
    tx1 = this._tx;
    if (typeof tx1 !== "number")
      return this.concat$1$bailout(5, matrix, a1, b1, c1, d1, tx1);
    ty1 = this._ty;
    if (typeof ty1 !== "number")
      return this.concat$1$bailout(6, matrix, a1, b1, c1, d1, tx1, ty1);
    det1 = this._det;
    a2 = matrix.get$a();
    if (typeof a2 !== "number")
      return this.concat$1$bailout(8, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2);
    b2 = matrix.get$b();
    if (typeof b2 !== "number")
      return this.concat$1$bailout(9, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2);
    c2 = matrix.get$c();
    if (typeof c2 !== "number")
      return this.concat$1$bailout(10, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2);
    d2 = matrix.get$d();
    if (typeof d2 !== "number")
      return this.concat$1$bailout(11, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2);
    tx2 = matrix.get$tx();
    ty2 = matrix.get$ty();
    det2 = matrix.get$det();
    this._a = a1 * a2 + b1 * c2;
    this._b = a1 * b2 + b1 * d2;
    this._c = c1 * a2 + d1 * c2;
    this._d = c1 * b2 + d1 * d2;
    if (typeof tx2 !== "number")
      return this.concat$1$bailout(12, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2);
    this._tx = tx1 * a2 + ty1 * c2 + tx2;
    if (typeof ty2 !== "number")
      return this.concat$1$bailout(13, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2);
    this._ty = tx1 * b2 + ty1 * d2 + ty2;
    if (typeof det1 !== "number")
      return this.concat$1$bailout(7, matrix, a1, b1, c1, d1, tx1, ty1, det1);
    if (typeof det2 !== "number")
      return this.concat$1$bailout(14, 0, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2);
    this._det = det1 * det2;
  },
  concat$1$bailout: function(state0, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2) {
    switch (state0) {
      case 0:
        a1 = this._a;
      case 1:
        state0 = 0;
        b1 = this._b;
      case 2:
        state0 = 0;
        c1 = this._c;
      case 3:
        state0 = 0;
        d1 = this._d;
      case 4:
        state0 = 0;
        tx1 = this._tx;
      case 5:
        state0 = 0;
        ty1 = this._ty;
      case 6:
        state0 = 0;
        det1 = this._det;
      case 7:
        state0 = 0;
        a2 = matrix.get$a();
      case 8:
        state0 = 0;
        b2 = matrix.get$b();
      case 9:
        state0 = 0;
        c2 = matrix.get$c();
      case 10:
        state0 = 0;
        d2 = matrix.get$d();
      case 11:
        state0 = 0;
        tx2 = matrix.get$tx();
      case 12:
        state0 = 0;
        ty2 = matrix.get$ty();
      case 13:
        state0 = 0;
        det2 = matrix.get$det();
      case 14:
        var t15, t16, t17, t18, t19, t20;
        state0 = 0;
        t15 = $.getInterceptor$n(a1);
        t16 = $.getInterceptor$n(b1);
        this._a = $.$$add$n(t15.$mul(a1, a2), t16.$mul(b1, c2));
        this._b = $.$$add$n(t15.$mul(a1, b2), t16.$mul(b1, d2));
        t17 = $.getInterceptor$n(c1);
        t18 = $.getInterceptor$n(d1);
        this._c = $.$$add$n(t17.$mul(c1, a2), t18.$mul(d1, c2));
        this._d = $.$$add$n(t17.$mul(c1, b2), t18.$mul(d1, d2));
        t19 = $.getInterceptor$n(tx1);
        t20 = $.getInterceptor$n(ty1);
        this._tx = $.$$add$n($.$$add$n(t19.$mul(tx1, a2), t20.$mul(ty1, c2)), tx2);
        this._ty = $.$$add$n($.$$add$n(t19.$mul(tx1, b2), t20.$mul(ty1, d2)), ty2);
        this._det = $.$$mul$n(det1, det2);
    }
  },
  identity$0: function() {
    this._a = 1;
    this._b = 0;
    this._c = 0;
    this._d = 1;
    this._tx = 0;
    this._ty = 0;
    this._det = 1;
  },
  invert$0: function() {
    var a, b, c, d, tx, ty, det;
    a = this._a;
    b = this._b;
    c = this._c;
    d = this._d;
    tx = this._tx;
    ty = this._ty;
    det = this._det;
    this._a = $.$$div$n(d, det);
    this._b = -$.$$div$n(b, det);
    this._c = -$.$$div$n(c, det);
    this._d = $.$$div$n(a, det);
    this._tx = $.$$negate$n($.$$add$n($.$$mul$n(this._a, tx), $.$$mul$n(this._c, ty)));
    this._ty = $.$$negate$n($.$$add$n($.$$mul$n(this._b, tx), $.$$mul$n(this._d, ty)));
    if (typeof det !== "number")
      throw $.iae(det);
    this._det = 1 / det;
  },
  setTo$6: function(a, b, c, d, tx, ty) {
    this._a = a;
    this._b = b;
    this._c = c;
    this._d = d;
    this._tx = tx;
    this._ty = ty;
    this._det = $.$$sub$n($.$$mul$n(a, d), $.$$mul$n(b, c));
  },
  copyFrom$1: function(matrix) {
    this._a = matrix.get$a();
    this._b = matrix.get$b();
    this._c = matrix.get$c();
    this._d = matrix.get$d();
    this._tx = matrix.get$tx();
    this._ty = matrix.get$ty();
    this._det = matrix.get$det();
  },
  copyFromAndConcat$2: function(copyMatrix, concatMatrix) {
    var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
    a1 = copyMatrix.get$a();
    if (typeof a1 !== "number")
      return this.copyFromAndConcat$2$bailout(1, copyMatrix, concatMatrix, a1);
    b1 = copyMatrix.get$b();
    if (typeof b1 !== "number")
      return this.copyFromAndConcat$2$bailout(2, copyMatrix, concatMatrix, a1, b1);
    c1 = copyMatrix.get$c();
    if (typeof c1 !== "number")
      return this.copyFromAndConcat$2$bailout(3, copyMatrix, concatMatrix, a1, b1, c1);
    d1 = copyMatrix.get$d();
    if (typeof d1 !== "number")
      return this.copyFromAndConcat$2$bailout(4, copyMatrix, concatMatrix, a1, b1, c1, d1);
    tx1 = copyMatrix.get$tx();
    if (typeof tx1 !== "number")
      return this.copyFromAndConcat$2$bailout(5, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1);
    ty1 = copyMatrix.get$ty();
    if (typeof ty1 !== "number")
      return this.copyFromAndConcat$2$bailout(6, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, ty1);
    det1 = copyMatrix.get$det();
    a2 = concatMatrix.get$a();
    if (typeof a2 !== "number")
      return this.copyFromAndConcat$2$bailout(8, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2);
    b2 = concatMatrix.get$b();
    if (typeof b2 !== "number")
      return this.copyFromAndConcat$2$bailout(9, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2);
    c2 = concatMatrix.get$c();
    if (typeof c2 !== "number")
      return this.copyFromAndConcat$2$bailout(10, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2);
    d2 = concatMatrix.get$d();
    if (typeof d2 !== "number")
      return this.copyFromAndConcat$2$bailout(11, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2);
    tx2 = concatMatrix.get$tx();
    ty2 = concatMatrix.get$ty();
    det2 = concatMatrix.get$det();
    this._a = a1 * a2 + b1 * c2;
    this._b = a1 * b2 + b1 * d2;
    this._c = c1 * a2 + d1 * c2;
    this._d = c1 * b2 + d1 * d2;
    if (typeof tx2 !== "number")
      return this.copyFromAndConcat$2$bailout(12, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2);
    this._tx = tx1 * a2 + ty1 * c2 + tx2;
    if (typeof ty2 !== "number")
      return this.copyFromAndConcat$2$bailout(13, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2);
    this._ty = tx1 * b2 + ty1 * d2 + ty2;
    if (typeof det1 !== "number")
      return this.copyFromAndConcat$2$bailout(7, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1);
    if (typeof det2 !== "number")
      return this.copyFromAndConcat$2$bailout(14, 0, 0, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2);
    this._det = det1 * det2;
  },
  copyFromAndConcat$2$bailout: function(state0, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2) {
    switch (state0) {
      case 0:
        a1 = copyMatrix.get$a();
      case 1:
        state0 = 0;
        b1 = copyMatrix.get$b();
      case 2:
        state0 = 0;
        c1 = copyMatrix.get$c();
      case 3:
        state0 = 0;
        d1 = copyMatrix.get$d();
      case 4:
        state0 = 0;
        tx1 = copyMatrix.get$tx();
      case 5:
        state0 = 0;
        ty1 = copyMatrix.get$ty();
      case 6:
        state0 = 0;
        det1 = copyMatrix.get$det();
      case 7:
        state0 = 0;
        a2 = concatMatrix.get$a();
      case 8:
        state0 = 0;
        b2 = concatMatrix.get$b();
      case 9:
        state0 = 0;
        c2 = concatMatrix.get$c();
      case 10:
        state0 = 0;
        d2 = concatMatrix.get$d();
      case 11:
        state0 = 0;
        tx2 = concatMatrix.get$tx();
      case 12:
        state0 = 0;
        ty2 = concatMatrix.get$ty();
      case 13:
        state0 = 0;
        det2 = concatMatrix.get$det();
      case 14:
        var t15, t16, t17, t18, t19, t20;
        state0 = 0;
        t15 = $.getInterceptor$n(a1);
        t16 = $.getInterceptor$n(b1);
        this._a = $.$$add$n(t15.$mul(a1, a2), t16.$mul(b1, c2));
        this._b = $.$$add$n(t15.$mul(a1, b2), t16.$mul(b1, d2));
        t17 = $.getInterceptor$n(c1);
        t18 = $.getInterceptor$n(d1);
        this._c = $.$$add$n(t17.$mul(c1, a2), t18.$mul(d1, c2));
        this._d = $.$$add$n(t17.$mul(c1, b2), t18.$mul(d1, d2));
        t19 = $.getInterceptor$n(tx1);
        t20 = $.getInterceptor$n(ty1);
        this._tx = $.$$add$n($.$$add$n(t19.$mul(tx1, a2), t20.$mul(ty1, c2)), tx2);
        this._ty = $.$$add$n($.$$add$n(t19.$mul(tx1, b2), t20.$mul(ty1, d2)), ty2);
        this._det = $.$$mul$n(det1, det2);
    }
  }
};

$$.RenderLoop = {"": "Object;_juggler,_stages,_renderTime,_enterFrameIndex,_enterFrameEvent",
  get$juggler: function() {
    return this._juggler;
  },
  _onAnimationFrame$1: function(currentTime) {
    var t1, deltaTime, deltaTimeSec, i;
    if (typeof currentTime !== "number")
      return this._onAnimationFrame$1$bailout(1, currentTime);
    window.requestAnimationFrame$1(this.get$_onAnimationFrame());
    if ($.get$isNaN$n(this._renderTime))
      this._renderTime = currentTime;
    t1 = this._renderTime;
    if (typeof t1 !== "number")
      return this._onAnimationFrame$1$bailout(2, currentTime, t1);
    if (t1 > currentTime)
      this._renderTime = currentTime;
    t1 = this._renderTime;
    if (typeof t1 !== "number")
      return this._onAnimationFrame$1$bailout(3, currentTime, t1);
    deltaTime = currentTime - t1;
    deltaTimeSec = deltaTime / 1000;
    if (deltaTime >= 1) {
      this._renderTime = currentTime;
      this._enterFrameEvent.set$_passedTime(deltaTimeSec);
      this._enterFrameIndex._dispatchEvent$1(this._enterFrameEvent);
      this._juggler.advanceTime$1(deltaTimeSec);
      i = 0;
      while (true) {
        t1 = $.get$length$as(this._stages);
        if (typeof t1 !== "number")
          return this._onAnimationFrame$1$bailout(4, 0, t1, i);
        if (!(i < t1))
          break;
        t1 = this._stages;
        if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
          return this._onAnimationFrame$1$bailout(5, 0, t1, i);
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i].materialize$0();
        ++i;
      }
    }
  },
  _onAnimationFrame$1$bailout: function(state0, currentTime, t1, i) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        window.requestAnimationFrame$1(this.get$_onAnimationFrame());
        if ($.get$isNaN$n(this._renderTime))
          this._renderTime = currentTime;
        t1 = this._renderTime;
      case 2:
        state0 = 0;
        if ($.$$gt$n(t1, currentTime) === true)
          this._renderTime = currentTime;
        t1 = this._renderTime;
      case 3:
        state0 = 0;
        deltaTime = $.$$sub$n(currentTime, t1);
        t1 = $.getInterceptor$n(deltaTime);
        deltaTimeSec = t1.$div(deltaTime, 1000);
      default:
        var deltaTime, deltaTimeSec;
        if (state0 === 5 || state0 === 4 || state0 === 0 && t1.$ge(deltaTime, 1) === true)
          switch (state0) {
            case 0:
              this._renderTime = currentTime;
              this._enterFrameEvent.set$_passedTime(deltaTimeSec);
              this._enterFrameIndex._dispatchEvent$1(this._enterFrameEvent);
              this._juggler.advanceTime$1(deltaTimeSec);
              i = 0;
            default:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      t1 = $.get$length$as(this._stages);
                    case 4:
                      state0 = 0;
                      if (!$.CONSTANT4.$lt(i, t1))
                        break L0;
                      t1 = this._stages;
                    case 5:
                      state0 = 0;
                      $.$$index$as(t1, i).materialize$0();
                      ++i;
                  }
          }
    }
  },
  get$_onAnimationFrame: function() {
    return new $.BoundClosure$1(this, "_onAnimationFrame$1");
  },
  addStage$1: function(stage) {
    $.add$1$a(this._stages, stage);
  },
  RenderLoop$0: function() {
    this._juggler = $.Juggler$();
    this._stages = $.List_List(0);
    this._renderTime = (0/0);
    this._enterFrameIndex = $.get$_EventStreamIndex_enterFrame();
    this._enterFrameEvent = $.EnterFrameEvent$(0);
    $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
  }
};

$$.RenderState = {"": "Object;_context,_matrices,_alphas,_depth",
  get$context: function() {
    return this._context;
  },
  reset$0: function() {
    var t1, m, a;
    this._depth = 0;
    t1 = this._matrices;
    if (0 >= t1.length)
      throw $.ioore(0);
    m = t1[0];
    t1 = this._alphas;
    if (0 >= t1.length)
      throw $.ioore(0);
    a = t1[0];
    t1 = this._context;
    t1.setTransform$6(m.get$a(), m.get$b(), m.get$c(), m.get$d(), m.get$tx(), m.get$ty());
    t1.set$globalAlpha(a);
    t1.clearRect$4(0, 0, t1.get$canvas().get$width(), t1.get$canvas().get$height());
  },
  renderDisplayObject$1: function(displayObject) {
    var d1, d2, t1, t2, m1, m2, t4, a1, t6, a2;
    d1 = this._depth;
    d2 = d1 + 1;
    t1 = this._matrices;
    t2 = t1.length;
    if (d1 < 0 || d1 >= t2)
      throw $.ioore(d1);
    m1 = t1[d1];
    if (d2 < 0 || d2 >= t2)
      throw $.ioore(d2);
    m2 = t1[d2];
    t1 = this._alphas;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.renderDisplayObject$1$bailout(1, displayObject, m2, t1, d1, d2, m1);
    t4 = t1.length;
    if (d1 >= t4)
      throw $.ioore(d1);
    a1 = t1[d1];
    t6 = displayObject.get$_alpha();
    if (typeof t6 !== "number")
      return this.renderDisplayObject$1$bailout(3, displayObject, m2, t1, d1, d2, m1, a1, t6);
    if (typeof a1 !== "number")
      return this.renderDisplayObject$1$bailout(2, displayObject, m2, t1, d1, d2, m1, a1);
    a2 = t6 * a1;
    if (d2 >= t4)
      throw $.ioore(d2);
    t1[d2] = a2;
    m2.copyFromAndConcat$2(displayObject.get$_transformationMatrix(), m1);
    t1 = this._context;
    t1.setTransform$6(m2.get$a(), m2.get$b(), m2.get$c(), m2.get$d(), m2.get$tx(), m2.get$ty());
    t1.set$globalAlpha(a2);
    this._depth = d2;
    if (displayObject.get$mask() == null)
      displayObject.render$1(this);
    else {
      t1.save$0();
      displayObject.get$mask().render$1(this);
      displayObject.render$1(this);
      t1.restore$0();
    }
    this._depth = d1;
  },
  renderDisplayObject$1$bailout: function(state0, displayObject, m2, t1, d1, d2, m1, a1, t5) {
    switch (state0) {
      case 0:
        d1 = this._depth;
        d2 = d1 + 1;
        t1 = this._matrices;
        t2 = t1.length;
        if (d1 < 0 || d1 >= t2)
          throw $.ioore(d1);
        m1 = t1[d1];
        if (d2 < 0 || d2 >= t2)
          throw $.ioore(d2);
        m2 = t1[d2];
        t1 = this._alphas;
      case 1:
        state0 = 0;
        if (d1 >= t1.length)
          throw $.ioore(d1);
        a1 = t1[d1];
      case 2:
        state0 = 0;
        t5 = displayObject.get$_alpha();
      case 3:
        var t2, a2;
        state0 = 0;
        a2 = $.$$mul$n(t5, a1);
        $.CONSTANT1.$indexSet(t1, d2, a2);
        m2.copyFromAndConcat$2(displayObject.get$_transformationMatrix(), m1);
        t1 = this._context;
        t1.setTransform$6(m2.get$a(), m2.get$b(), m2.get$c(), m2.get$d(), m2.get$tx(), m2.get$ty());
        t1.set$globalAlpha(a2);
        this._depth = d2;
        if (displayObject.get$mask() == null)
          displayObject.render$1(this);
        else {
          t1.save$0();
          displayObject.get$mask().render$1(this);
          displayObject.render$1(this);
          t1.restore$0();
        }
        this._depth = d1;
    }
  },
  RenderState$fromCanvasRenderingContext2D$2: function(context, matrix) {
    var t1, t3, i, t2, m, a;
    t1 = this._matrices;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.RenderState$fromCanvasRenderingContext2D$2$bailout(1, matrix, t1);
    t3 = this._alphas;
    if (typeof t3 !== "object" || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.$isJavaScriptIndexingBehavior())
      return this.RenderState$fromCanvasRenderingContext2D$2$bailout(2, matrix, t1, t3);
    i = 0;
    for (; i < 100; ++i) {
      t2 = $.Matrix$fromIdentity();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
      if (i >= t3.length)
        throw $.ioore(i);
      t3[i] = 1;
    }
    if (matrix != null) {
      if (0 >= t1.length)
        throw $.ioore(0);
      t1[0].copyFrom$1(matrix);
    }
    if (0 >= t1.length)
      throw $.ioore(0);
    m = t1[0];
    if (0 >= t3.length)
      throw $.ioore(0);
    a = t3[0];
    t1 = this._context;
    t1.setTransform$6(m.get$a(), m.get$b(), m.get$c(), m.get$d(), m.get$tx(), m.get$ty());
    t1.set$globalAlpha(a);
  },
  RenderState$fromCanvasRenderingContext2D$2$bailout: function(state0, matrix, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._matrices;
      case 1:
        state0 = 0;
        t3 = this._alphas;
      case 2:
        var i, m, a;
        state0 = 0;
        i = 0;
        for (; i < 100; ++i) {
          $.CONSTANT1.$indexSet(t1, i, $.Matrix$fromIdentity());
          $.CONSTANT1.$indexSet(t3, i, 1);
        }
        if (matrix != null) {
          if (0 >= t1.length)
            throw $.ioore(0);
          t1[0].copyFrom$1(matrix);
        }
        if (0 >= t1.length)
          throw $.ioore(0);
        m = t1[0];
        if (0 >= t3.length)
          throw $.ioore(0);
        a = t3[0];
        t1 = this._context;
        t1.setTransform$6(m.get$a(), m.get$b(), m.get$c(), m.get$d(), m.get$tx(), m.get$ty());
        t1.set$globalAlpha(a);
    }
  }
};

$$.Event = {"": "Object;_type,_bubbles,_eventPhase<,_target=,_currentTarget<,_stopsPropagation<,_stopsImmediatePropagation<",
  _reset$2: function(type, bubbles) {
    this._type = type;
    this._bubbles = bubbles;
    this._eventPhase = 2;
    this._target = null;
    this._currentTarget = null;
    this._stopsPropagation = false;
    this._stopsImmediatePropagation = false;
  },
  get$stopsPropagation: function() {
    return this._stopsPropagation;
  },
  get$type: function() {
    return this._type;
  },
  get$bubbles: function() {
    return this._bubbles;
  },
  get$captures: function() {
    return true;
  },
  get$target: function() {
    return this._target;
  },
  Event$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.EventDispatcher = {"": "Object;",
  hasEventListener$1: function(type) {
    var t1 = this._eventStreams;
    if (t1 != null)
      return t1.containsKey$1(type) === true || this._eventStreams.containsKey$1($.S(type) + "_CAPTURE") === true;
    else
      return false;
  },
  dispatchEvent$1: function($event) {
    this._dispatchEventInternal$4($event, this, this, 2);
  },
  _dispatchEventInternal$4: function($event, target, currentTarget, eventPhase) {
    var eventStreamKey, t1, eventStream;
    if (this._eventStreams != null) {
      if (eventPhase === 1)
        eventStreamKey = $.S($event.get$type()) + "_CAPTURE";
      else {
        t1 = $event.get$type();
        if (typeof t1 !== "string")
          return this._dispatchEventInternal$4$bailout(1, $event, target, currentTarget, eventPhase, t1);
        eventStreamKey = t1;
      }
      eventStream = $.$$index$as(this._eventStreams, eventStreamKey);
      if (eventStream != null) {
        $event.set$_target(target);
        $event.set$_currentTarget(currentTarget);
        $event.set$_eventPhase(eventPhase);
        $event.set$_stopsPropagation(false);
        $event.set$_stopsImmediatePropagation(false);
        eventStream._dispatchEvent$1($event);
      }
    }
  },
  _dispatchEventInternal$4$bailout: function(state0, $event, target, currentTarget, eventPhase, t1) {
    switch (state0) {
      case 0:
      case 1:
        var eventStreamKey, eventStream;
        if (state0 === 1 || state0 === 0 && this._eventStreams != null)
          switch (state0) {
            case 0:
            case 1:
              if (state0 === 0 && eventPhase === 1)
                eventStreamKey = $.S($event.get$type()) + "_CAPTURE";
              else
                switch (state0) {
                  case 0:
                    t1 = $event.get$type();
                  case 1:
                    state0 = 0;
                    eventStreamKey = t1;
                }
              eventStream = $.$$index$as(this._eventStreams, eventStreamKey);
              if (eventStream != null) {
                $event.set$_target(target);
                $event.set$_currentTarget(currentTarget);
                $event.set$_eventPhase(eventPhase);
                $event.set$_stopsPropagation(false);
                $event.set$_stopsImmediatePropagation(false);
                eventStream._dispatchEvent$1($event);
              }
          }
    }
  },
  _getEventStream$2: function(eventType, useCapture) {
    var eventStreamKey, eventStream, t1;
    if (this._eventStreams == null)
      this._eventStreams = $.HashMap$();
    eventStreamKey = useCapture === true ? $.S(eventType) + "_CAPTURE" : eventType;
    eventStream = $.$$index$as(this._eventStreams, eventStreamKey);
    if (eventStream == null) {
      t1 = this._eventStreams;
      eventStream = $._EventStream$0(this, eventType, useCapture);
      $.$$indexSet$a(t1, eventStreamKey, eventStream);
    }
    return eventStream;
  }
};

$$._EventStreamIndex = {"": "Object;_eventStreams,_eventStreamsCount",
  _addEventStream$1: function(eventStream) {
    var t1, i, t2;
    for (t1 = this._eventStreams, i = 0; $.CONSTANT4.$lt(i, this._eventStreamsCount); ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq$o(t1[i], eventStream) === true)
        return;
    }
    if ($.$$eq$o(this._eventStreamsCount, t1.length) === true)
      t1.push(eventStream);
    else {
      t2 = this._eventStreamsCount;
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t1[t2] = eventStream;
    }
    this._eventStreamsCount = $.$$add$n(this._eventStreamsCount, 1);
  },
  _dispatchEvent$1: function($event) {
    var eventStreamsCount, t1, tail, head, eventStream, t2, t3, tail0;
    $event.set$_eventPhase(2);
    $event.set$_stopsPropagation(false);
    $event.set$_stopsImmediatePropagation(false);
    eventStreamsCount = this._eventStreamsCount;
    if (eventStreamsCount !== (eventStreamsCount | 0))
      return this._dispatchEvent$1$bailout(1, $event, eventStreamsCount);
    for (t1 = this._eventStreams, tail = 0, head = 0; head < eventStreamsCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      eventStream = t1[head];
      if (eventStream == null)
        continue;
      t2 = eventStream.get$_subscriptionsCount();
      if (typeof t2 !== "number")
        return this._dispatchEvent$1$bailout(2, $event, eventStreamsCount, t2, t1, eventStream, tail, head);
      if (t2 === 0) {
        t1[head] = null;
        continue;
      }
      $event.set$_target(eventStream.get$_target());
      $event.set$_currentTarget(eventStream.get$_target());
      eventStream._dispatchEvent$1($event);
      if (tail !== head) {
        t2 = t1.length;
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = eventStream;
        if (head >= t2)
          throw $.ioore(head);
        t1[head] = null;
      }
      ++tail;
    }
    if (tail !== eventStreamsCount) {
      t2 = t1.length;
      head = eventStreamsCount;
      while (true) {
        t3 = this._eventStreamsCount;
        if (typeof t3 !== "number")
          return this._dispatchEvent$1$bailout(3, 0, 0, t3, t1, 0, tail, head);
        if (!(head < t3))
          break;
        tail0 = tail + 1;
        if (head < 0 || head >= t2)
          throw $.ioore(head);
        t3 = t1[head];
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = t3;
        t1[head] = null;
        ++head;
        tail = tail0;
      }
      this._eventStreamsCount = tail;
    }
  },
  _dispatchEvent$1$bailout: function(state0, $event, eventStreamsCount, t2, t1, eventStream, tail, head) {
    switch (state0) {
      case 0:
        $event.set$_eventPhase(2);
        $event.set$_stopsPropagation(false);
        $event.set$_stopsImmediatePropagation(false);
        eventStreamsCount = this._eventStreamsCount;
      case 1:
        state0 = 0;
        t1 = this._eventStreams;
        tail = 0;
        head = 0;
      case 2:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.CONSTANT4.$lt(head, eventStreamsCount))
                  break L0;
              case 2:
                c$0: {
                  switch (state0) {
                    case 0:
                      if (head >= t1.length)
                        throw $.ioore(head);
                      eventStream = t1[head];
                      if (eventStream == null)
                        break c$0;
                      t2 = eventStream.get$_subscriptionsCount();
                    case 2:
                      state0 = 0;
                      if ($.$$eq$o(t2, 0) === true) {
                        if (head >= t1.length)
                          throw $.ioore(head);
                        t1[head] = null;
                        break c$0;
                      }
                      $event.set$_target(eventStream.get$_target());
                      $event.set$_currentTarget(eventStream.get$_target());
                      eventStream._dispatchEvent$1($event);
                      if (tail !== head) {
                        t2 = t1.length;
                        if (tail >= t2)
                          throw $.ioore(tail);
                        t1[tail] = eventStream;
                        if (head >= t2)
                          throw $.ioore(head);
                        t1[head] = null;
                      }
                      ++tail;
                  }
                }
                ++head;
            }
      case 3:
        var tail0, t3;
        if (state0 === 3 || state0 === 0 && tail !== eventStreamsCount)
          switch (state0) {
            case 0:
              head = eventStreamsCount;
            case 3:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = this._eventStreamsCount;
                    case 3:
                      state0 = 0;
                      if (!($.$$lt$n(head, t2) === true))
                        break L1;
                      tail0 = tail + 1;
                      if (head !== (head | 0))
                        throw $.iae(head);
                      t2 = t1.length;
                      if (head < 0 || head >= t2)
                        throw $.ioore(head);
                      t3 = t1[head];
                      if (tail >= t2)
                        throw $.ioore(tail);
                      t1[tail] = t3;
                      t1[head] = null;
                      ++head;
                      tail = tail0;
                  }
              this._eventStreamsCount = tail;
          }
    }
  }
};

$$._EventStream0 = {"": "Stream;_target>,_liblib2$_eventType,_liblib2$_useCapture,_subscriptions,_subscriptionsCount>",
  get$isBroadcast: function() {
    return true;
  },
  asBroadcastStream$0: function() {
    return this;
  },
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    var subscription, t1, t2;
    subscription = $._EventStreamSubscription$0(this, onData);
    t1 = this._subscriptionsCount;
    t2 = this._subscriptions;
    if (t1 === t2.length)
      $.CONSTANT1.add$1(t2, subscription);
    else
      $.CONSTANT1.$indexSet(t2, t1, subscription);
    this._subscriptionsCount = this._subscriptionsCount + 1;
    if ($.$$eq$o(this._liblib2$_eventType, "enterFrame") === true && $.$$eq$o(this._liblib2$_useCapture, false) === true)
      $.get$_EventStreamIndex_enterFrame()._addEventStream$1(this);
    return subscription;
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  _onSubscriptionCancel$1: function(subscription) {
    var t1, i;
    t1 = this._subscriptions;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._onSubscriptionCancel$1$bailout(1, subscription, t1);
    i = 0;
    for (; i < this._subscriptionsCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq$o(t1[i], subscription) === true) {
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i] = null;
        break;
      }
    }
  },
  _onSubscriptionCancel$1$bailout: function(state0, subscription, t1) {
    var i = 0;
    for (; i < this._subscriptionsCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq$o(t1[i], subscription) === true) {
        $.CONSTANT1.$indexSet(t1, i, null);
        break;
      }
    }
  },
  _dispatchEvent$1: function($event) {
    var subscriptionsCount, t1, tail, head, subscription, t2, tail0, t3;
    subscriptionsCount = this._subscriptionsCount;
    t1 = this._subscriptions;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._dispatchEvent$1$bailout(1, $event, subscriptionsCount, t1);
    tail = 0;
    head = 0;
    for (; head < subscriptionsCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      subscription = t1[head];
      if (subscription == null)
        continue;
      subscription._liblib2$_onData$1($event);
      if (tail !== head) {
        t2 = t1.length;
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = subscription;
        if (head >= t2)
          throw $.ioore(head);
        t1[head] = null;
      }
      ++tail;
    }
    if (tail !== subscriptionsCount) {
      for (t2 = t1.length, head = subscriptionsCount; head < this._subscriptionsCount; ++head, tail = tail0) {
        tail0 = tail + 1;
        if (head < 0 || head >= t2)
          throw $.ioore(head);
        t3 = t1[head];
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = t3;
        t1[head] = null;
      }
      this._subscriptionsCount = tail;
    }
  },
  _dispatchEvent$1$bailout: function(state0, $event, subscriptionsCount, t1) {
    var tail, head, subscription, tail0;
    tail = 0;
    head = 0;
    for (; head < subscriptionsCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      subscription = t1[head];
      if (subscription == null)
        continue;
      subscription._liblib2$_onData$1($event);
      if (tail !== head) {
        $.CONSTANT1.$indexSet(t1, tail, subscription);
        $.CONSTANT1.$indexSet(t1, head, null);
      }
      ++tail;
    }
    if (tail !== subscriptionsCount) {
      for (head = subscriptionsCount; head < this._subscriptionsCount; ++head, tail = tail0) {
        tail0 = tail + 1;
        if (head < 0 || head >= t1.length)
          throw $.ioore(head);
        $.CONSTANT1.$indexSet(t1, tail, t1[head]);
        $.CONSTANT1.$indexSet(t1, head, null);
      }
      this._subscriptionsCount = tail;
    }
  }
};

$$.EventStreamProvider0 = {"": "Object;_liblib2$_eventType",
  forTarget$2$useCapture: function(target, useCapture) {
    return target._getEventStream$2(this._liblib2$_eventType, useCapture);
  },
  forTarget$1: function(target) {
    return this.forTarget$2$useCapture(target, false);
  }
};

$$._EventStreamSubscription0 = {"": "StreamSubscription;_eventStream,_liblib2$_onData,_liblib2$_pauseCount,_liblib2$_canceled",
  _liblib2$_onData$1: function(arg0) {
    return this._liblib2$_onData.call$1(arg0);
  },
  cancel$0: function() {
    if (!this._liblib2$_canceled) {
      this._eventStream._onSubscriptionCancel$1(this);
      this._liblib2$_canceled = true;
      this._liblib2$_onData = null;
    }
  },
  onError$1: function(handleError) {
  },
  get$onError: function() {
    return new $.BoundClosure$1(this, "onError$1");
  },
  get$_liblib2$_paused: function() {
    return this._liblib2$_pauseCount > 0;
  },
  pause$1: function(resumeSignal) {
    this._liblib2$_pauseCount = this._liblib2$_pauseCount + 1;
    if (resumeSignal != null)
      resumeSignal.whenComplete$1(this.get$resume());
  },
  pause$0: function() {
    return this.pause$1(null);
  },
  resume$0: function() {
    if ($.$$eq$o(this.get$_liblib2$_paused(), false) === true)
      throw $.$$throw($.StateError$("Subscription is not paused."));
    this._liblib2$_pauseCount = this._liblib2$_pauseCount - 1;
  },
  get$resume: function() {
    return new $.Bound_resume__EventStreamSubscription0(this, "resume$0");
  },
  _liblib2$_EventStreamSubscription$2: function(_eventStream, _onData) {
    this._liblib2$_pauseCount = 0;
    this._liblib2$_canceled = false;
  }
};

$$.EnterFrameEvent = {"": "Event;_passedTime<,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  get$passedTime: function() {
    return this._passedTime;
  },
  get$captures: function() {
    return false;
  },
  EnterFrameEvent$1: function(passedTime) {
    this._passedTime = passedTime;
  }
};

$$.MouseEvent = {"": "Event;_localX,_localY,_stageX,_stageY,_buttonDown<,_altKey<,_controlKey,_ctrlKey<,_shiftKey<,_clickCount<,_deltaX,_deltaY,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._localY = 0;
    this._localX = 0;
    this._stageY = 0;
    this._stageX = 0;
    this._buttonDown = false;
    this._altKey = false;
    this._controlKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._clickCount = 0;
    this._deltaX = 0;
    this._deltaY = 0;
  },
  set$_localPoint: function(point) {
    this._localX = point.get$x();
    this._localY = point.get$y();
  },
  set$_stagePoint: function(point) {
    this._stageX = point.get$x();
    this._stageY = point.get$y();
  },
  get$buttonDown: function() {
    return this._buttonDown;
  },
  get$altKey: function() {
    return this._altKey;
  },
  get$ctrlKey: function() {
    return this._ctrlKey;
  },
  get$shiftKey: function() {
    return this._shiftKey;
  },
  get$clickCount: function() {
    return this._clickCount;
  },
  MouseEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.KeyboardEvent = {"": "Event;_altKey<,_ctrlKey<,_shiftKey<,_commandKey,_controlKey,_charCode<,_keyCode<,_keyLocation<,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._altKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._commandKey = false;
    this._controlKey = false;
    this._charCode = 0;
    this._keyCode = 0;
    this._keyLocation = 0;
  },
  get$altKey: function() {
    return this._altKey;
  },
  get$ctrlKey: function() {
    return this._ctrlKey;
  },
  get$shiftKey: function() {
    return this._shiftKey;
  },
  get$charCode: function() {
    return this._charCode;
  },
  get$keyCode: function() {
    return this._keyCode;
  },
  get$keyLocation: function() {
    return this._keyLocation;
  },
  KeyboardEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.TextEvent = {"": "Event;_text,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation"};

$$.TouchEvent = {"": "Event;_touchPointID<,_isPrimaryTouchPoint<,_localX,_localY,_stageX,_stageY,_altKey<,_controlKey,_ctrlKey<,_shiftKey<,_pressure,_sizeX,_sizeY,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._touchPointID = 0;
    this._isPrimaryTouchPoint = false;
    this._localY = 0;
    this._localX = 0;
    this._stageY = 0;
    this._stageX = 0;
    this._altKey = false;
    this._controlKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._pressure = 1;
    this._sizeX = 0;
    this._sizeY = 0;
  },
  set$_localPoint: function(point) {
    this._localX = point.get$x();
    this._localY = point.get$y();
  },
  set$_stagePoint: function(point) {
    this._stageX = point.get$x();
    this._stageY = point.get$y();
  },
  get$touchPointID: function() {
    return this._touchPointID;
  },
  get$altKey: function() {
    return this._altKey;
  },
  get$ctrlKey: function() {
    return this._ctrlKey;
  },
  get$shiftKey: function() {
    return this._shiftKey;
  },
  TouchEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.BitmapFilter = {"": "Object;", $isBitmapFilter: true};

$$.BlurFilter = {"": "BitmapFilter;blurX,blurY",
  apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
    var sourceImageData, sourceData, sourceWidth, sourceHeight, t4, weightX, t6, weightY, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, destinationContext, destinationImageData, destinationData, buffer, t1, t2, t3, t5, sum, z, x, offsetSource, offsetDestination, sum0, dif, y, t7, t8, color;
    sourceImageData = sourceBitmapData._getContext$0().getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
    sourceData = sourceImageData.get$data();
    if (typeof sourceData !== "string" && (typeof sourceData !== "object" || sourceData === null || sourceData.constructor !== Array && !sourceData.$isJavaScriptIndexingBehavior()))
      return this.apply$4$bailout1(1, destinationBitmapData, destinationPoint, sourceImageData, sourceData);
    sourceWidth = sourceImageData.get$width();
    if (typeof sourceWidth !== "number")
      return this.apply$4$bailout1(2, destinationBitmapData, destinationPoint, sourceImageData, sourceData, sourceWidth);
    sourceHeight = sourceImageData.get$height();
    if (typeof sourceHeight !== "number")
      return this.apply$4$bailout1(3, destinationBitmapData, destinationPoint, 0, sourceData, sourceWidth, sourceHeight);
    t4 = this.blurX;
    if (t4 !== (t4 | 0))
      return this.apply$4$bailout1(4, destinationBitmapData, destinationPoint, 0, sourceData, sourceWidth, sourceHeight, t4);
    weightX = t4 * t4;
    t6 = this.blurY;
    if (t6 !== (t6 | 0))
      return this.apply$4$bailout1(6, destinationBitmapData, destinationPoint, 0, sourceData, sourceWidth, sourceHeight, t4, $.CONSTANT8, weightX, t6);
    weightY = t6 * t6;
    rx2 = t4 * 2;
    ry2 = t6 * 2;
    destinationWidth = sourceWidth + rx2;
    destinationHeight = sourceHeight + ry2;
    sourceWidth4 = sourceWidth * 4;
    destinationWidth4 = destinationWidth * 4;
    destinationContext = destinationBitmapData._getContext$0();
    destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
    destinationData = destinationImageData.get$data();
    if (typeof destinationData !== "object" || destinationData === null || (destinationData.constructor !== Array || !!destinationData.immutable$list) && !destinationData.$isJavaScriptIndexingBehavior())
      return this.apply$4$bailout1(8, 0, destinationPoint, 0, sourceData, sourceWidth, sourceHeight, t4, 0, weightX, t6, 0, weightY, destinationWidth, sourceWidth4, destinationContext, destinationImageData, destinationData, destinationHeight, destinationWidth4, rx2, ry2);
    buffer = $.List_List(1024);
    $._premultiplyAlpha(sourceData);
    for (t1 = $.getInterceptor$as(sourceData), t2 = buffer.length, t3 = sourceData.length, t5 = destinationData.length, sum = $.CONSTANT8.$shr(weightY, 1), z = 0; z < 4; ++z)
      for (x = 0; x < sourceWidth; ++x) {
        offsetSource = x * 4 + z;
        offsetDestination = (x + t4) * 4 + z;
        for (sum0 = sum, dif = 0, y = 0; y < destinationHeight; ++y) {
          t7 = $.CONSTANT4.$tdiv(sum0, weightY);
          if (offsetDestination !== (offsetDestination | 0))
            throw $.iae(offsetDestination);
          if (offsetDestination < 0 || offsetDestination >= t5)
            throw $.ioore(offsetDestination);
          destinationData[offsetDestination] = t7;
          offsetDestination += destinationWidth4;
          if (y >= ry2) {
            t7 = y & 1023;
            if (t7 >= t2)
              throw $.ioore(t7);
            t7 = buffer[t7];
            if (typeof t7 !== "number")
              throw $.iae(t7);
            t8 = y - t6 & 1023;
            if (t8 >= t2)
              throw $.ioore(t8);
            t8 = buffer[t8];
            if (typeof t8 !== "number")
              throw $.iae(t8);
            dif -= 2 * t7 - t8;
          } else if (y >= t6) {
            t7 = y & 1023;
            if (t7 >= t2)
              throw $.ioore(t7);
            t7 = buffer[t7];
            if (typeof t7 !== "number")
              throw $.iae(t7);
            dif -= 2 * t7;
          }
          if (y < sourceHeight) {
            if (offsetSource !== (offsetSource | 0))
              throw $.iae(offsetSource);
            if (offsetSource < 0 || offsetSource >= t3)
              throw $.ioore(offsetSource);
            t7 = sourceData[offsetSource];
            if (typeof t7 !== "number")
              return this.apply$4$bailout1(9, 0, destinationPoint, 0, sourceData, sourceWidth, sourceHeight, $.CONSTANT4, 0, weightX, t6, 0, weightY, destinationWidth, sourceWidth4, destinationContext, destinationImageData, destinationData, destinationHeight, destinationWidth4, rx2, ry2, z, dif, t1, t7, sum0, offsetSource, y, t4, $.CONSTANT1, offsetDestination, x, buffer, $.CONSTANT8);
            color = t7;
          } else
            color = 0;
          t7 = y + t6 & 1023;
          if (t7 >= t2)
            throw $.ioore(t7);
          buffer[t7] = color;
          dif += color;
          sum0 += dif;
          offsetSource += sourceWidth4;
        }
      }
    for (sum = $.CONSTANT8.$shr(weightX, 1), t1 = t4 * 4, z = 0; z < 4; ++z)
      for (y = 0; y < destinationHeight; ++y) {
        t3 = y * destinationWidth4;
        offsetSource = t3 + t1 + z;
        offsetDestination = t3 + z;
        for (sum0 = sum, dif = 0, x = 0; x < destinationWidth; ++x) {
          t3 = $.CONSTANT4.$tdiv(sum0, weightX);
          if (offsetDestination !== (offsetDestination | 0))
            throw $.iae(offsetDestination);
          if (offsetDestination < 0 || offsetDestination >= t5)
            throw $.ioore(offsetDestination);
          destinationData[offsetDestination] = t3;
          offsetDestination += 4;
          if (x >= rx2) {
            t3 = x & 1023;
            if (t3 >= t2)
              throw $.ioore(t3);
            t3 = buffer[t3];
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t7 = x - t4 & 1023;
            if (t7 >= t2)
              throw $.ioore(t7);
            t7 = buffer[t7];
            if (typeof t7 !== "number")
              throw $.iae(t7);
            dif -= 2 * t3 - t7;
          } else if (x >= t4) {
            t3 = x & 1023;
            if (t3 >= t2)
              throw $.ioore(t3);
            t3 = buffer[t3];
            if (typeof t3 !== "number")
              throw $.iae(t3);
            dif -= 2 * t3;
          }
          if (x < sourceWidth) {
            if (offsetSource !== (offsetSource | 0))
              throw $.iae(offsetSource);
            if (offsetSource < 0 || offsetSource >= t5)
              throw $.ioore(offsetSource);
            t3 = destinationData[offsetSource];
            if (typeof t3 !== "number")
              return this.apply$4$bailout1(10, 0, destinationPoint, 0, 0, sourceWidth, 0, $.CONSTANT4, 0, weightX, t6, 0, 0, destinationWidth, 0, destinationContext, destinationImageData, destinationData, destinationHeight, destinationWidth4, rx2, 0, z, dif, $.CONSTANT8, t3, sum0, offsetSource, y, t4, $.CONSTANT1, offsetDestination, x, buffer, $.CONSTANT4);
            color = t3;
          } else
            color = 0;
          t3 = x + t4 & 1023;
          if (t3 >= t2)
            throw $.ioore(t3);
          buffer[t3] = color;
          dif += color;
          sum0 += dif;
          offsetSource += 4;
        }
      }
    $._unpremultiplyAlpha(destinationData);
    destinationContext.putImageData$3(destinationImageData, $.$$sub$n(destinationPoint.x, t4), $.$$sub$n(destinationPoint.y, t6));
  },
  apply$4$bailout1: function(state0, destinationBitmapData, destinationPoint, sourceImageData, sourceData, sourceWidth, sourceHeight, t4, t6, weightX, t8, t10, weightY, destinationWidth, sourceWidth4, destinationContext, destinationImageData, destinationData, destinationHeight, destinationWidth4, rx2, ry2, z, dif, t1, t5, sum, offsetSource, y, rx1, t2, offsetDestination, x, buffer, t3) {
    switch (state0) {
      case 0:
        sourceImageData = sourceBitmapData._getContext$0().getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
        sourceData = sourceImageData.get$data();
      case 1:
        state0 = 0;
        sourceWidth = sourceImageData.get$width();
      case 2:
        state0 = 0;
        sourceHeight = sourceImageData.get$height();
      case 3:
        state0 = 0;
        t4 = this.blurX;
      case 4:
        state0 = 0;
        t6 = $.getInterceptor$n(t4);
        weightX = t6.$mul(t4, t4);
      case 5:
        state0 = 0;
        t8 = this.blurY;
      case 6:
        state0 = 0;
        t10 = $.getInterceptor$n(t8);
        weightY = t10.$mul(t8, t8);
      case 7:
        state0 = 0;
        rx2 = t6.$mul(t4, 2);
        ry2 = t10.$mul(t8, 2);
        t10 = $.getInterceptor$n(sourceWidth);
        destinationWidth = t10.$add(sourceWidth, rx2);
        destinationHeight = $.$$add$n(sourceHeight, ry2);
        sourceWidth4 = t10.$mul(sourceWidth, 4);
        destinationWidth4 = $.$$mul$n(destinationWidth, 4);
        destinationContext = destinationBitmapData._getContext$0();
        destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
        destinationData = destinationImageData.get$data();
      case 8:
        state0 = 0;
        buffer = $.List_List(1024);
        $._premultiplyAlpha(sourceData);
        t1 = $.getInterceptor$as(sourceData);
        t2 = $.getInterceptor$a(destinationData);
        t3 = $.getInterceptor$n(weightY);
        rx1 = t4;
        z = 0;
      case 9:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(z < 4))
                  break L0;
                x = 0;
              case 9:
                L1:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.CONSTANT4.$lt(x, sourceWidth))
                          break L1;
                        sum = t3.$shr(weightY, 1);
                        offsetSource = x * 4 + z;
                        if (typeof rx1 !== "number")
                          throw $.iae(rx1);
                        offsetDestination = (x + rx1) * 4 + z;
                        dif = 0;
                        y = 0;
                      case 9:
                        L2:
                          while (true)
                            switch (state0) {
                              case 0:
                                if (!$.CONSTANT4.$lt(y, destinationHeight))
                                  break L2;
                                t4 = $.getInterceptor$n(sum);
                                t2.$indexSet(destinationData, offsetDestination, t4.$tdiv(sum, weightY));
                                if (typeof destinationWidth4 !== "number")
                                  throw $.iae(destinationWidth4);
                                offsetDestination += destinationWidth4;
                                if ($.CONSTANT4.$ge(y, ry2)) {
                                  t5 = y & 1023;
                                  t6 = buffer.length;
                                  if (t5 >= t6)
                                    throw $.ioore(t5);
                                  t5 = buffer[t5];
                                  if (typeof t5 !== "number")
                                    throw $.iae(t5);
                                  if (typeof t8 !== "number")
                                    throw $.iae(t8);
                                  t7 = y - t8 & 1023;
                                  if (t7 >= t6)
                                    throw $.ioore(t7);
                                  t7 = buffer[t7];
                                  if (typeof t7 !== "number")
                                    throw $.iae(t7);
                                  dif -= 2 * t5 - t7;
                                } else if ($.CONSTANT4.$ge(y, t8)) {
                                  t5 = y & 1023;
                                  if (t5 >= buffer.length)
                                    throw $.ioore(t5);
                                  t5 = buffer[t5];
                                  if (typeof t5 !== "number")
                                    throw $.iae(t5);
                                  dif -= 2 * t5;
                                }
                              case 9:
                                if (state0 === 9 || state0 === 0 && $.CONSTANT4.$lt(y, sourceHeight))
                                  switch (state0) {
                                    case 0:
                                      t5 = t1.$index(sourceData, offsetSource);
                                    case 9:
                                      state0 = 0;
                                      color = t5;
                                  }
                                else
                                  color = 0;
                                if (typeof t8 !== "number")
                                  throw $.iae(t8);
                                t5 = y + t8 & 1023;
                                if (t5 >= buffer.length)
                                  throw $.ioore(t5);
                                buffer[t5] = color;
                                if (typeof color !== "number")
                                  throw $.iae(color);
                                dif += color;
                                sum = t4.$add(sum, dif);
                                if (typeof sourceWidth4 !== "number")
                                  throw $.iae(sourceWidth4);
                                offsetSource += sourceWidth4;
                                ++y;
                            }
                        ++x;
                    }
                ++z;
            }
        t1 = $.getInterceptor$n(weightX);
        t3 = $.getInterceptor$n(rx1);
        z = 0;
      case 10:
        var t7, color;
        L3:
          while (true)
            switch (state0) {
              case 0:
                if (!(z < 4))
                  break L3;
                y = 0;
              case 10:
                L4:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.CONSTANT4.$lt(y, destinationHeight))
                          break L4;
                        sum = t1.$shr(weightX, 1);
                        if (typeof destinationWidth4 !== "number")
                          throw $.iae(destinationWidth4);
                        t4 = y * destinationWidth4;
                        t5 = t3.$mul(rx1, 4);
                        if (typeof t5 !== "number")
                          throw $.iae(t5);
                        offsetSource = t4 + t5 + z;
                        offsetDestination = t4 + z;
                        dif = 0;
                        x = 0;
                      case 10:
                        L5:
                          while (true)
                            switch (state0) {
                              case 0:
                                if (!$.CONSTANT4.$lt(x, destinationWidth))
                                  break L5;
                                t4 = $.getInterceptor$n(sum);
                                t2.$indexSet(destinationData, offsetDestination, t4.$tdiv(sum, weightX));
                                offsetDestination += 4;
                                if ($.CONSTANT4.$ge(x, rx2)) {
                                  t5 = x & 1023;
                                  t6 = buffer.length;
                                  if (t5 >= t6)
                                    throw $.ioore(t5);
                                  t5 = buffer[t5];
                                  if (typeof t5 !== "number")
                                    throw $.iae(t5);
                                  if (typeof rx1 !== "number")
                                    throw $.iae(rx1);
                                  t7 = x - rx1 & 1023;
                                  if (t7 >= t6)
                                    throw $.ioore(t7);
                                  t7 = buffer[t7];
                                  if (typeof t7 !== "number")
                                    throw $.iae(t7);
                                  dif -= 2 * t5 - t7;
                                } else if ($.CONSTANT4.$ge(x, rx1)) {
                                  t5 = x & 1023;
                                  if (t5 >= buffer.length)
                                    throw $.ioore(t5);
                                  t5 = buffer[t5];
                                  if (typeof t5 !== "number")
                                    throw $.iae(t5);
                                  dif -= 2 * t5;
                                }
                              case 10:
                                if (state0 === 10 || state0 === 0 && $.CONSTANT4.$lt(x, sourceWidth))
                                  switch (state0) {
                                    case 0:
                                      t5 = t2.$index(destinationData, offsetSource);
                                    case 10:
                                      state0 = 0;
                                      color = t5;
                                  }
                                else
                                  color = 0;
                                if (typeof rx1 !== "number")
                                  throw $.iae(rx1);
                                t5 = x + rx1 & 1023;
                                if (t5 >= buffer.length)
                                  throw $.ioore(t5);
                                buffer[t5] = color;
                                if (typeof color !== "number")
                                  throw $.iae(color);
                                dif += color;
                                sum = t4.$add(sum, dif);
                                offsetSource += 4;
                                ++x;
                            }
                        ++y;
                    }
                ++z;
            }
        $._unpremultiplyAlpha(destinationData);
        destinationContext.putImageData$3(destinationImageData, $.$$sub$n(destinationPoint.x, rx1), $.$$sub$n(destinationPoint.y, t8));
    }
  },
  BlurFilter$2: function(blurX, blurY) {
    var t1, t2;
    t1 = this.blurX;
    t2 = $.getInterceptor$n(t1);
    if (t2.$lt(t1, 1) === true || $.$$lt$n(this.blurY, 1) === true)
      throw $.$$throw($.ArgumentError$("Error #9004: The minimum blur size is 1."));
    if (t2.$gt(t1, 128) === true || $.$$gt$n(this.blurY, 128) === true)
      throw $.$$throw($.ArgumentError$("Error #9004: The maximum blur size is 128."));
  }
};

$$.ColorMatrixFilter = {"": "BitmapFilter;_matrix>",
  apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
    var imageData, data, t2, t3, a00, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, t1, index, srcR, srcG, t4, srcB, t5, srcA;
    imageData = sourceBitmapData._getContext$0().getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
    data = imageData.get$data();
    if (typeof data !== "object" || data === null || (data.constructor !== Array || !!data.immutable$list) && !data.$isJavaScriptIndexingBehavior())
      return this.apply$4$bailout1(1, destinationBitmapData, destinationPoint, imageData, data);
    t2 = this._matrix;
    t3 = $.getInterceptor$as(t2);
    a00 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 0), 65536));
    if (typeof a00 !== "number")
      return this.apply$4$bailout1(2, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3);
    a01 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 1), 65536));
    if (typeof a01 !== "number")
      return this.apply$4$bailout1(3, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01);
    a02 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 2), 65536));
    if (typeof a02 !== "number")
      return this.apply$4$bailout1(4, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02);
    a03 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 3), 65536));
    if (typeof a03 !== "number")
      return this.apply$4$bailout1(5, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03);
    a04 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 4), 65536));
    if (typeof a04 !== "number")
      return this.apply$4$bailout1(6, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04);
    a05 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 5), 65536));
    if (typeof a05 !== "number")
      return this.apply$4$bailout1(7, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05);
    a06 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 6), 65536));
    if (typeof a06 !== "number")
      return this.apply$4$bailout1(8, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06);
    a07 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 7), 65536));
    if (typeof a07 !== "number")
      return this.apply$4$bailout1(9, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07);
    a08 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 8), 65536));
    if (typeof a08 !== "number")
      return this.apply$4$bailout1(10, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08);
    a09 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 9), 65536));
    if (typeof a09 !== "number")
      return this.apply$4$bailout1(11, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09);
    a10 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 10), 65536));
    if (typeof a10 !== "number")
      return this.apply$4$bailout1(12, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10);
    a11 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 11), 65536));
    if (typeof a11 !== "number")
      return this.apply$4$bailout1(13, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11);
    a12 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 12), 65536));
    if (typeof a12 !== "number")
      return this.apply$4$bailout1(14, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12);
    a13 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 13), 65536));
    if (typeof a13 !== "number")
      return this.apply$4$bailout1(15, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13);
    a14 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 14), 65536));
    if (typeof a14 !== "number")
      return this.apply$4$bailout1(16, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14);
    a15 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 15), 65536));
    if (typeof a15 !== "number")
      return this.apply$4$bailout1(17, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15);
    a16 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 16), 65536));
    if (typeof a16 !== "number")
      return this.apply$4$bailout1(18, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16);
    a17 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 17), 65536));
    if (typeof a17 !== "number")
      return this.apply$4$bailout1(19, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17);
    a18 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 18), 65536));
    if (typeof a18 !== "number")
      return this.apply$4$bailout1(20, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    a19 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 19), 65536));
    if (typeof a19 !== "number")
      return this.apply$4$bailout1(21, destinationBitmapData, destinationPoint, imageData, data, a00, 0, 0, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
    if ($.get$_isLittleEndianSystem() === true)
      for (t1 = data.length, index = 0; index <= t1 - 4; index += 4) {
        t2 = index + 0;
        srcR = data[t2];
        t3 = index + 1;
        srcG = data[t3];
        t4 = index + 2;
        srcB = data[t4];
        t5 = index + 3;
        srcA = data[t5];
        if (typeof srcR !== "number")
          throw $.iae(srcR);
        if (typeof srcG !== "number")
          throw $.iae(srcG);
        if (typeof srcB !== "number")
          throw $.iae(srcB);
        if (typeof srcA !== "number")
          throw $.iae(srcA);
        data[t2] = $.CONSTANT4.$tdiv(a00 * srcR + a01 * srcG + a02 * srcB + a03 * srcA + a04, 65536);
        data[t3] = $.CONSTANT4.$tdiv(a05 * srcR + a06 * srcG + a07 * srcB + a08 * srcA + a09, 65536);
        data[t4] = $.CONSTANT4.$tdiv(a10 * srcR + a11 * srcG + a12 * srcB + a13 * srcA + a14, 65536);
        data[t5] = $.CONSTANT4.$tdiv(a15 * srcR + a16 * srcG + a17 * srcB + a18 * srcA + a19, 65536);
      }
    else
      for (t1 = data.length, index = 0; index <= t1 - 4; index += 4) {
        t2 = index + 0;
        srcA = data[t2];
        t3 = index + 1;
        srcB = data[t3];
        t4 = index + 2;
        srcG = data[t4];
        t5 = index + 3;
        srcR = data[t5];
        if (typeof srcR !== "number")
          throw $.iae(srcR);
        if (typeof srcG !== "number")
          throw $.iae(srcG);
        if (typeof srcB !== "number")
          throw $.iae(srcB);
        if (typeof srcA !== "number")
          throw $.iae(srcA);
        data[t2] = $.CONSTANT4.$tdiv(a15 * srcR + a16 * srcG + a17 * srcB + a18 * srcA + a19, 65536);
        data[t3] = $.CONSTANT4.$tdiv(a10 * srcR + a11 * srcG + a12 * srcB + a13 * srcA + a14, 65536);
        data[t4] = $.CONSTANT4.$tdiv(a05 * srcR + a06 * srcG + a07 * srcB + a08 * srcA + a09, 65536);
        data[t5] = $.CONSTANT4.$tdiv(a00 * srcR + a01 * srcG + a02 * srcB + a03 * srcA + a04, 65536);
      }
    destinationBitmapData._getContext$0().putImageData$3(imageData, destinationPoint.x, destinationPoint.y);
  },
  apply$4$bailout1: function(state0, destinationBitmapData, destinationPoint, imageData, data, a00, t2, t3, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {
    switch (state0) {
      case 0:
        imageData = sourceBitmapData._getContext$0().getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
        data = imageData.get$data();
      case 1:
        state0 = 0;
        t2 = this._matrix;
        t3 = $.getInterceptor$as(t2);
        a00 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 0), 65536));
      case 2:
        state0 = 0;
        a01 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 1), 65536));
      case 3:
        state0 = 0;
        a02 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 2), 65536));
      case 4:
        state0 = 0;
        a03 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 3), 65536));
      case 5:
        state0 = 0;
        a04 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 4), 65536));
      case 6:
        state0 = 0;
        a05 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 5), 65536));
      case 7:
        state0 = 0;
        a06 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 6), 65536));
      case 8:
        state0 = 0;
        a07 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 7), 65536));
      case 9:
        state0 = 0;
        a08 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 8), 65536));
      case 10:
        state0 = 0;
        a09 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 9), 65536));
      case 11:
        state0 = 0;
        a10 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 10), 65536));
      case 12:
        state0 = 0;
        a11 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 11), 65536));
      case 13:
        state0 = 0;
        a12 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 12), 65536));
      case 14:
        state0 = 0;
        a13 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 13), 65536));
      case 15:
        state0 = 0;
        a14 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 14), 65536));
      case 16:
        state0 = 0;
        a15 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 15), 65536));
      case 17:
        state0 = 0;
        a16 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 16), 65536));
      case 18:
        state0 = 0;
        a17 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 17), 65536));
      case 19:
        state0 = 0;
        a18 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 18), 65536));
      case 20:
        state0 = 0;
        a19 = $.toInt$0$n($.$$mul$n(t3.$index(t2, 19), 65536));
      case 21:
        var t1, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, index, t18, srcR, t19, srcG, t20, srcB, t21, srcA;
        state0 = 0;
        if ($.get$_isLittleEndianSystem() === true)
          for (t1 = $.getInterceptor$as(data), t2 = $.getInterceptor$n(a00), t3 = $.getInterceptor$n(a01), t4 = $.getInterceptor$n(a02), t5 = $.getInterceptor$n(a03), t6 = $.getInterceptor$n(a05), t7 = $.getInterceptor$n(a06), t8 = $.getInterceptor$n(a07), t9 = $.getInterceptor$n(a08), t10 = $.getInterceptor$n(a10), t11 = $.getInterceptor$n(a11), t12 = $.getInterceptor$n(a12), t13 = $.getInterceptor$n(a13), t14 = $.getInterceptor$n(a15), t15 = $.getInterceptor$n(a16), t16 = $.getInterceptor$n(a17), t17 = $.getInterceptor$n(a18), index = 0; $.CONSTANT4.$le(index, $.$$sub$n(t1.get$length(data), 4)); index += 4) {
            t18 = index + 0;
            srcR = t1.$index(data, t18);
            t19 = index + 1;
            srcG = t1.$index(data, t19);
            t20 = index + 2;
            srcB = t1.$index(data, t20);
            t21 = index + 3;
            srcA = t1.$index(data, t21);
            t1.$indexSet(data, t18, $.$$tdiv$n($.$$add$n($.$$add$n($.$$add$n($.$$add$n(t2.$mul(a00, srcR), t3.$mul(a01, srcG)), t4.$mul(a02, srcB)), t5.$mul(a03, srcA)), a04), 65536));
            t1.$indexSet(data, t19, $.$$tdiv$n($.$$add$n($.$$add$n($.$$add$n($.$$add$n(t6.$mul(a05, srcR), t7.$mul(a06, srcG)), t8.$mul(a07, srcB)), t9.$mul(a08, srcA)), a09), 65536));
            t1.$indexSet(data, t20, $.$$tdiv$n($.$$add$n($.$$add$n($.$$add$n($.$$add$n(t10.$mul(a10, srcR), t11.$mul(a11, srcG)), t12.$mul(a12, srcB)), t13.$mul(a13, srcA)), a14), 65536));
            t1.$indexSet(data, t21, $.$$tdiv$n($.$$add$n($.$$add$n($.$$add$n($.$$add$n(t14.$mul(a15, srcR), t15.$mul(a16, srcG)), t16.$mul(a17, srcB)), t17.$mul(a18, srcA)), a19), 65536));
          }
        else
          for (t1 = $.getInterceptor$as(data), t2 = $.getInterceptor$n(a15), t3 = $.getInterceptor$n(a16), t4 = $.getInterceptor$n(a17), t5 = $.getInterceptor$n(a18), t6 = $.getInterceptor$n(a10), t7 = $.getInterceptor$n(a11), t8 = $.getInterceptor$n(a12), t9 = $.getInterceptor$n(a13), t10 = $.getInterceptor$n(a05), t11 = $.getInterceptor$n(a06), t12 = $.getInterceptor$n(a07), t13 = $.getInterceptor$n(a08), t14 = $.getInterceptor$n(a00), t15 = $.getInterceptor$n(a01), t16 = $.getInterceptor$n(a02), t17 = $.getInterceptor$n(a03), index = 0; $.CONSTANT4.$le(index, $.$$sub$n(t1.get$length(data), 4)); index += 4) {
            t18 = index + 0;
            srcA = t1.$index(data, t18);
            t19 = index + 1;
            srcB = t1.$index(data, t19);
            t20 = index + 2;
            srcG = t1.$index(data, t20);
            t21 = index + 3;
            srcR = t1.$index(data, t21);
            t1.$indexSet(data, t18, $.$$tdiv$n($.$$add$n($.$$add$n($.$$add$n($.$$add$n(t2.$mul(a15, srcR), t3.$mul(a16, srcG)), t4.$mul(a17, srcB)), t5.$mul(a18, srcA)), a19), 65536));
            t1.$indexSet(data, t19, $.$$tdiv$n($.$$add$n($.$$add$n($.$$add$n($.$$add$n(t6.$mul(a10, srcR), t7.$mul(a11, srcG)), t8.$mul(a12, srcB)), t9.$mul(a13, srcA)), a14), 65536));
            t1.$indexSet(data, t20, $.$$tdiv$n($.$$add$n($.$$add$n($.$$add$n($.$$add$n(t10.$mul(a05, srcR), t11.$mul(a06, srcG)), t12.$mul(a07, srcB)), t13.$mul(a08, srcA)), a09), 65536));
            t1.$indexSet(data, t21, $.$$tdiv$n($.$$add$n($.$$add$n($.$$add$n($.$$add$n(t14.$mul(a00, srcR), t15.$mul(a01, srcG)), t16.$mul(a02, srcB)), t17.$mul(a03, srcA)), a04), 65536));
          }
        destinationBitmapData._getContext$0().putImageData$3(imageData, destinationPoint.x, destinationPoint.y);
    }
  }
};

$$.DropShadowFilter = {"": "BitmapFilter;distance,angle,color>,alpha=,blurX,blurY,strength,inner,knockout,hideObject",
  apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
    var sourceContext, sourceData, sourceWidth, sourceHeight, t4, weightX, t6, weightY, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, alphaChannel, destinationContext, destinationImageData, destinationData, buffer, t1, t2, t3, t5, sum, x, offsetSource, offsetDestination, sum0, dif, y, t7, t8, alpha, aColor, rColor, gColor, bColor, i, sx, sy, dx, dy, uRect;
    sourceContext = sourceBitmapData._getContext$0();
    sourceData = sourceContext.getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height).get$data();
    if (typeof sourceData !== "string" && (typeof sourceData !== "object" || sourceData === null || sourceData.constructor !== Array && !sourceData.$isJavaScriptIndexingBehavior()))
      return this.apply$4$bailout1(1, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext);
    sourceWidth = sourceRect.width;
    if (typeof sourceWidth !== "number")
      return this.apply$4$bailout1(2, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth);
    sourceHeight = sourceRect.height;
    if (typeof sourceHeight !== "number")
      return this.apply$4$bailout1(3, 0, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight);
    t4 = this.blurX;
    if (t4 !== (t4 | 0))
      return this.apply$4$bailout1(4, 0, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, t4);
    weightX = t4 * t4;
    t6 = this.blurY;
    if (t6 !== (t6 | 0))
      return this.apply$4$bailout1(6, 0, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, t4, $.CONSTANT8, weightX, t6);
    weightY = t6 * t6;
    rx2 = t4 * 2;
    ry2 = t6 * 2;
    destinationWidth = sourceWidth + rx2;
    destinationHeight = sourceHeight + ry2;
    sourceWidth4 = sourceWidth * 4;
    destinationWidth4 = destinationWidth * 4;
    alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
    destinationContext = destinationBitmapData._getContext$0();
    destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
    destinationData = destinationImageData.get$data();
    if (typeof destinationData !== "object" || destinationData === null || (destinationData.constructor !== Array || !!destinationData.immutable$list) && !destinationData.$isJavaScriptIndexingBehavior())
      return this.apply$4$bailout1(8, 0, 0, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, t4, 0, weightX, t6, weightY, 0, destinationWidth, sourceWidth4, destinationData, alphaChannel, destinationContext, destinationHeight, destinationWidth4, rx2, destinationImageData, ry2);
    buffer = $.List_List(1024);
    for (t1 = $.getInterceptor$as(sourceData), t2 = buffer.length, t3 = sourceData.length, t5 = destinationData.length, sum = $.CONSTANT8.$shr(weightY, 1), x = 0; x < sourceWidth; ++x) {
      offsetSource = x * 4 + alphaChannel;
      offsetDestination = (x + t4) * 4 + alphaChannel;
      for (sum0 = sum, dif = 0, y = 0; y < destinationHeight; ++y) {
        t7 = $.CONSTANT4.$tdiv(sum0, weightY);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t5)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t7;
        offsetDestination += destinationWidth4;
        if (y >= ry2) {
          t7 = y & 1023;
          if (t7 >= t2)
            throw $.ioore(t7);
          t7 = buffer[t7];
          if (typeof t7 !== "number")
            throw $.iae(t7);
          t8 = y - t6 & 1023;
          if (t8 >= t2)
            throw $.ioore(t8);
          t8 = buffer[t8];
          if (typeof t8 !== "number")
            throw $.iae(t8);
          dif -= 2 * t7 - t8;
        } else if (y >= t6) {
          t7 = y & 1023;
          if (t7 >= t2)
            throw $.ioore(t7);
          t7 = buffer[t7];
          if (typeof t7 !== "number")
            throw $.iae(t7);
          dif -= 2 * t7;
        }
        if (y < sourceHeight) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t3)
            throw $.ioore(offsetSource);
          t7 = sourceData[offsetSource];
          if (typeof t7 !== "number")
            return this.apply$4$bailout1(9, 0, 0, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, $.CONSTANT4, 0, weightX, t6, weightY, 0, destinationWidth, sourceWidth4, destinationData, alphaChannel, destinationContext, destinationHeight, destinationWidth4, rx2, destinationImageData, ry2, sum0, offsetSource, y, t4, $.CONSTANT1, x, $.CONSTANT8, dif, buffer, offsetDestination, t7, t1);
          alpha = t7;
        } else
          alpha = 0;
        t7 = y + t6 & 1023;
        if (t7 >= t2)
          throw $.ioore(t7);
        buffer[t7] = alpha;
        dif += alpha;
        sum0 += dif;
        offsetSource += sourceWidth4;
      }
    }
    for (sum = $.CONSTANT8.$shr(weightX, 1), t1 = t4 * 4, y = 0; y < destinationHeight; ++y) {
      t3 = y * destinationWidth4;
      offsetSource = t3 + t1 + alphaChannel;
      offsetDestination = t3 + alphaChannel;
      for (sum0 = sum, dif = 0, x = 0; x < destinationWidth; ++x) {
        t3 = $.CONSTANT4.$tdiv(sum0, weightX);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t5)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t3;
        offsetDestination += 4;
        if (x >= rx2) {
          t3 = x & 1023;
          if (t3 >= t2)
            throw $.ioore(t3);
          t3 = buffer[t3];
          if (typeof t3 !== "number")
            throw $.iae(t3);
          t7 = x - t4 & 1023;
          if (t7 >= t2)
            throw $.ioore(t7);
          t7 = buffer[t7];
          if (typeof t7 !== "number")
            throw $.iae(t7);
          dif -= 2 * t3 - t7;
        } else if (x >= t4) {
          t3 = x & 1023;
          if (t3 >= t2)
            throw $.ioore(t3);
          t3 = buffer[t3];
          if (typeof t3 !== "number")
            throw $.iae(t3);
          dif -= 2 * t3;
        }
        if (x < sourceWidth) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t5)
            throw $.ioore(offsetSource);
          t3 = destinationData[offsetSource];
          if (typeof t3 !== "number")
            return this.apply$4$bailout1(10, 0, 0, destinationPoint, 0, sourceContext, sourceWidth, sourceHeight, $.CONSTANT4, 0, weightX, t6, 0, 0, destinationWidth, 0, destinationData, alphaChannel, destinationContext, destinationHeight, destinationWidth4, rx2, destinationImageData, 0, sum0, offsetSource, y, t4, $.CONSTANT1, x, $.CONSTANT4, dif, buffer, offsetDestination, t3, $.CONSTANT8);
          alpha = t3;
        } else
          alpha = 0;
        t3 = x + t4 & 1023;
        if (t3 >= t2)
          throw $.ioore(t3);
        buffer[t3] = alpha;
        dif += alpha;
        sum0 += dif;
        offsetSource += 4;
      }
    }
    aColor = $.toInt$0$n($.$$mul$n(this.alpha, 256));
    if (typeof aColor !== "number")
      return this.apply$4$bailout1(11, 0, 0, destinationPoint, 0, sourceContext, sourceWidth, sourceHeight, 0, 0, 0, t6, 0, 0, destinationWidth, 0, destinationData, 0, destinationContext, destinationHeight, 0, 0, destinationImageData, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, aColor);
    t2 = this.color;
    t3 = $.getInterceptor$n(t2);
    rColor = $.$$and$n(t3.$shr(t2, 16), 255);
    gColor = $.$$and$n(t3.$shr(t2, 8), 255);
    bColor = $.$$and$n(t3.$shr(t2, 0), 255);
    if ($.get$_isLittleEndianSystem() === true)
      for (i = 0; i <= destinationData.length - 4; i += 4) {
        t1 = i + 3;
        if ($.$$gt$n(destinationData[t1], 0) === true) {
          t2 = i + 0;
          t3 = destinationData.length;
          if (t2 >= t3)
            throw $.ioore(t2);
          destinationData[t2] = rColor;
          t2 = i + 1;
          if (t2 >= t3)
            throw $.ioore(t2);
          destinationData[t2] = gColor;
          t2 = i + 2;
          if (t2 >= t3)
            throw $.ioore(t2);
          destinationData[t2] = bColor;
          if (t1 >= t3)
            throw $.ioore(t1);
          t2 = $.$$tdiv$n($.$$mul$n(destinationData[t1], aColor), 256);
          if (t1 >= destinationData.length)
            throw $.ioore(t1);
          destinationData[t1] = t2;
        }
      }
    else
      for (i = 0; i <= destinationData.length - 4; i += 4) {
        t1 = i + 3;
        if ($.$$gt$n(destinationData[t1], 0) === true) {
          t2 = i + 0;
          if (t2 >= destinationData.length)
            throw $.ioore(t2);
          t3 = $.$$tdiv$n($.$$mul$n(destinationData[t2], aColor), 256);
          t5 = destinationData.length;
          if (t2 >= t5)
            throw $.ioore(t2);
          destinationData[t2] = t3;
          t3 = i + 1;
          if (t3 >= t5)
            throw $.ioore(t3);
          destinationData[t3] = bColor;
          t3 = i + 2;
          if (t3 >= t5)
            throw $.ioore(t3);
          destinationData[t3] = gColor;
          if (t1 >= t5)
            throw $.ioore(t1);
          destinationData[t1] = rColor;
        }
      }
    sx = destinationPoint.x;
    sy = destinationPoint.y;
    t1 = $.$$sub$n(sx, t4);
    t2 = this.distance;
    t3 = this.angle;
    t4 = $.getInterceptor$n(t2);
    dx = $.$$add$n(t1, $.CONSTANT4.toInt$0($.round$0$n(t4.$mul(t2, Math.cos($.checkNum(t3))))));
    dy = $.$$add$n($.$$sub$n(destinationPoint.y, t6), $.CONSTANT4.toInt$0($.round$0$n(t4.$mul(t2, Math.sin($.checkNum(t3))))));
    uRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight).union$1($.Rectangle$(dx, dy, destinationWidth, destinationHeight));
    destinationContext.setTransform$6(1, 0, 0, 1, 0, 0);
    destinationContext.clearRect$4(uRect.x, uRect.y, uRect.width, uRect.height);
    destinationContext.putImageData$3(destinationImageData, dx, dy);
    if ($.$$eq$o(this.hideObject, false) === true)
      destinationContext.drawImage$3(sourceContext.get$canvas(), sx, sy);
  },
  apply$4$bailout1: function(state0, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, t4, t6, weightX, t8, weightY, t10, destinationWidth, sourceWidth4, destinationData, alphaChannel, destinationContext, destinationHeight, destinationWidth4, rx2, destinationImageData, ry2, sum, offsetSource, y, rx1, t2, x, t3, dif, buffer, offsetDestination, t5, t1, aColor) {
    switch (state0) {
      case 0:
        sourceContext = sourceBitmapData._getContext$0();
        sourceData = sourceContext.getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height).get$data();
      case 1:
        state0 = 0;
        sourceWidth = sourceRect.width;
      case 2:
        state0 = 0;
        sourceHeight = sourceRect.height;
      case 3:
        state0 = 0;
        t4 = this.blurX;
      case 4:
        state0 = 0;
        t6 = $.getInterceptor$n(t4);
        weightX = t6.$mul(t4, t4);
      case 5:
        state0 = 0;
        t8 = this.blurY;
      case 6:
        state0 = 0;
        t10 = $.getInterceptor$n(t8);
        weightY = t10.$mul(t8, t8);
      case 7:
        state0 = 0;
        rx2 = t6.$mul(t4, 2);
        ry2 = t10.$mul(t8, 2);
        t10 = $.getInterceptor$n(sourceWidth);
        destinationWidth = t10.$add(sourceWidth, rx2);
        destinationHeight = $.$$add$n(sourceHeight, ry2);
        sourceWidth4 = t10.$mul(sourceWidth, 4);
        destinationWidth4 = $.$$mul$n(destinationWidth, 4);
        alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
        destinationContext = destinationBitmapData._getContext$0();
        destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
        destinationData = destinationImageData.get$data();
      case 8:
        state0 = 0;
        buffer = $.List_List(1024);
        t1 = $.getInterceptor$as(sourceData);
        t2 = $.getInterceptor$a(destinationData);
        t3 = $.getInterceptor$n(weightY);
        rx1 = t4;
        x = 0;
      case 9:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.CONSTANT4.$lt(x, sourceWidth))
                  break L0;
                sum = t3.$shr(weightY, 1);
                offsetSource = x * 4 + alphaChannel;
                if (typeof rx1 !== "number")
                  throw $.iae(rx1);
                offsetDestination = (x + rx1) * 4 + alphaChannel;
                dif = 0;
                y = 0;
              case 9:
                L1:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.CONSTANT4.$lt(y, destinationHeight))
                          break L1;
                        t4 = $.getInterceptor$n(sum);
                        t2.$indexSet(destinationData, offsetDestination, t4.$tdiv(sum, weightY));
                        if (typeof destinationWidth4 !== "number")
                          throw $.iae(destinationWidth4);
                        offsetDestination += destinationWidth4;
                        if ($.CONSTANT4.$ge(y, ry2)) {
                          t5 = y & 1023;
                          t6 = buffer.length;
                          if (t5 >= t6)
                            throw $.ioore(t5);
                          t5 = buffer[t5];
                          if (typeof t5 !== "number")
                            throw $.iae(t5);
                          if (typeof t8 !== "number")
                            throw $.iae(t8);
                          t7 = y - t8 & 1023;
                          if (t7 >= t6)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          dif -= 2 * t5 - t7;
                        } else if ($.CONSTANT4.$ge(y, t8)) {
                          t5 = y & 1023;
                          if (t5 >= buffer.length)
                            throw $.ioore(t5);
                          t5 = buffer[t5];
                          if (typeof t5 !== "number")
                            throw $.iae(t5);
                          dif -= 2 * t5;
                        }
                      case 9:
                        if (state0 === 9 || state0 === 0 && $.CONSTANT4.$lt(y, sourceHeight))
                          switch (state0) {
                            case 0:
                              t5 = t1.$index(sourceData, offsetSource);
                            case 9:
                              state0 = 0;
                              alpha = t5;
                          }
                        else
                          alpha = 0;
                        if (typeof t8 !== "number")
                          throw $.iae(t8);
                        t5 = y + t8 & 1023;
                        if (t5 >= buffer.length)
                          throw $.ioore(t5);
                        buffer[t5] = alpha;
                        if (typeof alpha !== "number")
                          throw $.iae(alpha);
                        dif += alpha;
                        sum = t4.$add(sum, dif);
                        if (typeof sourceWidth4 !== "number")
                          throw $.iae(sourceWidth4);
                        offsetSource += sourceWidth4;
                        ++y;
                    }
                ++x;
            }
        t1 = $.getInterceptor$n(weightX);
        t3 = $.getInterceptor$n(rx1);
        y = 0;
      case 10:
        L2:
          while (true)
            switch (state0) {
              case 0:
                if (!$.CONSTANT4.$lt(y, destinationHeight))
                  break L2;
                sum = t1.$shr(weightX, 1);
                if (typeof destinationWidth4 !== "number")
                  throw $.iae(destinationWidth4);
                t4 = y * destinationWidth4;
                t5 = t3.$mul(rx1, 4);
                if (typeof t5 !== "number")
                  throw $.iae(t5);
                offsetSource = t4 + t5 + alphaChannel;
                offsetDestination = t4 + alphaChannel;
                dif = 0;
                x = 0;
              case 10:
                L3:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.CONSTANT4.$lt(x, destinationWidth))
                          break L3;
                        t4 = $.getInterceptor$n(sum);
                        t2.$indexSet(destinationData, offsetDestination, t4.$tdiv(sum, weightX));
                        offsetDestination += 4;
                        if ($.CONSTANT4.$ge(x, rx2)) {
                          t5 = x & 1023;
                          t6 = buffer.length;
                          if (t5 >= t6)
                            throw $.ioore(t5);
                          t5 = buffer[t5];
                          if (typeof t5 !== "number")
                            throw $.iae(t5);
                          if (typeof rx1 !== "number")
                            throw $.iae(rx1);
                          t7 = x - rx1 & 1023;
                          if (t7 >= t6)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          dif -= 2 * t5 - t7;
                        } else if ($.CONSTANT4.$ge(x, rx1)) {
                          t5 = x & 1023;
                          if (t5 >= buffer.length)
                            throw $.ioore(t5);
                          t5 = buffer[t5];
                          if (typeof t5 !== "number")
                            throw $.iae(t5);
                          dif -= 2 * t5;
                        }
                      case 10:
                        if (state0 === 10 || state0 === 0 && $.CONSTANT4.$lt(x, sourceWidth))
                          switch (state0) {
                            case 0:
                              t5 = t2.$index(destinationData, offsetSource);
                            case 10:
                              state0 = 0;
                              alpha = t5;
                          }
                        else
                          alpha = 0;
                        if (typeof rx1 !== "number")
                          throw $.iae(rx1);
                        t5 = x + rx1 & 1023;
                        if (t5 >= buffer.length)
                          throw $.ioore(t5);
                        buffer[t5] = alpha;
                        if (typeof alpha !== "number")
                          throw $.iae(alpha);
                        dif += alpha;
                        sum = t4.$add(sum, dif);
                        offsetSource += 4;
                        ++x;
                    }
                ++y;
            }
        aColor = $.toInt$0$n($.$$mul$n(this.alpha, 256));
      case 11:
        var t7, alpha, rColor, gColor, bColor, i, sx, sy, dx, dy, uRect;
        state0 = 0;
        t2 = this.color;
        t3 = $.getInterceptor$n(t2);
        rColor = $.$$and$n(t3.$shr(t2, 16), 255);
        gColor = $.$$and$n(t3.$shr(t2, 8), 255);
        bColor = $.$$and$n(t3.$shr(t2, 0), 255);
        if ($.get$_isLittleEndianSystem() === true)
          for (t1 = $.getInterceptor$as(destinationData), i = 0; $.CONSTANT4.$le(i, $.$$sub$n(t1.get$length(destinationData), 4)); i += 4) {
            t2 = i + 3;
            if ($.$$gt$n(t1.$index(destinationData, t2), 0) === true) {
              t1.$indexSet(destinationData, i + 0, rColor);
              t1.$indexSet(destinationData, i + 1, gColor);
              t1.$indexSet(destinationData, i + 2, bColor);
              t1.$indexSet(destinationData, t2, $.$$tdiv$n($.$$mul$n(t1.$index(destinationData, t2), aColor), 256));
            }
          }
        else
          for (t1 = $.getInterceptor$as(destinationData), i = 0; $.CONSTANT4.$le(i, $.$$sub$n(t1.get$length(destinationData), 4)); i += 4) {
            t2 = i + 3;
            if ($.$$gt$n(t1.$index(destinationData, t2), 0) === true) {
              t3 = i + 0;
              t1.$indexSet(destinationData, t3, $.$$tdiv$n($.$$mul$n(t1.$index(destinationData, t3), aColor), 256));
              t1.$indexSet(destinationData, i + 1, bColor);
              t1.$indexSet(destinationData, i + 2, gColor);
              t1.$indexSet(destinationData, t2, rColor);
            }
          }
        sx = destinationPoint.x;
        sy = destinationPoint.y;
        t1 = $.$$sub$n(sx, rx1);
        t2 = this.distance;
        t3 = this.angle;
        t4 = $.getInterceptor$n(t2);
        dx = $.$$add$n(t1, $.CONSTANT4.toInt$0($.round$0$n(t4.$mul(t2, Math.cos($.checkNum(t3))))));
        dy = $.$$add$n($.$$sub$n(destinationPoint.y, t8), $.CONSTANT4.toInt$0($.round$0$n(t4.$mul(t2, Math.sin($.checkNum(t3))))));
        uRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight).union$1($.Rectangle$(dx, dy, destinationWidth, destinationHeight));
        destinationContext.setTransform$6(1, 0, 0, 1, 0, 0);
        destinationContext.clearRect$4(uRect.x, uRect.y, uRect.width, uRect.height);
        destinationContext.putImageData$3(destinationImageData, dx, dy);
        if ($.$$eq$o(this.hideObject, false) === true)
          destinationContext.drawImage$3(sourceContext.get$canvas(), sx, sy);
    }
  },
  DropShadowFilter$10: function(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
    var t1, t2;
    t1 = this.blurX;
    t2 = $.getInterceptor$n(t1);
    if (t2.$lt(t1, 1) === true || $.$$lt$n(this.blurY, 1) === true)
      throw $.$$throw($.ArgumentError$("Error #9004: The minimum blur size is 1."));
    if (t2.$gt(t1, 128) === true || $.$$gt$n(this.blurY, 128) === true)
      throw $.$$throw($.ArgumentError$("Error #9004: The maximum blur size is 128."));
  }
};

$$.GlowFilter = {"": "BitmapFilter;color>,alpha=,blurX,blurY,strength,inner,knockout,hideObject",
  apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
    var sourceContext, sourceData, sourceWidth, sourceHeight, t4, weightX, t6, weightY, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, alphaChannel, destinationContext, destinationImageData, destinationData, buffer, t1, t2, t3, t5, sum, x, offsetSource, offsetDestination, sum0, dif, y, t7, t8, alpha, aColor, rColor, gColor, bColor, i, sx, sy, dx, dy, uRect;
    sourceContext = sourceBitmapData._getContext$0();
    sourceData = sourceContext.getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height).get$data();
    if (typeof sourceData !== "string" && (typeof sourceData !== "object" || sourceData === null || sourceData.constructor !== Array && !sourceData.$isJavaScriptIndexingBehavior()))
      return this.apply$4$bailout1(1, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext);
    sourceWidth = sourceRect.width;
    if (typeof sourceWidth !== "number")
      return this.apply$4$bailout1(2, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth);
    sourceHeight = sourceRect.height;
    if (typeof sourceHeight !== "number")
      return this.apply$4$bailout1(3, 0, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight);
    t4 = this.blurX;
    if (t4 !== (t4 | 0))
      return this.apply$4$bailout1(4, 0, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, t4);
    weightX = t4 * t4;
    t6 = this.blurY;
    if (t6 !== (t6 | 0))
      return this.apply$4$bailout1(6, 0, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, t4, $.CONSTANT8, weightX, t6);
    weightY = t6 * t6;
    rx2 = t4 * 2;
    ry2 = t6 * 2;
    destinationWidth = sourceWidth + rx2;
    destinationHeight = sourceHeight + ry2;
    sourceWidth4 = sourceWidth * 4;
    destinationWidth4 = destinationWidth * 4;
    alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
    destinationContext = destinationBitmapData._getContext$0();
    destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
    destinationData = destinationImageData.get$data();
    if (typeof destinationData !== "object" || destinationData === null || (destinationData.constructor !== Array || !!destinationData.immutable$list) && !destinationData.$isJavaScriptIndexingBehavior())
      return this.apply$4$bailout1(8, 0, 0, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, t4, 0, weightX, t6, weightY, 0, destinationWidth, sourceWidth4, alphaChannel, destinationImageData, destinationData, destinationContext, destinationHeight, rx2, destinationWidth4, ry2);
    buffer = $.List_List(1024);
    for (t1 = $.getInterceptor$as(sourceData), t2 = buffer.length, t3 = sourceData.length, t5 = destinationData.length, sum = $.CONSTANT8.$shr(weightY, 1), x = 0; x < sourceWidth; ++x) {
      offsetSource = x * 4 + alphaChannel;
      offsetDestination = (x + t4) * 4 + alphaChannel;
      for (sum0 = sum, dif = 0, y = 0; y < destinationHeight; ++y) {
        t7 = $.CONSTANT4.$tdiv(sum0, weightY);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t5)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t7;
        offsetDestination += destinationWidth4;
        if (y >= ry2) {
          t7 = y & 1023;
          if (t7 >= t2)
            throw $.ioore(t7);
          t7 = buffer[t7];
          if (typeof t7 !== "number")
            throw $.iae(t7);
          t8 = y - t6 & 1023;
          if (t8 >= t2)
            throw $.ioore(t8);
          t8 = buffer[t8];
          if (typeof t8 !== "number")
            throw $.iae(t8);
          dif -= 2 * t7 - t8;
        } else if (y >= t6) {
          t7 = y & 1023;
          if (t7 >= t2)
            throw $.ioore(t7);
          t7 = buffer[t7];
          if (typeof t7 !== "number")
            throw $.iae(t7);
          dif -= 2 * t7;
        }
        if (y < sourceHeight) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t3)
            throw $.ioore(offsetSource);
          t7 = sourceData[offsetSource];
          if (typeof t7 !== "number")
            return this.apply$4$bailout1(9, 0, 0, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, $.CONSTANT4, 0, weightX, t6, weightY, 0, destinationWidth, sourceWidth4, alphaChannel, destinationImageData, destinationData, destinationContext, destinationHeight, rx2, destinationWidth4, ry2, sum0, offsetSource, y, t4, $.CONSTANT1, x, $.CONSTANT8, offsetDestination, dif, buffer, t1, t7);
          alpha = t7;
        } else
          alpha = 0;
        t7 = y + t6 & 1023;
        if (t7 >= t2)
          throw $.ioore(t7);
        buffer[t7] = alpha;
        dif += alpha;
        sum0 += dif;
        offsetSource += sourceWidth4;
      }
    }
    for (sum = $.CONSTANT8.$shr(weightX, 1), t1 = t4 * 4, y = 0; y < destinationHeight; ++y) {
      t3 = y * destinationWidth4;
      offsetSource = t3 + t1 + alphaChannel;
      offsetDestination = t3 + alphaChannel;
      for (sum0 = sum, dif = 0, x = 0; x < destinationWidth; ++x) {
        t3 = $.CONSTANT4.$tdiv(sum0, weightX);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t5)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t3;
        offsetDestination += 4;
        if (x >= rx2) {
          t3 = x & 1023;
          if (t3 >= t2)
            throw $.ioore(t3);
          t3 = buffer[t3];
          if (typeof t3 !== "number")
            throw $.iae(t3);
          t7 = x - t4 & 1023;
          if (t7 >= t2)
            throw $.ioore(t7);
          t7 = buffer[t7];
          if (typeof t7 !== "number")
            throw $.iae(t7);
          dif -= 2 * t3 - t7;
        } else if (x >= t4) {
          t3 = x & 1023;
          if (t3 >= t2)
            throw $.ioore(t3);
          t3 = buffer[t3];
          if (typeof t3 !== "number")
            throw $.iae(t3);
          dif -= 2 * t3;
        }
        if (x < sourceWidth) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t5)
            throw $.ioore(offsetSource);
          t3 = destinationData[offsetSource];
          if (typeof t3 !== "number")
            return this.apply$4$bailout1(10, 0, 0, destinationPoint, 0, sourceContext, sourceWidth, sourceHeight, $.CONSTANT4, 0, weightX, t6, 0, 0, destinationWidth, 0, alphaChannel, destinationImageData, destinationData, destinationContext, destinationHeight, rx2, destinationWidth4, 0, sum0, offsetSource, y, t4, $.CONSTANT1, x, $.CONSTANT4, offsetDestination, dif, buffer, $.CONSTANT8, t3);
          alpha = t3;
        } else
          alpha = 0;
        t3 = x + t4 & 1023;
        if (t3 >= t2)
          throw $.ioore(t3);
        buffer[t3] = alpha;
        dif += alpha;
        sum0 += dif;
        offsetSource += 4;
      }
    }
    aColor = $.toInt$0$n($.$$mul$n(this.alpha, 256));
    if (typeof aColor !== "number")
      return this.apply$4$bailout1(11, 0, 0, destinationPoint, 0, sourceContext, sourceWidth, sourceHeight, 0, 0, 0, t6, 0, 0, destinationWidth, 0, 0, destinationImageData, destinationData, destinationContext, destinationHeight, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, aColor);
    t2 = this.color;
    t3 = $.getInterceptor$n(t2);
    rColor = $.$$and$n(t3.$shr(t2, 16), 255);
    gColor = $.$$and$n(t3.$shr(t2, 8), 255);
    bColor = $.$$and$n(t3.$shr(t2, 0), 255);
    if ($.get$_isLittleEndianSystem() === true)
      for (i = 0; i <= destinationData.length - 4; i += 4) {
        t1 = i + 3;
        if ($.$$gt$n(destinationData[t1], 0) === true) {
          t2 = i + 0;
          t3 = destinationData.length;
          if (t2 >= t3)
            throw $.ioore(t2);
          destinationData[t2] = rColor;
          t2 = i + 1;
          if (t2 >= t3)
            throw $.ioore(t2);
          destinationData[t2] = gColor;
          t2 = i + 2;
          if (t2 >= t3)
            throw $.ioore(t2);
          destinationData[t2] = bColor;
          if (t1 >= t3)
            throw $.ioore(t1);
          t2 = $.$$tdiv$n($.$$mul$n(destinationData[t1], aColor), 256);
          if (t1 >= destinationData.length)
            throw $.ioore(t1);
          destinationData[t1] = t2;
        }
      }
    else
      for (i = 0; i <= destinationData.length - 4; i += 4) {
        t1 = i + 3;
        if ($.$$gt$n(destinationData[t1], 0) === true) {
          t2 = i + 0;
          if (t2 >= destinationData.length)
            throw $.ioore(t2);
          t3 = $.$$tdiv$n($.$$mul$n(destinationData[t2], aColor), 256);
          t5 = destinationData.length;
          if (t2 >= t5)
            throw $.ioore(t2);
          destinationData[t2] = t3;
          t3 = i + 1;
          if (t3 >= t5)
            throw $.ioore(t3);
          destinationData[t3] = bColor;
          t3 = i + 2;
          if (t3 >= t5)
            throw $.ioore(t3);
          destinationData[t3] = gColor;
          if (t1 >= t5)
            throw $.ioore(t1);
          destinationData[t1] = rColor;
        }
      }
    sx = destinationPoint.x;
    sy = destinationPoint.y;
    dx = $.$$sub$n(sx, t4);
    dy = $.$$sub$n(destinationPoint.y, t6);
    uRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight).union$1($.Rectangle$(dx, dy, destinationWidth, destinationHeight));
    destinationContext.setTransform$6(1, 0, 0, 1, 0, 0);
    destinationContext.clearRect$4(uRect.x, uRect.y, uRect.width, uRect.height);
    destinationContext.putImageData$3(destinationImageData, dx, dy);
    if ($.$$eq$o(this.hideObject, false) === true)
      destinationContext.drawImage$3(sourceContext.get$canvas(), sx, sy);
  },
  apply$4$bailout1: function(state0, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, t4, t6, weightX, t8, weightY, t10, destinationWidth, sourceWidth4, alphaChannel, destinationImageData, destinationData, destinationContext, destinationHeight, rx2, destinationWidth4, ry2, sum, offsetSource, y, rx1, t2, x, t3, offsetDestination, dif, buffer, t1, t5, aColor) {
    switch (state0) {
      case 0:
        sourceContext = sourceBitmapData._getContext$0();
        sourceData = sourceContext.getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height).get$data();
      case 1:
        state0 = 0;
        sourceWidth = sourceRect.width;
      case 2:
        state0 = 0;
        sourceHeight = sourceRect.height;
      case 3:
        state0 = 0;
        t4 = this.blurX;
      case 4:
        state0 = 0;
        t6 = $.getInterceptor$n(t4);
        weightX = t6.$mul(t4, t4);
      case 5:
        state0 = 0;
        t8 = this.blurY;
      case 6:
        state0 = 0;
        t10 = $.getInterceptor$n(t8);
        weightY = t10.$mul(t8, t8);
      case 7:
        state0 = 0;
        rx2 = t6.$mul(t4, 2);
        ry2 = t10.$mul(t8, 2);
        t10 = $.getInterceptor$n(sourceWidth);
        destinationWidth = t10.$add(sourceWidth, rx2);
        destinationHeight = $.$$add$n(sourceHeight, ry2);
        sourceWidth4 = t10.$mul(sourceWidth, 4);
        destinationWidth4 = $.$$mul$n(destinationWidth, 4);
        alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
        destinationContext = destinationBitmapData._getContext$0();
        destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
        destinationData = destinationImageData.get$data();
      case 8:
        state0 = 0;
        buffer = $.List_List(1024);
        t1 = $.getInterceptor$as(sourceData);
        t2 = $.getInterceptor$a(destinationData);
        t3 = $.getInterceptor$n(weightY);
        rx1 = t4;
        x = 0;
      case 9:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.CONSTANT4.$lt(x, sourceWidth))
                  break L0;
                sum = t3.$shr(weightY, 1);
                offsetSource = x * 4 + alphaChannel;
                if (typeof rx1 !== "number")
                  throw $.iae(rx1);
                offsetDestination = (x + rx1) * 4 + alphaChannel;
                dif = 0;
                y = 0;
              case 9:
                L1:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.CONSTANT4.$lt(y, destinationHeight))
                          break L1;
                        t4 = $.getInterceptor$n(sum);
                        t2.$indexSet(destinationData, offsetDestination, t4.$tdiv(sum, weightY));
                        if (typeof destinationWidth4 !== "number")
                          throw $.iae(destinationWidth4);
                        offsetDestination += destinationWidth4;
                        if ($.CONSTANT4.$ge(y, ry2)) {
                          t5 = y & 1023;
                          t6 = buffer.length;
                          if (t5 >= t6)
                            throw $.ioore(t5);
                          t5 = buffer[t5];
                          if (typeof t5 !== "number")
                            throw $.iae(t5);
                          if (typeof t8 !== "number")
                            throw $.iae(t8);
                          t7 = y - t8 & 1023;
                          if (t7 >= t6)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          dif -= 2 * t5 - t7;
                        } else if ($.CONSTANT4.$ge(y, t8)) {
                          t5 = y & 1023;
                          if (t5 >= buffer.length)
                            throw $.ioore(t5);
                          t5 = buffer[t5];
                          if (typeof t5 !== "number")
                            throw $.iae(t5);
                          dif -= 2 * t5;
                        }
                      case 9:
                        if (state0 === 9 || state0 === 0 && $.CONSTANT4.$lt(y, sourceHeight))
                          switch (state0) {
                            case 0:
                              t5 = t1.$index(sourceData, offsetSource);
                            case 9:
                              state0 = 0;
                              alpha = t5;
                          }
                        else
                          alpha = 0;
                        if (typeof t8 !== "number")
                          throw $.iae(t8);
                        t5 = y + t8 & 1023;
                        if (t5 >= buffer.length)
                          throw $.ioore(t5);
                        buffer[t5] = alpha;
                        if (typeof alpha !== "number")
                          throw $.iae(alpha);
                        dif += alpha;
                        sum = t4.$add(sum, dif);
                        if (typeof sourceWidth4 !== "number")
                          throw $.iae(sourceWidth4);
                        offsetSource += sourceWidth4;
                        ++y;
                    }
                ++x;
            }
        t1 = $.getInterceptor$n(weightX);
        t3 = $.getInterceptor$n(rx1);
        y = 0;
      case 10:
        L2:
          while (true)
            switch (state0) {
              case 0:
                if (!$.CONSTANT4.$lt(y, destinationHeight))
                  break L2;
                sum = t1.$shr(weightX, 1);
                if (typeof destinationWidth4 !== "number")
                  throw $.iae(destinationWidth4);
                t4 = y * destinationWidth4;
                t5 = t3.$mul(rx1, 4);
                if (typeof t5 !== "number")
                  throw $.iae(t5);
                offsetSource = t4 + t5 + alphaChannel;
                offsetDestination = t4 + alphaChannel;
                dif = 0;
                x = 0;
              case 10:
                L3:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.CONSTANT4.$lt(x, destinationWidth))
                          break L3;
                        t4 = $.getInterceptor$n(sum);
                        t2.$indexSet(destinationData, offsetDestination, t4.$tdiv(sum, weightX));
                        offsetDestination += 4;
                        if ($.CONSTANT4.$ge(x, rx2)) {
                          t5 = x & 1023;
                          t6 = buffer.length;
                          if (t5 >= t6)
                            throw $.ioore(t5);
                          t5 = buffer[t5];
                          if (typeof t5 !== "number")
                            throw $.iae(t5);
                          if (typeof rx1 !== "number")
                            throw $.iae(rx1);
                          t7 = x - rx1 & 1023;
                          if (t7 >= t6)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          dif -= 2 * t5 - t7;
                        } else if ($.CONSTANT4.$ge(x, rx1)) {
                          t5 = x & 1023;
                          if (t5 >= buffer.length)
                            throw $.ioore(t5);
                          t5 = buffer[t5];
                          if (typeof t5 !== "number")
                            throw $.iae(t5);
                          dif -= 2 * t5;
                        }
                      case 10:
                        if (state0 === 10 || state0 === 0 && $.CONSTANT4.$lt(x, sourceWidth))
                          switch (state0) {
                            case 0:
                              t5 = t2.$index(destinationData, offsetSource);
                            case 10:
                              state0 = 0;
                              alpha = t5;
                          }
                        else
                          alpha = 0;
                        if (typeof rx1 !== "number")
                          throw $.iae(rx1);
                        t5 = x + rx1 & 1023;
                        if (t5 >= buffer.length)
                          throw $.ioore(t5);
                        buffer[t5] = alpha;
                        if (typeof alpha !== "number")
                          throw $.iae(alpha);
                        dif += alpha;
                        sum = t4.$add(sum, dif);
                        offsetSource += 4;
                        ++x;
                    }
                ++y;
            }
        aColor = $.toInt$0$n($.$$mul$n(this.alpha, 256));
      case 11:
        var t7, alpha, rColor, gColor, bColor, i, sx, sy, dx, dy, uRect;
        state0 = 0;
        t2 = this.color;
        t3 = $.getInterceptor$n(t2);
        rColor = $.$$and$n(t3.$shr(t2, 16), 255);
        gColor = $.$$and$n(t3.$shr(t2, 8), 255);
        bColor = $.$$and$n(t3.$shr(t2, 0), 255);
        if ($.get$_isLittleEndianSystem() === true)
          for (t1 = $.getInterceptor$as(destinationData), i = 0; $.CONSTANT4.$le(i, $.$$sub$n(t1.get$length(destinationData), 4)); i += 4) {
            t2 = i + 3;
            if ($.$$gt$n(t1.$index(destinationData, t2), 0) === true) {
              t1.$indexSet(destinationData, i + 0, rColor);
              t1.$indexSet(destinationData, i + 1, gColor);
              t1.$indexSet(destinationData, i + 2, bColor);
              t1.$indexSet(destinationData, t2, $.$$tdiv$n($.$$mul$n(t1.$index(destinationData, t2), aColor), 256));
            }
          }
        else
          for (t1 = $.getInterceptor$as(destinationData), i = 0; $.CONSTANT4.$le(i, $.$$sub$n(t1.get$length(destinationData), 4)); i += 4) {
            t2 = i + 3;
            if ($.$$gt$n(t1.$index(destinationData, t2), 0) === true) {
              t3 = i + 0;
              t1.$indexSet(destinationData, t3, $.$$tdiv$n($.$$mul$n(t1.$index(destinationData, t3), aColor), 256));
              t1.$indexSet(destinationData, i + 1, bColor);
              t1.$indexSet(destinationData, i + 2, gColor);
              t1.$indexSet(destinationData, t2, rColor);
            }
          }
        sx = destinationPoint.x;
        sy = destinationPoint.y;
        dx = $.$$sub$n(sx, rx1);
        dy = $.$$sub$n(destinationPoint.y, t8);
        uRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight).union$1($.Rectangle$(dx, dy, destinationWidth, destinationHeight));
        destinationContext.setTransform$6(1, 0, 0, 1, 0, 0);
        destinationContext.clearRect$4(uRect.x, uRect.y, uRect.width, uRect.height);
        destinationContext.putImageData$3(destinationImageData, dx, dy);
        if ($.$$eq$o(this.hideObject, false) === true)
          destinationContext.drawImage$3(sourceContext.get$canvas(), sx, sy);
    }
  },
  GlowFilter$8: function(color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
    var t1, t2;
    t1 = this.blurX;
    t2 = $.getInterceptor$n(t1);
    if (t2.$lt(t1, 1) === true || $.$$lt$n(this.blurY, 1) === true)
      throw $.$$throw($.ArgumentError$("Error #9004: The minimum blur size is 1."));
    if (t2.$gt(t1, 128) === true || $.$$gt$n(this.blurY, 128) === true)
      throw $.$$throw($.ArgumentError$("Error #9004: The maximum blur size is 128."));
  }
};

$$.DisplayObject = {"": "EventDispatcher;_alpha>,_parent>",
  get$onEnterFrame: function() {
    return $.CONSTANT45.forTarget$1(this);
  },
  get$x: function() {
    return this._x;
  },
  get$y: function() {
    return this._y;
  },
  get$pivotX: function() {
    return this._pivotX;
  },
  get$pivotY: function() {
    return this._pivotY;
  },
  get$scaleX: function() {
    return this._scaleX;
  },
  get$scaleY: function() {
    return this._scaleY;
  },
  get$rotation: function() {
    return this._rotation;
  },
  get$alpha: function() {
    return this._alpha;
  },
  get$visible: function() {
    return this._visible;
  },
  get$mask: function() {
    return this._mask;
  },
  get$name: function() {
    return this._name;
  },
  get$parent: function() {
    return this._parent;
  },
  get$root: function() {
    var currentObject, currentObject0;
    for (currentObject = this; currentObject0 = currentObject.get$_parent(), currentObject0 != null; currentObject = currentObject0)
      ;
    return currentObject;
  },
  get$stage: function() {
    var root = this.get$root();
    if (typeof root === "object" && root !== null && !!root.$isStage)
      return root;
    return;
  },
  set$x: function(value) {
    this._x = value;
    this._transformationMatrixRefresh = true;
  },
  set$y: function(value) {
    this._y = value;
    this._transformationMatrixRefresh = true;
  },
  set$pivotX: function(value) {
    this._pivotX = value;
    this._transformationMatrixRefresh = true;
  },
  set$pivotY: function(value) {
    this._pivotY = value;
    this._transformationMatrixRefresh = true;
  },
  set$scaleX: function(value) {
    this._scaleX = value;
    this._transformationMatrixRefresh = true;
  },
  set$scaleY: function(value) {
    this._scaleY = value;
    this._transformationMatrixRefresh = true;
  },
  set$rotation: function(value) {
    this._rotation = value;
    this._transformationMatrixRefresh = true;
  },
  set$alpha: function(value) {
    this._alpha = value;
    this._transformationMatrixRefresh = true;
  },
  set$mask: function(value) {
    this._mask = value;
  },
  get$width: function() {
    return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$width();
  },
  get$height: function() {
    return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$height();
  },
  set$width: function(value) {
    var normalWidth;
    this.set$scaleX(1);
    normalWidth = this.get$width();
    this.set$scaleX($.$$eq$o(normalWidth, 0) !== true ? $.$$div$n(value, normalWidth) : 1);
  },
  set$height: function(value) {
    var normalHeight;
    this.set$scaleY(1);
    normalHeight = this.get$height();
    this.set$scaleY($.$$eq$o(normalHeight, 0) !== true ? $.$$div$n(value, normalHeight) : 1);
  },
  addTo$1: function($parent) {
    $parent.addChild$1(this);
  },
  removeFromParent$0: function() {
    var t1 = this._parent;
    if (t1 != null)
      t1.removeChild$1(this);
  },
  get$_transformationMatrix: function() {
    var t1, t3, t4, t5, t7, t9, t11, cosR, sinR, a, b, c, d, t6, t8, tx;
    if (this._transformationMatrixRefresh) {
      this._transformationMatrixRefresh = false;
      t1 = this._rotation;
      if (typeof t1 !== "number")
        return this.get$_transformationMatrix$bailout(1, t1);
      t3 = this._transformationMatrixPrivate;
      if (t1 === 0) {
        t1 = this._scaleX;
        if (typeof t1 !== "number")
          return this.get$_transformationMatrix$bailout(2, t1, t3);
        t4 = this._scaleY;
        t5 = this._x;
        t7 = this._pivotX;
        if (typeof t7 !== "number")
          return this.get$_transformationMatrix$bailout(4, t1, t3, t4, t5, t7);
        if (typeof t5 !== "number")
          return this.get$_transformationMatrix$bailout(3, t1, t3, t4, t5);
        t5 -= t7 * t1;
        t9 = this._y;
        t11 = this._pivotY;
        if (typeof t11 !== "number")
          return this.get$_transformationMatrix$bailout(6, t1, t3, t4, t5, 0, t9, t11);
        if (typeof t4 !== "number")
          return this.get$_transformationMatrix$bailout(7, t1, t3, t4, t5, 0, t9, t11, t4);
        if (typeof t9 !== "number")
          return this.get$_transformationMatrix$bailout(5, t1, t3, t4, t5, 0, t9);
        t3.setTo$6(t1, 0, 0, t4, t5, t9 - t11 * t4);
      } else {
        cosR = $.cos(t1);
        sinR = $.sin(this._rotation);
        t1 = this._scaleX;
        if (typeof t1 !== "number")
          return this.get$_transformationMatrix$bailout(8, t1, t3, 0, 0, 0, 0, 0, 0, cosR, sinR);
        a = t1 * cosR;
        b = t1 * sinR;
        t1 = this._scaleY;
        if (typeof t1 !== "number")
          return this.get$_transformationMatrix$bailout(10, t1, t3, 0, 0, 0, 0, 0, 0, cosR, sinR, a, b);
        c = -t1 * sinR;
        d = t1 * cosR;
        t1 = this._x;
        t6 = this._pivotX;
        if (typeof t6 !== "number")
          return this.get$_transformationMatrix$bailout(13, 0, t3, 0, 0, 0, t6, 0, 0, 0, 0, a, b, c, t1, d);
        if (typeof t1 !== "number")
          return this.get$_transformationMatrix$bailout(12, 0, t3, 0, 0, 0, 0, 0, 0, 0, 0, a, b, c, t1, d);
        t1 -= t6 * a;
        t8 = this._pivotY;
        if (typeof t8 !== "number")
          return this.get$_transformationMatrix$bailout(14, 0, t3, 0, 0, 0, 0, t8, 0, 0, 0, a, b, c, t1, d);
        tx = t1 - t8 * c;
        t1 = this._y;
        if (typeof t1 !== "number")
          return this.get$_transformationMatrix$bailout(15, 0, t3, 0, 0, 0, 0, 0, 0, 0, 0, a, b, c, t1, d, tx);
        t3.setTo$6(a, b, c, d, tx, t1 - t6 * b - t8 * d);
      }
    }
    return this._transformationMatrixPrivate;
  },
  get$_transformationMatrix$bailout: function(state0, t1, t3, t4, t5, t7, t9, t11, t13, cosR, sinR, a, b, c, t6, d, tx, t14, t16) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && this._transformationMatrixRefresh)
          switch (state0) {
            case 0:
              this._transformationMatrixRefresh = false;
              t1 = this._rotation;
            case 1:
              state0 = 0;
              t1 = $.$$eq$o(t1, 0);
              t3 = this._transformationMatrixPrivate;
            default:
              if (state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && t1 === true)
                switch (state0) {
                  case 0:
                    t1 = this._scaleX;
                  case 2:
                    state0 = 0;
                    t4 = this._scaleY;
                    t5 = this._x;
                  case 3:
                    state0 = 0;
                    t7 = this._pivotX;
                  case 4:
                    state0 = 0;
                    t5 = $.$$sub$n(t5, $.$$mul$n(t7, t1));
                    t9 = this._y;
                  case 5:
                    state0 = 0;
                    t11 = this._pivotY;
                  case 6:
                    state0 = 0;
                    t13 = this._scaleY;
                  case 7:
                    state0 = 0;
                    t3.setTo$6(t1, 0, 0, t4, t5, $.$$sub$n(t9, $.$$mul$n(t11, t13)));
                }
              else
                switch (state0) {
                  case 0:
                    cosR = $.cos(this._rotation);
                    sinR = $.sin(this._rotation);
                    t1 = this._scaleX;
                  case 8:
                    state0 = 0;
                    a = $.$$mul$n(t1, cosR);
                    t1 = this._scaleX;
                  case 9:
                    state0 = 0;
                    b = $.$$mul$n(t1, sinR);
                    t1 = this._scaleY;
                  case 10:
                    state0 = 0;
                    c = $.$$negate$n(t1) * sinR;
                    t6 = this._scaleY;
                  case 11:
                    state0 = 0;
                    d = $.$$mul$n(t6, cosR);
                    t6 = this._x;
                  case 12:
                    state0 = 0;
                    t9 = this._pivotX;
                  case 13:
                    state0 = 0;
                    t6 = $.$$sub$n(t6, $.$$mul$n(t9, a));
                    t11 = this._pivotY;
                  case 14:
                    state0 = 0;
                    tx = $.$$sub$n(t6, $.$$mul$n(t11, c));
                    t6 = this._y;
                  case 15:
                    state0 = 0;
                    t14 = this._pivotX;
                  case 16:
                    state0 = 0;
                    t6 = $.$$sub$n(t6, $.$$mul$n(t14, b));
                    t16 = this._pivotY;
                  case 17:
                    state0 = 0;
                    t3.setTo$6(a, b, c, d, tx, $.$$sub$n(t6, $.$$mul$n(t16, d)));
                }
          }
        return this._transformationMatrixPrivate;
    }
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    returnRectangle.set$x(matrix.get$tx());
    returnRectangle.set$y(matrix.get$ty());
    returnRectangle.set$width(0);
    returnRectangle.set$height(0);
    return returnRectangle;
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    if ($.contains$2$s(this.getBoundsTransformed$1(this._tmpMatrixIdentity), localX, localY) === true)
      return this;
    return;
  },
  globalToLocal$1: function(globalPoint) {
    var t1, displayObject;
    t1 = this._tmpMatrix;
    t1.identity$0();
    for (displayObject = this; displayObject != null; displayObject = displayObject.get$_parent())
      t1.concat$1(displayObject.get$_transformationMatrix());
    t1.invert$0();
    return t1.transformPoint$1(globalPoint);
  },
  dispatchEvent$1: function($event) {
    var ancestor, ancestors, t1, t2, i;
    if ($event.get$captures() || $event.get$bubbles() === true) {
      for (ancestor = this._parent, ancestors = null; ancestor != null; ancestor = ancestor.get$_parent())
        if (ancestor.hasEventListener$1($event.get$type())) {
          if (ancestors == null)
            ancestors = $.List_List(0);
          $.add$1$a(ancestors, ancestor);
        }
    } else
      ancestors = null;
    if ($event.get$captures() && ancestors != null) {
      t1 = $.getInterceptor$as(ancestors);
      t2 = t1.get$length(ancestors);
      if (typeof t2 !== "number")
        return this.dispatchEvent$1$bailout1(1, $event, ancestors, t1, t2);
      i = t2 - 1;
      for (; i >= 0; --i) {
        t2 = $event.get$stopsPropagation();
        if (typeof t2 !== "boolean")
          return this.dispatchEvent$1$bailout1(2, $event, ancestors, t1, $.CONSTANT4, t2, i);
        if (!t2)
          t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 1);
      }
    }
    t1 = $event.get$stopsPropagation();
    if (typeof t1 !== "boolean")
      return this.dispatchEvent$1$bailout1(3, $event, ancestors, t1);
    if (!t1)
      this._dispatchEventInternal$4($event, this, this, 2);
    if ($event.get$bubbles() === true && ancestors != null) {
      t1 = $.getInterceptor$as(ancestors);
      i = 0;
      while (true) {
        t2 = t1.get$length(ancestors);
        if (typeof t2 !== "number")
          return this.dispatchEvent$1$bailout1(4, $event, ancestors, t1, t2, 0, i);
        if (!(i < t2))
          break;
        t2 = $event.get$stopsPropagation();
        if (typeof t2 !== "boolean")
          return this.dispatchEvent$1$bailout1(5, $event, ancestors, t1, t2, 0, i);
        if (!t2)
          t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 3);
        ++i;
      }
    }
  },
  dispatchEvent$1$bailout1: function(state0, $event, ancestors, t1, t2, t3, i) {
    switch (state0) {
      case 0:
        if ($event.get$captures() || $event.get$bubbles() === true) {
          for (ancestor = this._parent, ancestors = null; ancestor != null; ancestor = ancestor.get$_parent())
            if (ancestor.hasEventListener$1($event.get$type())) {
              if (ancestors == null)
                ancestors = $.List_List(0);
              $.add$1$a(ancestors, ancestor);
            }
        } else
          ancestors = null;
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && $event.get$captures() && ancestors != null)
          switch (state0) {
            case 0:
              t1 = $.getInterceptor$as(ancestors);
              t2 = t1.get$length(ancestors);
            case 1:
              state0 = 0;
              i = $.$$sub$n(t2, 1);
            case 2:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = $.getInterceptor$n(i);
                      if (!(t2.$ge(i, 0) === true))
                        break L0;
                      t3 = $event.get$stopsPropagation();
                    case 2:
                      state0 = 0;
                      if ($.$$eq$o(t3, false) === true)
                        t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 1);
                      i = t2.$sub(i, 1);
                  }
          }
        t1 = $event.get$stopsPropagation();
      case 3:
        state0 = 0;
        if ($.$$eq$o(t1, false) === true)
          this._dispatchEventInternal$4($event, this, this, 2);
      case 4:
      case 5:
        var ancestor;
        if (state0 === 5 || state0 === 4 || state0 === 0 && $event.get$bubbles() === true && ancestors != null)
          switch (state0) {
            case 0:
              t1 = $.getInterceptor$as(ancestors);
              i = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = t1.get$length(ancestors);
                    case 4:
                      state0 = 0;
                      if (!$.CONSTANT4.$lt(i, t2))
                        break L1;
                      t2 = $event.get$stopsPropagation();
                    case 5:
                      state0 = 0;
                      if ($.$$eq$o(t2, false) === true)
                        t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 3);
                      ++i;
                  }
          }
    }
  },
  _setParent$1: function(value) {
    var ancestor;
    for (ancestor = value; ancestor != null; ancestor = ancestor.get$_parent())
      if ($.$$eq$o(ancestor, this))
        throw $.$$throw($.ArgumentError$("Error #2150: An object cannot be added as a child to one of it's children (or children's children, etc.)."));
    this._parent = value;
  }
};

$$.InteractiveObject = {"": "DisplayObject;",
  get$onMouseOut: function() {
    return $.CONSTANT28.forTarget$1(this);
  },
  get$onMouseOver: function() {
    return $.CONSTANT44.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT30.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT34.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT32.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT26.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT20.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT22.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT16.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT12.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT14.forTarget$1(this);
  },
  $isInteractiveObject: true
};

$$.DisplayObjectContainer = {"": "InteractiveObject;",
  get$numChildren: function() {
    return this._children.length;
  },
  addChild$1: function(child) {
    var t1, t2;
    t1 = $.$$eq$o(child.get$parent(), this);
    t2 = this._children;
    if (t1 === true) {
      $.CONSTANT1.removeAt$1(t2, $.CONSTANT1.indexOf$1(t2, child));
      $.CONSTANT1.add$1(t2, child);
    } else
      this.addChildAt$2(child, t2.length);
  },
  addChildAt$2: function(child, index) {
    var t1, t2;
    if (index < 0) {
      this._children.length;
      t1 = false;
    } else
      t1 = false;
    if (t1)
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    if ($.$$eq$o(child, this) === true)
      throw $.$$throw($.ArgumentError$("Error #2024: An object cannot be added as a child of itself."));
    t1 = $.$$eq$o(child.get$parent(), this);
    t2 = this._children;
    if (t1 === true) {
      $.CONSTANT1.removeAt$1(t2, $.CONSTANT1.indexOf$1(t2, child));
      $.CONSTANT1.insertRange$3(t2, index > t2.length ? index - 1 : index, 1, child);
    } else {
      child.removeFromParent$0();
      child._setParent$1(this);
      $.CONSTANT1.insertRange$3(t2, index, 1, child);
      child.dispatchEvent$1($.Event$("added", true));
      if (this.get$stage() != null)
        this._dispatchEventOnChildren$2(child, $.Event$("addedToStage", false));
    }
  },
  removeChild$1: function(child) {
    var childIndex = $.CONSTANT1.indexOf$1(this._children, child);
    if ($.$$eq$o(childIndex, -1) === true)
      throw $.$$throw($.ArgumentError$("Error #2025: The supplied DisplayObject must be a child of the caller."));
    this.removeChildAt$1(childIndex);
  },
  removeChildAt$1: function(index) {
    var t1, child;
    t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) === true && t1.$ge(index, this._children.length) === true)
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    t1 = this._children;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    child = t1[index];
    child.dispatchEvent$1($.Event$("removed", true));
    if (this.get$stage() != null)
      this._dispatchEventOnChildren$2(child, $.Event$("removedFromStage", false));
    child._setParent$1(null);
    $.CONSTANT1.removeAt$1(t1, index);
  },
  getChildAt$1: function(index) {
    var t1;
    if (index < 0) {
      this._children.length;
      t1 = false;
    } else
      t1 = false;
    if (t1)
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    t1 = this._children;
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  contains$1: function(child) {
    for (; child != null; child = child.get$_parent())
      if ($.$$eq$o(child, this) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1, t2, left, $top, right, bottom, i, child, rectangle;
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    t1 = this._children;
    if (t1.length === 0)
      return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
    for (t2 = this._tmpMatrix, left = (1/0), $top = (1/0), right = (-1/0), bottom = (-1/0), i = 0; i < t1.length; ++i) {
      child = t1[i];
      t2.copyFromAndConcat$2(child.get$_transformationMatrix(), matrix);
      rectangle = child.getBoundsTransformed$2(t2, returnRectangle);
      if ($.$$lt$n(rectangle.get$left(), left) === true)
        left = rectangle.get$left();
      if ($.$$lt$n(rectangle.get$top(), $top) === true)
        $top = rectangle.get$top();
      if ($.$$gt$n(rectangle.get$right(), right) === true)
        right = rectangle.get$right();
      if ($.$$gt$n(rectangle.get$bottom(), bottom) === true)
        bottom = rectangle.get$bottom();
    }
    returnRectangle.set$x(left);
    returnRectangle.set$y($top);
    returnRectangle.set$width($.$$sub$n(right, left));
    returnRectangle.set$height($.$$sub$n(bottom, $top));
    return returnRectangle;
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1, i, hit, child, matrix, t2, deltaX, deltaY, t6, t8, childX, t10, t12, displayObject;
    if (typeof localX !== "number")
      return this.hitTestInput$2$bailout1(1, localX, localY);
    if (typeof localY !== "number")
      return this.hitTestInput$2$bailout1(1, localX, localY);
    for (t1 = this._children, i = t1.length - 1, hit = null; i >= 0; --i) {
      if (i >= t1.length)
        throw $.ioore(i);
      child = t1[i];
      if (child.get$visible() === true) {
        matrix = child.get$_transformationMatrix();
        t2 = matrix.get$tx();
        if (typeof t2 !== "number")
          return this.hitTestInput$2$bailout1(2, localX, localY, i, $.CONSTANT4, hit, child, t1, matrix, t2, $.CONSTANT4);
        deltaX = localX - t2;
        t2 = matrix.get$ty();
        if (typeof t2 !== "number")
          return this.hitTestInput$2$bailout1(3, localX, localY, i, $.CONSTANT4, hit, child, t1, matrix, t2, $.CONSTANT4, deltaX);
        deltaY = localY - t2;
        t2 = matrix.get$d();
        if (typeof t2 !== "number")
          return this.hitTestInput$2$bailout1(4, localX, localY, i, $.CONSTANT4, hit, child, t1, matrix, t2, $.CONSTANT4, deltaX, deltaY);
        t2 *= deltaX;
        t6 = matrix.get$c();
        if (typeof t6 !== "number")
          return this.hitTestInput$2$bailout1(5, localX, localY, i, $.CONSTANT4, hit, child, t1, matrix, t2, $.CONSTANT4, deltaX, deltaY, t6);
        t2 -= t6 * deltaY;
        t8 = matrix.get$det();
        if (typeof t8 !== "number")
          return this.hitTestInput$2$bailout1(6, localX, localY, i, $.CONSTANT4, hit, child, t1, matrix, t2, $.CONSTANT4, deltaX, deltaY, 0, t8);
        childX = t2 / t8;
        t8 = matrix.get$a();
        if (typeof t8 !== "number")
          return this.hitTestInput$2$bailout1(7, localX, localY, i, $.CONSTANT4, hit, child, t1, matrix, 0, $.CONSTANT4, deltaX, deltaY, 0, t8, childX);
        t8 *= deltaY;
        t10 = matrix.get$b();
        if (typeof t10 !== "number")
          return this.hitTestInput$2$bailout1(8, localX, localY, i, $.CONSTANT4, hit, child, t1, matrix, 0, $.CONSTANT4, deltaX, 0, 0, t8, childX, t10);
        t8 -= t10 * deltaX;
        t12 = matrix.get$det();
        if (typeof t12 !== "number")
          return this.hitTestInput$2$bailout1(9, localX, localY, i, $.CONSTANT4, hit, child, t1, 0, 0, $.CONSTANT4, 0, 0, 0, t8, childX, 0, t12);
        displayObject = child.hitTestInput$2(childX, t8 / t12);
        if (displayObject != null) {
          if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isInteractiveObject)
            if (displayObject.mouseEnabled === true)
              return this._mouseChildren ? displayObject : this;
          hit = this;
        }
      }
    }
    return hit;
  },
  hitTestInput$2$bailout1: function(state0, localX, localY, i, t3, hit, child, t1, matrix, t4, t2, deltaX, deltaY, t8, t10, childX, t12, t14) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._children;
        i = t1.length - 1;
        t2 = $.getInterceptor$n(localX);
        t3 = $.getInterceptor$n(localY);
        hit = null;
      default:
        var displayObject;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(i >= 0))
                  break L0;
                if (i >= t1.length)
                  throw $.ioore(i);
                child = t1[i];
              default:
                if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && child.get$visible() === true)
                  switch (state0) {
                    case 0:
                      matrix = child.get$_transformationMatrix();
                      t4 = matrix.get$tx();
                    case 2:
                      state0 = 0;
                      deltaX = t2.$sub(localX, t4);
                      t4 = matrix.get$ty();
                    case 3:
                      state0 = 0;
                      deltaY = t3.$sub(localY, t4);
                      t4 = matrix.get$d();
                    case 4:
                      state0 = 0;
                      t4 = $.$$mul$n(t4, deltaX);
                      t8 = matrix.get$c();
                    case 5:
                      state0 = 0;
                      t4 = $.$$sub$n(t4, $.$$mul$n(t8, deltaY));
                      t10 = matrix.get$det();
                    case 6:
                      state0 = 0;
                      childX = $.$$div$n(t4, t10);
                      t10 = matrix.get$a();
                    case 7:
                      state0 = 0;
                      t10 = $.$$mul$n(t10, deltaY);
                      t12 = matrix.get$b();
                    case 8:
                      state0 = 0;
                      t10 = $.$$sub$n(t10, $.$$mul$n(t12, deltaX));
                      t14 = matrix.get$det();
                    case 9:
                      state0 = 0;
                      displayObject = child.hitTestInput$2(childX, $.$$div$n(t10, t14));
                      if (displayObject != null) {
                        if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isInteractiveObject)
                          if (displayObject.mouseEnabled === true)
                            return this._mouseChildren ? displayObject : this;
                        hit = this;
                      }
                  }
                --i;
            }
        return hit;
    }
  },
  render$1: function(renderState) {
    var t1, i, child;
    for (t1 = this._children, i = 0; i < t1.length; ++i) {
      child = t1[i];
      if (child.get$visible() === true)
        renderState.renderDisplayObject$1(child);
    }
  },
  _dispatchEventOnChildren$2: function(displayObject, $event) {
    var children, i;
    displayObject.dispatchEvent$1($event);
    if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isDisplayObjectContainer) {
      children = $.List_List$from(displayObject._children);
      for (i = 0; i < children.length; ++i)
        this._dispatchEventOnChildren$2(children[i], $event);
    }
  },
  $isDisplayObjectContainer: true
};

$$._MouseButton = {"": "Object;target=,buttonDown=,clickTime=,clickCount=,mouseDownEventType>,mouseUpEventType>,mouseClickEventType>,mouseDoubleClickEventType>"};

$$._Touch = {"": "Object;touchPointID>,target=,primaryTouchPoint>"};

$$.Stage = {"": "DisplayObjectContainer;_canvas,_context,_focus,_renderState,_renderMode,_mouseCursor,_mousePosition,_mouseTarget,_mouseButtons,_touches,_mouseEvent,_keyboardEvent,_touchEvent,_touchEventSubscriptions,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  get$focus: function() {
    return this._focus;
  },
  focus$0: function() {
    return this.get$focus().call$0();
  },
  _throwStageException$0: function() {
    throw $.$$throw($.UnsupportedError$("Error #2071: The Stage class does not implement this property or method."));
  },
  set$x: function(value) {
    this._throwStageException$0();
  },
  set$y: function(value) {
    this._throwStageException$0();
  },
  set$pivotX: function(value) {
    this._throwStageException$0();
  },
  set$pivotY: function(value) {
    this._throwStageException$0();
  },
  set$scaleX: function(value) {
    this._throwStageException$0();
  },
  set$scaleY: function(value) {
    this._throwStageException$0();
  },
  set$rotation: function(value) {
    this._throwStageException$0();
  },
  set$alpha: function(value) {
    this._throwStageException$0();
  },
  set$width: function(value) {
    this._throwStageException$0();
  },
  set$height: function(value) {
    this._throwStageException$0();
  },
  materialize$0: function() {
    if ($.$$eq$o(this._renderMode, "auto") === true || $.$$eq$o(this._renderMode, "once") === true) {
      this._renderState.reset$0();
      this.render$1(this._renderState);
      if ($.$$eq$o(this._renderMode, "once") === true)
        this._renderMode = "stop";
    }
  },
  _onMouseCursorChanged$1: function(action) {
    var t1 = $.Mouse__getCssStyle(this._mouseCursor);
    this._canvas.get$style().set$cursor(t1);
  },
  get$_onMouseCursorChanged: function() {
    return new $.BoundClosure$1(this, "_onMouseCursorChanged$1");
  },
  _onMouseEvent$1: function($event) {
    var clientRect, time, button, stagePoint, t1, mouseButton, target, mouseCursor, t2, t3, t4, t5, mouseEventType, isClick, isDoubleClick, localPoint;
    $event.preventDefault$0();
    clientRect = this._canvas.getBoundingClientRect$0();
    time = $.DateTime$_now().millisecondsSinceEpoch;
    button = $event.get$button();
    stagePoint = $.Point$($.$$sub$n($event.get$clientX(), clientRect.get$left()), $.$$sub$n($event.get$clientY(), clientRect.get$top()));
    t1 = $.getInterceptor$n(button);
    if (t1.$lt(button, 0) === true || t1.$gt(button, 2) === true)
      return;
    if ($.$$eq$o($event.get$type(), "mousemove") === true && this._mousePosition.equals$1(stagePoint) === true)
      return;
    mouseButton = $.$$index$as(this._mouseButtons, button);
    this._mousePosition = stagePoint;
    target = $.$$eq$o($event.get$type(), "mouseout") !== true ? $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), "$isInteractiveObject") : null;
    mouseCursor = typeof target === "object" && target !== null && !!target.$isSprite ? target.useHandCursor === true ? "button" : "arrow" : "arrow";
    if (typeof target === "object" && target !== null && !!target.$isSimpleButton)
      mouseCursor = target.get$useHandCursor() === true ? "button" : mouseCursor;
    if ($.$$eq$o(this._mouseCursor, mouseCursor) !== true) {
      this._mouseCursor = mouseCursor;
      t1 = $.Mouse__getCssStyle(mouseCursor);
      this._canvas.get$style().set$cursor(t1);
    }
    t1 = this._mouseTarget;
    if (t1 != null && $.$$eq$o(t1, target) !== true) {
      t1 = this._mouseTarget;
      t2 = mouseButton.get$buttonDown();
      t3 = this._mouseTarget.get$stage() != null ? this._mouseTarget.globalToLocal$1(stagePoint) : $.Point$zero();
      t4 = this._mouseEvent;
      t4._reset$2("mouseOut", true);
      t4.set$_localPoint(t3);
      t4.set$_stagePoint(stagePoint);
      t4.set$_buttonDown(t2);
      t1.dispatchEvent$1(t4);
      this._mouseTarget = null;
    }
    t1 = $.getInterceptor(target);
    t2 = target != null;
    if (t2 && !t1.$eq(target, this._mouseTarget)) {
      t3 = mouseButton.get$buttonDown();
      t4 = target.globalToLocal$1(stagePoint);
      t5 = this._mouseEvent;
      t5._reset$2("mouseOver", true);
      t5.set$_localPoint(t4);
      t5.set$_stagePoint(stagePoint);
      t5.set$_buttonDown(t3);
      target.dispatchEvent$1(t5);
      this._mouseTarget = target;
    }
    if ($.$$eq$o($event.get$type(), "mousedown") === true) {
      mouseEventType = mouseButton.get$mouseDownEventType();
      if (!t1.$eq(target, mouseButton.get$target()) || $.$$gt$n(time, $.$$add$n(mouseButton.get$clickTime(), 500)) === true)
        mouseButton.set$clickCount(0);
      mouseButton.set$buttonDown(true);
      mouseButton.set$target(target);
      mouseButton.set$clickTime(time);
      mouseButton.set$clickCount($.$$add$n(mouseButton.get$clickCount(), 1));
    } else
      mouseEventType = null;
    if ($.$$eq$o($event.get$type(), "mouseup") === true) {
      mouseEventType = mouseButton.get$mouseUpEventType();
      mouseButton.set$buttonDown(false);
      isClick = $.$$eq$o(mouseButton.get$target(), target);
      isDoubleClick = isClick === true && $.get$isEven$JSInt(mouseButton.get$clickCount()) === true && $.$$lt$n(time, $.$$add$n(mouseButton.get$clickTime(), 500)) === true;
    } else {
      isClick = false;
      isDoubleClick = false;
    }
    if ($.$$eq$o($event.get$type(), "mousemove") === true)
      mouseEventType = "mouseMove";
    if (mouseEventType != null && t2) {
      localPoint = target.globalToLocal$1(stagePoint);
      t1 = mouseButton.get$clickCount();
      t2 = mouseButton.get$buttonDown();
      t3 = this._mouseEvent;
      t3._reset$2(mouseEventType, true);
      t3.set$_localPoint(localPoint);
      t3.set$_stagePoint(stagePoint);
      t3.set$_buttonDown(t2);
      t3.set$_clickCount(t1);
      target.dispatchEvent$1(t3);
      if (isClick === true)
        if (isDoubleClick && target.doubleClickEnabled) {
          t1 = mouseButton.get$buttonDown();
          t2 = this._mouseEvent;
          t2._reset$2(mouseButton.get$mouseDoubleClickEventType(), true);
          t2.set$_localPoint(localPoint);
          t2.set$_stagePoint(stagePoint);
          t2.set$_buttonDown(t1);
          target.dispatchEvent$1(t2);
        } else {
          t1 = mouseButton.get$buttonDown();
          t2 = this._mouseEvent;
          t2._reset$2(mouseButton.get$mouseClickEventType(), true);
          t2.set$_localPoint(localPoint);
          t2.set$_stagePoint(stagePoint);
          t2.set$_buttonDown(t1);
          target.dispatchEvent$1(t2);
        }
    }
  },
  get$_onMouseEvent: function() {
    return new $.BoundClosure$1(this, "_onMouseEvent$1");
  },
  _onMultitouchInputModeChanged$1: function(inputMode) {
    $.CONSTANT1.forEach$1(this._touchEventSubscriptions, new $.Stage__onMultitouchInputModeChanged_anon());
    $.Multitouch__initialize();
    if ($.$$eq$o($.Multitouch__inputMode, "touchPoint") === true)
      this._touchEventSubscriptions = [this._canvas.get$onTouchStart().listen$1(this.get$_onTouchEvent()), this._canvas.get$onTouchEnd().listen$1(this.get$_onTouchEvent()), this._canvas.get$onTouchMove().listen$1(this.get$_onTouchEvent()), this._canvas.get$onTouchEnter().listen$1(this.get$_onTouchEvent()), this._canvas.get$onTouchLeave().listen$1(this.get$_onTouchEvent()), this._canvas.get$onTouchCancel().listen$1(this.get$_onTouchEvent())];
  },
  get$_onMultitouchInputModeChanged: function() {
    return new $.BoundClosure$1(this, "_onMultitouchInputModeChanged$1");
  },
  _onTouchEvent$1: function($event) {
    var clientRect, t1, t2, identifier, stagePoint, target, t3, touch, t4, t5, t6, touchEventType;
    $event.preventDefault$0();
    clientRect = this._canvas.getBoundingClientRect$0();
    for (t1 = $.get$iterator$a($event.get$changedTouches()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      identifier = t2.get$identifier();
      stagePoint = $.Point$($.$$sub$n(t2.get$clientX(), clientRect.get$left()), $.$$sub$n(t2.get$clientY(), clientRect.get$top()));
      target = $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), "$isInteractiveObject");
      t2 = this._touches.containsKey$1(identifier);
      t3 = this._touches;
      touch = t2 === true ? $.$$index$as(t3, identifier) : $._Touch$(target, $.$$eq$o($.get$length$as(t3), 0));
      if (touch.get$target() != null && $.$$eq$o(touch.get$target(), target) !== true) {
        t2 = touch.get$target();
        t3 = touch.get$primaryTouchPoint();
        t4 = touch.get$touchPointID();
        t5 = touch.get$target().get$stage() != null ? touch.get$target().globalToLocal$1(stagePoint) : $.Point$zero();
        t6 = this._touchEvent;
        t6._reset$2("touchOut", true);
        t6.set$_localPoint(t5);
        t6.set$_stagePoint(stagePoint);
        t6.set$_touchPointID(t4);
        t6.set$_isPrimaryTouchPoint(t3);
        t2.dispatchEvent$1(t6);
        touch.set$target(null);
      }
      t2 = target != null;
      if (t2 && !$.$$eq$o(target, touch.get$target())) {
        t3 = touch.get$primaryTouchPoint();
        t4 = touch.get$touchPointID();
        t5 = target.globalToLocal$1(stagePoint);
        t6 = this._touchEvent;
        t6._reset$2("touchOver", true);
        t6.set$_localPoint(t5);
        t6.set$_stagePoint(stagePoint);
        t6.set$_touchPointID(t4);
        t6.set$_isPrimaryTouchPoint(t3);
        target.dispatchEvent$1(t6);
        touch.set$target(target);
      }
      if ($.$$eq$o($event.get$type(), "touchstart") === true) {
        $.$$indexSet$a(this._touches, identifier, touch);
        touchEventType = "touchBegin";
      } else
        touchEventType = null;
      if ($.$$eq$o($event.get$type(), "touchend") === true) {
        $.remove$1$a(this._touches, identifier);
        touchEventType = "touchEnd";
      }
      if ($.$$eq$o($event.get$type(), "touchcancel") === true) {
        $.remove$1$a(this._touches, identifier);
        touchEventType = "touchCancel";
      }
      if ($.$$eq$o($event.get$type(), "touchmove") === true)
        touchEventType = "touchMove";
      if (touchEventType != null && t2) {
        t2 = touch.get$primaryTouchPoint();
        t3 = touch.get$touchPointID();
        t4 = target.globalToLocal$1(stagePoint);
        t5 = this._touchEvent;
        t5._reset$2(touchEventType, true);
        t5.set$_localPoint(t4);
        t5.set$_stagePoint(stagePoint);
        t5.set$_touchPointID(t3);
        t5.set$_isPrimaryTouchPoint(t2);
        target.dispatchEvent$1(t5);
      }
    }
  },
  get$_onTouchEvent: function() {
    return new $.BoundClosure$1(this, "_onTouchEvent$1");
  },
  _onKeyEvent$1: function($event) {
    var keyboardEventType, t1, t2, t3, t4, t5, t6;
    $event.preventDefault$0();
    keyboardEventType = $.$$eq$o($event.get$type(), "keyup") === true ? "keyUp" : null;
    if ($.$$eq$o($event.get$type(), "keydown") === true)
      keyboardEventType = "keyDown";
    t1 = $event.get$keyCode();
    t2 = $event.get$charCode();
    t3 = $event.get$shiftKey();
    t4 = $event.get$ctrlKey();
    t5 = $event.get$altKey();
    t6 = this._keyboardEvent;
    t6._reset$2(keyboardEventType, true);
    t6.set$_altKey(t5);
    t6.set$_ctrlKey(t4);
    t6.set$_shiftKey(t3);
    t6.set$_charCode(t2);
    t6.set$_keyCode(t1);
    t6.set$_keyLocation(0);
    if ($.$$eq$o($event.get$keyLocation(), 1) === true)
      this._keyboardEvent.set$_keyLocation(1);
    if ($.$$eq$o($event.get$keyLocation(), 2) === true)
      this._keyboardEvent.set$_keyLocation(2);
    if ($.$$eq$o($event.get$keyLocation(), 3) === true)
      this._keyboardEvent.set$_keyLocation(3);
    if ($.$$eq$o($event.get$keyLocation(), 5) === true)
      this._keyboardEvent.set$_keyLocation(4);
    if ($.$$eq$o($event.get$keyLocation(), 4) === true)
      this._keyboardEvent.set$_keyLocation(4);
    t1 = this._focus;
    if (t1 != null)
      t1.dispatchEvent$1(this._keyboardEvent);
  },
  get$_onKeyEvent: function() {
    return new $.BoundClosure$1(this, "_onKeyEvent$1");
  },
  _onTextEvent$1: function($event) {
    var charCode, textEvent, t1;
    charCode = $.$$eq$o($event.get$charCode(), 0) !== true ? $event.get$charCode() : $event.get$keyCode();
    textEvent = $.TextEvent$("textInput", true);
    textEvent._text = $.String_String$fromCharCodes([charCode]);
    t1 = this._focus;
    if (t1 != null)
      t1.dispatchEvent$1(textEvent);
  },
  get$_onTextEvent: function() {
    return new $.BoundClosure$1(this, "_onTextEvent$1");
  },
  Stage$2: function($name, canvas) {
    this._name = $name;
    this._canvas = canvas;
    this._canvas.focus$0();
    this._context = canvas.get$context2d();
    this._renderState = $.RenderState$fromCanvasRenderingContext2D(this._context, null);
    this._renderMode = "auto";
    this._mouseCursor = "arrow";
    $.get$Mouse__onMouseCursorChanged().listen$1(this.get$_onMouseCursorChanged());
    this._mouseButtons = [$._MouseButton$("mouseDown", "mouseUp", "click", "doubleClick"), $._MouseButton$("middleMouseDown", "middleMouseUp", "middleClick", "middleClick"), $._MouseButton$("rightMouseDown", "rightMouseUp", "rightClick", "rightClick")];
    this._mouseTarget = null;
    this._mousePosition = $.Point$(0, 0);
    this._mouseEvent = $.MouseEvent$("click", true);
    this._canvas.get$onMouseDown().listen$1(this.get$_onMouseEvent());
    this._canvas.get$onMouseUp().listen$1(this.get$_onMouseEvent());
    this._canvas.get$onMouseMove().listen$1(this.get$_onMouseEvent());
    this._canvas.get$onMouseOut().listen$1(this.get$_onMouseEvent());
    this._canvas.get$onMouseWheel().listen$1(this.get$_onMouseEvent());
    this._touches = $.Map_Map();
    this._touchEvent = $.TouchEvent$("touchBegin", true);
    $.get$Multitouch__onInputModeChanged().listen$1(this.get$_onMultitouchInputModeChanged());
    this._onMultitouchInputModeChanged$1(null);
    this._keyboardEvent = $.KeyboardEvent$("keyDown", true);
    this._canvas.get$onKeyDown().listen$1(this.get$_onKeyEvent());
    this._canvas.get$onKeyUp().listen$1(this.get$_onKeyEvent());
    this._canvas.get$onKeyPress().listen$1(this.get$_onTextEvent());
  },
  $isStage: true
};

$$.Sprite = {"": "DisplayObjectContainer;buttonMode,useHandCursor,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams", $isSprite: true};

$$.Bitmap = {"": "DisplayObject;bitmapData,pixelSnapping,clipRectangle,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1, t2, t3, width, height;
    t1 = this.bitmapData;
    t2 = t1 != null;
    if (t2) {
      t3 = t1.get$width();
      if (typeof t3 !== "number")
        return this.getBoundsTransformed$2$bailout1(1, matrix, returnRectangle, t2, t1, t3);
      width = t3;
    } else
      width = 0;
    if (t2) {
      t1 = t1.get$height();
      if (typeof t1 !== "number")
        return this.getBoundsTransformed$2$bailout1(2, matrix, returnRectangle, 0, t1, 0, width);
      height = t1;
    } else
      height = 0;
    return $._getBoundsTransformedHelper(matrix, width, height, returnRectangle);
  },
  getBoundsTransformed$2$bailout1: function(state0, matrix, returnRectangle, t2, t1, t3, width) {
    switch (state0) {
      case 0:
        t1 = this.bitmapData;
        t2 = t1 != null;
      case 1:
        if (state0 === 1 || state0 === 0 && t2)
          switch (state0) {
            case 0:
              t3 = t1.get$width();
            case 1:
              state0 = 0;
              width = t3;
          }
        else
          width = 0;
      case 2:
        var height;
        if (state0 === 2 || state0 === 0 && t2)
          switch (state0) {
            case 0:
              t1 = t1.get$height();
            case 2:
              state0 = 0;
              height = t1;
          }
        else
          height = 0;
        return $._getBoundsTransformedHelper(matrix, width, height, returnRectangle);
    }
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1, t2;
    t1 = this.bitmapData;
    if (t1 != null)
      if (localX >= 0)
        if (localY >= 0) {
          t2 = t1.get$width();
          if (typeof t2 !== "number")
            return this.hitTestInput$2$bailout1(1, localX, localY, t2, t1);
          if (localX < t2) {
            t1 = t1.get$height();
            if (typeof t1 !== "number")
              return this.hitTestInput$2$bailout1(2, 0, localY, 0, t1);
            t1 = localY < t1;
          } else
            t1 = false;
        } else
          t1 = false;
      else
        t1 = false;
    else
      t1 = false;
    if (t1)
      return this;
    return;
  },
  hitTestInput$2$bailout1: function(state0, localX, localY, t2, t1) {
    switch (state0) {
      case 0:
        t1 = this.bitmapData;
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && t1 != null)
          switch (state0) {
            case 0:
            default:
              if (state0 === 2 || state0 === 1 || state0 === 0 && localX >= 0)
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 2 || state0 === 1 || state0 === 0 && localY >= 0)
                      switch (state0) {
                        case 0:
                          t2 = t1.get$width();
                        case 1:
                          state0 = 0;
                        case 2:
                          if (state0 === 2 || state0 === 0 && $.CONSTANT4.$lt(localX, t2))
                            switch (state0) {
                              case 0:
                                t1 = t1.get$height();
                              case 2:
                                state0 = 0;
                                t1 = $.CONSTANT4.$lt(localY, t1);
                            }
                          else
                            t1 = false;
                      }
                    else
                      t1 = false;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
        if (t1)
          return this;
        return;
    }
  },
  render$1: function(renderState) {
    var t1, t2;
    t1 = this.bitmapData;
    if (t1 != null) {
      t2 = this.clipRectangle;
      if (t2 == null)
        t1.render$1(renderState);
      else
        t1.renderClipped$2(renderState, t2);
    }
  },
  Bitmap$2: function(bitmapData, pixelSnapping) {
    this.clipRectangle = null;
  }
};

$$.BitmapData = {"": "Object;_width,_height,_transparent,_liblib2$_element,_context,_frameMode,_frameOffsetX,_frameOffsetY,_frameX,_frameY,_frameWidth,_frameHeight",
  get$width: function() {
    return this._width;
  },
  get$height: function() {
    return this._height;
  },
  applyFilter$4: function(sourceBitmapData, sourceRect, destPoint, filter) {
    filter.apply$4(sourceBitmapData, sourceRect, this, destPoint);
  },
  render$1: function(renderState) {
    var t1, t2, t3, t4, t5, t6;
    switch (this._frameMode) {
      case 0:
        renderState.get$context().drawImage$3(this._liblib2$_element, 0, 0);
        break;
      case 1:
        t1 = renderState.get$context();
        t2 = this._liblib2$_element;
        t3 = this._frameX;
        t4 = this._frameY;
        t5 = this._frameWidth;
        t6 = this._frameHeight;
        t1.drawImage$9(t2, t3, t4, t5, t6, this._frameOffsetX, this._frameOffsetY, t5, t6);
        break;
      case 2:
        renderState.get$context().transform$6(0, -1, 1, 0, this._frameOffsetX, $.$$add$n(this._frameOffsetY, this._frameHeight));
        t1 = renderState.get$context();
        t2 = this._liblib2$_element;
        t3 = this._frameX;
        t4 = this._frameY;
        t5 = this._frameHeight;
        t6 = this._frameWidth;
        t1.drawImage$9(t2, t3, t4, t5, t6, 0, 0, t5, t6);
        break;
    }
  },
  renderClipped$2: function(renderState, clipRectangle) {
    var fLeft, fTop, t1, fRight, t2, fBottom, cLeft, cTop, cRight, cBottom, iLeft, iTop, iRight, iBottom, iOffsetX, iOffsetY, iWidth, iHeight;
    if ($.$$le$n(clipRectangle.get$width(), 0) === true || $.$$le$n(clipRectangle.get$height(), 0) === true)
      return;
    switch (this._frameMode) {
      case 0:
        renderState.get$context().drawImage$9(this._liblib2$_element, clipRectangle.get$x(), clipRectangle.get$y(), clipRectangle.get$width(), clipRectangle.get$height(), clipRectangle.get$x(), clipRectangle.get$y(), clipRectangle.get$width(), clipRectangle.get$height());
        break;
      case 1:
        fLeft = this._frameX;
        fTop = this._frameY;
        t1 = $.getInterceptor$n(fLeft);
        fRight = t1.$add(fLeft, this._frameWidth);
        t2 = $.getInterceptor$n(fTop);
        fBottom = t2.$add(fTop, this._frameHeight);
        cLeft = $.$$add$n($.$$sub$n(this._frameX, this._frameOffsetX), clipRectangle.get$x());
        cTop = $.$$add$n($.$$sub$n(this._frameY, this._frameOffsetY), clipRectangle.get$y());
        cRight = $.$$add$n(cLeft, clipRectangle.get$width());
        cBottom = $.$$add$n(cTop, clipRectangle.get$height());
        iLeft = t1.$gt(fLeft, cLeft) === true ? fLeft : cLeft;
        iTop = t2.$gt(fTop, cTop) === true ? fTop : cTop;
        iRight = $.$$lt$n(fRight, cRight) === true ? fRight : cRight;
        iBottom = $.$$lt$n(fBottom, cBottom) === true ? fBottom : cBottom;
        iOffsetX = $.$$add$n($.$$sub$n(this._frameOffsetX, fLeft), iLeft);
        iOffsetY = $.$$add$n($.$$sub$n(this._frameOffsetY, fTop), iTop);
        iWidth = $.$$sub$n(iRight, iLeft);
        iHeight = $.$$sub$n(iBottom, iTop);
        if ($.$$gt$n(iWidth, 0) === true && $.$$gt$n(iHeight, 0) === true)
          renderState.get$context().drawImage$9(this._liblib2$_element, iLeft, iTop, iWidth, iHeight, iOffsetX, iOffsetY, iWidth, iHeight);
        break;
      case 2:
        fLeft = this._frameX;
        fTop = this._frameY;
        t1 = $.getInterceptor$n(fLeft);
        fRight = t1.$add(fLeft, this._frameHeight);
        t2 = $.getInterceptor$n(fTop);
        fBottom = t2.$add(fTop, this._frameWidth);
        cLeft = $.$$sub$n($.$$add$n($.$$sub$n($.$$add$n(this._frameX, this._frameOffsetY), clipRectangle.get$y()), this._frameHeight), clipRectangle.get$height());
        cTop = $.$$add$n($.$$sub$n(this._frameY, this._frameOffsetX), clipRectangle.get$x());
        cRight = $.$$add$n(cLeft, clipRectangle.get$height());
        cBottom = $.$$add$n(cTop, clipRectangle.get$width());
        iLeft = t1.$gt(fLeft, cLeft) === true ? fLeft : cLeft;
        iTop = t2.$gt(fTop, cTop) === true ? fTop : cTop;
        iRight = $.$$lt$n(fRight, cRight) === true ? fRight : cRight;
        iBottom = $.$$lt$n(fBottom, cBottom) === true ? fBottom : cBottom;
        iOffsetX = $.$$add$n($.$$sub$n(this._frameOffsetX, fTop), iTop);
        iOffsetY = $.$$sub$n($.$$add$n(this._frameOffsetY, fRight), iRight);
        iWidth = $.$$sub$n(iBottom, iTop);
        iHeight = $.$$sub$n(iRight, iLeft);
        if ($.$$gt$n(iWidth, 0) === true && $.$$gt$n(iHeight, 0) === true) {
          renderState.get$context().transform$6(0, -1, 1, 0, iOffsetX, $.$$add$n(iOffsetY, iHeight));
          renderState.get$context().drawImage$9(this._liblib2$_element, iLeft, iTop, iHeight, iWidth, 0, 0, iHeight, iWidth);
        }
        break;
    }
  },
  _getContext$0: function() {
    var t1, canvas, t2, t3, t4, t5, t6;
    if (this._context == null) {
      t1 = this._width;
      canvas = $.CanvasElement_CanvasElement(this._height, t1);
      this._context = canvas.get$context2d();
      switch (this._frameMode) {
        case 0:
          this._context.drawImage$3(this._liblib2$_element, 0, 0);
          break;
        case 1:
          t1 = this._context;
          t2 = this._liblib2$_element;
          t3 = this._frameX;
          t4 = this._frameY;
          t5 = this._frameWidth;
          t6 = this._frameHeight;
          t1.drawImage$9(t2, t3, t4, t5, t6, this._frameOffsetX, this._frameOffsetY, t5, t6);
          break;
        case 2:
          this._context.setTransform$6(0, -1, 1, 0, this._frameOffsetX, $.$$add$n(this._frameOffsetY, this._frameHeight));
          t1 = this._context;
          t2 = this._liblib2$_element;
          t3 = this._frameX;
          t4 = this._frameY;
          t5 = this._frameHeight;
          t6 = this._frameWidth;
          t1.drawImage$9(t2, t3, t4, t5, t6, 0, 0, t5, t6);
          this._context.setTransform$6(1, 0, 0, 1, 0, 0);
          break;
      }
      this._liblib2$_element = canvas;
      this._frameMode = 0;
    }
    return this._context;
  },
  BitmapData$4: function(width, height, transparent, fillColor) {
    var t1, canvas;
    this._width = width;
    this._height = height;
    this._transparent = transparent;
    t1 = this._width;
    canvas = $.CanvasElement_CanvasElement(this._height, t1);
    this._context = canvas.get$context2d();
    t1 = this._transparent === true ? $._color2rgba(fillColor) : $._color2rgb(fillColor);
    this._context.set$fillStyle(t1);
    this._context.fillRect$4(0, 0, width, height);
    this._liblib2$_element = canvas;
    this._frameMode = 0;
  },
  BitmapData$fromTextureAtlasFrame$1: function(textureAtlasFrame) {
    this._width = textureAtlasFrame.get$originalWidth();
    this._height = textureAtlasFrame.get$originalHeight();
    this._transparent = true;
    this._liblib2$_element = textureAtlasFrame.get$textureAtlas().get$imageElement();
    this._frameMode = textureAtlasFrame.get$rotated() === true ? 2 : 1;
    this._frameOffsetX = $.toDouble$0$n(textureAtlasFrame.get$offsetX());
    this._frameOffsetY = $.toDouble$0$n(textureAtlasFrame.get$offsetY());
    this._frameX = $.toDouble$0$n(textureAtlasFrame.get$frameX());
    this._frameY = $.toDouble$0$n(textureAtlasFrame.get$frameY());
    this._frameWidth = $.toDouble$0$n(textureAtlasFrame.get$frameWidth());
    this._frameHeight = $.toDouble$0$n(textureAtlasFrame.get$frameHeight());
  },
  BitmapData$fromImageElement$1: function(imageElement) {
    this._width = imageElement.get$naturalWidth();
    this._height = imageElement.get$naturalHeight();
    this._transparent = true;
    this._liblib2$_element = imageElement;
    this._frameMode = 0;
  }
};

$$.MovieClip = {"": "InteractiveObject;_liblib2$_bitmapDatas,_frameRate>,_currentFrame,_frameTime,_play,_loop,_progressEvent,_completeEvent,clipRectangle,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  get$totalFrames: function() {
    return $.get$length$as(this._liblib2$_bitmapDatas);
  },
  set$loop: function(value) {
    this._loop = value;
  },
  play$0: function() {
    this._play = true;
    this._frameTime = null;
  },
  stop$0: function() {
    this._play = false;
    this._frameTime = null;
  },
  advanceTime$1: function(time) {
    var t1, t2, frameDuration, lastFrame, nextFrame;
    if (!this._play)
      return true;
    t1 = this._frameTime;
    if (typeof t1 !== "number")
      return this.advanceTime$1$bailout(1, time, t1);
    this._frameTime = t1 + time;
    t2 = this._frameRate;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    frameDuration = 1 / t2;
    while (true) {
      if (!(this._play && $.$$ge$n(this._frameTime, frameDuration)))
        break;
      lastFrame = this._currentFrame;
      t1 = lastFrame + 1;
      if (this._loop === true) {
        t2 = this.get$totalFrames();
        if (typeof t2 !== "number")
          throw $.iae(t2);
        nextFrame = $.CONSTANT4.$mod(t1, t2);
      } else {
        t2 = this.get$totalFrames();
        if (typeof t2 !== "number")
          return this.advanceTime$1$bailout(2, 0, t1, t2, lastFrame, frameDuration);
        nextFrame = $.min(t1, t2 - 1);
      }
      this._currentFrame = nextFrame;
      t1 = this._frameTime;
      if (typeof t1 !== "number")
        return this.advanceTime$1$bailout(3, 0, t1, 0, lastFrame, frameDuration, nextFrame);
      this._frameTime = t1 - frameDuration;
      t1 = lastFrame !== nextFrame;
      if (t1) {
        this._dispatchEventInternal$4(this._progressEvent, this, this, 2);
        if (this._currentFrame !== nextFrame)
          return true;
      }
      if (t1) {
        t1 = this.get$totalFrames();
        if (typeof t1 !== "number")
          return this.advanceTime$1$bailout(4, 0, t1, 0, 0, frameDuration, nextFrame);
        if (nextFrame === t1 - 1) {
          t1 = this._loop;
          if (typeof t1 !== "boolean")
            return this.advanceTime$1$bailout(5, 0, t1, 0, 0, frameDuration, nextFrame);
          t1 = !t1;
        } else
          t1 = false;
      } else
        t1 = false;
      if (t1) {
        this._dispatchEventInternal$4(this._completeEvent, this, this, 2);
        if (this._currentFrame !== nextFrame)
          return true;
      }
    }
    return true;
  },
  advanceTime$1$bailout: function(state0, time, t1, t2, lastFrame, frameDuration, nextFrame) {
    switch (state0) {
      case 0:
        if (!this._play)
          return true;
        t1 = this._frameTime;
      case 1:
        state0 = 0;
      default:
        var t3;
        if (state0 === 0 && t1 == null) {
          this._frameTime = 0;
          this._dispatchEventInternal$4(this._progressEvent, this, this, 2);
        } else
          switch (state0) {
            case 0:
              this._frameTime = $.$$add$n(t1, time);
              t2 = this._frameRate;
              if (typeof t2 !== "number")
                throw $.iae(t2);
              frameDuration = 1 / t2;
            default:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      if (!(this._play && $.$$ge$n(this._frameTime, frameDuration)))
                        break L0;
                      lastFrame = this._currentFrame;
                      t1 = lastFrame + 1;
                    case 2:
                      if (state0 === 0 && this._loop === true) {
                        t2 = this.get$totalFrames();
                        if (typeof t2 !== "number")
                          throw $.iae(t2);
                        nextFrame = $.CONSTANT4.$mod(t1, t2);
                      } else
                        switch (state0) {
                          case 0:
                            t2 = this.get$totalFrames();
                          case 2:
                            state0 = 0;
                            nextFrame = $.min(t1, $.$$sub$n(t2, 1));
                        }
                      this._currentFrame = nextFrame;
                      t1 = this._frameTime;
                    case 3:
                      state0 = 0;
                      this._frameTime = $.$$sub$n(t1, frameDuration);
                      t1 = lastFrame !== nextFrame;
                      if (t1) {
                        this._dispatchEventInternal$4(this._progressEvent, this, this, 2);
                        if (this._currentFrame !== nextFrame)
                          return true;
                      }
                    default:
                      if (state0 === 5 || state0 === 4 || state0 === 0 && t1)
                        switch (state0) {
                          case 0:
                            t1 = this.get$totalFrames();
                          case 4:
                            state0 = 0;
                          case 5:
                            if (state0 === 5 || state0 === 0 && nextFrame === $.$$sub$n(t1, 1))
                              switch (state0) {
                                case 0:
                                  t1 = this._loop;
                                case 5:
                                  state0 = 0;
                                  t3 = $.$$eq$o(t1, false) === true;
                                  t1 = t3;
                              }
                            else
                              t1 = false;
                        }
                      else
                        t1 = false;
                      if (t1) {
                        this._dispatchEventInternal$4(this._completeEvent, this, this, 2);
                        if (this._currentFrame !== nextFrame)
                          return true;
                      }
                  }
          }
        return true;
    }
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1, t3, bitmapData;
    t1 = this._liblib2$_bitmapDatas;
    t3 = this._currentFrame;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.getBoundsTransformed$2$bailout1(1, matrix, returnRectangle, t1);
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    bitmapData = t1[t3];
    return $._getBoundsTransformedHelper(matrix, bitmapData.get$width(), bitmapData.get$height(), returnRectangle);
  },
  getBoundsTransformed$2$bailout1: function(state0, matrix, returnRectangle, t1) {
    var bitmapData = $.$$index$as(t1, this._currentFrame);
    return $._getBoundsTransformedHelper(matrix, bitmapData.get$width(), bitmapData.get$height(), returnRectangle);
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1, t3, bitmapData;
    t1 = this._liblib2$_bitmapDatas;
    t3 = this._currentFrame;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.hitTestInput$2$bailout1(1, localX, localY, t1);
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    bitmapData = t1[t3];
    if (localX >= 0)
      if (localY >= 0) {
        t1 = bitmapData.get$width();
        if (typeof t1 !== "number")
          return this.hitTestInput$2$bailout1(2, localX, localY, t1, bitmapData);
        if (localX < t1) {
          t1 = bitmapData.get$height();
          if (typeof t1 !== "number")
            return this.hitTestInput$2$bailout1(3, 0, localY, t1);
          t1 = localY < t1;
        } else
          t1 = false;
      } else
        t1 = false;
    else
      t1 = false;
    if (t1)
      return this;
    return;
  },
  hitTestInput$2$bailout1: function(state0, localX, localY, t1, bitmapData) {
    switch (state0) {
      case 0:
        t1 = this._liblib2$_bitmapDatas;
      case 1:
        state0 = 0;
        bitmapData = $.$$index$as(t1, this._currentFrame);
      default:
        if (state0 === 3 || state0 === 2 || state0 === 0 && localX >= 0)
          switch (state0) {
            case 0:
            default:
              if (state0 === 3 || state0 === 2 || state0 === 0 && localY >= 0)
                switch (state0) {
                  case 0:
                    t1 = bitmapData.get$width();
                  case 2:
                    state0 = 0;
                  case 3:
                    if (state0 === 3 || state0 === 0 && $.CONSTANT4.$lt(localX, t1))
                      switch (state0) {
                        case 0:
                          t1 = bitmapData.get$height();
                        case 3:
                          state0 = 0;
                          t1 = $.CONSTANT4.$lt(localY, t1);
                      }
                    else
                      t1 = false;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
        if (t1)
          return this;
        return;
    }
  },
  render$1: function(renderState) {
    var bitmapData, t1;
    bitmapData = $.$$index$as(this._liblib2$_bitmapDatas, this._currentFrame);
    t1 = this.clipRectangle;
    if (t1 == null)
      bitmapData.render$1(renderState);
    else
      bitmapData.renderClipped$2(renderState, t1);
  },
  MovieClip$3: function(bitmapDatas, frameRate, loop) {
    this._liblib2$_bitmapDatas = bitmapDatas;
    this._frameRate = frameRate;
    this._currentFrame = 0;
    this._frameTime = null;
    this._play = false;
    this._loop = loop;
    this._progressEvent = $.Event$("progress", false);
    this._completeEvent = $.Event$("complete", false);
    this.clipRectangle = null;
  },
  $isAnimatable: true
};

$$.Shape = {"": "DisplayObject;_graphics,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  get$graphics: function() {
    return this._graphics;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    returnRectangle.set$x(matrix.get$tx());
    returnRectangle.set$y(matrix.get$ty());
    returnRectangle.set$width(0);
    returnRectangle.set$height(0);
    return returnRectangle;
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    return;
  },
  render$1: function(renderState) {
    this._graphics.render$1(renderState);
  },
  Shape$0: function() {
    this._graphics = $.Graphics$();
  }
};

$$.Graphics = {"": "Object;_commands",
  clear$0: function() {
    return $.CONSTANT1.clear$0(this._commands);
  },
  beginPath$0: function() {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("beginPath", null));
  },
  closePath$0: function() {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("closePath", null));
  },
  moveTo$2: function(x, y) {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("moveTo", [x, y]));
  },
  lineTo$2: function(x, y) {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("lineTo", [x, y]));
  },
  arcTo$5: function(controlX, controlY, endX, endY, radius) {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("arcTo", [controlX, controlY, endX, endY, radius]));
  },
  quadraticCurveTo$4: function(controlX, controlY, endX, endY) {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("quadraticCurveTo", [controlX, controlY, endX, endY]));
  },
  bezierCurveTo$6: function(controlX1, controlY1, controlX2, controlY2, endX, endY) {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("bezierCurveTo", [controlX1, controlY1, controlX2, controlY2, endX, endY]));
  },
  arc$6: function(x, y, radius, startAngle, endAngle, antiClockwise) {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("arc", [x, y, radius, startAngle, endAngle, antiClockwise]));
  },
  rect$4: function(x, y, width, height) {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("rect", [x, y, width, height]));
  },
  strokeColor$4: function(color, width, joints, caps) {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("strokeColor", [$._color2rgba(color), width, joints, caps]));
  },
  strokeColor$1: function(color) {
    return this.strokeColor$4(color, 1, "round", "round");
  },
  strokeColor$2: function(color, width) {
    return this.strokeColor$4(color, width, "round", "round");
  },
  fillColor$1: function(color) {
    return $.CONSTANT1.add$1(this._commands, $._GraphicsCommand$("fillColor", [$._color2rgba(color)]));
  },
  render$1: function(renderState) {
    var context, t1, t2, args, matrix;
    context = renderState.get$context();
    context.save$0();
    for (t1 = $.CONSTANT1.get$iterator(this._commands); t1.moveNext$0();) {
      t2 = t1.get$current();
      args = t2.get$arguments();
      switch (t2.get$name()) {
        case "beginPath":
          context.beginPath$0();
          break;
        case "closePath":
          context.closePath$0();
          break;
        case "moveTo":
          t2 = $.getInterceptor$as(args);
          context.moveTo$2(t2.$index(args, 0), t2.$index(args, 1));
          break;
        case "lineTo":
          t2 = $.getInterceptor$as(args);
          context.lineTo$2(t2.$index(args, 0), t2.$index(args, 1));
          break;
        case "arcTo":
          t2 = $.getInterceptor$as(args);
          context.arcTo$5(t2.$index(args, 0), t2.$index(args, 1), t2.$index(args, 2), t2.$index(args, 3), t2.$index(args, 4));
          break;
        case "quadraticCurveTo":
          t2 = $.getInterceptor$as(args);
          context.quadraticCurveTo$4(t2.$index(args, 0), t2.$index(args, 1), t2.$index(args, 2), t2.$index(args, 3));
          break;
        case "bezierCurveTo":
          t2 = $.getInterceptor$as(args);
          context.bezierCurveTo$6(t2.$index(args, 0), t2.$index(args, 1), t2.$index(args, 2), t2.$index(args, 3), t2.$index(args, 4), t2.$index(args, 5));
          break;
        case "arc":
          t2 = $.getInterceptor$as(args);
          context.arc$6(t2.$index(args, 0), t2.$index(args, 1), t2.$index(args, 2), t2.$index(args, 3), t2.$index(args, 4), t2.$index(args, 5));
          break;
        case "rect":
          t2 = $.getInterceptor$as(args);
          context.rect$4(t2.$index(args, 0), t2.$index(args, 1), t2.$index(args, 2), t2.$index(args, 3));
          break;
        case "strokeColor":
          t2 = $.getInterceptor$as(args);
          context.set$strokeStyle(t2.$index(args, 0));
          context.set$lineWidth(t2.$index(args, 1));
          context.set$lineJoin(t2.$index(args, 2));
          context.set$lineCap(t2.$index(args, 3));
          context.stroke$0();
          break;
        case "strokeGradient":
          t2 = $.getInterceptor$as(args);
          context.set$strokeStyle(t2.$index(args, 0)._getCanvasGradient$1(context));
          context.set$lineWidth(t2.$index(args, 1));
          context.set$lineJoin(t2.$index(args, 2));
          context.set$lineCap(t2.$index(args, 3));
          context.stroke$0();
          break;
        case "strokePattern":
          t2 = $.getInterceptor$as(args);
          context.set$strokeStyle(t2.$index(args, 0)._getCanvasPattern$1(context));
          context.set$lineWidth(t2.$index(args, 1));
          context.set$lineJoin(t2.$index(args, 2));
          context.set$lineCap(t2.$index(args, 3));
          matrix = t2.$index(args, 0).get$_matrix();
          if (matrix != null) {
            context.save$0();
            context.transform$6(matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
            context.stroke$0();
            context.restore$0();
          } else
            context.stroke$0();
          break;
        case "fillColor":
          context.set$fillStyle($.$$index$as(args, 0));
          context.fill$0();
          break;
        case "fillGradient":
          context.set$fillStyle($.$$index$as(args, 0).getCanvasGradient$1(context));
          context.fill$0();
          break;
        case "fillPattern":
          t2 = $.getInterceptor$as(args);
          context.set$fillStyle(t2.$index(args, 0).getCanvasPattern$1(context));
          matrix = t2.$index(args, 0).get$_matrix();
          if (matrix != null) {
            context.save$0();
            context.transform$6(matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
            context.fill$0();
            context.restore$0();
          } else
            context.fill$0();
          break;
      }
    }
    context.restore$0();
  }
};

$$._GraphicsCommand = {"": "Object;name>,arguments>"};

$$.Mask = {"": "Object;_type,_rectangle,_circle,_points",
  render$1: function(renderState) {
    var context, i;
    context = renderState.get$context();
    context.beginPath$0();
    switch (this._type) {
      case 0:
        context.rect$4(this._rectangle.get$x(), this._rectangle.get$y(), this._rectangle.get$width(), this._rectangle.get$height());
        break;
      case 1:
        context.arc$6(this._circle.get$x(), this._circle.get$y(), this._circle.get$radius(), 0, 6.283185307179586, false);
        break;
      case 2:
        context.moveTo$2($.$$index$as(this._points, 0).get$x(), $.$$index$as(this._points, 0).get$y());
        for (i = 1; $.CONSTANT4.$lt(i, $.get$length$as(this._points)); ++i)
          context.lineTo$2($.$$index$as(this._points, i).get$x(), $.$$index$as(this._points, i).get$y());
        break;
    }
    context.clip$0();
  },
  Mask$rectangle$4: function(x, y, width, height) {
    this._type = 0;
    this._rectangle = $.Rectangle$(x, y, width, height);
  },
  Mask$circle$3: function(x, y, radius) {
    this._type = 1;
    this._circle = $.Circle$(x, y, radius);
  },
  Mask$custom$1: function(points) {
    this._type = 2;
    this._points = points;
    if ($.$$lt$n($.get$length$as(this._points), 3) === true)
      throw $.$$throw($.ArgumentError$("A custom mask needs at least 3 points."));
  }
};

$$.FlumpLibrary = {"": "Object;_url,_md5,_frameRate>,_movieDatas,_textureGroups",
  _getFlumpMovieData$1: function($name) {
    var t1, t2;
    for (t1 = $.CONSTANT1.get$iterator(this._movieDatas); t1.moveNext$0();) {
      t2 = t1.get$current();
      if ($.$$eq$o(t2.get$id(), $name) === true)
        return t2;
    }
    throw $.$$throw($.ArgumentError$("The movie '" + $.S($name) + "' is not available."));
  },
  _createSymbol$1: function($name) {
    var t1, t2;
    for (t1 = $.CONSTANT1.get$iterator(this._textureGroups); t1.moveNext$0();) {
      t2 = t1.get$current();
      if (t2.get$flumpTextures().containsKey$1($name) === true) {
        t2 = t2.get$flumpTextures();
        if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
          return this._createSymbol$1$bailout(1, $name, t2, t1);
        if ($name !== ($name | 0))
          throw $.iae($name);
        if ($name < 0 || $name >= t2.length)
          throw $.ioore($name);
        return t2[$name];
      }
    }
    for (t1 = $.CONSTANT1.get$iterator(this._movieDatas); t1.moveNext$0();)
      if ($.$$eq$o(t1.get$current().get$id(), $name) === true)
        return $.FlumpMovie$(this, $name);
    throw $.$$throw($.ArgumentError$("The symbol '" + $.S($name) + "' is not available."));
  },
  _createSymbol$1$bailout: function(state0, $name, t2, t1) {
    switch (state0) {
      case 0:
        t1 = $.CONSTANT1.get$iterator(this._textureGroups);
      case 1:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!t1.moveNext$0())
                  break L0;
                t2 = t1.get$current();
              case 1:
                if (state0 === 1 || state0 === 0 && t2.get$flumpTextures().containsKey$1($name) === true)
                  switch (state0) {
                    case 0:
                      t2 = t2.get$flumpTextures();
                    case 1:
                      state0 = 0;
                      return $.$$index$as(t2, $name);
                  }
            }
        for (t1 = $.CONSTANT1.get$iterator(this._movieDatas); t1.moveNext$0();)
          if ($.$$eq$o(t1.get$current().get$id(), $name) === true)
            return $.FlumpMovie$(this, $name);
        throw $.$$throw($.ArgumentError$("The symbol '" + $.S($name) + "' is not available."));
    }
  }
};

$$.FlumpMovie = {"": "DisplayObject;_flumpLibrary,_flumpMovieData,_flumpMovieLayers,_time,_duration,_frame,_frames>,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  advanceTime$1: function(time) {
    var t1, t2, frameTime, t4, t5;
    this._time = this._time + time;
    t1 = this._time;
    t2 = this._duration;
    frameTime = $.CONSTANT4.$mod(t1, t2);
    t1 = this._frames;
    if (typeof t1 !== "number")
      return this.advanceTime$1$bailout(1, time, frameTime, t1);
    t4 = $.CONSTANT4.toInt$0(t1 * frameTime / t2);
    t5 = this._frames;
    if (typeof t5 !== "number")
      return this.advanceTime$1$bailout(2, time, 0, 0, t4, t5);
    this._frame = $.min(t4, t5 - 1);
    for (t1 = $.CONSTANT1.get$iterator(this._flumpMovieLayers); t1.moveNext$0();) {
      t2 = t1.get$current();
      t2.advanceTime$1(time);
      t2.setFrame$1(this._frame);
    }
    return true;
  },
  advanceTime$1$bailout: function(state0, time, frameTime, t1, t3, t4) {
    switch (state0) {
      case 0:
        this._time = this._time + time;
        frameTime = $.CONSTANT4.$mod(this._time, this._duration);
        t1 = this._frames;
      case 1:
        state0 = 0;
        t3 = $.CONSTANT4.toInt$0($.$$div$n($.$$mul$n(t1, frameTime), this._duration));
        t4 = this._frames;
      case 2:
        var t2;
        state0 = 0;
        this._frame = $.min(t3, $.$$sub$n(t4, 1));
        for (t1 = $.CONSTANT1.get$iterator(this._flumpMovieLayers); t1.moveNext$0();) {
          t2 = t1.get$current();
          t2.advanceTime$1(time);
          t2.setFrame$1(this._frame);
        }
        return true;
    }
  },
  render$1: function(renderState) {
    var t1, t2;
    for (t1 = $.CONSTANT1.get$iterator(this._flumpMovieLayers); t1.moveNext$0();) {
      t2 = t1.get$current();
      if (t2.get$visible() === true)
        renderState.renderDisplayObject$1(t2);
    }
  },
  FlumpMovie$2: function(flumpLibrary, $name) {
    var t1, t2, t3, t4;
    for (t1 = this._flumpMovieData, t2 = $.CONSTANT1.get$iterator(t1.get$flumpLayerDatas()), t3 = this._flumpLibrary, t4 = this._flumpMovieLayers; t2.moveNext$0();)
      $.CONSTANT1.add$1(t4, $._FlumpMovieLayer$(t3, t2.get$current()));
    this._frames = t1.get$frames();
    this._duration = $.$$div$n(this._frames, t3.get$_frameRate());
  },
  $isAnimatable: true
};

$$._FlumpMovieLayer = {"": "DisplayObject;flumpLibrary,flumpLayerData,symbols,symbol,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  advanceTime$1: function(time) {
    var t1 = this.symbol;
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAnimatable)
      $.propertyTypeCast(t1, "$isAnimatable").advanceTime$1(time);
  },
  setFrame$1: function(frame) {
    var t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, t2, nextKeyframe, t3, interped, ease, inv, t, interped0, t5, t7, t9, t11, t13, a, b, c, d;
    if (typeof frame !== "number")
      return this.setFrame$1$bailout(1, frame);
    t1 = this.flumpLayerData;
    keyframe = t1.getKeyframeForFrame$1(frame);
    x = keyframe.get$x();
    if (typeof x !== "number")
      return this.setFrame$1$bailout(2, frame, t1, keyframe, x);
    y = keyframe.get$y();
    if (typeof y !== "number")
      return this.setFrame$1$bailout(3, frame, t1, keyframe, x, y);
    scaleX = keyframe.get$scaleX();
    if (typeof scaleX !== "number")
      return this.setFrame$1$bailout(4, frame, t1, keyframe, x, y, scaleX);
    scaleY = keyframe.get$scaleY();
    if (typeof scaleY !== "number")
      return this.setFrame$1$bailout(5, frame, t1, keyframe, x, y, scaleX, scaleY);
    skewX = keyframe.get$skewX();
    if (typeof skewX !== "number")
      return this.setFrame$1$bailout(6, frame, t1, keyframe, x, y, scaleX, scaleY, skewX);
    skewY = keyframe.get$skewY();
    if (typeof skewY !== "number")
      return this.setFrame$1$bailout(7, frame, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY);
    pivotX = keyframe.get$pivotX();
    if (typeof pivotX !== "number")
      return this.setFrame$1$bailout(8, frame, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX);
    pivotY = keyframe.get$pivotY();
    if (typeof pivotY !== "number")
      return this.setFrame$1$bailout(9, frame, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY);
    alpha = keyframe.get$alpha();
    if (typeof alpha !== "number")
      return this.setFrame$1$bailout(10, frame, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha);
    t2 = keyframe.get$index();
    if (typeof t2 !== "number")
      return this.setFrame$1$bailout(11, frame, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, t2);
    if (t2 !== frame && keyframe.get$tweened() === true) {
      nextKeyframe = t1.getKeyframeAfter$1(keyframe);
      if (nextKeyframe != null) {
        t1 = keyframe.get$index();
        if (typeof t1 !== "number")
          return this.setFrame$1$bailout(12, frame, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, nextKeyframe);
        t1 = frame - t1;
        t3 = keyframe.get$duration();
        if (typeof t3 !== "number")
          return this.setFrame$1$bailout(13, 0, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, nextKeyframe, t3);
        interped = t1 / t3;
        ease = keyframe.get$ease();
        if (typeof ease !== "number")
          return this.setFrame$1$bailout(14, 0, 0, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, nextKeyframe, 0, ease, interped);
        if (ease !== 0) {
          if (ease < 0) {
            inv = 1 - interped;
            t = 1 - inv * inv;
            ease = 0 - ease;
          } else
            t = interped * interped;
          interped0 = ease * t + (1 - ease) * interped;
          interped = interped0;
        }
        t1 = nextKeyframe.get$x();
        if (typeof t1 !== "number")
          return this.setFrame$1$bailout(15, 0, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, nextKeyframe, 0, 0, interped);
        x += (t1 - x) * interped;
        t3 = nextKeyframe.get$y();
        if (typeof t3 !== "number")
          return this.setFrame$1$bailout(16, 0, 0, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, nextKeyframe, t3, 0, interped);
        y += (t3 - y) * interped;
        t5 = nextKeyframe.get$scaleX();
        if (typeof t5 !== "number")
          return this.setFrame$1$bailout(17, 0, 0, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, nextKeyframe, 0, 0, interped, t5);
        scaleX += (t5 - scaleX) * interped;
        t7 = nextKeyframe.get$scaleY();
        if (typeof t7 !== "number")
          return this.setFrame$1$bailout(18, 0, 0, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, nextKeyframe, 0, 0, interped, 0, t7);
        scaleY += (t7 - scaleY) * interped;
        t9 = nextKeyframe.get$skewX();
        if (typeof t9 !== "number")
          return this.setFrame$1$bailout(19, 0, 0, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, nextKeyframe, 0, 0, interped, 0, 0, t9);
        skewX += (t9 - skewX) * interped;
        t11 = nextKeyframe.get$skewY();
        if (typeof t11 !== "number")
          return this.setFrame$1$bailout(20, 0, 0, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, nextKeyframe, 0, 0, interped, 0, 0, 0, t11);
        skewY += (t11 - skewY) * interped;
        t13 = nextKeyframe.get$alpha();
        if (typeof t13 !== "number")
          return this.setFrame$1$bailout(21, 0, 0, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, 0, 0, 0, 0, interped, 0, 0, 0, 0, t13);
        alpha += (t13 - alpha) * interped;
      }
    }
    a = scaleX * Math.cos($.checkNum(skewY));
    b = scaleX * Math.sin($.checkNum(skewY));
    c = -scaleY * Math.sin($.checkNum(skewX));
    d = scaleY * Math.cos($.checkNum(skewX));
    this._transformationMatrixRefresh = false;
    this._transformationMatrixPrivate.setTo$6(a, b, c, d, x - (pivotX * a + pivotY * c), y - (pivotX * b + pivotY * d));
    this._alpha = alpha;
    this._visible = keyframe.get$visible();
    t1 = keyframe.get$ref();
    this.symbol = t1 != null ? this.symbols.$index(t1) : null;
  },
  setFrame$1$bailout: function(state0, frame, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, t2, nextKeyframe, t3, ease, interped, t5, t7, t9, t11, t13) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.flumpLayerData;
        keyframe = t1.getKeyframeForFrame$1(frame);
        x = keyframe.get$x();
      case 2:
        state0 = 0;
        y = keyframe.get$y();
      case 3:
        state0 = 0;
        scaleX = keyframe.get$scaleX();
      case 4:
        state0 = 0;
        scaleY = keyframe.get$scaleY();
      case 5:
        state0 = 0;
        skewX = keyframe.get$skewX();
      case 6:
        state0 = 0;
        skewY = keyframe.get$skewY();
      case 7:
        state0 = 0;
        pivotX = keyframe.get$pivotX();
      case 8:
        state0 = 0;
        pivotY = keyframe.get$pivotY();
      case 9:
        state0 = 0;
        alpha = keyframe.get$alpha();
      case 10:
        state0 = 0;
        t2 = keyframe.get$index();
      case 11:
        state0 = 0;
      default:
        var inv, t, interped0, a, b, c, d, tx, ty;
        if (state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 0 && $.$$eq$o(t2, frame) !== true && keyframe.get$tweened() === true)
          switch (state0) {
            case 0:
              nextKeyframe = t1.getKeyframeAfter$1(keyframe);
            default:
              if (state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 0 && nextKeyframe != null)
                switch (state0) {
                  case 0:
                    t1 = keyframe.get$index();
                  case 12:
                    state0 = 0;
                    t1 = $.$$sub$n(frame, t1);
                    t3 = keyframe.get$duration();
                  case 13:
                    state0 = 0;
                    interped = $.$$div$n(t1, t3);
                    ease = keyframe.get$ease();
                  case 14:
                    state0 = 0;
                    t1 = $.getInterceptor(ease);
                    if (t1.$eq(ease, 0) !== true) {
                      if (t1.$lt(ease, 0) === true) {
                        inv = 1 - interped;
                        t = 1 - inv * inv;
                        if (typeof ease !== "number")
                          throw $.iae(ease);
                        ease = 0 - ease;
                      } else
                        t = interped * interped;
                      t1 = $.$$mul$n(ease, t);
                      if (typeof ease !== "number")
                        throw $.iae(ease);
                      interped0 = $.$$add$n(t1, (1 - ease) * interped);
                      interped = interped0;
                    }
                    t1 = nextKeyframe.get$x();
                  case 15:
                    state0 = 0;
                    x = $.$$add$n(x, $.$$mul$n($.$$sub$n(t1, x), interped));
                    t3 = nextKeyframe.get$y();
                  case 16:
                    state0 = 0;
                    y = $.$$add$n(y, $.$$mul$n($.$$sub$n(t3, y), interped));
                    t5 = nextKeyframe.get$scaleX();
                  case 17:
                    state0 = 0;
                    scaleX = $.$$add$n(scaleX, $.$$mul$n($.$$sub$n(t5, scaleX), interped));
                    t7 = nextKeyframe.get$scaleY();
                  case 18:
                    state0 = 0;
                    scaleY = $.$$add$n(scaleY, $.$$mul$n($.$$sub$n(t7, scaleY), interped));
                    t9 = nextKeyframe.get$skewX();
                  case 19:
                    state0 = 0;
                    skewX = $.$$add$n(skewX, $.$$mul$n($.$$sub$n(t9, skewX), interped));
                    t11 = nextKeyframe.get$skewY();
                  case 20:
                    state0 = 0;
                    skewY = $.$$add$n(skewY, $.$$mul$n($.$$sub$n(t11, skewY), interped));
                    t13 = nextKeyframe.get$alpha();
                  case 21:
                    state0 = 0;
                    alpha = $.$$add$n(alpha, $.$$mul$n($.$$sub$n(t13, alpha), interped));
                }
          }
        t1 = $.getInterceptor$n(scaleX);
        a = t1.$mul(scaleX, Math.cos($.checkNum(skewY)));
        b = t1.$mul(scaleX, Math.sin($.checkNum(skewY)));
        t1 = $.getInterceptor$n(scaleY);
        c = t1.$negate(scaleY) * Math.sin($.checkNum(skewX));
        d = t1.$mul(scaleY, Math.cos($.checkNum(skewX)));
        t1 = $.getInterceptor$n(pivotX);
        t2 = $.getInterceptor$n(pivotY);
        tx = $.$$sub$n(x, $.$$add$n(t1.$mul(pivotX, a), t2.$mul(pivotY, c)));
        ty = $.$$sub$n(y, $.$$add$n(t1.$mul(pivotX, b), t2.$mul(pivotY, d)));
        this._transformationMatrixRefresh = false;
        this._transformationMatrixPrivate.setTo$6(a, b, c, d, tx, ty);
        this._alpha = alpha;
        this._visible = keyframe.get$visible();
        t1 = keyframe.get$ref();
        this.symbol = t1 != null ? this.symbols.$index(t1) : null;
    }
  },
  render$1: function(renderState) {
    var t1 = this.symbol;
    if (t1 != null)
      t1.render$1(renderState);
  },
  _FlumpMovieLayer$2: function(flumpLibrary, flumpLayerData) {
    var t1, t2, t3, t4;
    for (t1 = $.CONSTANT1.get$iterator(flumpLayerData.get$flumpKeyframeDatas()), t2 = this.symbols; t1.moveNext$0();) {
      t3 = t1.get$current();
      t4 = t3.get$ref();
      if (t4 != null && $.$$eq$o(t2.containsKey$1(t4), false) === true) {
        t3 = t3.get$ref();
        t2.$indexSet(t3, flumpLibrary._createSymbol$1(t3));
      }
    }
    this.setFrame$1(0);
  },
  $isAnimatable: true
};

$$._FlumpMovieData = {"": "Object;id>,flumpLibrary,flumpLayerDatas>",
  get$frames: function() {
    var t1, $frames;
    for (t1 = $.CONSTANT1.get$iterator(this.flumpLayerDatas), $frames = 0; t1.moveNext$0();)
      $frames = $.max($frames, t1.get$current().get$frames());
    return $frames;
  },
  _FlumpMovieData$2: function(json, flumpLibrary) {
    var t1, t2;
    for (t1 = $.get$iterator$a($.$$index$as(json, "layers")), t2 = this.flumpLayerDatas; t1.moveNext$0() === true;)
      $.CONSTANT1.add$1(t2, $._FlumpLayerData$(t1.get$current()));
  }
};

$$._FlumpLayerData = {"": "Object;name>,flipbook,flumpKeyframeDatas>",
  get$frames: function() {
    var t1, t2, t3, flumpKeyframeData, t4;
    t1 = this.flumpKeyframeDatas;
    t2 = t1.length;
    t3 = t2 - 1;
    if (t3 < 0)
      throw $.ioore(t3);
    flumpKeyframeData = t1[t3];
    t3 = flumpKeyframeData.get$index();
    t4 = flumpKeyframeData.get$duration();
    if (typeof t3 !== "number")
      return this.get$frames$bailout(1, t3, flumpKeyframeData);
    if (typeof t4 !== "number")
      return this.get$frames$bailout(2, t3, 0, t4);
    return t3 + t4;
  },
  get$frames$bailout: function(state0, t3, flumpKeyframeData, t4) {
    switch (state0) {
      case 0:
        t1 = this.flumpKeyframeDatas;
        t2 = t1.length;
        t3 = t2 - 1;
        if (t3 < 0)
          throw $.ioore(t3);
        flumpKeyframeData = t1[t3];
        t3 = flumpKeyframeData.get$index();
      case 1:
        state0 = 0;
        t4 = flumpKeyframeData.get$duration();
      case 2:
        var t1, t2;
        state0 = 0;
        return $.$$add$n(t3, t4);
    }
  },
  getKeyframeForFrame$1: function(frame) {
    var t1, i, t2;
    if (typeof frame !== "number")
      return this.getKeyframeForFrame$1$bailout(1, frame);
    t1 = this.flumpKeyframeDatas;
    i = 1;
    while (true) {
      if (!(i < t1.length && $.$$le$n(t1[i].get$index(), frame) === true))
        break;
      ++i;
    }
    t2 = i - 1;
    if (t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  getKeyframeForFrame$1$bailout: function(state0, frame) {
    var t1, i, t2;
    t1 = this.flumpKeyframeDatas;
    i = 1;
    while (true) {
      if (!(i < t1.length && $.$$le$n(t1[i].get$index(), frame) === true))
        break;
      ++i;
    }
    t2 = i - 1;
    if (t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  getKeyframeAfter$1: function(flumpKeyframeData) {
    var t1, t2, i, t3;
    for (t1 = this.flumpKeyframeDatas, t2 = t1.length, i = 0; i < t2 - 1; ++i) {
      t3 = t1[i];
      if (t3 == null ? flumpKeyframeData == null : t3 === flumpKeyframeData)
        return t1[i + 1];
    }
    return;
  },
  _FlumpLayerData$1: function(json) {
    var t1, t2;
    for (t1 = $.get$iterator$a($.$$index$as(json, "keyframes")), t2 = this.flumpKeyframeDatas; t1.moveNext$0() === true;)
      $.CONSTANT1.add$1(t2, $._FlumpKeyframeData$(t1.get$current()));
  }
};

$$._FlumpKeyframeData = {"": "Object;index>,duration>,ref>,label,x=,y=,scaleX=,scaleY=,skewX>,skewY>,pivotX=,pivotY=,visible>,alpha=,tweened>,ease>",
  _FlumpKeyframeData$1: function(json) {
    var t1 = $.getInterceptor$as(json);
    this.index = t1.$index(json, "index");
    this.duration = t1.$index(json, "duration");
    this.ref = json.containsKey$1("ref") === true ? t1.$index(json, "ref") : null;
    this.label = json.containsKey$1("label") === true ? t1.$index(json, "label") : null;
    this.x = json.containsKey$1("loc") === true ? $.$$index$as(t1.$index(json, "loc"), 0) : 0;
    this.y = json.containsKey$1("loc") === true ? $.$$index$as(t1.$index(json, "loc"), 1) : 0;
    this.scaleX = json.containsKey$1("scale") === true ? $.$$index$as(t1.$index(json, "scale"), 0) : 1;
    this.scaleY = json.containsKey$1("scale") === true ? $.$$index$as(t1.$index(json, "scale"), 1) : 1;
    this.skewX = json.containsKey$1("skew") === true ? $.$$index$as(t1.$index(json, "skew"), 0) : 0;
    this.skewY = json.containsKey$1("skew") === true ? $.$$index$as(t1.$index(json, "skew"), 1) : 0;
    this.pivotX = json.containsKey$1("pivot") === true ? $.$$index$as(t1.$index(json, "pivot"), 0) : 0;
    this.pivotY = json.containsKey$1("pivot") === true ? $.$$index$as(t1.$index(json, "pivot"), 1) : 0;
    this.visible = json.containsKey$1("visible") !== true || t1.$index(json, "visible");
    this.alpha = json.containsKey$1("alpha") === true ? t1.$index(json, "alpha") : 1;
    this.tweened = json.containsKey$1("tweened") !== true || t1.$index(json, "tweened");
    this.ease = json.containsKey$1("ease") === true ? t1.$index(json, "ease") : 0;
  }
};

$$._FlumpTextureGroup = {"": "Object;flumpLibrary,flumpTextures>,completer>",
  _FlumpTextureGroup$2: function(json, flumpLibrary, box_0) {
    var t1, t2, t3, t4, file, url, imageElement, t5, symbol, rect, origin, flumpTexture;
    this.flumpTextures = $.Map_Map();
    this.completer = $.Completer_Completer();
    box_0.imageLoadCount_0 = 0;
    for (t1 = $.get$iterator$a($.listTypeCast($.$$index$as(json, "atlases"))), t2 = this.flumpLibrary; t1.moveNext$0() === true;) {
      t3 = t1.get$current();
      t4 = $.getInterceptor$as(t3);
      file = $.stringTypeCast(t4.$index(t3, "file"));
      url = $._replaceFilename(t2._url, file);
      box_0.imageLoadCount_0 = $.$$add$n(box_0.imageLoadCount_0, 1);
      imageElement = $.ImageElement_ImageElement(null, null, null);
      imageElement.get$onLoad().listen$1(new $.anon(box_0, this));
      imageElement.get$onError().listen$1(new $.anon0(this));
      imageElement.set$src(url);
      for (t3 = $.get$iterator$a($.listTypeCast(t4.$index(t3, "textures"))); t3.moveNext$0() === true;) {
        t4 = t3.get$current();
        t5 = $.getInterceptor$as(t4);
        symbol = $.stringTypeCast(t5.$index(t4, "symbol"));
        rect = $.listTypeCast(t5.$index(t4, "rect"));
        origin = $.listTypeCast(t5.$index(t4, "origin"));
        t4 = $.getInterceptor$as(rect);
        t5 = $.getInterceptor$as(origin);
        flumpTexture = $._FlumpTexture$(t4.$index(rect, 0), t4.$index(rect, 1), t4.$index(rect, 2), t4.$index(rect, 3), t5.$index(origin, 0), t5.$index(origin, 1), imageElement);
        $.$$indexSet$a(this.flumpTextures, symbol, flumpTexture);
      }
    }
  }
};

$$._FlumpTexture = {"": "Object;x=,y=,width=,height=,originX,originY,imageElement>",
  render$1: function(renderState) {
    var t1, t2, t3, t4, t5, t6;
    t1 = renderState.get$context();
    t2 = this.imageElement;
    t3 = this.x;
    t4 = this.y;
    t5 = this.width;
    t6 = this.height;
    t1.drawImage$9(t2, t3, t4, t5, t6, 0, 0, t5, t6);
  }
};

$$.Sound = {"": "Object;"};

$$.SoundChannel = {"": "EventDispatcher;"};

$$.SoundTransform = {"": "Object;volume=,pan,leftToLeft,leftToRight,rightToRight,rightToLeft"};

$$.AudioElementSound = {"": "Sound;_audio>,_audioPool,_soundChannels",
  get$length: function() {
    return this._audio.get$duration();
  },
  play$2: function(loop, soundTransform) {
    if (soundTransform == null)
      soundTransform = $.SoundTransform$(1, 0);
    return $.AudioElementSoundChannel$(this, loop, soundTransform);
  },
  play$0: function() {
    return this.play$2(false, null);
  },
  _getAudioElement$1: function(soundChannel) {
    var audio;
    if ($.$$eq$o($.get$length$as(this._audioPool), 0) === true) {
      audio = this._audio.clone$1(true);
      audio.get$onEnded().listen$1(this.get$_onAudioEnded());
    } else
      audio = $.removeAt$1$a(this._audioPool, 0);
    $.add$1$a(this._soundChannels, soundChannel);
    return audio;
  },
  _releaseAudioElement$1: function(soundChannel) {
    var audio, index;
    audio = soundChannel._audio;
    index = $.indexOf$1$as(this._soundChannels, soundChannel);
    $.removeAt$1$a(this._soundChannels, index);
    $.add$1$a(this._audioPool, audio);
    if ($.$$gt$n(this._audio.get$currentTime(), 0) === true && $.$$eq$o(this._audio.get$ended(), false) === true)
      this._audio.set$currentTime(0);
  },
  _onAudioEnded$1: function($event) {
    var audio, soundChannel, i;
    audio = $event.get$target();
    soundChannel = null;
    i = 0;
    while (true) {
      if (!($.CONSTANT4.$lt(i, $.get$length$as(this._soundChannels)) && soundChannel == null))
        break;
      if ($.$$eq$o($.$$index$as(this._soundChannels, i).get$_audio(), audio) === true)
        soundChannel = $.$$index$as(this._soundChannels, i);
      ++i;
    }
    if (soundChannel != null)
      soundChannel.stop$0();
  },
  get$_onAudioEnded: function() {
    return new $.Bound__onAudioEnded_AudioElementSound(this, "_onAudioEnded$1");
  },
  AudioElementSound$0: function() {
    this._soundChannels = $.List_List(0);
    this._audio = $.AudioElement_AudioElement($);
    this._audio.get$onEnded().listen$1(this.get$_onAudioEnded());
    this._audioPool = $.List_List(0);
    $.add$1$a(this._audioPool, this._audio);
    $.add$1$a($.document().get$body().get$children(), this._audio);
  }
};

$$.AudioElementSoundChannel = {"": "SoundChannel;_audioElementSound,_audio>,_loop,_soundTransform,_eventStreams",
  set$soundTransform: function(value) {
    var t1, t2;
    this._soundTransform = value;
    t1 = this._audio;
    if (t1 != null) {
      t2 = this._soundTransform;
      t1.set$volume(t2 != null ? t2.get$volume() : 1);
    }
  },
  stop$0: function() {
    var t1 = this._audio;
    if (t1 != null) {
      if ($.$$eq$o(t1.get$ended(), false) === true)
        this._audio.pause$0();
      this._audioElementSound._releaseAudioElement$1(this);
      this._audio = null;
    }
  },
  AudioElementSoundChannel$3: function(audioElementSound, loop, soundTransform) {
    var t1;
    this._audioElementSound = audioElementSound;
    this._loop = loop;
    this._soundTransform = soundTransform;
    this._audio = audioElementSound._getAudioElement$1(this);
    t1 = this._loop;
    this._audio.set$loop(t1);
    this.set$soundTransform(soundTransform);
    this._audio.play$0();
  }
};

$$.WebAudioApiSound = {"": "Sound;_buffer=",
  get$length: function() {
    return this._buffer.get$duration();
  },
  play$2: function(loop, soundTransform) {
    if (soundTransform == null)
      soundTransform = $.SoundTransform$(1, 0);
    return $.WebAudioApiSoundChannel$(this, loop, soundTransform);
  },
  play$0: function() {
    return this.play$2(false, null);
  },
  WebAudioApiSound$0: function() {
    if ($.get$SoundMixer__audioContext() == null)
      throw $.$$throw($.UnsupportedError$("This browser does not support Web Audio API."));
  }
};

$$.WebAudioApiSoundChannel = {"": "SoundChannel;_webAudioApiSound,_soundTransform,_loop,_gainNode,_sourceNode,_eventStreams",
  stop$0: function() {
    this._sourceNode.stop$1(0);
  },
  WebAudioApiSoundChannel$3: function(webAudioApiSound, loop, soundTransform) {
    var context, t1;
    this._webAudioApiSound = webAudioApiSound;
    this._loop = loop;
    this._soundTransform = soundTransform;
    context = $.get$SoundMixer__audioContext();
    this._gainNode = context.createGain$0();
    this._gainNode.connect(context.get$destination(), 0, 0);
    t1 = this._soundTransform;
    t1 = t1 != null ? $.pow(t1.get$volume(), 2) : 1;
    this._gainNode.gain.value = t1;
    this._sourceNode = context.createBufferSource$0();
    t1 = this._webAudioApiSound.get$_buffer();
    this._sourceNode.set$buffer(t1);
    this._sourceNode.set$loop(loop);
    this._sourceNode.connect$3(this._gainNode, 0, 0);
    this._sourceNode.start$1(0);
  }
};

$$.MockSound = {"": "Sound;",
  get$length: function() {
    return (0/0);
  },
  play$2: function(loop, soundTransform) {
    if (soundTransform == null)
      soundTransform = $.SoundTransform$(1, 0);
    return $.MockSoundChannel$(this, loop, soundTransform);
  },
  play$0: function() {
    return this.play$2(false, null);
  }
};

$$.MockSoundChannel = {"": "SoundChannel;_loop,_soundTransform,_eventStreams",
  stop$0: function() {
  },
  MockSoundChannel$3: function(mockSound, loop, soundTransform) {
    this._loop = loop;
    this._soundTransform = soundTransform;
  }
};

$$.TextField = {"": "InteractiveObject;_text,_textColor,_defaultTextFormat,_autoSize,_gridFitType,_type,_wordWrap,_background,_backgroundColor,_border,_borderColor,_textWidth,_textHeight,_linesText,_linesMetrics,_canvasRefreshPending,_canvasWidth,_canvasHeight,_canvas,_context,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  get$type: function() {
    return this._type;
  },
  get$width: function() {
    return this._canvasWidth;
  },
  get$height: function() {
    return this._canvasHeight;
  },
  set$text: function(value) {
    this._text = value;
    this._canvasRefreshPending = true;
  },
  set$defaultTextFormat: function(value) {
    this._defaultTextFormat = value;
    this._textColor = this._defaultTextFormat.get$color();
    this._canvasRefreshPending = true;
  },
  set$wordWrap: function(value) {
    this._wordWrap = value;
    this._canvasRefreshPending = true;
  },
  set$width: function(value) {
    this._canvasWidth = value;
    this._canvasRefreshPending = true;
  },
  set$height: function(value) {
    this._canvasHeight = value;
    this._canvasRefreshPending = true;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    return $._getBoundsTransformedHelper(matrix, this._canvasWidth, this._canvasHeight, returnRectangle);
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1;
    if (localX >= 0)
      if (localY >= 0) {
        t1 = this._canvasWidth;
        if (typeof t1 !== "number")
          return this.hitTestInput$2$bailout1(1, localX, localY, t1);
        if (localX < t1) {
          t1 = this._canvasHeight;
          if (typeof t1 !== "number")
            return this.hitTestInput$2$bailout1(2, 0, localY, t1);
          t1 = localY < t1;
        } else
          t1 = false;
      } else
        t1 = false;
    else
      t1 = false;
    if (t1)
      return this;
    return;
  },
  hitTestInput$2$bailout1: function(state0, localX, localY, t1) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && localX >= 0)
          switch (state0) {
            case 0:
            default:
              if (state0 === 2 || state0 === 1 || state0 === 0 && localY >= 0)
                switch (state0) {
                  case 0:
                    t1 = this._canvasWidth;
                  case 1:
                    state0 = 0;
                  case 2:
                    if (state0 === 2 || state0 === 0 && $.CONSTANT4.$lt(localX, t1))
                      switch (state0) {
                        case 0:
                          t1 = this._canvasHeight;
                        case 2:
                          state0 = 0;
                          t1 = $.CONSTANT4.$lt(localY, t1);
                      }
                    else
                      t1 = false;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
        if (t1)
          return this;
        return;
    }
  },
  render$1: function(renderState) {
    this._canvasRefresh$0();
    renderState._context.drawImage$3(this._canvas, 0, 0);
  },
  _processTextLines$0: function() {
    var t1, t2, lineBuffer, t3, word, previousLength, line, metrics, offsetX, textLineMetrics;
    $.CONSTANT1.clear$0(this._linesText);
    $.CONSTANT1.clear$0(this._linesMetrics);
    if ($.$$eq$o(this._wordWrap, false) === true)
      this._linesText.push(this._text);
    else
      for (t1 = $.CONSTANT1.get$iterator($.split$1$s($.replaceAll$2$s(this._text, "\r", ""), "\n")); t1.moveNext$0();) {
        t2 = t1.get$current();
        lineBuffer = $.StringBuffer$("");
        for (t3 = $.CONSTANT1.get$iterator($.split$1$s(t2, " ")); t3.moveNext$0();) {
          word = t3.get$current();
          previousLength = lineBuffer.get$length();
          t2 = $.getInterceptor$n(previousLength);
          lineBuffer.write$1(t2.$gt(previousLength, 0) === true ? " " + $.S(word) : word);
          line = lineBuffer.toString$0();
          if ($.$$gt$n(this._context.measureText$1(line).get$width(), this._canvasWidth) === true) {
            if (t2.$gt(previousLength, 0) === true)
              line = $.substring$2$s(line, 0, previousLength);
            else
              word = "";
            this._linesText.push(line);
            lineBuffer = $.StringBuffer$("");
            lineBuffer.write$1(word);
          }
        }
        if ($.$$eq$o(lineBuffer.get$isEmpty(), false) === true)
          this._linesText.push(lineBuffer.toString$0());
      }
    this._textWidth = 0;
    this._textHeight = 0;
    for (t1 = $.CONSTANT1.get$iterator(this._linesText); t1.moveNext$0();) {
      t2 = t1.get$current();
      metrics = this._context.measureText$1(t2);
      offsetX = $.$$eq$o(this._defaultTextFormat.get$align(), "center") === true || $.$$eq$o(this._defaultTextFormat.get$align(), "justify") === true ? $.$$div$n($.$$sub$n(this._canvasWidth, metrics.get$width()), 2) : 0;
      if ($.$$eq$o(this._defaultTextFormat.get$align(), "right") === true || $.$$eq$o(this._defaultTextFormat.get$align(), "end") === true)
        offsetX = $.$$sub$n(this._canvasWidth, metrics.get$width());
      textLineMetrics = $.TextLineMetrics$(offsetX, metrics.get$width(), this._defaultTextFormat.get$size(), 0, 0, 0);
      this._linesMetrics.push(textLineMetrics);
      this._textWidth = $.max(this._textWidth, textLineMetrics.width);
      this._textHeight = $.$$add$n(this._textHeight, textLineMetrics.height);
    }
  },
  _canvasRefresh$0: function() {
    var canvasWidthInt, canvasHeightInt, fontStyle, t1, offsetY, i, metrics, t2;
    if (this._canvasRefreshPending) {
      this._canvasRefreshPending = false;
      canvasWidthInt = $.CONSTANT4.toInt$0($.ceil$0$n(this._canvasWidth));
      canvasHeightInt = $.CONSTANT4.toInt$0($.ceil$0$n(this._canvasHeight));
      if (this._canvas == null) {
        this._canvas = $.CanvasElement_CanvasElement(canvasHeightInt, canvasWidthInt);
        this._context = this._canvas.get$context2d();
      }
      if ($.$$eq$o(this._canvas.get$width(), canvasWidthInt) !== true)
        this._canvas.set$width(canvasWidthInt);
      if ($.$$eq$o(this._canvas.get$height(), canvasHeightInt) !== true)
        this._canvas.set$height(canvasHeightInt);
      fontStyle = $.StringBuffer$("");
      fontStyle.write$1(this._defaultTextFormat.get$italic() === true ? "italic " : "normal ");
      fontStyle.write$1("normal ");
      fontStyle.write$1(this._defaultTextFormat.get$bold() === true ? "bold " : "normal ");
      fontStyle.write$1($.S(this._defaultTextFormat.get$size()) + "px ");
      fontStyle.write$1($.S(this._defaultTextFormat.get$font()) + ",sans-serif");
      t1 = fontStyle.toString$0();
      this._context.set$font(t1);
      this._context.set$textAlign("start");
      this._context.set$textBaseline("top");
      t1 = $._color2rgb(this._textColor);
      this._context.set$fillStyle(t1);
      this._processTextLines$0();
      if (this._background) {
        t1 = $._color2rgb(this._backgroundColor);
        this._context.set$fillStyle(t1);
        this._context.fillRect$4(0, 0, this._canvasWidth, this._canvasHeight);
      } else
        this._context.clearRect$4(0, 0, this._canvasWidth, this._canvasHeight);
      for (offsetY = 0, i = 0; i < this._linesText.length; ++i) {
        t1 = this._linesMetrics;
        if (i >= t1.length)
          throw $.ioore(i);
        metrics = t1[i];
        t1 = $._color2rgb(this._textColor);
        this._context.set$fillStyle(t1);
        t1 = this._context;
        t2 = this._linesText;
        if (i >= t2.length)
          throw $.ioore(i);
        t1.fillText$3(t2[i], metrics.get$x(), offsetY);
        t1 = metrics.get$height();
        if (typeof t1 !== "number")
          throw $.iae(t1);
        offsetY += t1;
      }
      if (this._border) {
        t1 = $._color2rgb(this._borderColor);
        this._context.set$strokeStyle(t1);
        this._context.set$lineWidth(1);
        this._context.strokeRect$4(0, 0, this._canvasWidth, this._canvasHeight);
      }
    }
  },
  TextField$0: function() {
    this._defaultTextFormat = $.TextFormat$("Arial", 12, 0, "left", false, 0, false, 0, 0, 0, false);
    this._linesText = $.List_List(0);
    this._linesMetrics = $.List_List(0);
  }
};

$$.TextFormat = {"": "Object;font=,size>,color>,bold>,italic>,underline,align>,leftMargin,rightMargin,indent,leading,letterSpacing,blockIndent,bullet,kerning"};

$$.TextLineMetrics = {"": "Object;ascent,descent,height=,leading,width=,x="};

$$.ResourceManager = {"": "Object;_resources",
  _addResourceManagerResource$1: function(resource) {
    var kind, $name, key;
    kind = resource.get$kind();
    $name = resource.get$name();
    key = $.S(kind) + "." + $.S($name);
    if (this._resources.containsKey$1(key) === true)
      throw $.$$throw($.StateError$("ResourceManager already contains a resource called '" + $.S($name) + "'"));
    $.$$indexSet$a(this._resources, key, resource);
  },
  _getResourceManagerResource$2: function(kind, $name) {
    var key = kind + "." + $.S($name);
    if ($.$$eq$o(this._resources.containsKey$1(key), false) === true)
      throw $.$$throw($.StateError$("ResourceManager does not contains a resource called '" + $.S($name) + "'"));
    return $.$$index$as(this._resources, key);
  },
  addBitmapData$2: function($name, url) {
    var resource = $.ResourceManagerResource$("BitmapData", $name, url);
    resource._load$1($.BitmapData_load(url));
    this._addResourceManagerResource$1(resource);
  },
  addSound$2: function($name, url) {
    var resource = $.ResourceManagerResource$("Sound", $name, url);
    resource._load$1($.Sound_load(url));
    this._addResourceManagerResource$1(resource);
  },
  addTextureAtlas$3: function($name, url, textureAtlasFormat) {
    var resource = $.ResourceManagerResource$("TextureAtlas", $name, url);
    resource._load$1($.TextureAtlas_load(url, textureAtlasFormat));
    this._addResourceManagerResource$1(resource);
  },
  addFlumpLibrary$2: function($name, url) {
    var resource = $.ResourceManagerResource$("FlumpLibrary", $name, url);
    resource._load$1($.FlumpLibrary_load(url));
    this._addResourceManagerResource$1(resource);
  },
  load$0: function() {
    return $._FutureImpl__FutureImpl$wait($.map$1$a(this.get$pendingResources(), new $.ResourceManager_load_anon())).then$1(new $.ResourceManager_load_anon0(this));
  },
  get$pendingResources: function() {
    return $.toList$0$a($.where$1$a(this._resources.get$values(), new $.ResourceManager_pendingResources_anon()));
  },
  get$failedResources: function() {
    return $.toList$0$a($.where$1$a(this._resources.get$values(), new $.ResourceManager_failedResources_anon()));
  },
  getBitmapData$1: function($name) {
    return this._getResourceManagerResource$2("BitmapData", $name).get$resource();
  },
  getSound$1: function($name) {
    return this._getResourceManagerResource$2("Sound", $name).get$resource();
  },
  getTextureAtlas$1: function($name) {
    return this._getResourceManagerResource$2("TextureAtlas", $name).get$resource();
  },
  getFlumpLibrary$1: function($name) {
    return this._getResourceManagerResource$2("FlumpLibrary", $name).get$resource();
  },
  ResourceManager$0: function() {
    this._resources = $.Map_Map();
  }
};

$$.ResourceManagerResource = {"": "Object;_kind,_name,_url,_loader>,_error<,_resource<",
  get$kind: function() {
    return this._kind;
  },
  get$name: function() {
    return this._name;
  },
  get$resource: function() {
    return this._resource;
  },
  get$error: function() {
    return this._error;
  },
  _load$1: function(loader) {
    this._loader = loader.then$2$onError(new $.ResourceManagerResource__load_anon(this), new $.ResourceManagerResource__load_anon0(this));
  },
  ResourceManagerResource$3: function(kind, $name, url) {
    this._kind = kind;
    this._name = $name;
    this._url = url;
    this._error = null;
    this._resource = null;
  }
};

$$.TextureAtlas = {"": "Object;_imageElement>,_frames>",
  get$imageElement: function() {
    return this._imageElement;
  },
  getBitmapData$1: function($name) {
    var t1, bitmapData, i, t2;
    t1 = this._frames;
    bitmapData = null;
    i = 0;
    while (true) {
      t2 = t1.length;
      if (!(i < t2 && bitmapData == null))
        break;
      if (i >= t2)
        throw $.ioore(i);
      if ($.$$eq$o(t1[i].get$name(), $name) === true) {
        if (i >= t1.length)
          throw $.ioore(i);
        bitmapData = $.BitmapData$fromTextureAtlasFrame(t1[i]);
      }
      ++i;
    }
    if (bitmapData == null)
      throw $.$$throw($.ArgumentError$("TextureAtlasFrame not found: '" + $.S($name) + "'"));
    return bitmapData;
  },
  getBitmapDatas$1: function(namePrefix) {
    var bitmapDataList, t1, i;
    bitmapDataList = $.List_List(0);
    for (t1 = this._frames, i = 0; i < t1.length; ++i)
      if ($.$$eq$o($.indexOf$1$as(t1[i].get$name(), namePrefix), 0) === true) {
        if (i >= t1.length)
          throw $.ioore(i);
        bitmapDataList.push($.BitmapData$fromTextureAtlasFrame(t1[i]));
      }
    return bitmapDataList;
  },
  get$frameNames: function() {
    return $.CONSTANT1.map$1(this._frames, new $.TextureAtlas_frameNames_anon()).toList$0();
  }
};

$$.TextureAtlasFrame = {"": "Object;_name,_textureAtlas,_frameX,_frameY,_frameWidth,_frameHeight,_offsetX,_offsetY,_originalWidth,_originalHeight,_rotated",
  get$textureAtlas: function() {
    return this._textureAtlas;
  },
  get$name: function() {
    return this._name;
  },
  get$frameX: function() {
    return this._frameX;
  },
  get$frameY: function() {
    return this._frameY;
  },
  get$frameWidth: function() {
    return this._frameWidth;
  },
  get$frameHeight: function() {
    return this._frameHeight;
  },
  get$offsetX: function() {
    return this._offsetX;
  },
  get$offsetY: function() {
    return this._offsetY;
  },
  get$originalWidth: function() {
    return this._originalWidth;
  },
  get$originalHeight: function() {
    return this._originalHeight;
  },
  get$rotated: function() {
    return this._rotated;
  },
  TextureAtlasFrame$2: function($name, textureAtlas) {
    this._name = $name;
    this._textureAtlas = textureAtlas;
  }
};

$$.main_anon = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.FilterDemo$());
  },
  $is_TimerCallback1: true
};

$$.main_anon0 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.MaskingDemo$());
  },
  $is_TimerCallback1: true
};

$$.main_anon1 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.MovieClipDemo$());
  },
  $is_TimerCallback1: true
};

$$.main_anon2 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.PerformanceDemo$());
  },
  $is_TimerCallback1: true
};

$$.main_anon3 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.SoundDemo$());
  },
  $is_TimerCallback1: true
};

$$.main_anon4 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.FlumpDemo$());
  },
  $is_TimerCallback1: true
};

$$.main_anon5 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.TexturePackerDemo$());
  },
  $is_TimerCallback1: true
};

$$.FilteredElementList__filtered_anon = {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && n.$isElement();
  },
  $is_TimerCallback1: true
};

$$.ToString__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true)
      $.add$1$a(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    $.add$1$a(t1, ": ");
    $.ToString__emitObject(v, t1, t2);
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$$gt$n(t1.i_1, 0) === true)
      $.add$1$a(t1.sb_0, ", ");
    $.add$1$a(t1.sb_0, key);
    $.add$1$a(t1.sb_0, ": ");
    $.add$1$a(t1.sb_0, $.Error_safeToString(value));
    t1.i_1 = $.$$add$n(t1.i_1, 1);
  }
};

$$.Stream_elementAt_anon = {"": "Closure;box_0,future_1",
  call$1: function(value) {
    var t1 = this.box_0;
    if ($.$$eq$o(t1.index_0, 0) === true) {
      this.future_1._liblib0$_setValue$1(value);
      t1.subscription_1.cancel$0();
      return;
    }
    t1.index_0 = $.$$sub$n(t1.index_0, 1);
  },
  $is_TimerCallback1: true
};

$$.Stream_elementAt_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setError$1($.AsyncError$($.StateError$("Not enough elements for elementAt"), null));
  },
  $is_TimerCallback0: true
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError() === true) {
      t1.set$_state($.$$and$n(t1.get$_state(), 4294967291));
      error = t1.get$_resultOrListeners();
      $.Primitives_printString("Uncaught Error: " + $.S(error.get$error()));
      t1 = error.get$stackTrace();
      if (t1 != null)
        $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
      throw $.$$throw(error.get$error());
    }
  },
  $is_TimerCallback0: true
};

$$.Timer_Timer_anon = {"": "Closure;box_0,callback_1",
  call$0: function() {
    return this.callback_1.call$1(this.box_0.timer_0);
  },
  $is_TimerCallback0: true
};

$$.internalCallback = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$0();
    this.this_0.set$_handle(null);
    var t1 = $globalState.topEventLoop;
    t1.set$activeTimerCount($.$$sub$n(t1.get$activeTimerCount(), 1));
  },
  $is_TimerCallback0: true
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  },
  $is_TimerCallback0: true
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  },
  $is_TimerCallback0: true
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  },
  $is_TimerCallback0: true
};

$$.Duration_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$gt(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.Duration_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$$ge$n(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$0: function() {
    this.thenFuture_0._sendValue$1(this.value_1);
  },
  $is_TimerCallback0: true
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$0: function() {
    this.errorFuture_1._sendError$1(this.error_0);
  },
  $is_TimerCallback0: true
};

$$.Stream_last_anon = {"": "Closure;box_0",
  call$1: function(value) {
    var t1 = this.box_0;
    t1.foundResult_1 = true;
    t1.result_0 = value;
  },
  $is_TimerCallback1: true
};

$$.Stream_last_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    var t1 = this.box_0;
    if (t1.foundResult_1 === true) {
      this.future_1._liblib0$_setValue$1(t1.result_0);
      return;
    }
    this.future_1._setError$1($.AsyncError$($.StateError$("No elements"), null));
  },
  $is_TimerCallback0: true
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$$add$n(t1.count_0, 1);
  },
  $is_TimerCallback1: true
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._liblib0$_setValue$1(this.box_0.count_0);
  },
  $is_TimerCallback0: true
};

$$.Stage__onMultitouchInputModeChanged_anon = {"": "Closure;",
  call$1: function(s) {
    return s.cancel$0();
  },
  $is_TimerCallback1: true
};

$$._StreamImpl__sendError_anon = {"": "Closure;error_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendError$1(this.error_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$withCause(e0, s, this.error_0).throwDelayed$0();
      }
    }

  },
  $is_TimerCallback1: true
};

$$._StreamImpl__sendDone_anon = {"": "Closure;this_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    this.this_0._cancel$1(subscriber);
    try {
      subscriber._sendDone$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e0, s).throwDelayed$0();
      }
    }

  },
  $is_TimerCallback1: true
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.Primitives_printString("Uncaught Error: " + $.S(t1.get$error()));
    t1 = t1.get$stackTrace();
    if (t1 != null)
      $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
  },
  $is_TimerCallback0: true
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$0: function() {
    this.reportError_2.call$0();
    throw $.$$throw(this.this_1.get$error());
  },
  $is_TimerCallback0: true
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._liblib0$_setValue$1(false);
  },
  $is_TimerCallback1: true
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._liblib0$_setValue$1(true);
  },
  $is_TimerCallback0: true
};

$$._StreamImpl__sendData_anon = {"": "Closure;value_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendData$1(this.value_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e0, s).throwDelayed$0();
      }
    }

  },
  $is_TimerCallback1: true
};

$$._FutureImpl_whenComplete_anon = {"": "Closure;whenFuture_0,value_1",
  call$0: function() {
    this.whenFuture_0._sendValue$1(this.value_1);
  },
  $is_TimerCallback0: true
};

$$._FutureImpl_whenComplete_anon0 = {"": "Closure;whenFuture_2,error_3",
  call$0: function() {
    this.whenFuture_2._sendError$1(this.error_3);
  },
  $is_TimerCallback0: true
};

$$._WhenFuture__sendError_anon = {"": "Closure;box_0,this_1",
  call$1: function(_) {
    this.this_1._setError$1(this.box_0.error_0);
  },
  $is_TimerCallback1: true
};

$$._WhenFuture__sendValue_anon = {"": "Closure;this_0,value_1",
  call$1: function(_) {
    this.this_0._liblib0$_setValue$1(this.value_1);
  },
  $is_TimerCallback1: true
};

$$._PendingEvents_schedule_anon = {"": "Closure;this_0,stream_1",
  call$0: function() {
    this.this_0.set$scheduleTimer(null);
    this.stream_1._handlePendingEvents$0();
  },
  $is_TimerCallback0: true
};

$$._StreamImpl__pause_anon = {"": "Closure;this_0,listener_1",
  call$0: function() {
    this.this_0._resume$2(this.listener_1, true);
  },
  $is_TimerCallback0: true
};

$$._DoneSubscription__delayDone_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    if (t1.get$_handler() != null)
      t1._handler$0();
  },
  $is_TimerCallback0: true
};

$$.DateTime_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$n(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) === true ? "-" : "";
    if (absN >= 1000)
      return $.S(n);
    if (absN >= 100)
      return sign + "0" + $.S(absN);
    if (absN >= 10)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$.DateTime_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$ge(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.DateTime_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$$ge$n(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.convertDartToNative_Dictionary_anon = {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
};

$$.CssClassSet_add_anon = {"": "Closure;value_0",
  call$1: function(s) {
    return $.add$1$a(s, this.value_0);
  },
  $is_TimerCallback1: true
};

$$.ResourceManagerResource__load_anon = {"": "Closure;this_0",
  call$1: function(value) {
    var t1 = this.this_0;
    t1.set$_resource(value);
    t1.set$_error(null);
  },
  $is_TimerCallback1: true
};

$$.ResourceManagerResource__load_anon0 = {"": "Closure;this_1",
  call$1: function(error) {
    var t1 = this.this_1;
    t1.set$_resource(null);
    t1.set$_error(error.get$error());
  }
};

$$.FlumpLibrary_load_anon = {"": "Closure;url_0,completer_1",
  call$1: function(flumpJson) {
    var data, textureGroupLoaders, flumpLibrary, t1, t2, flumpTextureGroup;
    data = $.propertyTypeCast($.parse(flumpJson, null), "$isMap");
    textureGroupLoaders = $.List_List(0);
    flumpLibrary = $.FlumpLibrary$();
    flumpLibrary._url = this.url_0;
    flumpLibrary._md5 = data.$index("md5");
    flumpLibrary._frameRate = $.toInt$0$n(data.$index("frameRate"));
    for (t1 = $.get$iterator$a($.listTypeCast(data.$index("movies"))), t2 = flumpLibrary._movieDatas; t1.moveNext$0() === true;)
      $.CONSTANT1.add$1(t2, $._FlumpMovieData$(t1.get$current(), flumpLibrary));
    for (t1 = $.get$iterator$a($.listTypeCast(data.$index("textureGroups"))), t2 = flumpLibrary._textureGroups; t1.moveNext$0() === true;) {
      flumpTextureGroup = $._FlumpTextureGroup$(t1.get$current(), flumpLibrary);
      $.CONSTANT1.add$1(t2, flumpTextureGroup);
      textureGroupLoaders.push(flumpTextureGroup.completer.get$future());
    }
    t1 = $._FutureImpl__FutureImpl$wait(textureGroupLoaders);
    t2 = this.completer_1;
    t1.then$1(new $.FlumpLibrary_load__anon(t2, flumpLibrary)).catchError$1(new $.FlumpLibrary_load__anon0(t2));
  },
  $is_TimerCallback1: true
};

$$.FlumpLibrary_load__anon = {"": "Closure;completer_2,flumpLibrary_3",
  call$1: function(value) {
    this.completer_2.complete$1(this.flumpLibrary_3);
  },
  $is_TimerCallback1: true
};

$$.FlumpLibrary_load__anon0 = {"": "Closure;completer_4",
  call$1: function(error) {
    this.completer_4.completeError$1($.StateError$("Failed to load image."));
  },
  $is_TimerCallback1: true
};

$$.FlumpLibrary_load_anon0 = {"": "Closure;completer_5",
  call$1: function(error) {
    this.completer_5.completeError$1($.StateError$("Failed to load json file."));
  },
  $is_TimerCallback1: true
};

$$.HttpRequest_getString_anon = {"": "Closure;",
  call$1: function(xhr) {
    return xhr.get$responseText();
  },
  $is_TimerCallback1: true
};

$$.HttpRequest_request_anon = {"": "Closure;completer_0,xhr_1",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.xhr_1;
    t2 = $.$$ge$n(t1.get$status(), 200) === true && $.$$lt$n(t1.get$status(), 300) === true || $.$$eq$o(t1.get$status(), 0) === true || $.$$eq$o(t1.get$status(), 304) === true;
    t3 = this.completer_0;
    if (t2)
      t3.complete$1(t1);
    else
      t3.completeError$1(e);
  },
  $is_TimerCallback1: true
};

$$.HttpRequest_request_anon0 = {"": "Closure;completer_2",
  call$1: function(e) {
    this.completer_2.completeError$1(e);
  },
  $is_TimerCallback1: true
};

$$._FutureImpl__FutureImpl$wait_handleError = {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$2(error.get$error(), error.get$stackTrace());
    }
  },
  $is_TimerCallback1: true
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    $.$$indexSet$a(t2, this.pos_1, value);
    t1.remaining_2 = $.$$sub$n(t1.remaining_2, 1);
    if ($.$$eq$o(t1.remaining_2, 0) === true)
      t1.completer_0.complete$1(t1.values_1);
  },
  $is_TimerCallback1: true
};

$$.anon = {"": "Closure;box_0,this_1",
  call$1: function($event) {
    var t1, imageLoadCount;
    t1 = this.box_0;
    imageLoadCount = $.$$sub$n(t1.imageLoadCount_0, 1);
    t1.imageLoadCount_0 = imageLoadCount;
    if ($.$$eq$o(imageLoadCount, 0) === true) {
      t1 = this.this_1;
      t1.get$completer().complete$1(t1);
    }
  },
  $is_TimerCallback1: true
};

$$.anon0 = {"": "Closure;this_2",
  call$1: function($event) {
    this.this_2.get$completer().completeError$1($.StateError$("Failed to load image."));
  },
  $is_TimerCallback1: true
};

$$.JsonParser_parseNumber_handleLiteral = {"": "Closure;box_0,this_1,start_2",
  call$1: function(position) {
    var t1, literal, value;
    t1 = this.this_1;
    literal = $.substring$2$s(t1.get$source(), this.start_2, position);
    value = this.box_0.isDouble_0 === true ? $.double_parse(literal, null) : $.int_parse(literal, null, null);
    t1.get$listener().handleNumber$1(value);
    return position;
  }
};

$$.Collection_clear_anon = {"": "Closure;",
  call$1: function(e) {
    return true;
  }
};

$$.CssClassSet_clear_anon = {"": "Closure;",
  call$1: function(s) {
    return $.clear$0$a(s);
  },
  $is_TimerCallback1: true
};

$$.MockSound_load_anon = {"": "Closure;",
  call$0: function() {
    return $.MockSound$();
  },
  $is_TimerCallback0: true
};

$$.AudioElementSound_load_onCanPlayThrough = {"": "Closure;box_0,sound_1,loadCompleter_2",
  call$1: function($event) {
    var t1 = this.box_0;
    t1.onCanPlayThroughSubscription_0.cancel$0();
    t1.onErrorSubscription_1.cancel$0();
    this.loadCompleter_2.complete$1(this.sound_1);
  },
  $is_TimerCallback1: true
};

$$.AudioElementSound_load_onError = {"": "Closure;box_0,loadCompleter_3",
  call$1: function($event) {
    var t1 = this.box_0;
    t1.onCanPlayThroughSubscription_0.cancel$0();
    t1.onErrorSubscription_1.cancel$0();
    this.loadCompleter_3.completeError$1($.StateError$("Failed to load audio."));
  },
  $is_TimerCallback1: true
};

$$.WebAudioApiSound_load_anon = {"": "Closure;sound_0,loadCompleter_1",
  call$1: function(request) {
    var audioData, audioContext, t1, t2;
    audioData = request.get$response();
    audioContext = $.get$SoundMixer__audioContext();
    t1 = this.sound_0;
    t2 = this.loadCompleter_1;
    audioContext.decodeAudioData$3(audioData, new $.WebAudioApiSound_load__anon(t1, t2), new $.WebAudioApiSound_load__anon0(t2));
  },
  $is_TimerCallback1: true
};

$$.WebAudioApiSound_load__anon = {"": "Closure;sound_2,loadCompleter_3",
  call$1: function(buffer) {
    var t1 = this.sound_2;
    t1.set$_buffer(buffer);
    this.loadCompleter_3.complete$1(t1);
  }
};

$$.WebAudioApiSound_load__anon0 = {"": "Closure;loadCompleter_4",
  call$1: function(error) {
    this.loadCompleter_4.completeError$1($.StateError$("Failed to decode audio."));
  },
  $is_TimerCallback1: true
};

$$.WebAudioApiSound_load_anon0 = {"": "Closure;loadCompleter_5",
  call$1: function(error) {
    this.loadCompleter_5.completeError$1($.StateError$("Failed to load audio."));
  },
  $is_TimerCallback1: true
};

$$.TextureAtlas_load_parseFrame = {"": "Closure;textureAtlas_0",
  call$2: function(filename, frame) {
    var frameName, t1, taf, t2;
    frameName = $._getFilenameWithoutExtension(filename);
    t1 = this.textureAtlas_0;
    taf = $.TextureAtlasFrame$(frameName, t1);
    t2 = $.getInterceptor$as(frame);
    taf._frameX = $.toInt$0$n($.$$index$as(t2.$index(frame, "frame"), "x"));
    taf._frameY = $.toInt$0$n($.$$index$as(t2.$index(frame, "frame"), "y"));
    taf._frameWidth = $.toInt$0$n($.$$index$as(t2.$index(frame, "frame"), "w"));
    taf._frameHeight = $.toInt$0$n($.$$index$as(t2.$index(frame, "frame"), "h"));
    taf._offsetX = $.toInt$0$n($.$$index$as(t2.$index(frame, "spriteSourceSize"), "x"));
    taf._offsetY = $.toInt$0$n($.$$index$as(t2.$index(frame, "spriteSourceSize"), "y"));
    taf._originalWidth = $.toInt$0$n($.$$index$as(t2.$index(frame, "sourceSize"), "w"));
    taf._originalHeight = $.toInt$0$n($.$$index$as(t2.$index(frame, "sourceSize"), "h"));
    taf._rotated = $.boolTypeCast(t2.$index(frame, "rotated"));
    $.add$1$a(t1.get$_frames(), taf);
  }
};

$$.TextureAtlas_load_anon = {"": "Closure;url_1,completer_2,textureAtlas_3,parseFrame_4",
  call$1: function(textureAtlasJson) {
    var data, t1, $frames, meta, t2, t3, t4, t5;
    data = $.parse(textureAtlasJson, null);
    t1 = $.getInterceptor$as(data);
    $frames = t1.$index(data, "frames");
    meta = t1.$index(data, "meta");
    if (typeof $frames === "object" && $frames !== null && ($frames.constructor === Array || $frames.$isList())) {
      for (t1 = $.get$iterator$a($frames), t2 = this.parseFrame_4; t1.moveNext$0() === true;) {
        t3 = t1.get$current();
        t2.call$2($.$$index$as(t3, "filename"), t3);
      }
      $frames = $frames;
    }
    if (typeof $frames === "object" && $frames !== null && !!$frames.$isMap)
      for (t1 = $.get$iterator$a($frames.get$keys()), t2 = this.parseFrame_4; t1.moveNext$0() === true;) {
        t3 = t1.get$current();
        t2.call$2(t3, $frames.$index(t3));
      }
    t1 = $._replaceFilename(this.url_1, $.$$index$as(meta, "image"));
    t2 = this.textureAtlas_3;
    t3 = t2.get$_imageElement();
    t4 = t3.get$onLoad();
    t5 = this.completer_2;
    t4.listen$1(new $.TextureAtlas_load__anon(t5, t2));
    t3.get$onError().listen$1(new $.TextureAtlas_load__anon0(t5));
    t3.set$src(t1);
  },
  $is_TimerCallback1: true
};

$$.TextureAtlas_load__anon = {"": "Closure;completer_5,textureAtlas_6",
  call$1: function(e) {
    return this.completer_5.complete$1(this.textureAtlas_6);
  },
  $is_TimerCallback1: true
};

$$.TextureAtlas_load__anon0 = {"": "Closure;completer_7",
  call$1: function(e) {
    return this.completer_7.completeError$1($.StateError$("Failed to load image."));
  },
  $is_TimerCallback1: true
};

$$.TextureAtlas_load_anon0 = {"": "Closure;completer_8",
  call$1: function(error) {
    this.completer_8.completeError$1($.StateError$("Failed to load json file."));
  },
  $is_TimerCallback1: true
};

$$.ResourceManager_load_anon = {"": "Closure;",
  call$1: function(r) {
    return r.get$_loader();
  },
  $is_TimerCallback1: true
};

$$.ResourceManager_load_anon0 = {"": "Closure;this_0",
  call$1: function(value) {
    var t1, errors, t2;
    t1 = this.this_0;
    errors = t1.get$failedResources();
    t2 = $.getInterceptor$as(errors);
    if ($.$$gt$n(t2.get$length(errors), 0) === true)
      throw $.$$throw($.StateError$("Failed to load " + $.S(t2.get$length(errors)) + " resource(s)."));
    return t1;
  },
  $is_TimerCallback1: true
};

$$.ResourceManager_pendingResources_anon = {"": "Closure;",
  call$1: function(r) {
    return r.get$resource() == null;
  },
  $is_TimerCallback1: true
};

$$.Stream_toList_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add$1$a(this.result_0, data);
  },
  $is_TimerCallback1: true
};

$$.Stream_toList_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._liblib0$_setValue$1(this.result_1);
  },
  $is_TimerCallback0: true
};

$$.ResourceManager_failedResources_anon = {"": "Closure;",
  call$1: function(r) {
    return r.get$error() != null;
  },
  $is_TimerCallback1: true
};

$$.BitmapData_load_anon = {"": "Closure;completer_0,image_1",
  call$1: function($event) {
    return this.completer_0.complete$1($.BitmapData$fromImageElement(this.image_1));
  },
  $is_TimerCallback1: true
};

$$.BitmapData_load_anon0 = {"": "Closure;completer_2",
  call$1: function($event) {
    return this.completer_2.completeError$1($.StateError$("Error loading image."));
  },
  $is_TimerCallback1: true
};

$$.anon1 = {"": "Closure;this_0",
  call$1: function(bitmapData) {
    var bitmap = $.Bitmap$(bitmapData, "auto");
    bitmap.set$x(70);
    bitmap.set$y(40);
    this.this_0.addChild$1(bitmap);
  },
  $is_TimerCallback1: true
};

$$.TexturePackerDemo__showLevelupAnimation_anon = {"": "Closure;bitmap_0",
  call$0: function() {
    return this.bitmap_0.removeFromParent$0();
  },
  $is_TimerCallback0: true
};

$$.TexturePackerDemo__showLevelupAnimation_anon0 = {"": "Closure;this_1",
  call$0: function() {
    return this.this_1._showLevelupAnimation$0();
  },
  $is_TimerCallback0: true
};

$$.anon2 = {"": "Closure;this_0",
  call$1: function(bitmapData) {
    var bitmap = $.Bitmap$(bitmapData, "auto");
    bitmap.set$x(40);
    bitmap.set$y(40);
    this.this_0.addChild$1(bitmap);
  },
  $is_TimerCallback1: true
};

$$.anon3 = {"": "Closure;piano_0",
  call$1: function(e) {
    return this.piano_0.resetSong$0();
  },
  $is_TimerCallback1: true
};

$$.LinkedHashMap_addAll_anon = {"": "Closure;this_0",
  call$2: function(key, value) {
    var t1, offset;
    t1 = this.this_0;
    offset = t1.get$_hashTable()._put$1(key);
    t1.get$_hashTable()._setValue$2(offset, value);
    t1.get$_hashTable()._checkCapacity$0();
  }
};

$$.HashMap_addAll_anon = {"": "Closure;this_0",
  call$2: function(key, value) {
    var t1, offset;
    t1 = this.this_0;
    offset = t1.get$_hashTable()._put$1(key);
    t1.get$_hashTable()._setValue$2(offset, value);
    t1.get$_hashTable()._checkCapacity$0();
  }
};

$$.CssClassSet_addAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.addAll$1$a(s, this.iterable_0);
  },
  $is_TimerCallback1: true
};

$$.anon4 = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._removeFlags$1(10);
  },
  $is_TimerCallback1: true
};

$$.anon5 = {"": "Closure;this_1",
  call$1: function(e) {
    return this.this_1._removeFlags$1(50);
  },
  $is_TimerCallback1: true
};

$$.anon6 = {"": "Closure;this_2",
  call$1: function(e) {
    return this.this_2._addFlags$1(50);
  },
  $is_TimerCallback1: true
};

$$.anon7 = {"": "Closure;this_3",
  call$1: function(e) {
    return this.this_3._addFlags$1(10);
  },
  $is_TimerCallback1: true
};

$$.TextureAtlas_frameNames_anon = {"": "Closure;",
  call$1: function(f) {
    return f.get$name();
  },
  $is_TimerCallback1: true
};

$$.MovieClipDemo__startWalkingMan_anon = {"": "Closure;",
  call$2: function(c1, c2) {
    return $.toInt$0$n($.$$sub$n(c1.get$y(), c2.get$y()));
  }
};

$$.MovieClipDemo__startWalkingMan_anon0 = {"": "Closure;this_0,movieClip_1",
  call$0: function() {
    var t1, t2;
    t1 = $.juggler;
    t2 = this.movieClip_1;
    $.remove$1$a(t1, t2);
    this.this_0.removeChild$1(t2);
  },
  $is_TimerCallback0: true
};

$$.anon8 = {"": "Closure;flowerField_0",
  call$1: function(e) {
    this.flowerField_0.set$mask(null);
    return;
  },
  $is_TimerCallback1: true
};

$$.anon9 = {"": "Closure;flowerField_1,rectangleMask_2",
  call$1: function(e) {
    var t1 = this.rectangleMask_2;
    this.flowerField_1.set$mask(t1);
    return t1;
  },
  $is_TimerCallback1: true
};

$$.anon10 = {"": "Closure;flowerField_3,circleMask_4",
  call$1: function(e) {
    var t1 = this.circleMask_4;
    this.flowerField_3.set$mask(t1);
    return t1;
  },
  $is_TimerCallback1: true
};

$$.anon11 = {"": "Closure;flowerField_5,customMask_6",
  call$1: function(e) {
    var t1 = this.customMask_6;
    this.flowerField_5.set$mask(t1);
    return t1;
  },
  $is_TimerCallback1: true
};

$$.anon12 = {"": "Closure;flowerField_7",
  call$1: function(e) {
    var t1, rotate;
    t1 = this.flowerField_7;
    rotate = $.Tween$(t1, 2, $.TransitionFunction_easeInOutBack);
    rotate.animate$2("rotation", 12.566370614359172);
    rotate.set$onComplete(new $._anon(t1));
    $.add$1$a($.juggler, rotate);
  },
  $is_TimerCallback1: true
};

$$._anon = {"": "Closure;flowerField_8",
  call$0: function() {
    this.flowerField_8.set$rotation(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_0;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.call$1$bailout(1, value, t1);
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    $.add$1$a(t1, value);
    $.add$1$a(this.copies_1, null);
    return $length;
  },
  call$1$bailout: function(state0, value, t1, t3, $length) {
    switch (state0) {
      case 0:
        t1 = this.values_0;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$as(t1);
        $length = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        for (i = 0; $.CONSTANT4.$lt(i, $length); ++i) {
          t2 = t3.$index(t1, i);
          if (t2 == null ? value == null : t2 === value)
            return i;
        }
        $.add$1$a(t1, value);
        $.add$1$a(this.copies_1, null);
        return $length;
    }
  }
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"": "Closure;copies_2",
  call$1: function(i) {
    return $.$$index$as(this.copies_2, i);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"": "Closure;copies_3",
  call$2: function(i, x) {
    $.$$indexSet$a(this.copies_3, i, x);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, t2, $length, i;
    if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.$isJavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    if (e instanceof Date)
      throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
    if (e instanceof RegExp)
      throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.CONSTANT1.get$iterator(Object.keys(e)); t1.moveNext$0();) {
        t2 = t1.get$current();
        copy.$indexSet(t2, this.call$1(e[t2]));
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      $length = e.length;
      if (this.mustCopy_4 === true)
        copy = new Array($length);
      else
        copy = e;
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(2, e, slot, copy, $.CONSTANT1, $length);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e, slot, copy, t1, $length) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor(e);
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
        if (e instanceof RegExp)
          throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
        if (Object.getPrototypeOf(e) === Object.prototype) {
          slot = this.findSlot_5.call$1(e);
          copy = this.readSlot_6.call$1(slot);
          if (copy != null)
            return copy;
          copy = $.makeLiteralMap([]);
          this.writeSlot_7.call$2(slot, copy);
          for (t1 = $.CONSTANT1.get$iterator(Object.keys(e)); t1.moveNext$0();) {
            t2 = t1.get$current();
            copy.$indexSet(t2, this.call$1(e[t2]));
          }
          return copy;
        }
      case 2:
        var t2, i;
        if (state0 === 2 || state0 === 0 && e instanceof Array)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (copy != null)
                return copy;
              $length = t1.get$length(e);
              copy = this.mustCopy_4 === true ? new Array($length) : e;
            case 2:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t2 = $.getInterceptor$a(copy), i = 0; $.CONSTANT4.$lt(i, $length); ++i)
                t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
              return copy;
          }
        return e;
    }
  },
  $is_TimerCallback1: true
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    $.Timer_Timer($.CONSTANT10, this);
  },
  $is_TimerCallback0: true
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1;
    this.port_1.close$0();
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(value);
  }
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true)
      $globalState.mainManager.postMessage$1(workerMessage);
    else {
      manager = $.$$index$as($globalState.managers, t1.get$_workerId());
      if (manager != null)
        manager.postMessage$1(workerMessage);
    }
  },
  $is_TimerCallback0: true
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  },
  $is_TimerCallback1: true
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  $is_TimerCallback1: true
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  $is_TimerCallback1: true
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    isolate = $.$$index$as($globalState.isolates, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = $globalState.currentContext != null && $.$$eq$o($globalState.currentContext.get$id(), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.topEventLoop.enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  },
  $is_TimerCallback0: true
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (t1.get$_receivePort().get$_callback() != null) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  },
  $is_TimerCallback0: true
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$$indexSet$a(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$.Stream_contains_anon = {"": "Closure;box_0,match_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_contains__anon(this.match_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_contains__anon0(t2, t3), $._cancelAndError(t2.subscription_0, t3), null);
  },
  $is_TimerCallback1: true
};

$$.Stream_contains__anon = {"": "Closure;match_3,element_4",
  call$0: function() {
    return $.$$eq$o(this.element_4, this.match_3);
  },
  $is_TimerCallback0: true
};

$$.Stream_contains__anon0 = {"": "Closure;box_0,future_5",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._liblib0$_setValue$1(true);
    }
  }
};

$$.Stream_contains_anon0 = {"": "Closure;future_6",
  call$0: function() {
    this.future_6._liblib0$_setValue$1(false);
  },
  $is_TimerCallback0: true
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  },
  $is_TimerCallback0: true
};

$$.BoundClosure$1 = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.BoundClosure$i1 = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  }
};
$$.Bound_contains_JSString = {"": "Closure;self,target,receiver",
  call$2: function(p0, p1) {
    return this.self[this.target](this.receiver, p0, p1);
  },
  call$1: function($receiver, other) {
    return this.call$2($receiver, other, 0);
  }
};
$$.Bound__close__StreamImpl = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  },
  $is_TimerCallback0: true
};
$$.Bound__handleData__ForwardingStreamSubscription = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  },
  $is_TimerCallback1: true
};
$$.Bound__handleDone__ForwardingStreamSubscription = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  },
  $is_TimerCallback0: true
};
$$.Bound__startWalkingMan_MovieClipDemo = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  },
  $is_TimerCallback0: true
};
$$.Bound_resume__EventStreamSubscription = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  },
  $is_TimerCallback0: true
};
$$.BoundClosure$2 = {"": "Closure;self,target",
  call$2: function(p0, p1) {
    return this.self[this.target](p0, p1);
  }
};
$$.Bound_resume__EventStreamSubscription0 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  },
  $is_TimerCallback0: true
};
$$.Bound__onAudioEnded_AudioElementSound = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  },
  $is_TimerCallback1: true
};
$.ListIterator$ = function(iterable) {
  return new $.ListIterator(iterable, $.get$length$as(iterable), 0, null);
};

$.MappedIterable$ = function(_iterable, _f) {
  return new $.MappedIterable(_iterable, _f);
};

$.MappedIterator$ = function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
};

$.MappedListIterable$ = function(_source, _f) {
  return new $.MappedListIterable(_source, _f);
};

$.WhereIterable$ = function(_iterable, _f) {
  return new $.WhereIterable(_iterable, _f);
};

$.WhereIterator$ = function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
};

$.Sort__doSort = function(a, left, right, compare) {
  if (right - left <= 32)
    $.Sort_insertionSort_(a, left, right, compare);
  else
    $.Sort__dualPivotQuicksort(a, left, right, compare);
};

$.Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $.Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$$gt$n(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$.Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$$gt$n(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= a.length)
        throw $.ioore(j0);
      $.CONSTANT1.$indexSet(a, j, a[j0]);
      j = j0;
    }
    $.CONSTANT1.$indexSet(a, j, el);
  }
};

$.Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, k, ak, comp, t3, great0, less0, t4;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $.Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.CONSTANT4.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.CONSTANT8.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$$gt$n(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$$gt$n(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$$gt$n(compare.call$2(el1, el3), 0) === true) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.$$gt$n(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$$gt$n(compare.call$2(el1, el4), 0) === true) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.$$gt$n(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$$gt$n(compare.call$2(el2, el5), 0) === true) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.$$gt$n(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$$gt$n(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  t1 = $.$$eq$o(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$n(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$lt$n(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else if ($.$$gt$n(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$gt$n(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$$lt$n(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
  t2 = less - 1;
  t3 = a.length;
  if (t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (left >= t3)
    throw $.ioore(left);
  a[left] = t4;
  a[t2] = el2;
  t2 = great + 1;
  if (t2 < 0 || t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (right >= t3)
    throw $.ioore(right);
  a[right] = t4;
  a[t2] = el4;
  $.Sort__doSort(a, left, less - 2, compare);
  $.Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$$eq$o(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$$eq$o(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$eq$o(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.$$eq$o(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$eq$o(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$$lt$n(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
    $.Sort__doSort(a, less, great, compare);
  } else
    $.Sort__doSort(a, less, great, compare);
};

$.Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t2, t3, great0, less0;
  sixth = $.CONSTANT4.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.CONSTANT8.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$$gt$n(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$$gt$n(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$$gt$n(compare.call$2(el1, el3), 0) === true) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.$$gt$n(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$$gt$n(compare.call$2(el1, el4), 0) === true) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.$$gt$n(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$$gt$n(compare.call$2(el2, el5), 0) === true) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.$$gt$n(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$$gt$n(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.CONSTANT1.$indexSet(a, index1, el1);
  $.CONSTANT1.$indexSet(a, index3, el3);
  $.CONSTANT1.$indexSet(a, index5, el5);
  if (left < 0 || left >= a.length)
    throw $.ioore(left);
  $.CONSTANT1.$indexSet(a, index2, a[left]);
  if (right < 0 || right >= a.length)
    throw $.ioore(right);
  $.CONSTANT1.$indexSet(a, index4, a[right]);
  less = left + 1;
  great = right - 1;
  t1 = $.$$eq$o(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT1.$indexSet(a, k, a[less]);
          $.CONSTANT1.$indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$n(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.CONSTANT1.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, less, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, k, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$lt$n(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT1.$indexSet(a, k, a[less]);
          $.CONSTANT1.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$$gt$n(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$gt$n(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$$lt$n(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.CONSTANT1.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, less, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, k, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
  t2 = less - 1;
  if (t2 >= a.length)
    throw $.ioore(t2);
  $.CONSTANT1.$indexSet(a, left, a[t2]);
  $.CONSTANT1.$indexSet(a, t2, el2);
  t2 = great + 1;
  if (t2 < 0 || t2 >= a.length)
    throw $.ioore(t2);
  $.CONSTANT1.$indexSet(a, right, a[t2]);
  $.CONSTANT1.$indexSet(a, t2, el4);
  $.Sort__doSort(a, left, less - 2, compare);
  $.Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$$eq$o(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$$eq$o(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$eq$o(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT1.$indexSet(a, k, a[less]);
          $.CONSTANT1.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$$eq$o(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$eq$o(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$$lt$n(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              $.CONSTANT1.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, less, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, k, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
    $.Sort__doSort(a, less, great, compare);
  } else
    $.Sort__doSort(a, less, great, compare);
};

$.ToString_collectionToString = function(c) {
  var result = $.StringBuffer$("");
  $.ToString__emitCollection(c, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$a(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$a(result);
  t3.add$1(result, t2);
  for (t2 = $.get$iterator$a(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.ToString__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.ToString__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.ToString__containsRef(visiting, o))
      $.add$1$a(result, typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.ToString__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && !!o.$isMap)
    if ($.ToString__containsRef(visiting, o))
      $.add$1$a(result, "{...}");
    else
      $.ToString__emitMap(o, result, visiting);
  else
    $.add$1$a(result, o);
};

$.ToString__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.get$iterator$a(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.ToString_mapToString = function(m) {
  var result = $.StringBuffer$("");
  $.ToString__emitMap(m, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$a(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$a(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.forEach$1$a(m, new $.ToString__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
};

$._currentIsolate = function() {
  return $globalState.currentContext;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var currentScript, stack, matches;
  currentScript = $.$currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  stack = new Error().stack;
  if (stack == null)
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw $.$$throw($.UnsupportedError$("Cannot extract URI from \"" + $.S(stack) + "\""));
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$as(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.currentManagerId = t2;
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.topEventLoop.enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      $.remove$1$a($globalState.managers, sender.get$id());
      sender.terminate$0();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true)
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.Primitives_printString($.toString$0$abfnosu(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, exception;
  if ($globalState.isWorker === true)
    $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($._ExceptionImplementation$(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePortImpl$();
  replyTo.send$2("spawned", $._Isolate_port().toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  worker.set$id(workerId);
  $.$$indexSet$a($globalState.managers, workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$$add$n(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return $.get$globalThis().setTimeout != null;
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && value !== 0 || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  res = $.toString$0$abfnosu(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$$add$n($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives__throwFormatException = function(string) {
  throw $.$$throw($.FormatException$(string));
};

$.Primitives_parseInt = function(source, radix, handleError) {
  var match, t1, maxCharCode, digitsPart, i;
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    t1 = $.getInterceptor(match);
    if (match != null) {
      if (t1.$index(match, 2) != null)
        return parseInt(source, 16);
      if (t1.$index(match, 3) != null)
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    if (!(typeof radix === "number" && Math.floor(radix) === radix))
      throw $.$$throw($.ArgumentError$("Radix is not an integer"));
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$("Radix " + $.S(radix) + " not in range 2..36"));
    t1 = $.getInterceptor(match);
    if (match != null) {
      if (radix === 10 && t1.$index(match, 3) != null)
        return parseInt(source, 10);
      if (radix < 10 || t1.$index(match, 3) == null) {
        maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
        digitsPart = $.toLowerCase$0$s(t1.$index(match, 1));
        for (i = 0; i < digitsPart.length; ++i)
          if ($.CONSTANT0.charCodeAt$1(digitsPart, i) > maxCharCode)
            return handleError.call$1(source);
      }
    }
    radix = radix;
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
};

$.Primitives_parseDouble = function(source, handleError) {
  var result;
  $.checkString(source);
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(source))
    return handleError.call$1(source);
  result = parseFloat(source);
  if ($.CONSTANT4.get$isNaN(result) && $.$$eq$o(source, "NaN") !== true)
    return handleError.call$1(source);
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback(object);
  if ($.$$eq$o($name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  return t1.charCodeAt$1($name, 0) === 36 ? t1.substring$1($name, 1) : $name;
};

$.Primitives_newFixedList = function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CONSTANT1.get$iterator(codePoints); t1.moveNext$0();) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.CONSTANT4.$shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CONSTANT1.get$iterator(charCodes); t1.moveNext$0();) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.listInsertRange = function(receiver, start, $length, initialValue) {
  var receiverLength, t1, t2, t3, i;
  if (typeof receiver !== "object" || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.$isJavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, $length, initialValue);
  if ($.$$eq$o($length, 0) === true)
    return;
  if (!(typeof $length === "number" && Math.floor($length) === $length))
    throw $.$$throw($.ArgumentError$($length));
  if ($length < 0)
    throw $.$$throw($.ArgumentError$($length));
  if (!(typeof start === "number" && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + $length;
  $.CONSTANT1.set$length(receiver, t1);
  t2 = start + $length;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (initialValue != null)
    for (t3 = receiver.length, i = start; i < t2; ++i) {
      if (i < 0 || i >= t3)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.CONSTANT1.set$length(receiver, t1);
};

$.listInsertRange$bailout = function(state0, receiver, start, $length, initialValue) {
  var receiverLength, t1, t2, i;
  if ($.$$eq$o($length, 0) === true)
    return;
  if (!(typeof $length === "number" && Math.floor($length) === $length))
    throw $.$$throw($.ArgumentError$($length));
  if ($length < 0)
    throw $.$$throw($.ArgumentError$($length));
  if (!(typeof start === "number" && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + $length;
  $.CONSTANT1.set$length(receiver, t1);
  t2 = start + $length;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (initialValue != null)
    for (i = start; i < t2; ++i)
      $.CONSTANT1.$indexSet(receiver, i, initialValue);
  $.CONSTANT1.set$length(receiver, t1);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString$0$abfnosu(this);
};

$.unwrapException = function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$$eq$o(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if (message === "null has no properties" || message === "'null' is not an object" || $.CONSTANT0.endsWith$1(message, "is null") === true || $.CONSTANT0.endsWith$1(message, "is undefined") === true || $.CONSTANT0.endsWith$1(message, "is null or undefined") === true || $.CONSTANT0.endsWith$1(message, "of undefined") === true || $.CONSTANT0.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    t1 = t1 ? message : "";
    return $._ExceptionImplementation$(t1);
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.CONSTANT1.get$iterator(keyValuePairs);
  result = $.LinkedHashMap$();
  for (; iterator.moveNext$0();) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($._ExceptionImplementation$("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $._currentIsolate();
  $function = function($0, $1) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, $0, $1); };
  closure.$identity = $function;
  return $function;
};

$.stringTypeCast = function(value) {
  if (typeof value === "string" || value == null)
    return value;
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), "String"));
};

$.boolTypeCast = function(value) {
  if (typeof value === "boolean" || value == null)
    return value;
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), "bool"));
};

$.propertyTypeCastError = function(value, property) {
  var t1 = $.getInterceptor$as(property);
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.listTypeCast = function(value) {
  if (typeof value === "object" && value !== null && (value.constructor === Array || value.$isList()) || value == null)
    return value;
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), "List"));
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation("CastError: Casting value of type " + $.S(actualType) + " to" + " incompatible type " + expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var $name = tag;
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "WebKitMutationObserver")
    return "MutationObserver";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
};

$.typeNameInOpera = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  return $name;
};

$.typeNameInFirefox = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "MouseScrollEvent")
    return "WheelEvent";
  if ($name === "OfflineResourceList")
    return "DOMApplicationCache";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
};

$.typeNameInIE = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "MouseWheelEvent")
    return "WheelEvent";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return $name;
};

$.constructorNameFallback = function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (typeof(navigator) !== "object")
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, $name, methods, $arguments) {
  var hasOwnPropertyFunction, tag, method, secondTag, proto;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  if (!$.isDartObject(obj)) {
    tag = $.getTypeNameOf(obj);
    method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
    if (method == null) {
      secondTag = $.alternateTag(obj, tag);
      if (secondTag != null)
        method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
    }
  } else
    method = null;
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT46));
  if (method == null)
    (function(){throw new TypeError($name + " is not a function");})();
  else {
    proto = Object.getPrototypeOf(obj);
    if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, $name))
      $.defineProperty(proto, $name, method);
  }
  return method.apply(obj, $arguments);
};

$.isDartObject = function(obj) {
  return ((obj) instanceof ($.Object));
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && $._dynamicMetadata0() != null)
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (method != null)
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function($name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[$name];
  if (f != null && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT46)[$name];
  if (dartMethod != null)
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, $name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, $name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer$("");
  if (isMultiLine === true)
    $.add$1$a(sb, "m");
  if (isCaseSensitive !== true)
    $.add$1$a(sb, "i");
  if (global === true)
    $.add$1$a(sb, "g");
  try {
    t1 = new RegExp(pattern, $.toString$0$abfnosu(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, $length, patternLength, startIndex, position, t1, endIndex;
  result = $.List_List(0);
  $length = haystack.length;
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.CONSTANT0.indexOf$2(haystack, needle, startIndex);
    t1 = $.getInterceptor(position);
    if (t1.$eq(position, -1) === true)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = t1.$add(position, patternLength);
    if ($.$$eq$o(endIndex, $length) === true)
      break;
    else
      startIndex = t1.$eq(position, endIndex) === true ? $.$$add$n(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.$$eq$o($.CONSTANT0.indexOf$2(receiver, other, startIndex), -1) !== true;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT0.substring$1(receiver, startIndex));
  else
    return $.get$iterator$a($.allMatches$1$s(other, $.CONSTANT0.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, $length, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer$("");
      $length = receiver.length;
      result.add$1(to);
      for (i = 0; i < $length; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        result.add$1(receiver[i]);
        result.add$1(to);
      }
      return result.toString$0();
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CONSTANT6, true), "\\$&"), true, false), true), to);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$.Future_Future$of = function($function) {
  var result, error, stackTrace, t1, exception;
  try {
    result = $function.call$0();
    t1 = $._FutureImpl$();
    t1._setOrChainValue$1(result);
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    error = t1;
    stackTrace = $.getTraceFromException(exception);
    return $._FutureImpl$immediateError(error, stackTrace);
  }

};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl$immediateError = function(error, stackTrace) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediateError$2(error, stackTrace);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, t3, t4, pos;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = $.get$iterator$a(futures); t3.moveNext$0() === true;) {
    t4 = t3.get$current();
    pos = t1.remaining_2;
    t1.remaining_2 = $.$$add$n(pos, 1);
    t4.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, pos));
  }
  if ($.$$eq$o(t1.remaining_2, 0) === true)
    return $._FutureImpl$immediate($.CONSTANT39);
  t1.values_1 = $.List_List$fixedLength(t1.remaining_2, null);
  t1.completer_0 = $._CompleterImpl$();
  return t1.completer_0.get$future();
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._WhenFuture$ = function(_action) {
  return new $._WhenFuture(_action, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$.StreamController$ = function(onPauseStateChange, onSubscriptionStateChange) {
  return new $.StreamController($._SingleControllerStream$(onSubscriptionStateChange, onPauseStateChange));
};

$._SingleControllerStream$ = function(_subscriptionHandler, _pauseHandler) {
  return new $._SingleControllerStream(_subscriptionHandler, _pauseHandler, null, 0, null);
};

$._StreamSubscriptionImpl$ = function(source, _onData, _onError, _onDone, _unsubscribeOnError) {
  var t1 = new $._StreamSubscriptionImpl(_unsubscribeOnError, _onData, _onError, _onDone, source, 0, null, null);
  t1._InternalLink$0();
  return t1;
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  error.throwDelayed$0();
};

$._nullDoneHandler = function() {
};

$._DelayedData$ = function(value) {
  return new $._DelayedData(value, null);
};

$._DelayedError$ = function(error) {
  return new $._DelayedError(error, null);
};

$._InternalLink_unlink = function(element) {
  var next, previous;
  next = element.get$_nextLink();
  previous = element.get$_previousLink();
  next.set$_previousLink(previous);
  previous.set$_nextLink(next);
  element.set$_previousLink(element);
  element.set$_nextLink(element);
};

$._InternalLinkList_add = function(list, element) {
  var listEnd;
  if (element !== element._nextLink)
    $._InternalLink_unlink(element);
  listEnd = list._previousLink;
  listEnd.set$_nextLink(element);
  list._previousLink = element;
  element._previousLink = listEnd;
  element._nextLink = list;
};

$._InternalLinkList_isEmpty = function(list) {
  return list === list._nextLink;
};

$._StreamImplEvents$ = function() {
  return new $._StreamImplEvents(null, null, null);
};

$._DoneSubscription$ = function(_handler) {
  var t1 = new $._DoneSubscription(_handler, null, 0);
  t1._DoneSubscription$1(_handler);
  return t1;
};

$._SingleStreamMultiplexer$ = function(_source) {
  var t1 = new $._SingleStreamMultiplexer(_source, null, null, null, 0, null);
  t1._MultiStreamImpl$0();
  return t1;
};

$._asyncError = function(error, stackTrace, cause) {
  if (typeof error === "object" && error !== null && !!error.$isAsyncError)
    return error;
  if (cause == null)
    return $.AsyncError$(error, stackTrace);
  return $.AsyncError$withCause(error, stackTrace, cause);
};

$._runUserCode = function(userCode, onSuccess, onError, cause) {
  var result, e, e0, s, exception, t1;
  result = null;
  try {
    result = userCode.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
      e = t1;
      return onError.call$1(e);
    } else {
      e0 = t1;
      s = $.getTraceFromException(exception);
      if (cause == null)
        onError.call$1($.AsyncError$(e0, s));
      else
        onError.call$1($.AsyncError$withCause(e0, s, cause));
    }
  }

  onSuccess.call$1(result);
};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$._ForwardingStreamSubscription$ = function(_stream, onData, onError, onDone, _unsubscribeOnError) {
  var t1 = new $._ForwardingStreamSubscription(_stream, _unsubscribeOnError, null, onData, onError, onDone);
  t1._BaseStreamSubscription$3(onData, onError, onDone);
  t1._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, _unsubscribeOnError);
  return t1;
};

$._WhereStream$ = function(source, test) {
  return new $._WhereStream(test, source);
};

$._MapStream$ = function(source, transform) {
  return new $._MapStream(transform, source);
};

$.Timer_Timer = function(duration, callback) {
  var t1, t2, milliseconds, zeroArgumentCallback;
  t1 = {};
  t2 = callback != null && !!callback.$is_TimerCallback0;
  if (!t2 && !(callback != null && !!callback.$is_TimerCallback1))
    throw $.$$throw($.ArgumentError$(callback));
  milliseconds = duration.inMilliseconds;
  if ($.$$lt$n(milliseconds, 0) === true)
    milliseconds = 0;
  t1.timer_0 = null;
  zeroArgumentCallback = t2 ? callback : new $.Timer_Timer_anon(t1, callback);
  t1.timer_0 = $.TimerImpl$(milliseconds, zeroArgumentCallback);
  return t1.timer_0;
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !src.$isJavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.$isJavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = $.getInterceptor$as(src); i >= srcStart; --i, --j)
      $.CONSTANT1.$indexSet(dst, j, t1.$index(src, i));
  else
    for (t1 = $.getInterceptor$as(src), j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j)
      $.CONSTANT1.$indexSet(dst, j, t1.$index(src, i));
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq$o(a[i], element) === true)
      return i;
  }
  return -1;
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1, t2;
  for (t1 = $.get$iterator$a(iterable), t2 = $.getInterceptor(element); t1.moveNext$0() === true;)
    if (t2.$eq(element, t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_removeAll = function(collection, elementsToRemove) {
  var t1;
  for (t1 = $.CONSTANT1.get$iterator(elementsToRemove); t1.moveNext$0();)
    collection.remove$1(t1.get$current());
};

$.IterableMixinWorkaround_removeAllList = function(collection, elementsToRemove) {
  collection.removeMatching$1($.get$contains$as($.CONSTANT1.toSet$0(elementsToRemove)));
};

$.IterableMixinWorkaround_removeMatching = function(collection, test) {
  var elementsToRemove, t1, t2;
  elementsToRemove = [];
  for (t1 = collection.get$iterator(); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (test.call$1(t2) === true)
      elementsToRemove.push(t2);
  }
  collection.removeAll$1(elementsToRemove);
};

$.IterableMixinWorkaround_joinList = function(list, separator) {
  var t1, buffer, i;
  if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if (typeof separator !== "string")
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if ($.get$isEmpty$as(list) === true)
    return "";
  t1 = list.length;
  if (t1 === 1) {
    if (0 >= t1)
      throw $.ioore(0);
    return $.S(list[0]);
  }
  buffer = $.StringBuffer$("");
  if (separator === "")
    for (i = 0; i < list.length; ++i)
      buffer.add$1($.S(list[i]));
  else {
    if (0 >= list.length)
      throw $.ioore(0);
    buffer.add$1($.S(list[0]));
    for (i = 1; i < list.length; ++i) {
      buffer.add$1(separator);
      if (i >= list.length)
        throw $.ioore(i);
      buffer.add$1($.S(list[i]));
    }
  }
  return buffer.toString$0();
};

$.IterableMixinWorkaround_joinList$bailout = function(state0, list, separator) {
  var t1, buffer, i;
  t1 = $.getInterceptor$as(list);
  if (t1.get$isEmpty(list) === true)
    return "";
  if ($.$$eq$o(t1.get$length(list), 1) === true)
    return $.S(t1.$index(list, 0));
  buffer = $.StringBuffer$("");
  if (separator == null || $.$$eq$o(separator, "") === true)
    for (i = 0; $.CONSTANT4.$lt(i, t1.get$length(list)); ++i)
      buffer.add$1($.S(t1.$index(list, i)));
  else {
    buffer.add$1($.S(t1.$index(list, 0)));
    for (i = 1; $.CONSTANT4.$lt(i, t1.get$length(list)); ++i) {
      buffer.add$1(separator);
      buffer.add$1($.S(t1.$index(list, i)));
    }
  }
  return buffer.toString$0();
};

$.IterableMixinWorkaround_sortList = function(l, compare) {
  if (compare == null)
    compare = $.Comparable_compare;
  $.Sort__doSort(l, 0, l.length - 1, compare);
};

$._HashMapTable$ = function() {
  var t1 = new $._HashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.HashMap$ = function() {
  var t1 = new $.HashMap($._HashMapTable$());
  t1.HashMap$0();
  return t1;
};

$.HashSet$ = function() {
  var t1 = new $.HashSet($._HashTable$(8));
  t1.HashSet$0();
  return t1;
};

$._HashTable$ = function(initialCapacity) {
  var t1 = new $._HashTable(null, initialCapacity, 0, 0, 0, null);
  t1._HashTable$1(initialCapacity);
  return t1;
};

$._HashTableKeyIterable$ = function(hashTable) {
  return new $._HashTableKeyIterable(hashTable);
};

$._HashTableKeyIterator$ = function(hashTable) {
  return new $._HashTableKeyIterator(hashTable, hashTable.get$_modificationCount(), 0, null);
};

$._HashTableValueIterable$ = function(hashTable, _entryIndex) {
  return new $._HashTableValueIterable(_entryIndex, hashTable);
};

$._HashTableValueIterator$ = function(hashTable, _entryIndex) {
  return new $._HashTableValueIterator(_entryIndex, hashTable, hashTable._modificationCount, 0, null);
};

$._LinkedHashMapTable$ = function() {
  var t1 = new $._LinkedHashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.LinkedHashMap$ = function() {
  var t1 = new $.LinkedHashMap($._LinkedHashMapTable$());
  t1.LinkedHashMap$0();
  return t1;
};

$.LinkedHashSet$ = function() {
  var t1 = new $.LinkedHashSet($._LinkedHashTable$(8));
  t1.LinkedHashSet$0();
  return t1;
};

$._LinkedHashTable$ = function(initialCapacity) {
  var t1 = new $._LinkedHashTable(null, initialCapacity, 0, 0, 0, null);
  t1._HashTable$1(initialCapacity);
  return t1;
};

$._LinkedHashTableKeyIterable$ = function(_table) {
  return new $._LinkedHashTableKeyIterable(_table);
};

$._LinkedHashTableKeyIterator$ = function(hashTable) {
  return new $._LinkedHashTableKeyIterator(hashTable, hashTable.get$_modificationCount(), hashTable._next$1(0), null);
};

$._LinkedHashTableValueIterable$ = function(_hashTable, _valueIndex) {
  return new $._LinkedHashTableValueIterable(_hashTable, _valueIndex);
};

$._LinkedHashTableValueIterator$ = function(hashTable, _valueIndex) {
  return new $._LinkedHashTableValueIterator(_valueIndex, hashTable, hashTable.get$_modificationCount(), hashTable._next$1(0), null);
};

$.Queue_Queue = function() {
  return $.ListQueue$(null);
};

$.ListQueue$ = function(initialCapacity) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  t1.ListQueue$1(initialCapacity);
  return t1;
};

$.ListQueue__isPowerOf2 = function(number) {
  var t1 = $.getInterceptor$n(number);
  return t1.$and(number, t1.$sub(number, 1)) === 0;
};

$.ListQueue__nextPowerOf2 = function(number) {
  var number0, nextNumber;
  number0 = $.$$sub$n($.$$shl$n(number, 2), 1);
  if (number0 !== (number0 | 0))
    return $.ListQueue__nextPowerOf2$bailout(1, number0);
  for (number = number0; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
};

$.ListQueue__nextPowerOf2$bailout = function(state0, number0) {
  var number, t1, nextNumber;
  for (number = number0; true; number = nextNumber) {
    t1 = $.getInterceptor$n(number);
    nextNumber = t1.$and(number, t1.$sub(number, 1));
    if (nextNumber === 0)
      return number;
  }
};

$._ListQueueIterator$ = function(queue) {
  return new $._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
};

$.Comparable_compare = function(a, b) {
  return $.compareTo$1$ns(a, b);
};

$.DateTime$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DateTime$_now = function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
};

$.double_parse = function(source, handleError) {
  return $.Primitives_parseDouble(source, handleError);
};

$.Duration$ = function(days, hours, milliseconds, minutes, seconds) {
  return new $.Duration($.$$add$n($.$$add$n($.$$add$n($.$$add$n($.$$mul$n(days, 86400000), $.$$mul$n(hours, 3600000)), $.$$mul$n(minutes, 60000)), $.$$mul$n(seconds, 1000)), milliseconds));
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString$0$abfnosu(object);
  if (typeof object === "string")
    return "\"" + $.S($.replaceAll$2$s($.replaceAll$2$s($.replaceAll$2$s($.CONSTANT0.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"")) + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.RangeError$range = function(value, start, end) {
  return new $.RangeError("value " + $.S(value) + " not in range " + $.S(start) + ".." + $.S(end));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.IllegalJSRegExpException$ = function(pattern, errmsg) {
  return new $.IllegalJSRegExpException("Illegal pattern: " + $.S(pattern) + ", " + errmsg);
};

$.IntegerDivisionByZeroException$ = function() {
  return new $.IntegerDivisionByZeroException();
};

$.int_parse = function(source, onError, radix) {
  return $.Primitives_parseInt(source, radix, onError);
};

$.List_List = function($length) {
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  return new Array($length);
};

$.List_List$fixedLength = function($length, fill) {
  var result, t1, i;
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  result = $.Primitives_newFixedList($length);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.$isJavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, $length, fill, result);
  if ($.$$eq$o($length, 0) !== true && fill != null)
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, $length, fill, result) {
  var t1, i;
  if ($.$$eq$o($length, 0) !== true && fill != null)
    for (t1 = $.getInterceptor$as(result), i = 0; $.CONSTANT4.$lt(i, t1.get$length(result)); ++i)
      t1.$indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.get$iterator$a(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.Map_Map = function() {
  return $.HashMap$();
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!charCodes.constructor === Array)
    charCodes = $.List_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.StringBuffer$ = function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return document.query$1(selector);
};

$.AudioElement_AudioElement = function(src) {
  var t1 = $ === src;
  if (t1)
    src = null;
  if (!t1)
    return new Audio(src);
  return new Audio();
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = document.createElement("canvas");
  if (width != null)
    e.set$width(width);
  if (height != null)
    e.set$height(height);
  return e;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.Element_Element$tag = function(tag) {
  return $._ElementFactoryProvider_createElement_tag(tag);
};

$.Element__determineMouseWheelEventType = function(e) {
  if (e.onwheel !== undefined)
    return "wheel";
  else if (e.onmousewheel !== undefined)
    return "mousewheel";
  else
    return "DOMMouseScroll";
};

$._ElementFactoryProvider_createElement_tag = function(tag) {
  return document.createElement(tag);
};

$.HttpRequest_getString = function(url, onProgress, withCredentials) {
  return $.HttpRequest_request(url, null, onProgress, null, null, withCredentials).then$1(new $.HttpRequest_getString_anon());
};

$.HttpRequest_request = function(url, method, onProgress, responseType, sendData, withCredentials) {
  var completer, xhr;
  completer = $._CompleterImpl$();
  xhr = new XMLHttpRequest();
  xhr.open$3(method == null ? "GET" : method, url, true);
  if (withCredentials != null)
    xhr.withCredentials = withCredentials;
  if (responseType != null)
    xhr.responseType = responseType;
  if (onProgress != null)
    xhr.get$onProgress().listen$1(onProgress);
  xhr.get$onLoad().listen$1(new $.HttpRequest_request_anon(completer, xhr));
  xhr.get$onError().listen$1(new $.HttpRequest_request_anon0(completer));
  if (sendData != null)
    xhr.send(sendData);
  else
    xhr.send$0();
  return completer.future;
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = document.createElement("img");
  if (src != null)
    e.set$src(src);
  if (width != null)
    e.set$width(width);
  if (height != null)
    e.set$height(height);
  return e;
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.Window__isDartLocation = function(thing) {
  var t1, exception;
  try {
    t1 = thing;
    return typeof t1 === "object" && t1 !== null && t1.$isLocation();
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains$2$s($._Device_userAgent(), "Opera", 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2$s($._Device_userAgent(), "MSIE", 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains$2$s($._Device_userAgent(), "Firefox", 0);
};

$._Device_isWebKit = function() {
  return $._Device_isOpera() !== true && $.contains$2$s($._Device_userAgent(), "WebKit", 0) === true;
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$._DocumentFragmentFactoryProvider_createDocumentFragment_html = function(html) {
  var fragment = document.createDocumentFragment();
  fragment.set$innerHtml(html);
  return fragment;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._TypedImageData$ = function(data, height, width) {
  return new $._TypedImageData(data, height, width);
};

$._convertNativeToDart_ImageData = function(nativeImageData) {
  0;
  if (typeof nativeImageData === "object" && nativeImageData !== null && nativeImageData.$isImageData())
    return nativeImageData;
  return $._TypedImageData$(nativeImageData.data, nativeImageData.height, nativeImageData.width);
};

$._convertDartToNative_ImageData = function(imageData) {
  if (typeof imageData === "object" && imageData !== null && !!imageData.$is_TypedImageData)
    return {data: imageData.data, height: imageData.height, width: imageData.width};
  return imageData;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  if (w === window)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$._LocationWrapper__get = function(p, m) {
  return p[m];
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.get$length$as(array), -1, null);
};

$.convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.forEach$1$a(dict, new $.convertDartToNative_Dictionary_anon(object));
  return object;
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq$o(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, t2, i;
  t1 = $.getInterceptor$as(a);
  t2 = $.getInterceptor$n(startIndex);
  if (t2.$ge(startIndex, t1.get$length(a)) === true)
    return -1;
  if (t2.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; t2 = $.getInterceptor$n(i), t2.$lt(i, endIndex) === true; i = t2.$add(i, 1))
    if ($.$$eq$o(t1.$index(a, i), element) === true)
      return i;
  return -1;
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$._Isolate_port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$.parse = function(json, reviver) {
  var listener = reviver == null ? $.BuildJsonListener$() : $.ReviverJsonListener$(reviver);
  $.JsonParser$(json, listener).parse$0();
  return listener.get$result();
};

$.BuildJsonListener$ = function() {
  return new $.BuildJsonListener([], null, null, null);
};

$.ReviverJsonListener$ = function(reviver) {
  return new $.ReviverJsonListener(reviver, [], null, null, null);
};

$.JsonParser$ = function(source, listener) {
  return new $.JsonParser(source, listener);
};

$.min = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.CONSTANT40.get$isNegative(b) === true || $.CONSTANT40.get$isNaN(b))
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return a + b;
        if ($.CONSTANT40.get$isNaN(b))
          return b;
        return a;
      }
      if (b === 0 && $.CONSTANT4.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.pow = function(x, exponent) {
  $.checkNum(x);
  $.checkNum(exponent);
  return Math.pow(x, exponent);
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.Random_Random = function(seed) {
  return $.CONSTANT35;
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.main = function() {
  var pathname, match, page, canvas, t1, transitionDiv;
  pathname = window.get$location().get$pathname();
  match = $.RegExp_RegExp("([A-Za-z0-9-]+)\\.html", false, false).firstMatch$1(pathname);
  if (match != null && $.$$eq$o(match.get$groupCount(), 1) === true) {
    page = match.group$1(1);
    $.Primitives_printString("current page: " + $.S(page));
    canvas = document.query$1("#stage");
    if (canvas != null) {
      $.stage = $.Stage$("stage", canvas);
      $.renderLoop = $.RenderLoop$();
      $.renderLoop.addStage$1($.stage);
      $.juggler = $.renderLoop.get$juggler();
      $.resourceManager = $.ResourceManager$();
    }
    switch (page) {
      case "filter":
        t1 = $.resourceManager;
        t1.addBitmapData$2("king", "images/king.png");
        t1.load$0().then$1(new $.main_anon());
        break;
      case "masking":
        t1 = $.resourceManager;
        t1.addBitmapData$2("flower1", "images/Flower1.png");
        t1.addBitmapData$2("flower2", "images/Flower2.png");
        t1.addBitmapData$2("flower3", "images/Flower3.png");
        t1.load$0().then$1(new $.main_anon0());
        break;
      case "movieclip":
        t1 = $.resourceManager;
        t1.addTextureAtlas$3("walkTextureAtlas", "images/walk.json", "jsonarray");
        t1.load$0().then$1(new $.main_anon1());
        break;
      case "performance":
        t1 = $.resourceManager;
        t1.addTextureAtlas$3("flags", "images/flags.json", "jsonarray");
        t1.load$0().then$1(new $.main_anon2());
        break;
      case "sound":
        t1 = $.resourceManager;
        t1.addBitmapData$2("KeyBlack", "images/piano/KeyBlack.png");
        t1.addBitmapData$2("KeyWhite0", "images/piano/KeyWhite0.png");
        t1.addBitmapData$2("KeyWhite1", "images/piano/KeyWhite1.png");
        t1.addBitmapData$2("KeyWhite2", "images/piano/KeyWhite2.png");
        t1.addBitmapData$2("KeyWhite3", "images/piano/KeyWhite3.png");
        t1.addBitmapData$2("Finger", "images/piano/Finger.png");
        t1.addBitmapData$2("Background", "images/piano/Background.jpg");
        t1.addSound$2("Cheer", "sounds/Cheer.mp3");
        t1.addSound$2("Note1", "sounds/piano/Note1.mp3");
        t1.addSound$2("Note2", "sounds/piano/Note2.mp3");
        t1.addSound$2("Note3", "sounds/piano/Note3.mp3");
        t1.addSound$2("Note4", "sounds/piano/Note4.mp3");
        t1.addSound$2("Note5", "sounds/piano/Note5.mp3");
        t1.addSound$2("Note6", "sounds/piano/Note6.mp3");
        t1.addSound$2("Note7", "sounds/piano/Note7.mp3");
        t1.addSound$2("Note8", "sounds/piano/Note8.mp3");
        t1.addSound$2("Note9", "sounds/piano/Note9.mp3");
        t1.addSound$2("Note10", "sounds/piano/Note10.mp3");
        t1.addSound$2("Note11", "sounds/piano/Note11.mp3");
        t1.addSound$2("Note12", "sounds/piano/Note12.mp3");
        t1.addSound$2("Note13", "sounds/piano/Note13.mp3");
        t1.addSound$2("Note14", "sounds/piano/Note14.mp3");
        t1.addSound$2("Note15", "sounds/piano/Note15.mp3");
        t1.addSound$2("Note16", "sounds/piano/Note16.mp3");
        t1.addSound$2("Note17", "sounds/piano/Note17.mp3");
        t1.addSound$2("Note18", "sounds/piano/Note18.mp3");
        t1.addSound$2("Note19", "sounds/piano/Note19.mp3");
        t1.addSound$2("Note20", "sounds/piano/Note20.mp3");
        t1.addSound$2("Note21", "sounds/piano/Note21.mp3");
        t1.addSound$2("Note22", "sounds/piano/Note22.mp3");
        t1.addSound$2("Note23", "sounds/piano/Note23.mp3");
        t1.addSound$2("Note24", "sounds/piano/Note24.mp3");
        t1.addSound$2("Note25", "sounds/piano/Note25.mp3");
        t1.load$0().then$1(new $.main_anon3());
        break;
      case "text":
        $.stage.addChild$1($.TextDemo$());
        break;
      case "tweener":
        $.stage.addChild$1($.TweenerDemo$());
        break;
      case "flump":
        t1 = $.resourceManager;
        t1.addFlumpLibrary$2("flump", "images/flumpLibrary.json");
        t1.load$0().then$1(new $.main_anon4());
        break;
      case "texturepacker":
        t1 = $.resourceManager;
        t1.addTextureAtlas$3("levelUp", "images/LevelupTextureAtlas.json", "jsonarray");
        t1.load$0().then$1(new $.main_anon5());
        break;
      case "transitions":
        transitionDiv = $.TransititionTypeDemo$().getTransitionDiv$0();
        $.add$1$a(document.query$1("#transitions").get$children(), transitionDiv);
        break;
    }
  }
};

$.FilterDemo$ = function() {
  var t1 = new $.FilterDemo([$.makeLiteralMap(["name", "DropShadowFilter (black)", "filter", $.DropShadowFilter$(10, 0.7853981633974483, 4278190080, 0.8, 8, 8, 1, false, false, false)]), $.makeLiteralMap(["name", "GlowFilter (red)", "filter", $.GlowFilter$(4294901760, 1, 20, 20, 2, false, false, false)]), $.makeLiteralMap(["name", "ColorMatrixFilter (grayscale)", "filter", $.ColorMatrixFilter$grayscale()]), $.makeLiteralMap(["name", "ColorMatrixFilter (invert)", "filter", $.ColorMatrixFilter$invert()]), $.makeLiteralMap(["name", "BlurFilter (radius 1)", "filter", $.BlurFilter$(1, 1)]), $.makeLiteralMap(["name", "BlurFilter (radius 5)", "filter", $.BlurFilter$(5, 5)]), $.makeLiteralMap(["name", "BlurFilter (radius 10)", "filter", $.BlurFilter$(10, 10)]), $.makeLiteralMap(["name", "BlurFilter (radius 20)", "filter", $.BlurFilter$(20, 20)])], $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.FilterDemo$0();
  return t1;
};

$.MaskingDemo$ = function() {
  var t1 = new $.MaskingDemo($.Random_Random(null), $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.MaskingDemo$0();
  return t1;
};

$.MovieClipDemo$ = function() {
  var t1 = new $.MovieClipDemo($.Random_Random(null), null, null, $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.MovieClipDemo$0();
  return t1;
};

$.FlyingFlag$ = function(bitmapData, vx, vy) {
  var t1 = new $.FlyingFlag(vx, vy, bitmapData, "auto", null, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.Bitmap$2(bitmapData, "auto");
  t1.FlyingFlag$3(bitmapData, vx, vy);
  return t1;
};

$.PerformanceDemo$ = function() {
  var t1 = new $.PerformanceDemo(null, $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.PerformanceDemo$0();
  return t1;
};

$.SoundDemo$ = function() {
  var t1 = new $.SoundDemo(["C4", "A3", "A3", "C4", "D4", "G3", "G3", "A3", "A3#", "F4", "F4", "E4", "C4", "D4", "C4", "A3#", "A3", "C4", "D4", "D4", "D4", "G4", "F4", "E4", "F4", "D4", "C4", "F3", "G3", "A3", "D4", "C4", "C4", "A3#", "A3", "E3", "F3"], ["Hey ", "Jude, ", "don't ", "make ", "it ", "bad.<br>", "Take ", "a ", "sad ", "song ", "and ", "make ", "it ", "better.<br>", "", "", "", "Remember ", "", "", "to ", "let ", "her ", "into ", "", "your ", "heart.<br>", "Than ", "you ", "can ", "start ", "", "to ", "make ", "things ", "better.", "", " "], $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.SoundDemo$0();
  return t1;
};

$.Piano$ = function(_songNotes, _songLyrics) {
  var t1 = new $.Piano(_songNotes, _songLyrics, ["C3", "C3#", "D3", "D3#", "E3", "F3", "F3#", "G3", "G3#", "A3", "A3#", "B3", "C4", "C4#", "D4", "D4#", "E4", "F4", "F4#", "G4", "G4#", "A4", "A4#", "B4", "C5"], null, null, $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.Piano$2(_songNotes, _songLyrics);
  return t1;
};

$.PianoKey$ = function(piano, note, sound) {
  var t1 = new $.PianoKey(piano, note, sound, false, false, $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.PianoKey$3(piano, note, sound);
  return t1;
};

$.TextDemo$ = function() {
  var t1 = new $.TextDemo("Filet mignon leberkas pig pork chop biltong, short loin strip steak turkey brisket \nvenison. Pastrami venison pancetta, leberkas pork chop chicken prosciutto beef ribs \nbresaola kielbasa swine biltong capicola. Hamburger beef ribs ball tip drumstick salami \npig. Capicola pork loin shank, salami chicken hamburger tail. Sirloin spare ribs\nground round cow strip steak prosciutto swine bacon corned beef.", $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.TextDemo$0();
  return t1;
};

$.TweenerDemo$ = function() {
  var t1 = new $.TweenerDemo($.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.TweenerDemo$0();
  return t1;
};

$.TransititionTypeDemo$ = function() {
  return new $.TransititionTypeDemo([$.makeLiteralMap(["name", "linear", "transition", $.TransitionFunction_linear]), $.makeLiteralMap(["name", "sine", "transition", $.TransitionFunction_sine]), $.makeLiteralMap(["name", "cosine", "transition", $.TransitionFunction_cosine]), $.makeLiteralMap(["name", "random", "transition", $.TransitionFunction_random]), $.makeLiteralMap(["name", "easeInQuadratic", "transition", $.TransitionFunction_easeInQuadratic]), $.makeLiteralMap(["name", "easeOutQuadratic", "transition", $.TransitionFunction_easeOutQuadratic]), $.makeLiteralMap(["name", "easeInOutQuadratic", "transition", $.TransitionFunction_easeInOutQuadratic]), $.makeLiteralMap(["name", "easeOutInQuadratic", "transition", $.TransitionFunction_easeOutInQuadratic]), $.makeLiteralMap(["name", "easeInCubic", "transition", $.TransitionFunction_easeInCubic]), $.makeLiteralMap(["name", "easeOutCubic", "transition", $.TransitionFunction_easeOutCubic]), $.makeLiteralMap(["name", "easeInOutCubic", "transition", $.TransitionFunction_easeInOutCubic]), $.makeLiteralMap(["name", "easeOutInCubic", "transition", $.TransitionFunction_easeOutInCubic]), $.makeLiteralMap(["name", "easeInQuartic", "transition", $.TransitionFunction_easeInQuartic]), $.makeLiteralMap(["name", "easeOutQuartic", "transition", $.TransitionFunction_easeOutQuartic]), $.makeLiteralMap(["name", "easeInOutQuartic", "transition", $.TransitionFunction_easeInOutQuartic]), $.makeLiteralMap(["name", "easeOutInQuartic", "transition", $.TransitionFunction_easeOutInQuartic]), $.makeLiteralMap(["name", "easeInQuintic", "transition", $.TransitionFunction_easeInQuintic]), $.makeLiteralMap(["name", "easeOutQuintic", "transition", $.TransitionFunction_easeOutQuintic]), $.makeLiteralMap(["name", "easeInOutQuintic", "transition", $.TransitionFunction_easeInOutQuintic]), $.makeLiteralMap(["name", "easeOutInQuintic", "transition", $.TransitionFunction_easeOutInQuintic]), $.makeLiteralMap(["name", "easeInCircular", "transition", $.TransitionFunction_easeInCircular]), $.makeLiteralMap(["name", "easeOutCircular", "transition", $.TransitionFunction_easeOutCircular]), $.makeLiteralMap(["name", "easeInOutCircular", "transition", $.TransitionFunction_easeInOutCircular]), $.makeLiteralMap(["name", "easeOutInCircular", "transition", $.TransitionFunction_easeOutInCircular]), $.makeLiteralMap(["name", "easeInSine", "transition", $.TransitionFunction_easeInSine]), $.makeLiteralMap(["name", "easeOutSine", "transition", $.TransitionFunction_easeOutSine]), $.makeLiteralMap(["name", "easeInOutSine", "transition", $.TransitionFunction_easeInOutSine]), $.makeLiteralMap(["name", "easeOutInSine", "transition", $.TransitionFunction_easeOutInSine]), $.makeLiteralMap(["name", "easeInExponential", "transition", $.TransitionFunction_easeInExponential]), $.makeLiteralMap(["name", "easeOutExponential", "transition", $.TransitionFunction_easeOutExponential]), $.makeLiteralMap(["name", "easeInOutExponential", "transition", $.TransitionFunction_easeInOutExponential]), $.makeLiteralMap(["name", "easeOutInExponential", "transition", $.TransitionFunction_easeOutInExponential]), $.makeLiteralMap(["name", "easeInBack", "transition", $.TransitionFunction_easeInBack]), $.makeLiteralMap(["name", "easeOutBack", "transition", $.TransitionFunction_easeOutBack]), $.makeLiteralMap(["name", "easeInOutBack", "transition", $.TransitionFunction_easeInOutBack]), $.makeLiteralMap(["name", "easeOutInBack", "transition", $.TransitionFunction_easeOutInBack]), $.makeLiteralMap(["name", "easeInElastic", "transition", $.TransitionFunction_easeInElastic]), $.makeLiteralMap(["name", "easeOutElastic", "transition", $.TransitionFunction_easeOutElastic]), $.makeLiteralMap(["name", "easeInOutElastic", "transition", $.TransitionFunction_easeInOutElastic]), $.makeLiteralMap(["name", "easeOutInElastic", "transition", $.TransitionFunction_easeOutInElastic]), $.makeLiteralMap(["name", "easeInBounce", "transition", $.TransitionFunction_easeInBounce]), $.makeLiteralMap(["name", "easeOutBounce", "transition", $.TransitionFunction_easeOutBounce]), $.makeLiteralMap(["name", "easeInOutBounce", "transition", $.TransitionFunction_easeInOutBounce]), $.makeLiteralMap(["name", "easeOutInBounce", "transition", $.TransitionFunction_easeOutInBounce])]);
};

$.FlumpDemo$ = function() {
  var t1 = new $.FlumpDemo($.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.FlumpDemo$0();
  return t1;
};

$.TexturePackerDemo$ = function() {
  var t1 = new $.TexturePackerDemo(null, $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.TexturePackerDemo$0();
  return t1;
};

$.DelayedCall$ = function(action, delay) {
  var t1 = new $.DelayedCall(action, 0, 0, 1);
  t1.DelayedCall$2(action, delay);
  return t1;
};

$.Juggler$ = function() {
  return new $.Juggler($.List_List(0), 0, 0);
};

$.TransitionFunction_linear = function(ratio) {
  return ratio;
};

$.TransitionFunction_sine = function(ratio) {
  return 0.5 - 0.5 * Math.cos($.checkNum($.$$mul$n($.$$mul$n(ratio, 2), 3.141592653589793)));
};

$.TransitionFunction_cosine = function(ratio) {
  return 0.5 + 0.5 * Math.cos($.checkNum($.$$mul$n($.$$mul$n(ratio, 2), 3.141592653589793)));
};

$.TransitionFunction_random = function(ratio) {
  var t1;
  if ($.TransitionFunction__random == null)
    $.TransitionFunction__random = $.CONSTANT35;
  t1 = $.getInterceptor(ratio);
  if (t1.$eq(ratio, 0) === true || t1.$eq(ratio, 1) === true)
    return ratio;
  return $.TransitionFunction__random.nextDouble$0();
};

$.TransitionFunction_easeInQuadratic = function(ratio) {
  return $.$$mul$n(ratio, ratio);
};

$.TransitionFunction_easeOutQuadratic = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return 1 - ratio * ratio;
};

$.TransitionFunction_easeInOutQuadratic = function(ratio) {
  var t1;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = t1.$mul(ratio, ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * (1 - ratio * ratio) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInQuadratic = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * (1 - ratio * ratio);
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$$mul$n(t1, t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * t1 + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInCubic = function(ratio) {
  return $.$$mul$n($.$$mul$n(ratio, ratio), ratio);
};

$.TransitionFunction_easeOutCubic = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return 1 - ratio * ratio * ratio;
};

$.TransitionFunction_easeInOutCubic = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t2 = $.$$mul$n(t1.$mul(ratio, ratio), ratio);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t2 = 0.5 * t2;
    t1 = t2;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * (1 - ratio * ratio * ratio) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInCubic = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * (1 - ratio * ratio * ratio);
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$$mul$n($.$$mul$n(t1, t1), t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * t1 + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInQuartic = function(ratio) {
  return $.$$mul$n($.$$mul$n($.$$mul$n(ratio, ratio), ratio), ratio);
};

$.TransitionFunction_easeOutQuartic = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return 1 - ratio * ratio * ratio * ratio;
};

$.TransitionFunction_easeInOutQuartic = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t2 = $.$$mul$n($.$$mul$n(t1.$mul(ratio, ratio), ratio), ratio);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t2 = 0.5 * t2;
    t1 = t2;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * (1 - ratio * ratio * ratio * ratio) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInQuartic = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * (1 - ratio * ratio * ratio * ratio);
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$$mul$n($.$$mul$n($.$$mul$n(t1, t1), t1), t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * t1 + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInQuintic = function(ratio) {
  return $.$$mul$n($.$$mul$n($.$$mul$n($.$$mul$n(ratio, ratio), ratio), ratio), ratio);
};

$.TransitionFunction_easeOutQuintic = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return 1 - ratio * ratio * ratio * ratio * ratio;
};

$.TransitionFunction_easeInOutQuintic = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t2 = $.$$mul$n($.$$mul$n($.$$mul$n(t1.$mul(ratio, ratio), ratio), ratio), ratio);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t2 = 0.5 * t2;
    t1 = t2;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * (1 - ratio * ratio * ratio * ratio * ratio) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInQuintic = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * (1 - ratio * ratio * ratio * ratio * ratio);
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$$mul$n($.$$mul$n($.$$mul$n($.$$mul$n(t1, t1), t1), t1), t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * t1 + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInCircular = function(ratio) {
  var t1 = $.$$mul$n(ratio, ratio);
  if (typeof t1 !== "number")
    throw $.iae(t1);
  return 1 - Math.sqrt($.checkNum(1 - t1));
};

$.TransitionFunction_easeOutCircular = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return Math.sqrt($.checkNum(1 - ratio * ratio));
};

$.TransitionFunction_easeInOutCircular = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = t1.$mul(ratio, ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * (1 - Math.sqrt($.checkNum(1 - t1)));
    t1 = t2;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * Math.sqrt($.checkNum(1 - ratio * ratio)) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInCircular = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * Math.sqrt($.checkNum(1 - ratio * ratio));
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$$mul$n(t1, t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * (1 - Math.sqrt($.checkNum(1 - t1))) + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInSine = function(ratio) {
  return 1 - Math.cos($.checkNum($.$$mul$n(ratio, 1.5707963267948966)));
};

$.TransitionFunction_easeOutSine = function(ratio) {
  return Math.sin($.checkNum($.$$mul$n(ratio, 1.5707963267948966)));
};

$.TransitionFunction_easeInOutSine = function(ratio) {
  var t1;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  return t1.$lt(ratio, 1) === true ? 0.5 * (1 - Math.cos($.checkNum(t1.$mul(ratio, 1.5707963267948966)))) : 0.5 * Math.sin($.checkNum($.$$mul$n(t1.$sub(ratio, 1), 1.5707963267948966))) + 0.5;
};

$.TransitionFunction_easeOutInSine = function(ratio) {
  var t1;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  return t1.$lt(ratio, 1) === true ? 0.5 * Math.sin($.checkNum(t1.$mul(ratio, 1.5707963267948966))) : 0.5 * (1 - Math.cos($.checkNum($.$$mul$n(t1.$sub(ratio, 1), 1.5707963267948966)))) + 0.5;
};

$.TransitionFunction_easeInExponential = function(ratio) {
  var t1 = $.getInterceptor(ratio);
  if (t1.$eq(ratio, 0) === true)
    return 0;
  t1 = t1.$sub(ratio, 1);
  if (typeof t1 !== "number")
    throw $.iae(t1);
  t1 = 10 * t1;
  $.checkNum(2);
  $.checkNum(t1);
  return Math.pow(2, t1);
};

$.TransitionFunction_easeOutExponential = function(ratio) {
  var t1;
  if ($.$$eq$o(ratio, 1) === true)
    return 1;
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  t1 = -10 * ratio;
  $.checkNum(2);
  $.checkNum(t1);
  return 1 - Math.pow(2, t1);
};

$.TransitionFunction_easeInOutExponential = function(ratio) {
  var t1;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  return t1.$lt(ratio, 1) === true ? 0.5 * $.TransitionFunction_easeInExponential(ratio) : 0.5 * $.TransitionFunction_easeOutExponential(t1.$sub(ratio, 1)) + 0.5;
};

$.TransitionFunction_easeOutInExponential = function(ratio) {
  var t1, t2, t3;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = $.TransitionFunction_easeOutExponential(ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t2 = $.TransitionFunction_easeInExponential(t1.$sub(ratio, 1));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * t2 + 0.5;
    t1 = t3;
  }
  return t1;
};

$.TransitionFunction_easeInBack = function(ratio) {
  var t1 = $.$$mul$n(ratio, ratio);
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  return $.$$mul$n(t1, 2.70158 * ratio - 1.70158);
};

$.TransitionFunction_easeOutBack = function(ratio) {
  var t1;
  ratio = $.$$sub$n(ratio, 1);
  t1 = $.$$mul$n(ratio, ratio);
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  return $.$$add$n($.$$mul$n(t1, 2.70158 * ratio + 1.70158), 1);
};

$.TransitionFunction_easeInOutBack = function(ratio) {
  var t1, t2, t3;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = t1.$mul(ratio, ratio);
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    t1 = $.$$mul$n(t1, 2.70158 * ratio - 1.70158);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t2 = $.TransitionFunction_easeOutBack(t1.$sub(ratio, 1));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * t2 + 0.5;
    t1 = t3;
  }
  return t1;
};

$.TransitionFunction_easeOutInBack = function(ratio) {
  var t1, t2, t3;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = $.TransitionFunction_easeOutBack(ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t1 = t1.$sub(ratio, 1);
    t2 = $.$$mul$n(t1, t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = $.$$mul$n(t2, 2.70158 * t1 - 1.70158);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * t2 + 0.5;
    t1 = t3;
  }
  return t1;
};

$.TransitionFunction_easeInElastic = function(ratio) {
  var t1 = $.getInterceptor(ratio);
  if (t1.$eq(ratio, 0) === true || t1.$eq(ratio, 1) === true)
    return ratio;
  ratio = t1.$sub(ratio, 1);
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  t1 = 10 * ratio;
  $.checkNum(2);
  $.checkNum(t1);
  return -Math.pow(2, t1) * Math.sin($.checkNum((ratio - 0.075) * 6.283185307179586 / 0.3));
};

$.TransitionFunction_easeOutElastic = function(ratio) {
  var t1 = $.getInterceptor(ratio);
  if (t1.$eq(ratio, 0) === true || t1.$eq(ratio, 1) === true)
    return ratio;
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  t1 = -10 * ratio;
  $.checkNum(2);
  $.checkNum(t1);
  return Math.pow(2, t1) * Math.sin($.checkNum((ratio - 0.075) * 6.283185307179586 / 0.3)) + 1;
};

$.TransitionFunction_easeInOutElastic = function(ratio) {
  var t1, t2, t3;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = $.TransitionFunction_easeInElastic(ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t2 = $.TransitionFunction_easeOutElastic(t1.$sub(ratio, 1));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * t2 + 0.5;
    t1 = t3;
  }
  return t1;
};

$.TransitionFunction_easeOutInElastic = function(ratio) {
  var t1, t2, t3;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = $.TransitionFunction_easeOutElastic(ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t2 = $.TransitionFunction_easeInElastic(t1.$sub(ratio, 1));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * t2 + 0.5;
    t1 = t3;
  }
  return t1;
};

$.TransitionFunction_easeInBounce = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  return 1 - $.TransitionFunction_easeOutBounce(1 - ratio);
};

$.TransitionFunction_easeOutBounce = function(ratio) {
  var t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 0.36363636363636365) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    return 7.5625 * ratio * ratio;
  } else if (t1.$lt(ratio, 0.7272727272727273) === true) {
    ratio = t1.$sub(ratio, 0.5454545454545454);
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    return 7.5625 * ratio * ratio + 0.75;
  } else if (t1.$lt(ratio, 0.9090909090909091) === true) {
    ratio = t1.$sub(ratio, 0.8181818181818182);
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    return 7.5625 * ratio * ratio + 0.9375;
  } else {
    ratio = t1.$sub(ratio, 0.9545454545454546);
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    return 7.5625 * ratio * ratio + 0.984375;
  }
};

$.TransitionFunction_easeInOutBounce = function(ratio) {
  var t1, t2;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    t1 = 0.5 * (1 - $.TransitionFunction_easeOutBounce(1 - ratio));
  } else {
    t2 = 0.5 * $.TransitionFunction_easeOutBounce(t1.$sub(ratio, 1)) + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeOutInBounce = function(ratio) {
  var t1, t2, t3;
  ratio = $.$$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = $.TransitionFunction_easeOutBounce(ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = $.TransitionFunction_easeOutBounce(1 - t1);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * (1 - t2) + 0.5;
    t1 = t3;
  }
  return t1;
};

$._TweenProperty$ = function($name, startValue, targetValue) {
  return new $._TweenProperty($name, startValue, targetValue);
};

$.Tween$ = function(displayObject, time, transitionFunction) {
  var t1, t2;
  t1 = $.List_List(0);
  t2 = transitionFunction != null ? transitionFunction : $.TransitionFunction_linear;
  t1 = new $.Tween(displayObject, t2, t1, null, null, null, null, null, null, null, null);
  t1.Tween$3(displayObject, time, transitionFunction);
  return t1;
};

$.Bitmap$ = function(bitmapData, pixelSnapping) {
  var t1 = new $.Bitmap(bitmapData, pixelSnapping, null, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.Bitmap$2(bitmapData, pixelSnapping);
  return t1;
};

$.BitmapData$ = function(width, height, transparent, fillColor) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$4(width, height, transparent, fillColor);
  return t1;
};

$.BitmapData$fromImageElement = function(imageElement) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$fromImageElement$1(imageElement);
  return t1;
};

$.BitmapData$fromTextureAtlasFrame = function(textureAtlasFrame) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$fromTextureAtlasFrame$1(textureAtlasFrame);
  return t1;
};

$.BitmapData_load = function(url) {
  var completer, image;
  completer = $._CompleterImpl$();
  image = $.ImageElement_ImageElement(null, null, null);
  image.get$onLoad().listen$1(new $.BitmapData_load_anon(completer, image));
  image.get$onError().listen$1(new $.BitmapData_load_anon0(completer));
  image.set$src(url);
  return completer.future;
};

$.Graphics$ = function() {
  return new $.Graphics($.List_List(0));
};

$._GraphicsCommand$ = function($name, $arguments) {
  return new $._GraphicsCommand($name, $arguments);
};

$.Mask$rectangle = function(x, y, width, height) {
  var t1 = new $.Mask(null, null, null, null);
  t1.Mask$rectangle$4(x, y, width, height);
  return t1;
};

$.Mask$circle = function(x, y, radius) {
  var t1 = new $.Mask(null, null, null, null);
  t1.Mask$circle$3(x, y, radius);
  return t1;
};

$.Mask$custom = function(points) {
  var t1 = new $.Mask(null, null, null, null);
  t1.Mask$custom$1(points);
  return t1;
};

$.MovieClip$ = function(bitmapDatas, frameRate, loop) {
  var t1 = new $.MovieClip(null, null, null, null, null, null, null, null, null, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.MovieClip$3(bitmapDatas, frameRate, loop);
  return t1;
};

$.Shape$ = function() {
  var t1 = new $.Shape(null, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.Shape$0();
  return t1;
};

$.Sprite$ = function() {
  return new $.Sprite(false, false, $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
};

$._MouseButton$ = function(mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType) {
  return new $._MouseButton(null, false, 0, 0, mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType);
};

$._Touch$ = function(target, primaryTouchPoint) {
  var t1 = $._Touch__globalTouchPointID;
  $._Touch__globalTouchPointID = $.$$add$n(t1, 1);
  return new $._Touch(t1, target, primaryTouchPoint);
};

$.Stage$ = function($name, canvas) {
  var t1 = new $.Stage(null, null, null, null, null, null, null, null, null, null, null, null, null, [], $.List_List(0), true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.Stage$2($name, canvas);
  return t1;
};

$.FlumpLibrary$ = function() {
  return new $.FlumpLibrary(null, null, null, $.List_List(0), $.List_List(0));
};

$.FlumpLibrary_load = function(url) {
  var completer = $._CompleterImpl$();
  $.HttpRequest_getString(url, null, null).then$1(new $.FlumpLibrary_load_anon(url, completer)).catchError$1(new $.FlumpLibrary_load_anon0(completer));
  return completer.future;
};

$.FlumpMovie$ = function(flumpLibrary, $name) {
  var t1 = $.List_List(0);
  t1 = new $.FlumpMovie(flumpLibrary, flumpLibrary._getFlumpMovieData$1($name), t1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.FlumpMovie$2(flumpLibrary, $name);
  return t1;
};

$._FlumpMovieLayer$ = function(flumpLibrary, flumpLayerData) {
  var t1 = new $._FlumpMovieLayer(flumpLibrary, flumpLayerData, $.Map_Map(), null, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1._FlumpMovieLayer$2(flumpLibrary, flumpLayerData);
  return t1;
};

$._FlumpMovieData$ = function(json, flumpLibrary) {
  var t1 = $.List_List(0);
  t1 = new $._FlumpMovieData($.$$index$as(json, "id"), flumpLibrary, t1);
  t1._FlumpMovieData$2(json, flumpLibrary);
  return t1;
};

$._FlumpLayerData$ = function(json) {
  var t1, t2, t3;
  t1 = $.List_List(0);
  t2 = $.getInterceptor$as(json);
  t3 = t2.$index(json, "name");
  t2 = json.containsKey$1("flipbook") === true && t2.$index(json, "flipbook");
  t1 = new $._FlumpLayerData(t3, t2, t1);
  t1._FlumpLayerData$1(json);
  return t1;
};

$._FlumpKeyframeData$ = function(json) {
  var t1 = new $._FlumpKeyframeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1._FlumpKeyframeData$1(json);
  return t1;
};

$._FlumpTextureGroup$ = function(json, flumpLibrary) {
  var t1, t2;
  t1 = {};
  t2 = new $._FlumpTextureGroup(flumpLibrary, null, null);
  t2._FlumpTextureGroup$2(json, flumpLibrary, t1);
  return t2;
};

$._FlumpTexture$ = function(x, y, width, height, originX, originY, imageElement) {
  return new $._FlumpTexture(x, y, width, height, originX, originY, imageElement);
};

$.RenderLoop$ = function() {
  var t1 = new $.RenderLoop(null, null, null, null, null);
  t1.RenderLoop$0();
  return t1;
};

$.RenderState$fromCanvasRenderingContext2D = function(context, matrix) {
  var t1 = new $.RenderState(context, $.List_List(100), $.List_List(100), 0);
  t1.RenderState$fromCanvasRenderingContext2D$2(context, matrix);
  return t1;
};

$.EnterFrameEvent$ = function(passedTime) {
  var t1 = new $.EnterFrameEvent(null, null, null, null, null, null, null, null);
  t1.Event$2("enterFrame", false);
  t1.EnterFrameEvent$1(passedTime);
  return t1;
};

$.Event$ = function(type, bubbles) {
  var t1 = new $.Event(null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$._EventStream$0 = function(_target, _eventType, _useCapture) {
  return new $._EventStream0(_target, _eventType, _useCapture, $.List_List(0), 0);
};

$._EventStreamIndex$ = function() {
  return new $._EventStreamIndex($.List_List(0), 0);
};

$._EventStreamSubscription$0 = function(_eventStream, _onData) {
  var t1 = new $._EventStreamSubscription0(_eventStream, _onData, null, null);
  t1._liblib2$_EventStreamSubscription$2(_eventStream, _onData);
  return t1;
};

$.KeyboardEvent$ = function(type, bubbles) {
  var t1 = new $.KeyboardEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.KeyboardEvent$2(type, bubbles);
  return t1;
};

$.MouseEvent$ = function(type, bubbles) {
  var t1 = new $.MouseEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.MouseEvent$2(type, bubbles);
  return t1;
};

$.TextEvent$ = function(type, bubbles) {
  var t1 = new $.TextEvent("", null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$.TouchEvent$ = function(type, bubbles) {
  var t1 = new $.TouchEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.TouchEvent$2(type, bubbles);
  return t1;
};

$.BlurFilter$ = function(blurX, blurY) {
  var t1 = new $.BlurFilter(blurX, blurY);
  t1.BlurFilter$2(blurX, blurY);
  return t1;
};

$.ColorMatrixFilter$grayscale = function() {
  return new $.ColorMatrixFilter([0.212671, 0.71516, 0.072169, 0, 0, 0.212671, 0.71516, 0.072169, 0, 0, 0.212671, 0.71516, 0.072169, 0, 0, 0, 0, 0, 1, 0]);
};

$.ColorMatrixFilter$invert = function() {
  return new $.ColorMatrixFilter([-1, 0, 0, 0, 255, 0, -1, 0, 0, 255, 0, 0, -1, 0, 255, 0, 0, 0, 1, 0]);
};

$.DropShadowFilter$ = function(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
  var t1 = new $.DropShadowFilter(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  t1.DropShadowFilter$10(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  return t1;
};

$.GlowFilter$ = function(color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
  var t1 = new $.GlowFilter(color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  t1.GlowFilter$8(color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  return t1;
};

$.Circle$ = function(x, y, radius) {
  return new $.Circle(x, y, radius);
};

$.Matrix$fromIdentity = function() {
  return new $.Matrix(1, 0, 0, 1, 0, 0, 1);
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.Point$zero = function() {
  return new $.Point(0, 0);
};

$.Rectangle$ = function(x, y, width, height) {
  return new $.Rectangle(x, y, width, height);
};

$.Rectangle$zero = function() {
  return new $.Rectangle(0, 0, 0, 0);
};

$.Sound_load = function(url) {
  var engine, t1;
  engine = $.get$SoundMixer_engine();
  t1 = $.getInterceptor(engine);
  if (t1.$eq(engine, "WebAudioApi") === true)
    return $.WebAudioApiSound_load(url);
  if (t1.$eq(engine, "AudioElement") === true)
    return $.AudioElementSound_load(url);
  return $.MockSound_load(url);
};

$.Sound_adaptAudioUrl = function(url) {
  var match, supportedTypes, t1, fileType, filename, extension;
  match = $.RegExp_RegExp("\\.(ogg|mp3|wav)$", false, false).firstMatch$1(url);
  supportedTypes = $.get$SoundMixer__supportedTypes();
  if (match == null)
    throw $.$$throw($.ArgumentError$("Unsupported file extension."));
  t1 = $.getInterceptor$as(supportedTypes);
  if ($.$$eq$o(t1.get$length(supportedTypes), 0) === true)
    throw $.$$throw($.UnsupportedError$("This browser supports no known audio codec."));
  fileType = $.toLowerCase$0$s(match.group$1(1));
  if ($.$$eq$o(t1.indexOf$1(supportedTypes, fileType), -1) === true) {
    filename = $.CONSTANT0.substring$2(url, 0, url.length - fileType.length);
    extension = t1.$index(supportedTypes, 0);
    url = filename + $.S(extension);
  }
  return url;
};

$.SoundMixer__getEngine = function() {
  var engine, ua, t1;
  engine = $.get$SoundMixer__audioContext() != null ? "WebAudioApi" : "AudioElement";
  ua = window.navigator.userAgent;
  t1 = $.getInterceptor$as(ua);
  if (t1.contains$1(ua, "IEMobile") === true)
    engine = t1.contains$1(ua, "9.0") === true ? "Mock" : engine;
  if (t1.contains$1(ua, "iPhone") === true || t1.contains$1(ua, "iPad") === true || t1.contains$1(ua, "iPod") === true)
    if (t1.contains$1(ua, "OS 3") === true || t1.contains$1(ua, "OS 4") === true || t1.contains$1(ua, "OS 5") === true)
      engine = "Mock";
  if ($.$$eq$o($.get$length$as($.get$SoundMixer__supportedTypes()), 0) === true)
    engine = "Mock";
  $.Primitives_printString("dartflash: supported audio engine is: " + engine);
  return engine;
};

$.SoundMixer__getAudioContext = function() {
  var t1, exception;
  try {
    t1 = new (window.AudioContext || window.webkitAudioContext)();
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return;
  }

};

$.SoundMixer__getSupportedTypes = function() {
  var supportedTypes, audio, valid;
  supportedTypes = $.List_List(0);
  audio = $.AudioElement_AudioElement($);
  valid = ["maybe", "probably"];
  if ($.$$eq$o($.CONSTANT1.indexOf$1(valid, audio.canPlayType$2("audio/ogg", "")), -1) !== true)
    supportedTypes.push("ogg");
  if ($.$$eq$o($.CONSTANT1.indexOf$1(valid, audio.canPlayType$2("audio/mpeg", "")), -1) !== true)
    supportedTypes.push("mp3");
  if ($.$$eq$o($.CONSTANT1.indexOf$1(valid, audio.canPlayType$2("audio/wav", "")), -1) !== true)
    supportedTypes.push("wav");
  $.Primitives_printString("dartflash: supported audio types are: " + $.S(supportedTypes));
  return supportedTypes;
};

$.SoundTransform$ = function(volume, pan) {
  return new $.SoundTransform(volume, pan, 1, 0, 1, 0);
};

$.AudioElementSound$ = function() {
  var t1 = new $.AudioElementSound(null, null, null);
  t1.AudioElementSound$0();
  return t1;
};

$.AudioElementSound_load = function(url) {
  var t1, sound, audio, loadCompleter, t2, t3;
  t1 = {};
  sound = $.AudioElementSound$();
  audio = sound._audio;
  loadCompleter = $._CompleterImpl$();
  t1.onCanPlayThroughSubscription_0 = null;
  t1.onErrorSubscription_1 = null;
  t2 = new $.AudioElementSound_load_onCanPlayThrough(t1, sound, loadCompleter);
  t3 = new $.AudioElementSound_load_onError(t1, loadCompleter);
  t1.onCanPlayThroughSubscription_0 = audio.get$onCanPlayThrough().listen$1(t2);
  t1.onErrorSubscription_1 = audio.get$onError().listen$1(t3);
  audio.set$src($.Sound_adaptAudioUrl(url));
  audio.load$0();
  return loadCompleter.future;
};

$.AudioElementSoundChannel$ = function(audioElementSound, loop, soundTransform) {
  var t1 = new $.AudioElementSoundChannel(null, null, null, null, null);
  t1.AudioElementSoundChannel$3(audioElementSound, loop, soundTransform);
  return t1;
};

$.MockSound$ = function() {
  return new $.MockSound();
};

$.MockSound_load = function(url) {
  return $.Future_Future$of(new $.MockSound_load_anon());
};

$.MockSoundChannel$ = function(mockSound, loop, soundTransform) {
  var t1 = new $.MockSoundChannel(null, null, null);
  t1.MockSoundChannel$3(mockSound, loop, soundTransform);
  return t1;
};

$.WebAudioApiSound$ = function() {
  var t1 = new $.WebAudioApiSound(null);
  t1.WebAudioApiSound$0();
  return t1;
};

$.WebAudioApiSound_load = function(url) {
  var sound, soundUrl, loadCompleter;
  sound = $.WebAudioApiSound$();
  soundUrl = $.Sound_adaptAudioUrl(url);
  loadCompleter = $._CompleterImpl$();
  $.HttpRequest_request(soundUrl, null, null, "arraybuffer", null, null).then$1(new $.WebAudioApiSound_load_anon(sound, loadCompleter)).catchError$1(new $.WebAudioApiSound_load_anon0(loadCompleter));
  return loadCompleter.future;
};

$.WebAudioApiSoundChannel$ = function(webAudioApiSound, loop, soundTransform) {
  var t1 = new $.WebAudioApiSoundChannel(null, null, null, null, null, null);
  t1.WebAudioApiSoundChannel$3(webAudioApiSound, loop, soundTransform);
  return t1;
};

$.TextField$ = function() {
  var t1 = new $.TextField("", 0, null, "none", "pixel", "dynamic", false, false, 0, false, 0, 0, 0, null, null, true, 100, 100, null, null, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 1, true, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.TextField$0();
  return t1;
};

$.TextFormat$ = function(font, size, color, align, bold, indent, italic, leading, leftMargin, rightMargin, underline) {
  return new $.TextFormat(font, size, color, bold, italic, underline, align, leftMargin, rightMargin, indent, leading, 0, 0, false, false);
};

$.TextLineMetrics$ = function(x, width, height, ascent, descent, leading) {
  return new $.TextLineMetrics(ascent, descent, height, leading, width, x);
};

$.Mouse__getCssStyle = function(mouseCursor) {
  var cursor, style;
  cursor = $.$$eq$o($.Mouse__customCursor, "auto") !== true ? $.Mouse__customCursor : mouseCursor;
  style = "auto";
  switch (cursor) {
    case "auto":
      style = "auto";
      break;
    case "arrow":
      style = "default";
      break;
    case "button":
      style = "pointer";
      break;
    case "hand":
      style = "move";
      break;
    case "ibeam":
      style = "text";
      break;
    case "wait":
      style = "wait";
      break;
  }
  return $.Mouse__isCursorHidden === true ? "none" : style;
};

$.Multitouch__initialize = function() {
  var ua, t1;
  if ($.$$eq$o($.Multitouch__initialized, false) === true) {
    $.Multitouch__initialized = true;
    ua = window.navigator.userAgent;
    t1 = $.getInterceptor$as(ua);
    if (t1.contains$1(ua, "iPhone") === true || t1.contains$1(ua, "iPad") === true || t1.contains$1(ua, "iPod") === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if (t1.contains$1(ua, "Android") === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if (t1.contains$1(ua, "IEMobile") === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
  }
};

$.ResourceManager$ = function() {
  var t1 = new $.ResourceManager(null);
  t1.ResourceManager$0();
  return t1;
};

$.ResourceManagerResource$ = function(kind, $name, url) {
  var t1 = new $.ResourceManagerResource(null, null, null, null, null, null);
  t1.ResourceManagerResource$3(kind, $name, url);
  return t1;
};

$.TextureAtlas$ = function() {
  return new $.TextureAtlas($.ImageElement_ImageElement(null, null, null), $.List_List(0));
};

$.TextureAtlas_load = function(url, textureAtlasFormat) {
  var completer, textureAtlas, t1;
  completer = $._CompleterImpl$();
  textureAtlas = $.TextureAtlas$();
  switch (textureAtlasFormat) {
    case "json":
    case "jsonarray":
      t1 = new $.TextureAtlas_load_parseFrame(textureAtlas);
      $.HttpRequest_getString(url, null, null).then$1(new $.TextureAtlas_load_anon(url, completer, textureAtlas, t1)).catchError$1(new $.TextureAtlas_load_anon0(completer));
      break;
  }
  return completer.future;
};

$.TextureAtlasFrame$ = function($name, textureAtlas) {
  var t1 = new $.TextureAtlasFrame(null, null, null, null, null, null, null, null, null, null, null);
  t1.TextureAtlasFrame$2($name, textureAtlas);
  return t1;
};

$._color2rgb = function(color) {
  var t1, r, g, b;
  t1 = $.getInterceptor$n(color);
  r = $.$$and$n(t1.$shr(color, 16), 255);
  g = $.$$and$n(t1.$shr(color, 8), 255);
  b = $.$$and$n(t1.$shr(color, 0), 255);
  return "rgb(" + $.S(r) + "," + $.S(g) + "," + $.S(b) + ")";
};

$._color2rgba = function(color) {
  var t1, a, r, g, b;
  t1 = $.getInterceptor$n(color);
  a = $.$$and$n(t1.$shr(color, 24), 255);
  r = $.$$and$n(t1.$shr(color, 16), 255);
  g = $.$$and$n(t1.$shr(color, 8), 255);
  b = $.$$and$n(t1.$shr(color, 0), 255);
  return "rgba(" + $.S(r) + "," + $.S(g) + "," + $.S(b) + "," + $.S(a / 255) + ")";
};

$._getFilenameWithoutExtension = function(filename) {
  return $.RegExp_RegExp("(.+?)(\\.[^.]*$|$)", false, false).firstMatch$1(filename).group$1(1);
};

$._replaceFilename = function(url, filename) {
  var path = $.RegExp_RegExp("^(.*/)?(?:$|(.+?)(?:(\\.[^.]*$)|$))", false, false).firstMatch$1(url).group$1(1);
  return path == null ? filename : $.S(path) + $.S(filename);
};

$._checkLittleEndianSystem = function() {
  var canvas = $.CanvasElement_CanvasElement(1, 1);
  canvas.get$context2d().set$fillStyle("#000000");
  canvas.get$context2d().fillRect$4(0, 0, 1, 1);
  return $.$$eq$o($.$$index$as(canvas.get$context2d().getImageData$4(0, 0, 1, 1).get$data(), 0), 0);
};

$._premultiplyAlpha = function(data) {
  var i, value, t1, t2, t3, t4;
  if (typeof data !== "object" || data === null || (data.constructor !== Array || !!data.immutable$list) && !data.$isJavaScriptIndexingBehavior())
    return $._premultiplyAlpha$bailout(1, data);
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; i <= data.length - 4; i += 4) {
      value = data[i + 3];
      t1 = i + 0;
      t2 = $.$$tdiv$n($.$$mul$n(data[t1], value), 255);
      t3 = data.length;
      if (t1 >= t3)
        throw $.ioore(t1);
      data[t1] = t2;
      t2 = i + 1;
      if (t2 >= t3)
        throw $.ioore(t2);
      t1 = $.$$tdiv$n($.$$mul$n(data[t2], value), 255);
      t4 = data.length;
      if (t2 >= t4)
        throw $.ioore(t2);
      data[t2] = t1;
      t1 = i + 2;
      if (t1 >= t4)
        throw $.ioore(t1);
      t2 = $.$$tdiv$n($.$$mul$n(data[t1], value), 255);
      if (t1 >= data.length)
        throw $.ioore(t1);
      data[t1] = t2;
    }
  else
    for (i = 0; i <= data.length - 4; i += 4) {
      value = data[i + 0];
      t1 = i + 1;
      t2 = $.$$tdiv$n($.$$mul$n(data[t1], value), 255);
      t3 = data.length;
      if (t1 >= t3)
        throw $.ioore(t1);
      data[t1] = t2;
      t2 = i + 2;
      if (t2 >= t3)
        throw $.ioore(t2);
      t1 = $.$$tdiv$n($.$$mul$n(data[t2], value), 255);
      t4 = data.length;
      if (t2 >= t4)
        throw $.ioore(t2);
      data[t2] = t1;
      t1 = i + 3;
      if (t1 >= t4)
        throw $.ioore(t1);
      t2 = $.$$tdiv$n($.$$mul$n(data[t1], value), 255);
      if (t1 >= data.length)
        throw $.ioore(t1);
      data[t1] = t2;
    }
};

$._premultiplyAlpha$bailout = function(state0, data) {
  var t1, i, value, t2;
  if ($.get$_isLittleEndianSystem() === true)
    for (t1 = $.getInterceptor$as(data), i = 0; $.CONSTANT4.$le(i, $.$$sub$n(t1.get$length(data), 4)); i += 4) {
      value = t1.$index(data, i + 3);
      t2 = i + 0;
      t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), value), 255));
      t2 = i + 1;
      t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), value), 255));
      t2 = i + 2;
      t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), value), 255));
    }
  else
    for (t1 = $.getInterceptor$as(data), i = 0; $.CONSTANT4.$le(i, $.$$sub$n(t1.get$length(data), 4)); i += 4) {
      value = t1.$index(data, i + 0);
      t2 = i + 1;
      t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), value), 255));
      t2 = i + 2;
      t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), value), 255));
      t2 = i + 3;
      t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), value), 255));
    }
};

$._unpremultiplyAlpha = function(data) {
  var i, alpha, t1, t2, t3, t4;
  if (typeof data !== "object" || data === null || (data.constructor !== Array || !!data.immutable$list) && !data.$isJavaScriptIndexingBehavior())
    return $._unpremultiplyAlpha$bailout(1, data);
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; i <= data.length - 4; i += 4) {
      alpha = data[i + 3];
      if ($.$$gt$n(alpha, 0) === true) {
        t1 = i + 0;
        if (t1 >= data.length)
          throw $.ioore(t1);
        t2 = $.$$tdiv$n($.$$mul$n(data[t1], 255), alpha);
        t3 = data.length;
        if (t1 >= t3)
          throw $.ioore(t1);
        data[t1] = t2;
        t2 = i + 1;
        if (t2 >= t3)
          throw $.ioore(t2);
        t1 = $.$$tdiv$n($.$$mul$n(data[t2], 255), alpha);
        t4 = data.length;
        if (t2 >= t4)
          throw $.ioore(t2);
        data[t2] = t1;
        t1 = i + 2;
        if (t1 >= t4)
          throw $.ioore(t1);
        t2 = $.$$tdiv$n($.$$mul$n(data[t1], 255), alpha);
        if (t1 >= data.length)
          throw $.ioore(t1);
        data[t1] = t2;
      }
    }
  else
    for (i = 0; i <= data.length - 4; i += 4) {
      alpha = data[i + 0];
      if ($.$$gt$n(alpha, 0) === true) {
        t1 = i + 1;
        if (t1 >= data.length)
          throw $.ioore(t1);
        t2 = $.$$tdiv$n($.$$mul$n(data[t1], 255), alpha);
        t3 = data.length;
        if (t1 >= t3)
          throw $.ioore(t1);
        data[t1] = t2;
        t2 = i + 2;
        if (t2 >= t3)
          throw $.ioore(t2);
        t1 = $.$$tdiv$n($.$$mul$n(data[t2], 255), alpha);
        t4 = data.length;
        if (t2 >= t4)
          throw $.ioore(t2);
        data[t2] = t1;
        t1 = i + 3;
        if (t1 >= t4)
          throw $.ioore(t1);
        t2 = $.$$tdiv$n($.$$mul$n(data[t1], 255), alpha);
        if (t1 >= data.length)
          throw $.ioore(t1);
        data[t1] = t2;
      }
    }
};

$._unpremultiplyAlpha$bailout = function(state0, data) {
  var t1, i, alpha, t2;
  if ($.get$_isLittleEndianSystem() === true)
    for (t1 = $.getInterceptor$as(data), i = 0; $.CONSTANT4.$le(i, $.$$sub$n(t1.get$length(data), 4)); i += 4) {
      alpha = t1.$index(data, i + 3);
      if ($.$$gt$n(alpha, 0) === true) {
        t2 = i + 0;
        t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), 255), alpha));
        t2 = i + 1;
        t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), 255), alpha));
        t2 = i + 2;
        t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), 255), alpha));
      }
    }
  else
    for (t1 = $.getInterceptor$as(data), i = 0; $.CONSTANT4.$le(i, $.$$sub$n(t1.get$length(data), 4)); i += 4) {
      alpha = t1.$index(data, i + 0);
      if ($.$$gt$n(alpha, 0) === true) {
        t2 = i + 1;
        t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), 255), alpha));
        t2 = i + 2;
        t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), 255), alpha));
        t2 = i + 3;
        t1.$indexSet(data, t2, $.$$tdiv$n($.$$mul$n(t1.$index(data, t2), 255), alpha));
      }
    }
};

$._getBoundsTransformedHelper = function(matrix, width, height, returnRectangle) {
  var t1, x2, y2, t2, x3, y3, x4, y4, left, $top, right, bottom;
  t1 = $.getInterceptor$n(width);
  x2 = t1.$mul(width, matrix.get$a());
  y2 = t1.$mul(width, matrix.get$b());
  t2 = $.getInterceptor$n(height);
  x3 = $.$$add$n(t1.$mul(width, matrix.get$a()), t2.$mul(height, matrix.get$c()));
  y3 = $.$$add$n(t1.$mul(width, matrix.get$b()), t2.$mul(height, matrix.get$d()));
  x4 = t2.$mul(height, matrix.get$c());
  y4 = t2.$mul(height, matrix.get$d());
  left = $.CONSTANT8.$gt(0, x2) ? x2 : 0;
  if ($.$$gt$n(left, x3) === true)
    left = x3;
  if ($.$$gt$n(left, x4) === true)
    left = x4;
  $top = $.CONSTANT8.$gt(0, y2) ? y2 : 0;
  if ($.$$gt$n($top, y3) === true)
    $top = y3;
  if ($.$$gt$n($top, y4) === true)
    $top = y4;
  right = $.CONSTANT8.$lt(0, x2) ? x2 : 0;
  if ($.$$lt$n(right, x3) === true)
    right = x3;
  if ($.$$lt$n(right, x4) === true)
    right = x4;
  bottom = $.CONSTANT8.$lt(0, y2) ? y2 : 0;
  if ($.$$lt$n(bottom, y3) === true)
    bottom = y3;
  if ($.$$lt$n(bottom, y4) === true)
    bottom = y4;
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  returnRectangle.set$x($.$$add$n(matrix.get$tx(), left));
  returnRectangle.set$y($.$$add$n(matrix.get$ty(), $top));
  returnRectangle.set$width($.$$sub$n(right, left));
  returnRectangle.set$height($.$$sub$n(bottom, $top));
  return returnRectangle;
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.Primitives__throwFormatException.call$1 = $.Primitives__throwFormatException;
$.Primitives__throwFormatException.$name = "Primitives__throwFormatException";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.$$throw.$is_TimerCallback1 = true;
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.DartError_toStringWrapper.$is_TimerCallback0 = true;
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullDataHandler.$is_TimerCallback1 = true;
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$._nullDoneHandler.$is_TimerCallback0 = true;
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$.Element__determineMouseWheelEventType.call$1 = $.Element__determineMouseWheelEventType;
$.Element__determineMouseWheelEventType.$name = "Element__determineMouseWheelEventType";
$.TransitionFunction_linear.call$1 = $.TransitionFunction_linear;
$.TransitionFunction_linear.$name = "TransitionFunction_linear";
$.TransitionFunction_sine.call$1 = $.TransitionFunction_sine;
$.TransitionFunction_sine.$name = "TransitionFunction_sine";
$.TransitionFunction_cosine.call$1 = $.TransitionFunction_cosine;
$.TransitionFunction_cosine.$name = "TransitionFunction_cosine";
$.TransitionFunction_random.call$1 = $.TransitionFunction_random;
$.TransitionFunction_random.$name = "TransitionFunction_random";
$.TransitionFunction_easeInQuadratic.call$1 = $.TransitionFunction_easeInQuadratic;
$.TransitionFunction_easeInQuadratic.$name = "TransitionFunction_easeInQuadratic";
$.TransitionFunction_easeOutQuadratic.call$1 = $.TransitionFunction_easeOutQuadratic;
$.TransitionFunction_easeOutQuadratic.$name = "TransitionFunction_easeOutQuadratic";
$.TransitionFunction_easeInOutQuadratic.call$1 = $.TransitionFunction_easeInOutQuadratic;
$.TransitionFunction_easeInOutQuadratic.$name = "TransitionFunction_easeInOutQuadratic";
$.TransitionFunction_easeOutInQuadratic.call$1 = $.TransitionFunction_easeOutInQuadratic;
$.TransitionFunction_easeOutInQuadratic.$name = "TransitionFunction_easeOutInQuadratic";
$.TransitionFunction_easeInCubic.call$1 = $.TransitionFunction_easeInCubic;
$.TransitionFunction_easeInCubic.$name = "TransitionFunction_easeInCubic";
$.TransitionFunction_easeOutCubic.call$1 = $.TransitionFunction_easeOutCubic;
$.TransitionFunction_easeOutCubic.$name = "TransitionFunction_easeOutCubic";
$.TransitionFunction_easeInOutCubic.call$1 = $.TransitionFunction_easeInOutCubic;
$.TransitionFunction_easeInOutCubic.$name = "TransitionFunction_easeInOutCubic";
$.TransitionFunction_easeOutInCubic.call$1 = $.TransitionFunction_easeOutInCubic;
$.TransitionFunction_easeOutInCubic.$name = "TransitionFunction_easeOutInCubic";
$.TransitionFunction_easeInQuartic.call$1 = $.TransitionFunction_easeInQuartic;
$.TransitionFunction_easeInQuartic.$name = "TransitionFunction_easeInQuartic";
$.TransitionFunction_easeOutQuartic.call$1 = $.TransitionFunction_easeOutQuartic;
$.TransitionFunction_easeOutQuartic.$name = "TransitionFunction_easeOutQuartic";
$.TransitionFunction_easeInOutQuartic.call$1 = $.TransitionFunction_easeInOutQuartic;
$.TransitionFunction_easeInOutQuartic.$name = "TransitionFunction_easeInOutQuartic";
$.TransitionFunction_easeOutInQuartic.call$1 = $.TransitionFunction_easeOutInQuartic;
$.TransitionFunction_easeOutInQuartic.$name = "TransitionFunction_easeOutInQuartic";
$.TransitionFunction_easeInQuintic.call$1 = $.TransitionFunction_easeInQuintic;
$.TransitionFunction_easeInQuintic.$name = "TransitionFunction_easeInQuintic";
$.TransitionFunction_easeOutQuintic.call$1 = $.TransitionFunction_easeOutQuintic;
$.TransitionFunction_easeOutQuintic.$name = "TransitionFunction_easeOutQuintic";
$.TransitionFunction_easeInOutQuintic.call$1 = $.TransitionFunction_easeInOutQuintic;
$.TransitionFunction_easeInOutQuintic.$name = "TransitionFunction_easeInOutQuintic";
$.TransitionFunction_easeOutInQuintic.call$1 = $.TransitionFunction_easeOutInQuintic;
$.TransitionFunction_easeOutInQuintic.$name = "TransitionFunction_easeOutInQuintic";
$.TransitionFunction_easeInCircular.call$1 = $.TransitionFunction_easeInCircular;
$.TransitionFunction_easeInCircular.$name = "TransitionFunction_easeInCircular";
$.TransitionFunction_easeOutCircular.call$1 = $.TransitionFunction_easeOutCircular;
$.TransitionFunction_easeOutCircular.$name = "TransitionFunction_easeOutCircular";
$.TransitionFunction_easeInOutCircular.call$1 = $.TransitionFunction_easeInOutCircular;
$.TransitionFunction_easeInOutCircular.$name = "TransitionFunction_easeInOutCircular";
$.TransitionFunction_easeOutInCircular.call$1 = $.TransitionFunction_easeOutInCircular;
$.TransitionFunction_easeOutInCircular.$name = "TransitionFunction_easeOutInCircular";
$.TransitionFunction_easeInSine.call$1 = $.TransitionFunction_easeInSine;
$.TransitionFunction_easeInSine.$name = "TransitionFunction_easeInSine";
$.TransitionFunction_easeOutSine.call$1 = $.TransitionFunction_easeOutSine;
$.TransitionFunction_easeOutSine.$name = "TransitionFunction_easeOutSine";
$.TransitionFunction_easeInOutSine.call$1 = $.TransitionFunction_easeInOutSine;
$.TransitionFunction_easeInOutSine.$name = "TransitionFunction_easeInOutSine";
$.TransitionFunction_easeOutInSine.call$1 = $.TransitionFunction_easeOutInSine;
$.TransitionFunction_easeOutInSine.$name = "TransitionFunction_easeOutInSine";
$.TransitionFunction_easeInExponential.call$1 = $.TransitionFunction_easeInExponential;
$.TransitionFunction_easeInExponential.$name = "TransitionFunction_easeInExponential";
$.TransitionFunction_easeOutExponential.call$1 = $.TransitionFunction_easeOutExponential;
$.TransitionFunction_easeOutExponential.$name = "TransitionFunction_easeOutExponential";
$.TransitionFunction_easeInOutExponential.call$1 = $.TransitionFunction_easeInOutExponential;
$.TransitionFunction_easeInOutExponential.$name = "TransitionFunction_easeInOutExponential";
$.TransitionFunction_easeOutInExponential.call$1 = $.TransitionFunction_easeOutInExponential;
$.TransitionFunction_easeOutInExponential.$name = "TransitionFunction_easeOutInExponential";
$.TransitionFunction_easeInBack.call$1 = $.TransitionFunction_easeInBack;
$.TransitionFunction_easeInBack.$name = "TransitionFunction_easeInBack";
$.TransitionFunction_easeOutBack.call$1 = $.TransitionFunction_easeOutBack;
$.TransitionFunction_easeOutBack.$name = "TransitionFunction_easeOutBack";
$.TransitionFunction_easeInOutBack.call$1 = $.TransitionFunction_easeInOutBack;
$.TransitionFunction_easeInOutBack.$name = "TransitionFunction_easeInOutBack";
$.TransitionFunction_easeOutInBack.call$1 = $.TransitionFunction_easeOutInBack;
$.TransitionFunction_easeOutInBack.$name = "TransitionFunction_easeOutInBack";
$.TransitionFunction_easeInElastic.call$1 = $.TransitionFunction_easeInElastic;
$.TransitionFunction_easeInElastic.$name = "TransitionFunction_easeInElastic";
$.TransitionFunction_easeOutElastic.call$1 = $.TransitionFunction_easeOutElastic;
$.TransitionFunction_easeOutElastic.$name = "TransitionFunction_easeOutElastic";
$.TransitionFunction_easeInOutElastic.call$1 = $.TransitionFunction_easeInOutElastic;
$.TransitionFunction_easeInOutElastic.$name = "TransitionFunction_easeInOutElastic";
$.TransitionFunction_easeOutInElastic.call$1 = $.TransitionFunction_easeOutInElastic;
$.TransitionFunction_easeOutInElastic.$name = "TransitionFunction_easeOutInElastic";
$.TransitionFunction_easeInBounce.call$1 = $.TransitionFunction_easeInBounce;
$.TransitionFunction_easeInBounce.$name = "TransitionFunction_easeInBounce";
$.TransitionFunction_easeOutBounce.call$1 = $.TransitionFunction_easeOutBounce;
$.TransitionFunction_easeOutBounce.$name = "TransitionFunction_easeOutBounce";
$.TransitionFunction_easeInOutBounce.call$1 = $.TransitionFunction_easeInOutBounce;
$.TransitionFunction_easeInOutBounce.$name = "TransitionFunction_easeInOutBounce";
$.TransitionFunction_easeOutInBounce.call$1 = $.TransitionFunction_easeOutInBounce;
$.TransitionFunction_easeOutInBounce.$name = "TransitionFunction_easeOutInBounce";
Isolate.$finishClasses($$, $, null);
$$ = {};
$.Element = {builtin$cls: 'Element'};
$.List = {builtin$cls: 'List'};
$.num = {builtin$cls: 'num'};
$.Match = {builtin$cls: 'Match'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
$.String = {builtin$cls: 'String'};
$.BitmapDrawable = {builtin$cls: 'BitmapDrawable'};
$.TextTrack = {builtin$cls: 'TextTrack'};
$.Touch = {builtin$cls: 'Touch'};
$.bool = {builtin$cls: 'bool'};
$.Date = {builtin$cls: 'Date'};
$.$double = {builtin$cls: '$double'};
$.Animatable = {builtin$cls: 'Animatable'};
$.HttpRequest = {builtin$cls: 'HttpRequest'};
$.AudioElement = {builtin$cls: 'AudioElement'};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
$.$int = {builtin$cls: '$int'};
$.Node = {builtin$cls: 'Node'};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT39 = Isolate.makeConstantList([]);
$.CONSTANT17 = new $.EventStreamProvider("touchleave");
$.CONSTANT36 = new $.EventStreamProvider("error");
$.CONSTANT30 = new $.EventStreamProvider0("mouseMove");
$.CONSTANT7 = new $._LinkedHashTableHeadMarker();
$.CONSTANT18 = new $.EventStreamProvider("touchenter");
$.CONSTANT12 = new $.EventStreamProvider0("keyUp");
$.CONSTANT13 = new $.EventStreamProvider("keydown");
$.CONSTANT43 = new $.EventStreamProvider("click");
$.CONSTANT33 = new $.EventStreamProvider("mousedown");
$.CONSTANT16 = new $.EventStreamProvider0("touchCancel");
$.CONSTANT45 = new $.EventStreamProvider0("enterFrame");
$.CONSTANT19 = new $.EventStreamProvider("touchmove");
$.CONSTANT38 = new $.EventStreamProvider("progress");
$.CONSTANT32 = new $.EventStreamProvider0("mouseUp");
$.CONSTANT44 = new $.EventStreamProvider0("mouseOver");
$.CONSTANT10 = new $.Duration(0);
$.CONSTANT = new $.NullThrownError();
$.CONSTANT37 = new $.EventStreamProvider("load");
$.CONSTANT35 = new $._Random();
$.CONSTANT28 = new $.EventStreamProvider0("mouseOut");
$.CONSTANT23 = new $.EventStreamProvider("touchstart");
$.CONSTANT9 = new $.EventStreamProvider("keypress");
$.CONSTANT25 = new $._CustomEventStreamProvider($.Element__determineMouseWheelEventType);
$.CONSTANT42 = new $.EventStreamProvider("ended");
$.CONSTANT46 = new $.Object();
$.CONSTANT14 = new $.EventStreamProvider0("keyDown");
$.CONSTANT22 = new $.EventStreamProvider0("touchEnd");
$.CONSTANT15 = new $.EventStreamProvider("touchcancel");
$.CONSTANT21 = new $.EventStreamProvider("touchend");
$.CONSTANT11 = new $.EventStreamProvider("keyup");
$.CONSTANT20 = new $.EventStreamProvider0("touchMove");
$.CONSTANT41 = new $.EventStreamProvider("canplaythrough");
$.CONSTANT5 = new $.JSNull();
$.CONSTANT1 = new $.JSArray();
$.CONSTANT4 = new $.JSNumber();
$.CONSTANT8 = new $.JSInt();
$.CONSTANT40 = new $.JSDouble();
$.CONSTANT0 = new $.JSString();
$.CONSTANT26 = new $.EventStreamProvider0("mouseWheel");
$.CONSTANT6 = new $.JSSyntaxRegExp("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, true);
$.CONSTANT24 = new $._DelayedDone();
$.CONSTANT29 = new $.EventStreamProvider("mousemove");
$.CONSTANT31 = new $.EventStreamProvider("mouseup");
$.CONSTANT34 = new $.EventStreamProvider0("mouseDown");
$.CONSTANT27 = new $.EventStreamProvider("mouseout");
$.CONSTANT2 = new $._DeadEntry();
$.CONSTANT3 = new $._NullKey();
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$._getTypeNameOf = null;
$._cachedBrowserPrefix = null;
$.stage = null;
$.renderLoop = null;
$.juggler = null;
$.resourceManager = null;
$.TransitionFunction__random = null;
$._Touch__globalTouchPointID = 0;
$.Mouse__customCursor = "auto";
$.Mouse__isCursorHidden = false;
$.Multitouch__initialized = false;
$.Multitouch__supportsTouchEvents = false;
$.Multitouch__maxTouchPoints = 0;
$.Multitouch__inputMode = "none";
$.$$add$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return $.getInterceptor$n(receiver).$add(receiver, a0);
};
$.$$and$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver & a0) >>> 0;
  return $.getInterceptor$n(receiver).$and(receiver, a0);
};
$.$$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return $.getInterceptor$n(receiver).$div(receiver, a0);
};
$.$$eq$o = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (!(typeof receiver == "object"))
    return !(a0 == null) && receiver === a0;
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$$index$a = function(receiver, a0) {
  if (receiver.constructor == Array)
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$a(receiver).$index(receiver, a0);
};
$.$$index$as = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string")
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$as(receiver).$index(receiver, a0);
};
$.$$indexSet$a = function(receiver, a0, a1) {
  if (receiver.constructor == Array && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return $.getInterceptor$a(receiver).$indexSet(receiver, a0, a1);
};
$.$$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return $.getInterceptor$n(receiver).$le(receiver, a0);
};
$.$$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return $.getInterceptor$n(receiver).$lt(receiver, a0);
};
$.$$mod$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$mod(receiver, a0);
};
$.$$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return $.getInterceptor$n(receiver).$mul(receiver, a0);
};
$.$$negate$n = function(receiver) {
  if (typeof receiver == "number")
    return -receiver;
  return $.getInterceptor$n(receiver).$negate(receiver);
};
$.$$or$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver | a0) >>> 0;
  return $.getInterceptor$n(receiver).$or(receiver, a0);
};
$.$$shl$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$shl(receiver, a0);
};
$.$$shr$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$shr(receiver, a0);
};
$.$$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.$$tdiv$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$tdiv(receiver, a0);
};
$.$$xor$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver ^ a0) >>> 0;
  return $.getInterceptor$n(receiver).$xor(receiver, a0);
};
$.abs$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).abs$0(receiver);
};
$.add$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).add$1(receiver, a0);
};
$.addAll$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).addAll$1(receiver, a0);
};
$.allMatches$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).allMatches$1(receiver, a0);
};
$.ceil$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).ceil$0(receiver);
};
$.charCodeAt$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).charCodeAt$1(receiver, a0);
};
$.clear$0$a = function(receiver) {
  return $.getInterceptor$a(receiver).clear$0(receiver);
};
$.compareTo$1$ns = function(receiver, a0) {
  return $.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
};
$.contains$1$as = function(receiver, a0) {
  return $.getInterceptor$as(receiver).contains$1(receiver, a0);
};
$.contains$2$s = function(receiver, a0, a1) {
  return $.getInterceptor$s(receiver).contains$2(receiver, a0, a1);
};
$.elementAt$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).elementAt$1(receiver, a0);
};
$.endsWith$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).endsWith$1(receiver, a0);
};
$.forEach$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).forEach$1(receiver, a0);
};
$.get$contains$as = function(receiver) {
  return $.getInterceptor$as(receiver).get$contains(receiver);
};
$.get$hashCode$abnosu = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$isEmpty$as = function(receiver) {
  return $.getInterceptor$as(receiver).get$isEmpty(receiver);
};
$.get$isEven$JSInt = function(receiver) {
  return $.getInterceptor$JSInt(receiver).get$isEven(receiver);
};
$.get$isNaN$n = function(receiver) {
  return $.getInterceptor$n(receiver).get$isNaN(receiver);
};
$.get$iterator$a = function(receiver) {
  return $.getInterceptor$a(receiver).get$iterator(receiver);
};
$.get$last$a = function(receiver) {
  return $.getInterceptor$a(receiver).get$last(receiver);
};
$.get$length$a = function(receiver) {
  return $.getInterceptor$a(receiver).get$length(receiver);
};
$.get$length$as = function(receiver) {
  return $.getInterceptor$as(receiver).get$length(receiver);
};
$.indexOf$1$as = function(receiver, a0) {
  return $.getInterceptor$as(receiver).indexOf$1(receiver, a0);
};
$.indexOf$2$as = function(receiver, a0, a1) {
  return $.getInterceptor$as(receiver).indexOf$2(receiver, a0, a1);
};
$.join$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).join$1(receiver, a0);
};
$.map$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).map$1(receiver, a0);
};
$.remainder$1$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).remainder$1(receiver, a0);
};
$.remove$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).remove$1(receiver, a0);
};
$.removeAt$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).removeAt$1(receiver, a0);
};
$.replaceAll$2$s = function(receiver, a0, a1) {
  return $.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
};
$.round$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).round$0(receiver);
};
$.setRange$4$a = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$a(receiver).setRange$4(receiver, a0, a1, a2, a3);
};
$.split$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).split$1(receiver, a0);
};
$.substring$2$s = function(receiver, a0, a1) {
  return $.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
};
$.toDouble$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).toDouble$0(receiver);
};
$.toInt$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).toInt$0(receiver);
};
$.toList$0$a = function(receiver) {
  return $.getInterceptor$a(receiver).toList$0(receiver);
};
$.toLowerCase$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).toLowerCase$0(receiver);
};
$.toString$0$abfnosu = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.trim$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).trim$0(receiver);
};
$.where$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).where$1(receiver, a0);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSInt = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSNumber.prototype;
  }
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$a = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$as = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "_isLittleEndianSystem", "_isLittleEndianSystem", "get$_isLittleEndianSystem", function() {
  return $._checkLittleEndianSystem();
});
Isolate.$lazy($, "enterFrame", "_EventStreamIndex_enterFrame", "get$_EventStreamIndex_enterFrame", function() {
  return $._EventStreamIndex$();
});
Isolate.$lazy($, "engine", "SoundMixer_engine", "get$SoundMixer_engine", function() {
  return $.SoundMixer__getEngine();
});
Isolate.$lazy($, "_audioContext", "SoundMixer__audioContext", "get$SoundMixer__audioContext", function() {
  return $.SoundMixer__getAudioContext();
});
Isolate.$lazy($, "_supportedTypes", "SoundMixer__supportedTypes", "get$SoundMixer__supportedTypes", function() {
  return $.SoundMixer__getSupportedTypes();
});
Isolate.$lazy($, "_mouseCursorChangedEvent", "Mouse__mouseCursorChangedEvent", "get$Mouse__mouseCursorChangedEvent", function() {
  return $.StreamController$(null, null);
});
Isolate.$lazy($, "_onMouseCursorChanged", "Mouse__onMouseCursorChanged", "get$Mouse__onMouseCursorChanged", function() {
  return $.get$Mouse__mouseCursorChangedEvent().get$stream().asBroadcastStream$0();
});
Isolate.$lazy($, "_inputModeChangedEvent", "Multitouch__inputModeChangedEvent", "get$Multitouch__inputModeChangedEvent", function() {
  return $.StreamController$(null, null);
});
Isolate.$lazy($, "_onInputModeChanged", "Multitouch__onInputModeChanged", "get$Multitouch__onInputModeChanged", function() {
  return $.get$Multitouch__inputModeChangedEvent().get$stream().asBroadcastStream$0();
});
var $ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $isCollection: function() {
    return false;
  },
  $isList: function() {
    return false;
  },
  $isElement: function() {
    return false;
  },
  $isImageData: function() {
    return false;
  },
  $isLocation: function() {
    return false;
  },
  $isNode: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "name>,pathname>,target=,type>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLAreaElement", {"": "pathname>,target="});

$.$defineNativeClass("HTMLBaseElement", {"": "target="});

$.$defineNativeClass("Blob", {"": "size>,type>"});

$.$defineNativeClass("HTMLBodyElement", {
  get$onError: function() {
    return $.CONSTANT36.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT37.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLButtonElement", {"": "name>,type>,value="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width=",
  getContext$2: function(contextId, attrs) {
    var t1 = $ === attrs;
    if (t1)
      attrs = null;
    if (!t1)
      return this.getContext(contextId, $.convertDartToNative_Dictionary(attrs));
    return this.getContext(contextId);
  },
  getContext$1: function(contextId) {
    return this.getContext$2(contextId, $);
  },
  get$context2d: function() {
    return this.getContext$1("2d");
  }
});

$.$defineNativeClass("CanvasRenderingContext", {"": "canvas>"});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle<,font=,globalAlpha<,lineCap<,lineJoin<,lineWidth<,strokeStyle<,textAlign<,textBaseline<",
  arc$6: function(x, y, radius, startAngle, endAngle, anticlockwise) {
    return this.arc(x,y,radius,startAngle,endAngle,anticlockwise);
  },
  arcTo$5: function(x1, y1, x2, y2, radius) {
    return this.arcTo(x1,y1,x2,y2,radius);
  },
  beginPath$0: function() {
    return this.beginPath();
  },
  bezierCurveTo$6: function(cp1x, cp1y, cp2x, cp2y, x, y) {
    return this.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
  },
  clearRect$4: function(x, y, width, height) {
    return this.clearRect(x,y,width,height);
  },
  clip$1: function(winding) {
    return this.clip(winding);
  },
  clip$0: function() {
    return this.clip();
  },
  closePath$0: function() {
    return this.closePath();
  },
  createImageData$2: function(imagedata_OR_sw, sh) {
    var t1 = $ === sh;
    if (t1)
      sh = null;
    if ((typeof imagedata_OR_sw === "object" && imagedata_OR_sw !== null && imagedata_OR_sw.$isImageData() || imagedata_OR_sw == null) && t1)
      return $._convertNativeToDart_ImageData(this.createImageData($._convertDartToNative_ImageData(imagedata_OR_sw)));
    if (typeof imagedata_OR_sw === "number" || imagedata_OR_sw == null)
      return $._convertNativeToDart_ImageData(this.createImageData(imagedata_OR_sw, sh));
    throw $.$$throw($.ArgumentError$("Incorrect number or type of arguments"));
  },
  drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
    return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
  },
  drawImage$3: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y) {
    return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y);
  },
  fill$1: function(winding) {
    return this.fill(winding);
  },
  fill$0: function() {
    return this.fill();
  },
  fillRect$4: function(x, y, width, height) {
    return this.fillRect(x,y,width,height);
  },
  fillText$4: function(text, x, y, maxWidth) {
    return this.fillText(text,x,y,maxWidth);
  },
  fillText$3: function(text, x, y) {
    return this.fillText(text, x, y);
  },
  getImageData$4: function(sx, sy, sw, sh) {
    return $._convertNativeToDart_ImageData(this.getImageData(sx, sy, sw, sh));
  },
  lineTo$2: function(x, y) {
    return this.lineTo(x,y);
  },
  measureText$1: function(text) {
    return this.measureText(text);
  },
  moveTo$2: function(x, y) {
    return this.moveTo(x,y);
  },
  putImageData$7: function(imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
    var t1, t2, t3, t4;
    t1 = $ === dirtyX;
    if (t1)
      dirtyX = null;
    t2 = $ === dirtyY;
    if (t2)
      dirtyY = null;
    t3 = $ === dirtyWidth;
    if (t3)
      dirtyWidth = null;
    t4 = $ === dirtyHeight;
    if (t4)
      dirtyHeight = null;
    if (t1 && t2 && t3 && t4) {
      this.putImageData($._convertDartToNative_ImageData(imagedata), dx, dy);
      return;
    }
    this.putImageData($._convertDartToNative_ImageData(imagedata), dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight);
    return;
  },
  putImageData$3: function(imagedata, dx, dy) {
    return this.putImageData$7(imagedata, dx, dy, $, $, $, $);
  },
  quadraticCurveTo$4: function(cpx, cpy, x, y) {
    return this.quadraticCurveTo(cpx,cpy,x,y);
  },
  rect$4: function(x, y, width, height) {
    return this.rect(x,y,width,height);
  },
  restore$0: function() {
    return this.restore();
  },
  save$0: function() {
    return this.save();
  },
  setTransform$6: function(m11, m12, m21, m22, dx, dy) {
    return this.setTransform(m11,m12,m21,m22,dx,dy);
  },
  stroke$0: function() {
    return this.stroke();
  },
  strokeRect$5: function(x, y, width, height, lineWidth) {
    return this.strokeRect(x,y,width,height,lineWidth);
  },
  strokeRect$4: function(x, y, width, height) {
    return this.strokeRect(x, y, width, height);
  },
  transform$6: function(m11, m12, m21, m22, dx, dy) {
    return this.transform(m11,m12,m21,m22,dx,dy);
  }
});

$.$defineNativeClass("CharacterData", {"": "data>,length>"});

$.$defineNativeClass("ClientRect", {"": "bottom>,height>,left>,right>,top>,width>"});

$.$defineNativeClass("CompositionEvent", {"": "data>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  getPropertyValue$1: function(propertyName) {
    var propValue = this.getPropertyValue(propertyName);
    return propValue != null ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  get$bottom: function() {
    return this.getPropertyValue$1("bottom");
  },
  get$clear: function() {
    return this.getPropertyValue$1("clear");
  },
  clear$0: function() {
    return this.get$clear().call$0();
  },
  get$clip: function() {
    return this.getPropertyValue$1("clip");
  },
  clip$0: function() {
    return this.get$clip().call$0();
  },
  get$color: function() {
    return this.getPropertyValue$1("color");
  },
  set$cursor: function(value) {
    this.setProperty$3("cursor", value, "");
  },
  get$font: function() {
    return this.getPropertyValue$1("font");
  },
  set$font: function(value) {
    this.setProperty$3("font", value, "");
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  get$left: function() {
    return this.getPropertyValue$1("left");
  },
  get$mask: function() {
    return this.getPropertyValue$1($.S($._browserPrefix()) + "mask");
  },
  set$mask: function(value) {
    this.setProperty$3($.S($._browserPrefix()) + "mask", value, "");
  },
  set$position: function(value) {
    this.setProperty$3("position", value, "");
  },
  get$right: function() {
    return this.getPropertyValue$1("right");
  },
  get$size: function() {
    return this.getPropertyValue$1("size");
  },
  set$src: function(value) {
    this.setProperty$3("src", value, "");
  },
  set$textAlign: function(value) {
    this.setProperty$3("text-align", value, "");
  },
  get$top: function() {
    return this.getPropertyValue$1("top");
  },
  set$top: function(value) {
    this.setProperty$3("top", value, "");
  },
  get$transform: function() {
    return this.getPropertyValue$1($.S($._browserPrefix()) + "transform");
  },
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  },
  set$zIndex: function(value) {
    this.setProperty$3("z-index", value, "");
  }
});

$.$defineNativeClass("DeviceOrientationEvent", {"": "alpha>"});

$.$defineNativeClass("Document", {"": "$$dom_body:body~",
  get$onClick: function() {
    return $.CONSTANT43.forTarget$1(this);
  },
  get$onError: function() {
    return $.CONSTANT36.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT37.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT33.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT29.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT27.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT31.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT25.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT15.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT23.forTarget$1(this);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors))
      return this.getElementById($.CONSTANT0.substring$1(selectors, 1));
    return this.querySelector(selectors);
  }
});

$.$defineNativeClass("DocumentFragment", {
  get$children: function() {
    if (this._children == null)
      this._children = $.FilteredElementList$(this);
    return this._children;
  },
  set$innerHtml: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$innerHtml")) {
      var e, nodes;
      this.get$nodes().clear$0();
      e = $.Element_Element$tag("div");
      e.set$innerHtml(value);
      nodes = $.List_List$from(e.get$nodes());
      this.get$nodes().addAll$1(nodes);
    } else
      return Object.prototype.set$innerHtml.call(this, value);
  },
  appendHtml$1: function(text) {
    this.get$nodes().add$1($._DocumentFragmentFactoryProvider_createDocumentFragment_html(text));
  }
});

$.$defineNativeClass("DOMError", {"": "name>"});

$.$defineNativeClass("DOMException", {
  get$name: function() {
    var errorName = this.name;
    if ($._Device_isWebKit() === true && errorName === "SECURITY_ERR")
      return "SecurityError";
    if ($._Device_isWebKit() === true && errorName === "SYNTAX_ERR")
      return "SyntaxError";
    return errorName;
  },
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "$$dom_children:children~,id=,innerHtml:innerHTML|,$$dom_className:className},style>",
  get$attributes: function() {
    return $._ElementAttributeMap$(this);
  },
  get$children: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$children")) {
      return $._ChildrenElementList$_wrap(this);
    } else
      return Object.prototype.get$children.call(this);
  },
  set$children: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$children")) {
      var copy, children, t1;
      copy = $.List_List$from(value);
      children = this.get$children();
      t1 = $.getInterceptor$a(children);
      t1.clear$0(children);
      t1.addAll$1(children, copy);
    } else
      return Object.prototype.set$children.call(this, value);
  },
  get$classes: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$classes")) {
      return $._ElementCssClassSet$(this);
    } else
      return Object.prototype.get$classes.call(this);
  },
  appendHtml$1: function(text) {
    this.insertAdjacentHtml$2("beforeend", text);
  },
  insertAdjacentHtml$2: function(where, text) {
    if (Object.getPrototypeOf(this).hasOwnProperty("insertAdjacentHtml$2")) {
      if (!!this.insertAdjacentHtml)
        this._insertAdjacentHtml$2(where, text);
      else
        this._insertAdjacentNode$2(where, $._DocumentFragmentFactoryProvider_createDocumentFragment_html(text));
    } else
      return Object.prototype.insertAdjacentHtml$2.call(this, where, text);
  },
  _insertAdjacentNode$2: function(where, node) {
    switch ($.CONSTANT0.toLowerCase$0(where)) {
      case "beforebegin":
        this.parentNode.insertBefore(node, this);
        break;
      case "afterbegin":
        this.insertBefore(node, $.$$gt$n(this.get$nodes().get$length(), 0) === true ? this.get$nodes().$index(0) : null);
        break;
      case "beforeend":
        this.get$nodes().add$1(node);
        break;
      case "afterend":
        this.parentNode.insertBefore(node, this.nextSibling);
        break;
      default:
        throw $.$$throw($.ArgumentError$("Invalid position " + where));
    }
  },
  focus$0: function() {
    return this.focus();
  },
  $$dom_getAttribute$1: function($name) {
    return this.getAttribute($name);
  },
  getBoundingClientRect$0: function() {
    return this.getBoundingClientRect();
  },
  $$dom_hasAttribute$1: function($name) {
    return this.hasAttribute($name);
  },
  $$dom_removeAttribute$1: function($name) {
    return this.removeAttribute($name);
  },
  $$dom_setAttribute$2: function($name, value) {
    return this.setAttribute($name,value);
  },
  get$onClick: function() {
    return $.CONSTANT43.forTarget$1(this);
  },
  get$onError: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$onError")) {
      return $.CONSTANT36.forTarget$1(this);
    } else
      return Object.prototype.get$onError.call(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onLoad: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$onLoad")) {
      return $.CONSTANT37.forTarget$1(this);
    } else
      return Object.prototype.get$onLoad.call(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT33.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT29.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT27.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT31.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT25.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT15.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onTouchEnter: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  get$onTouchLeave: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT23.forTarget$1(this);
  },
  $isElement: function() {
    return true;
  },
  $asElement: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "align>,height=,name>,src<,type>,width="});

$.$defineNativeClass("Event", {"": "bubbles>,type>",
  get$target: function() {
    return $._convertNativeToDart_EventTarget(this.target);
  },
  preventDefault$0: function() {
    return this.preventDefault();
  }
});

$.$defineNativeClass("EventException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  dispatchEvent$1: function($event) {
    if (Object.getPrototypeOf(this).hasOwnProperty("dispatchEvent$1")) {
      return this.dispatchEvent($event);
    } else
      return Object.prototype.dispatchEvent$1.call(this, $event);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "name>,type>"});

$.$defineNativeClass("File", {"": "name>"});

$.$defineNativeClass("FileException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Float32Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.num]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.num]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Float64Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.num]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.num]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>,name>,target=",
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLDocument", {
  get$body: function() {
    return $.document().get$$$dom_body();
  },
  register$2: function(tagName, elementClass) {
    throw $.$$throw($._ExceptionImplementation$("Not yet implemented"));
  }
});

$.$defineNativeClass("XMLHttpRequest", {"": "response>,responseText>,status>",
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(evt) {
    return this.dispatchEvent(evt);
  },
  open$5: function(method, url, async, user, password) {
    return this.open(method,url,async,user,password);
  },
  open$3: function(method, url, async) {
    return this.open(method, url, async);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  send$1: function(data) {
    return this.send(data);
  },
  send$0: function() {
    return this.send();
  },
  get$onError: function() {
    return $.CONSTANT36.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT37.forTarget$1(this);
  },
  get$onProgress: function() {
    return $.CONSTANT38.forTarget$1(this);
  }
});

$.$defineNativeClass("XMLHttpRequestException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("XMLHttpRequestUpload", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(evt) {
    return this.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onError: function() {
    return $.CONSTANT36.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT37.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,name>,src<,width="});

$.$defineNativeClass("ImageData", {"": "data>,height>,width>",
  $isImageData: function() {
    return true;
  },
  $asImageData: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLImageElement", {"": "height=,naturalHeight>,naturalWidth>,src<,width=,x>,y>",
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "height=,name>,pattern>,size>,src<,type>,value=,width=",
  $isElement: function() {
    return true;
  },
  $asElement: function() {
    return null;
  },
  $isNode: function() {
    return true;
  },
  $asNode: function() {
    return null;
  }
});

$.$defineNativeClass("Int16Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int32Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int8Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("KeyboardEvent", {"": "altKey>,ctrlKey>,keyLocation>,shiftKey>",
  get$keyCode: function() {
    return this.keyCode;
  },
  get$charCode: function() {
    return this.charCode;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "name>,type>"});

$.$defineNativeClass("HTMLLIElement", {"": "type>,value="});

$.$defineNativeClass("HTMLLinkElement", {"": "type>"});

$.$defineNativeClass("LocalMediaStream", {
  stop$0: function() {
    return this.stop();
  }
});

$.$defineNativeClass("Location", {"": "pathname>",
  toString$0: function() {
    return this.toString();
  },
  $isLocation: function() {
    return true;
  },
  $asLocation: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLMapElement", {"": "name>"});

$.$defineNativeClass("MediaController", {"": "currentTime=,duration>,volume=",
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(evt) {
    return this.dispatchEvent(evt);
  },
  pause$0: function() {
    return this.pause();
  },
  play$0: function() {
    return this.play();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("HTMLMediaElement", {"": "currentTime=,duration>,ended>,error>,loop<,src<,volume=",
  canPlayType$2: function(type, keySystem) {
    return this.canPlayType(type,keySystem);
  },
  load$0: function() {
    return this.load();
  },
  pause$0: function() {
    return this.pause();
  },
  play$0: function() {
    return this.play();
  },
  get$onCanPlayThrough: function() {
    return $.CONSTANT41.forTarget$1(this);
  },
  get$onEnded: function() {
    return $.CONSTANT42.forTarget$1(this);
  }
});

$.$defineNativeClass("MediaStream", {"": "ended>,id>",
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function($event) {
    return this.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onEnded: function() {
    return $.CONSTANT42.forTarget$1(this);
  }
});

$.$defineNativeClass("MediaStreamEvent", {"": "stream>"});

$.$defineNativeClass("MessageEvent", {"": "ports>",
  get$data: function() {
    return $.convertNativeToDart_SerializedScriptValue(this.data);
  },
  get$source: function() {
    return $._convertNativeToDart_Window(this.source);
  }
});

$.$defineNativeClass("HTMLMetaElement", {"": "name>"});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MouseEvent", {"": "altKey>,button>,clientX>,clientY>,ctrlKey>,shiftKey>",
  get$offsetX: function() {
    if (!!this.offsetX)
      return this.offsetX;
    else {
      var target = this.get$target();
      if (!(typeof target === "object" && target !== null && target.$isElement()))
        throw $.$$throw($.UnsupportedError$("offsetX is only supported on elements"));
      return $.$$sub$n(this.clientX, this.get$target().getBoundingClientRect$0().get$left());
    }
  },
  get$offsetY: function() {
    if (!!this.offsetY)
      return this.offsetY;
    else {
      var target = this.get$target();
      if (!(typeof target === "object" && target !== null && target.$isElement()))
        throw $.$$throw($.UnsupportedError$("offsetY is only supported on elements"));
      return $.$$sub$n(this.clientY, this.get$target().getBoundingClientRect$0().get$top());
    }
  }
});

$.$defineNativeClass("Navigator", {"": "userAgent>"});

$.$defineNativeClass("Node", {"": "$$dom_attributes:attributes~,$$dom_localName:localName~,$$dom_namespaceUri:namespaceURI~,parent:parentElement~,text:textContent|",
  get$nodes: function() {
    return $._ChildNodeListLazy$(this);
  },
  remove$0: function() {
    var t1 = this.parentNode;
    if (t1 != null)
      t1.removeChild(this);
  },
  replaceWith$1: function(otherNode) {
    var $parent, exception;
    try {
      $parent = this.parentNode;
      $parent.$$dom_replaceChild$2(otherNode, this);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return this;
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_appendChild$1: function(newChild) {
    return this.appendChild(newChild);
  },
  clone$1: function(deep) {
    if (Object.getPrototypeOf(this).hasOwnProperty("clone$1")) {
      return this.cloneNode(deep);
    } else
      return Object.prototype.clone$1.call(this, deep);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  dispatchEvent$1: function($event) {
    return this.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(newChild, oldChild) {
    return this.replaceChild(newChild,oldChild);
  },
  $isNode: function() {
    return true;
  },
  $asNode: function() {
    return null;
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type>",
  start$1: function(arg0) {
    return this.start.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLObjectElement", {"": "data>,height=,name>,type>,width="});

$.$defineNativeClass("HTMLOptionElement", {"": "index>,value="});

$.$defineNativeClass("HTMLOutputElement", {"": "name>,type>,value="});

$.$defineNativeClass("HTMLParamElement", {"": "name>,value="});

$.$defineNativeClass("ProcessingInstruction", {"": "data>,target>"});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("RangeException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "src<,type>"});

$.$defineNativeClass("HTMLSelectElement", {"": "length>,name>,size>,type>,value="});

$.$defineNativeClass("ShadowRoot", {"": "innerHtml:innerHTML|",
  clone$1: function(deep) {
    return this.cloneNode(deep);
  }
});

$.$defineNativeClass("HTMLSourceElement", {"": "src<,type>"});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("SpeechRecognitionEvent", {"": "result>"});

$.$defineNativeClass("SpeechRecognitionResult", {"": "length>"});

$.$defineNativeClass("HTMLStyleElement", {"": "type>"});

$.$defineNativeClass("HTMLTextAreaElement", {"": "name>,type>,value="});

$.$defineNativeClass("TextEvent", {"": "data>"});

$.$defineNativeClass("TextMetrics", {"": "width>"});

$.$defineNativeClass("TextTrack", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(evt) {
    return this.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("TextTrackList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(evt) {
    return this.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.TextTrack]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.TextTrack]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("TimeRanges", {"": "length>",
  start$1: function(index) {
    return this.start(index);
  }
});

$.$defineNativeClass("Touch", {"": "clientX>,clientY>,identifier>",
  get$target: function() {
    return $._convertNativeToDart_EventTarget(this.target);
  }
});

$.$defineNativeClass("TouchEvent", {"": "altKey>,changedTouches>,ctrlKey>,shiftKey>"});

$.$defineNativeClass("TouchList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Touch]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Touch]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLTrackElement", {"": "src<"});

$.$defineNativeClass("TransitionEvent", {
  propertyName$0: function() {
    return this.propertyName.call$0();
  }
});

$.$defineNativeClass("Uint16Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint32Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  $index: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return this[index];
    } else
      return Object.prototype.$index.call(this, index);
  },
  $indexSet: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      this[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  contains$1: function(element) {
    if (Object.getPrototypeOf(this).hasOwnProperty("contains$1")) {
      return $.IterableMixinWorkaround_contains(this, element);
    } else
      return Object.prototype.contains$1.call(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = this.get$iterator(); t1.moveNext$0();)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  join$1: function(separator) {
    if (Object.getPrototypeOf(this).hasOwnProperty("join$1")) {
      return $.IterableMixinWorkaround_joinList(this, separator);
    } else
      return Object.prototype.join$1.call(this, separator);
  },
  map$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("map$1")) {
      return $.MappedListIterable$(this, f);
    } else
      return Object.prototype.map$1.call(this, f);
  },
  where$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("where$1")) {
      return $.WhereIterable$(this, f);
    } else
      return Object.prototype.where$1.call(this, f);
  },
  toList$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$0")) {
      return $.List_List$from(this);
    } else
      return Object.prototype.toList$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      return this.get$length() === 0;
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  elementAt$1: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("elementAt$1")) {
      return this.$index(index);
    } else
      return Object.prototype.elementAt$1.call(this, index);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  addAll$1: function(iterable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addAll$1.call(this, iterable);
  },
  clear$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("clear$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
    } else
      return Object.prototype.clear$0.call(this);
  },
  indexOf$2: function(element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(this, element, start, this.get$length());
    } else
      return Object.prototype.indexOf$2.call(this, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$last")) {
      if (this.get$length() > 0)
        return this.$index(this.get$length() - 1);
      throw $.$$throw($.StateError$("No elements"));
    } else
      return Object.prototype.get$last.call(this);
  },
  removeAt$1: function(pos) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAt$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAt$1.call(this, pos);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    if (Object.getPrototypeOf(this).hasOwnProperty("setRange$4")) {
      throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
    } else
      return Object.prototype.setRange$4.call(this, start, rangeLength, from, startFrom);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("DOMWindow", {"": "name>,navigator>,status>",
  get$location: function() {
    var result = this.get$_location();
    if ($.Window__isDartLocation(result))
      return result;
    if (null == this._location_wrapper)
      this._location_wrapper = $._LocationWrapper$(result);
    return this._location_wrapper;
  },
  get$_location: function() {
    return this.location;
  },
  requestAnimationFrame$1: function(callback) {
    this._ensureRequestAnimationFrame$0();
    return this._requestAnimationFrame$1(callback);
  },
  _requestAnimationFrame$1: function(callback) {
    return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function() {
    if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
  },
  get$parent: function() {
    return $._convertNativeToDart_Window(this.parent);
  },
  get$top: function() {
    return $._convertNativeToDart_Window(this.top);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  dispatchEvent$1: function(evt) {
    return this.dispatchEvent(evt);
  },
  moveTo$2: function(x, y) {
    return this.moveTo(x,y);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  stop$0: function() {
    return this.stop();
  },
  get$onClick: function() {
    return $.CONSTANT43.forTarget$1(this);
  },
  get$onError: function() {
    return $.CONSTANT36.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT37.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT33.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT29.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT27.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT31.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT25.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT15.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT23.forTarget$1(this);
  }
});

$.$defineNativeClass("XPathException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (this.get$length() > 0)
      return this.$index(this.get$length() - 1);
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("WebKitTransitionEvent", {
  propertyName$0: function() {
    return this.propertyName.call$0();
  }
});

$.$defineNativeClass("SVGAElement", {"": "target>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGCircleElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGClipPathElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGDefsElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGEllipseElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type>,values>,height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type>,height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGGElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGLineElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPathElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPolygonElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGPolylineElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGScriptElement", {"": "type>"});

$.$defineNativeClass("SVGStyleElement", {"": "type>"});

$.$defineNativeClass("SVGElement", {
  get$classes: function() {
    if (this._cssClassSet == null)
      this._cssClassSet = $._AttributeClassSet$(this);
    return this._cssClassSet;
  },
  get$children: function() {
    return $.FilteredElementList$(this);
  },
  set$children: function(value) {
    var children, t1;
    children = this.get$children();
    t1 = $.getInterceptor$a(children);
    t1.clear$0(children);
    t1.addAll$1(children, value);
  },
  set$innerHtml: function(svg) {
    var container = $.Element_Element$tag("div");
    container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
    this.set$children($.$$index$as(container.get$children(), 0).get$children());
  },
  insertAdjacentHtml$2: function(where, text) {
    throw $.$$throw($.UnsupportedError$("Cannot invoke insertAdjacentHtml on SVG."));
  },
  get$$$dom_children: function() {
    throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  get$id: function() {
    return this.id;
  },
  set$id: function(value) {
    this.id = value;
  }
});

$.$defineNativeClass("SVGException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGSwitchElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGTextElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x>,y>"});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type>"});

$.$defineNativeClass("SVGCursorElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x=,y="});

$.$defineNativeClass("AudioBuffer", {"": "duration>,length>"});

$.$defineNativeClass("AudioBufferSourceNode", {"": "buffer<,loop<",
  start$3: function(when, grainOffset, grainDuration) {
    var t1, t2;
    t1 = $ === grainOffset;
    if (t1)
      grainOffset = null;
    t1 = !t1;
    t2 = $ === grainDuration;
    if (t2)
      grainDuration = null;
    t2 = !t2;
    if (!!this.start)
      if (t2)
        this.start(when, grainOffset, grainDuration);
      else if (t1)
        this.start(when, grainOffset);
      else
        this.start(when);
    else if (t2)
      this.noteOn(when, grainOffset, grainDuration);
    else if (t1)
      this.noteOn(when, grainOffset);
    else
      this.noteOn(when);
  },
  start$1: function(when) {
    return this.start$3(when, $, $);
  },
  stop$1: function(when) {
    if (!!this.stop)
      this.stop(when);
    else
      this.noteOff(when);
  }
});

$.$defineNativeClass("AudioContext", {"": "currentTime>,destination>,listener>",
  createBufferSource$0: function() {
    return this.createBufferSource();
  },
  decodeAudioData$3: function(audioData, successCallback, errorCallback) {
    return this.decodeAudioData(audioData,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
  },
  createGain$0: function() {
    if (this.createGain !== undefined)
      return this.createGain();
    else
      return this.createGainNode();
  }
});

$.$defineNativeClass("AudioNode", {
  connect$3: function(destination, output, input) {
    return this.connect(destination,output,input);
  }
});

$.$defineNativeClass("AudioParam", {"": "name>,value="});

// 149 dynamic classes.
// 273 classes
// 29 !leaf
(function() {
  var v0_TextPositioningElement = "SVGTextPositioningElement|SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTRefElement", v1__SVGComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement", v2_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v3_SvgElement = [v0_TextPositioningElement, v1__SVGComponentTransferFunctionElement, "SVGElement|SVGStyledElement|SVGAElement|SVGTextContentElement|SVGTextPathElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFESpecularLightingElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGForeignObjectElement|SVGGElement|SVGImageElement|SVGLineElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGMarkerElement|SVGMaskElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGStopElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGFEDropShadowElement|SVGMissingGlyphElement|SVGGlyphRefElement|SVGAnimationElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGAnimateColorElement|SVGFEDistantLightElement|SVGFEMergeNodeElement|SVGFEPointLightElement|SVGFESpotLightElement|SVGMetadataElement|SVGScriptElement|SVGStyleElement|SVGViewElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGCursorElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGHKernElement|SVGVKernElement|SVGMPathElement"].join("|"), v4_MouseEvent = "MouseEvent|WheelEvent", v5_Element = [v2_MediaElement, v3_SvgElement, "Element|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement|HTMLElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement"].join("|"), v6_DocumentFragment = "DocumentFragment|ShadowRoot", v7_CharacterData = "CharacterData|Text|CDATASection|Comment", v8_Document = "Document|SVGDocument|HTMLDocument", v9_Node = [v5_Element, v6_DocumentFragment, v7_CharacterData, v8_Document, "Node|ProcessingInstruction|Attr|DocumentType|EntityReference|Notation"].join("|"), v10_AudioContext = "AudioContext|OfflineAudioContext", v11_MediaStream = "MediaStream|LocalMediaStream";
  $.dynamicSetMetadata([["Blob", "Blob|File"], ["CanvasRenderingContext", "CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D"], ["CharacterData", v7_CharacterData], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGComponentTransferFunctionElement", v1__SVGComponentTransferFunctionElement], ["SVGElement", v3_SvgElement], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["Document", v8_Document], ["DocumentFragment", v6_DocumentFragment], ["HTMLMediaElement", v2_MediaElement], ["Element", v5_Element], ["MouseEvent", v4_MouseEvent], ["Event", [v4_MouseEvent, "Event|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|RTCDTMFToneChangeEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|UIEvent|TextEvent|TouchEvent|CompositionEvent|SVGZoomEvent|FocusEvent|KeyboardEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitTransitionEvent|IDBVersionChangeEvent|BeforeLoadEvent|CloseEvent|WebKitAnimationEvent|DeviceMotionEvent|ErrorEvent|DeviceOrientationEvent|AudioProcessingEvent|CustomEvent|OfflineAudioCompletionEvent|HashChangeEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent"].join("|")], ["Node", v9_Node], ["AudioContext", v10_AudioContext], ["MediaStream", v11_MediaStream], ["EventTarget", [v9_Node, v10_AudioContext, v11_MediaStream, "EventTarget|TextTrack|TextTrackList|DOMWindow|XMLHttpRequest|XMLHttpRequestUpload|MediaController"].join("|")], ["AudioParam", "AudioParam|AudioGain"], ["AudioNode", "AudioNode|AudioDestinationNode|AudioSourceNode|AudioBufferSourceNode|GainNode"], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["NodeList", "NodeList|RadioNodeList"]]);
})();

$.main.call$0 = $.main;
// BEGIN invoke [main].
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var lastCharCode = field.charCodeAt(len - 1);
    var needsAccessor = (lastCharCode & 63) >= 60;
    if (needsAccessor) {
      var needsGetter = (lastCharCode & 3) > 0;
      var needsSetter = (lastCharCode & 2) == 0;
      var renaming = (lastCharCode & 64) != 0;
      var accessorName = field = field.substring(0, len - 1);
      if (renaming) {
        var divider = field.indexOf(":");
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (needsGetter) {
        var getterString = "return this." + field;
        prototype["get$" + accessorName] = new Function(getterString);
      }
      if (needsSetter) {
        var setterString = "this." + field + " = v";
        prototype["set$" + accessorName] = new Function("v", setterString);
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(cls, fields, prototype) {
    var constructor;
    if (typeof fields == 'function') {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = fields[i];
        field = generateAccessor(field, prototype);
        str += field;
        body += "this." + field + " = " + field + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = cls;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass('c', ['f?'], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != 'undefined')
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var fields = desc[''], supr;
        if (typeof fields == 'string') {
          var s = fields.split(";");
          supr = s[0];
          fields = s[1] == '' ? [] : s[1].split(',');
        } else {
          supr = desc.super;
        }
        isolateProperties[cls] = defineClass(cls, fields, desc);
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass)
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var getter = new Function("{ return $." + fieldName + ";}");
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            $.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = getter;
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    isolateProperties.$currentScript = typeof document == "object" ? document.currentScript || document.scripts[document.scripts.length - 1] : null;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = Isolate.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
//@ sourceMappingURL=dartflash_web.dart.js.map
