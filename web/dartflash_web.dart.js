// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $ = Isolate.$isolateProperties;
var $$ = {};

// Classes
$$.ListIterable = {"": "Iterable;",
  get$iterator: function(_) {
    return $.ListIterator$(this);
  },
  forEach$1: function(_, action) {
    var $length, i;
    $length = this.get$length(this);
    if (typeof $length !== "number")
      return this.forEach$1$bailout1(1, action, $length);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.elementAt$1(this, i));
      if ($length !== this.get$length(this))
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
  },
  forEach$1$bailout1: function(state0, action, $length) {
    var t1, i;
    for (t1 = $.getInterceptor($length), i = 0; $.JSNumber_methods.$lt(i, $length); ++i) {
      action.call$1(this.elementAt$1(this, i));
      if (t1.$eq($length, this.get$length(this)) !== true)
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
  },
  toList$1$growable: function(_, growable) {
    var t1, result, i;
    if (growable === true) {
      t1 = this.get$length(this);
      result = $.List_List($, $.getRuntimeTypeArgument(this, this["$asListIterable"], 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(this, this["$asListIterable"], 0)]);
      $.JSArray_methods.set$length(result, t1);
    } else {
      result = $.List_List(this.get$length(this), $.getRuntimeTypeArgument(this, this["$asListIterable"], 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(this, this["$asListIterable"], 0)]);
    }
    for (i = 0; $.JSNumber_methods.$lt(i, this.get$length(this)); ++i) {
      t1 = this.elementAt$1(this, i);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  $asIterable: function() {
    return null;
  }
};

$$.ListIterator = {"": "Object;_iterable,_liblib$_length,_index,_liblib$_current",
  get$current: function() {
    return this._liblib$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._liblib$_length;
    t2 = this._iterable;
    if ($.$eq(t1, $.get$length$asx(t2)) !== true)
      throw $.$$throw($.ConcurrentModificationError$(t2));
    t3 = this._index;
    if (t3 === t1) {
      this._liblib$_current = null;
      return false;
    }
    this._liblib$_current = $.elementAt$1$ax(t2, t3);
    this._index = this._index + 1;
    return true;
  }
};

$$.MappedListIterable = {"": "ListIterable;_liblib$_source,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$length: function(_) {
    return $.get$length$asx(this._liblib$_source);
  },
  elementAt$1: function(_, index) {
    return this._f$1($.elementAt$1$ax(this._liblib$_source, index));
  },
  $asListIterable: function (S, T) { return [T]; }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  get$iterator: function(_) {
    return $.WhereIterator$($.get$iterator$ax(this._iterable), this._f);
  },
  $asIterable: function() {
    return null;
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0();)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$.ToString__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (!t1.first_0)
      this.result_1.write$1(", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    t1.write$1(": ");
    $.ToString__emitObject(v, t1, t2);
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$gt$n(t1.i_1, 0) === true)
      t1.sb_0.write$1(", ");
    t1.sb_0.write$1(key);
    t1.sb_0.write$1(": ");
    t1.sb_0.write$1($.Error_safeToString(value));
    t1.i_1 = $.$add$ns(t1.i_1, 1);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
};

$$.JSNull = {"": "Object;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
};

$$.CloseToken = {"": "Object;", $isCloseToken: true};

$$.JsIsolateSink = {"": "StreamSink;_isClosed,_port<",
  add$1: function(_, message) {
    $.send$1$x(this._port, message);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$isIsolateSink && $.$eq(this._port, other.get$_port()) === true;
  },
  get$hashCode: function(_) {
    return $.$add$ns($.get$hashCode$(this._port), 499);
  },
  $isJsIsolateSink: true,
  $asIsolateSink: null,
  $isIsolateSink: true
};

$$._Manager = {"": "Object;nextIsolateId@,currentManagerId,nextManagerId,currentContext<,rootContext,topEventLoop<,fromCommandLine,isWorker<,supportsWorkers,isolates,mainManager,managers",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = $.get$globalWorker() != null && $.get$IsolateNatives_thisScript() != null;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true) {
      var t1 = this.isolates;
      t1 = t1.get$isEmpty(t1) && this.topEventLoop.activeTimerCount === 0;
    } else
      t1 = false;
    if (t1) {
      t1 = this.mainManager;
      t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "close"])));
    }
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map($.$int, $._IsolateContext);
    this.managers = $.Map_Map($.$int, $._ManagerStub);
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id>,ports,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null)
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(portId, port) {
    var t1;
    if (this.ports.containsKey$1(portId))
      throw $.$$throw($._ExceptionImplementation$("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $globalState.isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    t1 = this.ports;
    if (t1.get$isEmpty(t1)) {
      t1 = $globalState.isolates;
      t1.remove$1(t1, this.id);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId(t2 + 1);
    this.id = t2;
    this.ports = $.Map_Map($.$int, $.ReceivePort);
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount",
  enqueue$3: function(isolate, fn, msg) {
    var t1 = this.events;
    t1.addLast$1(t1, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if (t1.get$isEmpty(t1))
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null)
      if ($globalState.isolates.containsKey$1($globalState.rootContext.id))
        if ($globalState.fromCommandLine === true) {
          var t1 = $globalState.rootContext.ports;
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
      else
        t1 = false;
    else
      t1 = false;
    if (t1)
      throw $.$$throw($._ExceptionImplementation$("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        t1 = $globalState.mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    $.Timer_run(this);
  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function(_) {
    return 0;
  },
  postMessage$1: function(_, msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function(_) {
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
};

$$._BaseSendPort = {"": "Object;_isolateId<",
  _checkReplyTo$1: function(replyTo) {
    if (replyTo != null && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && true)
      throw $.$$throw($._ExceptionImplementation$("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $._CompleterImpl$();
    port = $.ReceivePortImpl$();
    this.send$2(this, message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.future;
  },
  $isSendPort: true
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1 = this.port_1;
    t1.close$0(t1);
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(t1, value);
  }
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort<,_isolateId",
  send$2: function(_, message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  send$1: function($receiver, message) {
    return this.send$2($receiver, message, null);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$eq(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function(_) {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $globalState.isolates;
    isolate = t4.$index(t4, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = $globalState.currentContext != null && $.$eq($.get$id$x($globalState.currentContext), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.topEventLoop.enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  }
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (t1.get$_receivePort().get$_callback() != null) {
      if (this.shouldSerialize_5) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  }
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId<,_receivePortId,_isolateId",
  send$2: function(_, message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  send$1: function($receiver, message) {
    return this.send$2($receiver, message, null);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$eq(this._workerId, other._workerId) === true && $.$eq(this._isolateId, other._isolateId) === true && $.$eq(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = $.$shl$n(this._workerId, 16);
    t2 = $.$shl$n(this._isolateId, 8);
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    return (t1 ^ t2 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true) {
      t1 = $globalState.mainManager;
      t1.postMessage$1(t1, workerMessage);
    } else {
      t2 = $globalState.managers;
      manager = t2.$index(t2, t1.get$_workerId());
      if (manager != null)
        $.postMessage$1$x(manager, workerMessage);
    }
  }
};

$$.ReceivePortImpl = {"": "Object;_id<,_callback<",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function(_) {
    this._callback = null;
    $globalState.currentContext.unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $.get$id$x($globalState.currentContext));
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, list, true);
    $.forEach$1$ax(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, map, true);
    $.forEach$1$ax(map.get$values(map), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (false)
      this.ports.push(port.get$_futurePort());
  },
  visitIsolateSink$1: function(sink) {
    this.visitSendPort$1(sink._port);
  },
  visitCloseToken$1: function(token) {
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.currentManagerId, port._isolateId, port._receivePort.get$_id()];
  },
  visitIsolateSink$1: function(sink) {
    var isClosed = sink._isClosed;
    return ["isolateSink", this.visitSendPort$1(sink._port), isClosed];
  },
  visitCloseToken$1: function(token) {
    return ["closeToken"];
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitIsolateSink$1: function(sink) {
    var isClosed, result;
    isClosed = sink._isClosed;
    result = $.JsIsolateSink$fromPort(this.visitSendPort$1(sink._port));
    result._isClosed = isClosed;
    return result;
  },
  visitCloseToken$1: function(token) {
    return token;
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if ($.$eq(managerId, $globalState.currentManagerId) === true) {
      t1 = $globalState.isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  },
  deserializeIsolateSink$1: function(list) {
    var t1, port, isClosed, result;
    t1 = $.getInterceptor$asx(list);
    port = this.deserializeSendPort$1(t1.$index(list, 1));
    isClosed = t1.$index(list, 2);
    result = $.JsIsolateSink$fromPort(port);
    result._isClosed = isClosed;
    return result;
  },
  deserializeCloseToken$1: function(list) {
    return $.CONSTANT6;
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(_, object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(_, object, info) {
    $.add$1$ax(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function(_) {
    this.tagged = $.List_List($, null);
  },
  cleanup$0: function() {
    var $length, i;
    for ($length = $.get$length$asx(this.tagged), i = 0; i < $length; ++i)
      $.$index$asx(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!x.$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isJsIsolateSink)
      return this.visitIsolateSink$1(x);
    if (typeof x === "object" && x !== null && !!x.$isCloseToken)
      return this.visitCloseToken$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, i, t2;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this.visitList$1$bailout1(1, list);
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    len = list.length;
    copy = $.List_List(len, null);
    t1 = this._visited;
    t1.$indexSet(t1, list, copy);
    for (t1 = copy.length, i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t2 = this._dispatch$1(list[i]);
      if (i >= t1)
        throw $.ioore(i);
      copy[i] = t2;
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list) {
    var t1, copy, len, t2, i, t3;
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    copy = $.List_List(len, null);
    t2 = this._visited;
    t2.$indexSet(t2, list, copy);
    for (t2 = copy.length, i = 0; $.JSNumber_methods.$lt(i, len); ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      copy[i] = t3;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = $.HashMap$(null, null);
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    map.forEach$1(map, new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$indexSet$ax(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    return ["map", id, this._serializeList$1($.toList$0$ax(map.get$keys())), this._serializeList$1($.toList$0$ax(map.get$values(map)))];
  },
  _serializeList$1: function(list) {
    var len, result, t1, i, t2;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len, null);
    for (t1 = result.length, i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t2 = this._dispatch$1(list[i]);
      if (i >= t1)
        throw $.ioore(i);
      result[i] = t2;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list) {
    var t1, len, result, t2, i, t3;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    result = $.List_List(len, null);
    for (t2 = result.length, i = 0; $.JSNumber_methods.$lt(i, len); ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      result[i] = t3;
    }
    return result;
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap$(null, null);
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$index$asx(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      case "isolateSink":
        return this.deserializeIsolateSink$1(x);
      case "closeToken":
        return this.deserializeCloseToken$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var id, t1;
    id = $.$index$asx(x, 1);
    t1 = this._deserialized;
    return t1.$index(t1, id);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, t2, len, i;
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id) {
    var t2, len, i;
    t2 = this._deserialized;
    t2.$indexSet(t2, id, dartList);
    t2 = $.getInterceptor$asx(dartList);
    len = t2.get$length(dartList);
    for (i = 0; $.JSNumber_methods.$lt(i, len); ++i)
      t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i, key;
    result = $.HashMap$(null, null);
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, keys, t1, x, result);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, keys, 0, 0, result, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, keys, t1, x, result, values) {
    switch (state0) {
      case 0:
        result = $.HashMap$(null, null);
        t1 = $.getInterceptor$asx(x);
        id = t1.$index(x, 1);
        t2 = this._deserialized;
        t2.$indexSet(t2, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        var id, t2, t3, len, i;
        state0 = 0;
        t3 = $.getInterceptor$asx(keys);
        len = t3.get$length(keys);
        for (t1 = $.getInterceptor$asx(values), i = 0; $.JSNumber_methods.$lt(i, len); ++i)
          result.$indexSet(result, this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle?",
  cancel$0: function() {
    if ($.get$globalThis().setTimeout != null) {
      if (this._inEventLoop)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount - 1;
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if (milliseconds === 0)
      t1 = $.hasTimer() !== true || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), callback, "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.activeTimerCount = t1.activeTimerCount + 1;
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.internalCallback = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$0();
    this.this_0.set$_handle(null);
    var t1 = $globalState.topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeAt$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    $.checkGrowable(receiver, "removeAt");
    return receiver.splice(index, 1)[0];
  },
  insert$2: function(receiver, index, value) {
    if (index < 0 || index > receiver.length)
      throw $.$$throw($.RangeError$value(index));
    $.checkGrowable(receiver, "insert");
    receiver.splice(index, 0, value);
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$eq(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  addAll$1: function(receiver, collection) {
    var t1, t2;
    for (t1 = $.get$iterator$ax(collection); t1.moveNext$0();) {
      t2 = t1.get$current();
      $.checkGrowable(receiver, "add");
      receiver.push(t2);
    }
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(receiver, f) {
    return $.MappedListIterable$(receiver, f, null, null);
  },
  elementAt$1: function(receiver, index) {
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  sublist$2: function(receiver, start, end) {
    if (typeof end !== "number")
      return this.sublist$2$bailout(1, start, end, receiver);
    $.checkNull(start);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (start < 0 || start > receiver.length)
      throw $.$$throw($.RangeError$range(start, 0, receiver.length));
    if (!(typeof end === "number" && Math.floor(end) === end))
      throw $.$$throw($.ArgumentError$(end));
    if (end < start || end > receiver.length)
      throw $.$$throw($.RangeError$range(end, start, receiver.length));
    if (start === end)
      return [];
    return receiver.slice(start, end);
  },
  sublist$2$bailout: function(state0, start, end, receiver) {
    $.checkNull(start);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (start < 0 || start > receiver.length)
      throw $.$$throw($.RangeError$range(start, 0, receiver.length));
    if (end == null)
      end = receiver.length;
    else {
      if (!(typeof end === "number" && Math.floor(end) === end))
        throw $.$$throw($.ArgumentError$(end));
      if (end < start || end > receiver.length)
        throw $.$$throw($.RangeError$range(end, start, receiver.length));
    }
    if (start === end)
      return [];
    return receiver.slice(start, end);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  get$last: function(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw $.$$throw($.StateError$("No elements"));
  },
  setRange$4: function(receiver, start, $length, from, startFrom) {
    $.checkMutable(receiver, "set range");
    $.IterableMixinWorkaround_setRangeList(receiver, start, $length, from, startFrom);
  },
  sort$1: function(receiver, compare) {
    $.checkMutable(receiver, "sort");
    $.IterableMixinWorkaround_sortList(receiver, compare);
  },
  indexOf$2: function(receiver, element, start) {
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  toString$0: function(receiver) {
    return $.ToString_collectionToString(receiver);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.getRuntimeTypeArgument(receiver, receiver["$asJSArray"], 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  }
};

$$.JSMutableArray = {"": "JSArray;",
  $asList: function() {
    return function () { return [null]; };
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$.JSFixedArray = {"": "JSMutableArray;"};

$$.JSExtendableArray = {"": "JSMutableArray;"};

$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function(_) {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString$0(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function(_) {
    var t1 = this.stack;
    return t1 != null ? t1 : "";
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$.Closure = {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;message",
  toString$0: function(_) {
    return this.message;
  }
};

$$.JSNumber = {"": "Object;",
  compareTo$1: function(receiver, b) {
    var bIsNegative;
    if (!(typeof b === "number"))
      throw $.$$throw($.ArgumentError$(b));
    if (receiver < b)
      return -1;
    else if (receiver > b)
      return 1;
    else if (receiver === b) {
      if (receiver === 0) {
        bIsNegative = this.get$isNegative(b);
        if (this.get$isNegative(receiver) === bIsNegative)
          return 0;
        if (this.get$isNegative(receiver))
          return -1;
        return 1;
      }
      return 0;
    } else if (this.get$isNaN(receiver)) {
      if (this.get$isNaN(b))
        return 0;
      return 1;
    } else
      return -1;
  },
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  remainder$1: function(receiver, b) {
    $.checkNull(b);
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver))
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver))
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  truncate$0: function(receiver) {
    return this.toInt$0(receiver);
  },
  ceil$0: function(receiver) {
    return this.toInt$0(Math.ceil(receiver));
  },
  round$0: function(receiver) {
    return this.toInt$0(this.roundToDouble$0(receiver));
  },
  roundToDouble$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  toDouble$0: function(receiver) {
    return receiver;
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $isnum: true
};

$$.JSInt = {"": "JSNumber;",
  get$isEven: function(receiver) {
    return (receiver & 1) === 0;
  },
  $is$int: true,
  $isnum: true
};

$$.JSDouble = {"": "JSNumber;", $is$double: true, $isnum: true};

$$.JSString = {"": "Object;",
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  $add: function(receiver, other) {
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  startsWith$1: function(receiver, other) {
    var otherLength;
    $.checkString(other);
    otherLength = other.length;
    if (otherLength > receiver.length)
      return false;
    return other == receiver.substring(0, otherLength);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    if (typeof startIndex !== "number")
      return this.substring$2$bailout(1, startIndex, endIndex, receiver);
    if (typeof endIndex !== "number")
      return this.substring$2$bailout(1, startIndex, endIndex, receiver);
    $.checkNum(startIndex);
    $.checkNum(endIndex);
    if (startIndex < 0)
      throw $.$$throw($.RangeError$value(startIndex));
    if (startIndex > endIndex)
      throw $.$$throw($.RangeError$value(startIndex));
    if (endIndex > receiver.length)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$2$bailout: function(state0, startIndex, endIndex, receiver) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$n(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$gt$n(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  trim$0: function(receiver) {
    return receiver.trim();
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  compareTo$1: function(receiver, other) {
    var t1;
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (receiver === other)
      t1 = 0;
    else
      t1 = receiver < other ? -1 : 1;
    return t1;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true
};

$$._convertJsonToDart_anon = {"": "Closure;",
  call$2: function(key, value) {
    return value;
  }
};

$$._convertJsonToDart_walk = {"": "Closure;revive_0",
  call$1: function(e) {
    var list, t1, i, keys, map, key, proto;
    if (e == null || typeof e != "object")
      return e;
    if (Object.getPrototypeOf(e) === Array.prototype) {
      list = e;
      for (t1 = this.revive_0, i = 0; i < list.length; ++i)
        list[i]=t1.call$2(i, this.call$1(list[i]));
      return list;
    }
    keys = Object.keys(e);
    map = $.makeLiteralMap([]);
    for (t1 = this.revive_0, i = 0; i < keys.length; ++i) {
      key = keys[i];
      map.$indexSet(map, key, t1.call$2(key, this.call$1(e[key])));
    }
    proto = e.__proto__;
    if (typeof proto !== "undefined" && proto !== Object.prototype)
      map.$indexSet(map, "__proto__", t1.call$2("__proto__", this.call$1(proto)));
    return map;
  }
};

$$._Random = {"": "Object;",
  nextInt$1: function(max) {
    if (max < 0)
      throw $.$$throw($.ArgumentError$("negative max: " + $.S(max)));
    if (max > 4294967295)
      max = 4294967295;
    return (Math.random() * max) >>> 0;
  },
  nextDouble$0: function() {
    return Math.random();
  }
};

$$.MetaInfo = {"": "Object;_tag<,_tags,_set<"};

$$.JSSyntaxRegExp = {"": "Object;_pattern,_isMultiLine,_isCaseSensitive,_nativeRegExp",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = this._nativeRegExp.exec($.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.get$length$asx($.$index$asx(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(this), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return this._nativeRegExp.test($.checkString(str));
  },
  allMatches$1: function(_, str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function(_) {
    return this._pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern,str,start,end,_groups",
  group$1: function(index) {
    return $.$index$asx(this._groups, index);
  },
  $index: function(_, index) {
    return $.$index$asx(this._groups, index);
  },
  get$groupCount: function() {
    return $.get$length$asx(this._groups) - 1;
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function(_) {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib4$_current",
  get$current: function() {
    return this._liblib4$_current;
  },
  moveNext$0: function() {
    this._liblib4$_current = this._re.firstMatch$1(this._str);
    return this._liblib4$_current != null;
  }
};

$$.StringMatch = {"": "Object;start,str,pattern",
  $index: function(_, g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if ($.$eq(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace<,cause<",
  _writeOn$1: function(buffer) {
    var message, exception, t1;
    buffer.write$1("'");
    message = null;
    try {
      message = $.toString$0(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    buffer.write$1(message);
    buffer.write$1("'\n");
    t1 = this.stackTrace;
    if (t1 != null) {
      buffer.write$1("Stack trace:\n");
      buffer.writeln$1($.toString$0(t1));
    }
  },
  toString$0: function(_) {
    var buffer, cause;
    buffer = $.StringBuffer$("");
    buffer.write$1("AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; cause != null;) {
      buffer.write$1("Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return buffer.toString$0(buffer);
  },
  throwDelayed$0: function() {
    var reportError, exception;
    reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.Timer_run(new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  $isAsyncError: true
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.Primitives_printString("Uncaught Error: " + $.S($.get$error$x(t1)));
    t1 = t1.get$stackTrace();
    if (t1 != null)
      $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
  }
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$0: function() {
    this.reportError_2.call$0();
    throw $.$$throw($.get$error$x(this.this_1));
  }
};

$$._CompleterImpl = {"": "Object;future,_isComplete",
  complete$1: function(_, value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._liblib0$_setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future,_nextListener@",
  _sendValue$1: function(value) {
    this.future._liblib0$_setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state@,_resultOrListeners<",
  get$_isComplete: function() {
    return this._state !== 0;
  },
  get$_hasValue: function() {
    return this._state === 1;
  },
  get$_hasError: function() {
    return (this._state & 2) !== 0;
  },
  get$_hasUnhandledError: function() {
    return (this._state & 4) !== 0;
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (!this.get$_isComplete()) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError()) {
      if (onError != null)
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue())
      return $._FutureWrapper$(this);
    if (!this.get$_isComplete()) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  whenComplete$1: function(action) {
    var whenFuture = $._WhenFuture$(action);
    if (!this.get$_isComplete())
      this._addListener$1(whenFuture);
    else if (this.get$_hasValue())
      $.Timer_run(new $._FutureImpl_whenComplete_anon(whenFuture, this._resultOrListeners));
    else {
      this._state = (this._state & 4294967291) >>> 0;
      $.Timer_run(new $._FutureImpl_whenComplete_anon0(whenFuture, this._resultOrListeners));
    }
    return whenFuture;
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_run(new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._state = (this._state & 4294967291) >>> 0;
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_run(new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _liblib0$_setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_liblib0$_setValue: function() {
    return new $.BoundClosure$1(this, "_liblib0$_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (listeners0 != null) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = (this._state | 4) >>> 0;
    $.Timer_run(new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (!this.get$_isComplete())
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue())
      future._liblib0$_setValue$1(this._resultOrListeners);
    else {
      this._state = (this._state & 4294967291) >>> 0;
      future._setError$1(this._resultOrListeners);
    }
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_liblib0$_setValue(), this.get$_setError());
        return;
      }
    else
      this._liblib0$_setValue$1(result);
  },
  _asListener$0: function() {
    return $._FutureListenerWrapper$(this);
  },
  _FutureImpl$immediateError$2: function(error, stackTrace) {
    this._setError$1(typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace));
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._FutureImpl__FutureImpl$wait_handleError = {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$2($.get$error$x(error), error.get$stackTrace());
    }
  }
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    $.$indexSet$ax(t2, this.pos_1, value);
    t1.remaining_2 = $.$sub$n(t1.remaining_2, 1);
    if ($.$eq(t1.remaining_2, 0) === true) {
      t2 = t1.completer_0;
      t2.complete$1(t2, t1.values_1);
    }
  }
};

$$._FutureImpl_whenComplete_anon = {"": "Closure;whenFuture_0,value_1",
  call$0: function() {
    this.whenFuture_0._sendValue$1(this.value_1);
  }
};

$$._FutureImpl_whenComplete_anon0 = {"": "Closure;whenFuture_2,error_3",
  call$0: function() {
    this.whenFuture_2._sendError$1(this.error_3);
  }
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$0: function() {
    this.thenFuture_0._sendValue$1(this.value_1);
  }
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$0: function() {
    this.errorFuture_1._sendError$1(this.error_0);
  }
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, error, t2;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError()) {
      t1.set$_state($.$and$n(t1.get$_state(), 4294967291));
      error = t1.get$_resultOrListeners();
      t1 = $.getInterceptor$x(error);
      $.Primitives_printString("Uncaught Error: " + $.S(t1.get$error(error)));
      t2 = error.get$stackTrace();
      if (t2 != null)
        $.Primitives_printString("Stack Trace:\n" + $.S(t2) + "\n");
      throw $.$$throw(t1.get$error(error));
    }
  }
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener@",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._liblib0$_setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (this._test != null) {
      matchesTest = null;
      try {
        matchesTest = this._test$1($.get$error$x(error));
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._WhenFuture = {"": "_TransformFuture;_liblib0$_action,_nextListener,_state,_resultOrListeners",
  _liblib0$_action$0: function() {
    return this._liblib0$_action.call$0();
  },
  _sendValue$1: function(value) {
    var result, resultFuture, e, e0, s, t1, exception;
    try {
      result = this._liblib0$_action$0();
      t1 = result;
      if (typeof t1 === "object" && t1 !== null && !!t1.$isFuture) {
        resultFuture = result;
        resultFuture.then$2$onError(new $._WhenFuture__sendValue_anon(this, value), this.get$_setError());
        return;
      }
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._liblib0$_setValue$1(value);
  },
  _sendError$1: function(error) {
    var t1, result, resultFuture, e, e0, s, t2, exception;
    t1 = {};
    t1.error_0 = error;
    try {
      result = this._liblib0$_action$0();
      t2 = result;
      if (typeof t2 === "object" && t2 !== null && !!t2.$isFuture) {
        resultFuture = result;
        resultFuture.then$2$onError(new $._WhenFuture__sendError_anon(t1, this), this.get$_setError());
        return;
      }
    } catch (exception) {
      t2 = $.unwrapException(exception);
      if (typeof t2 === "object" && t2 !== null && !!t2.$isAsyncError) {
        e = t2;
        t1.error_0 = e;
      } else {
        e0 = t2;
        s = $.getTraceFromException(exception);
        t1.error_0 = $.AsyncError$withCause(e0, s, t1.error_0);
      }
    }

    this._setError$1(t1.error_0);
  },
  $as_FutureImpl: null,
  $asFuture: null
};

$$._WhenFuture__sendValue_anon = {"": "Closure;this_0,value_1",
  call$1: function(_) {
    this.this_0._liblib0$_setValue$1(this.value_1);
  }
};

$$._WhenFuture__sendError_anon = {"": "Closure;box_0,this_1",
  call$1: function(_) {
    this.this_1._setError$1(this.box_0.error_0);
  }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  whenComplete$1: function(action) {
    return this._future.whenComplete$1(action);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  get$isBroadcast: function() {
    return false;
  },
  asBroadcastStream$0: function() {
    if (this.get$isBroadcast() === true)
      return this;
    return $._SingleStreamMultiplexer$(this, $.getRuntimeTypeArgument(this, this["$asStream"], 0));
  },
  get$length: function(_) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$add$ns(t1.count_0, 1);
  }
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._liblib0$_setValue$1(this.box_0.count_0);
  }
};

$$.StreamSubscription = {"": "Object;"};

$$.StreamSink = {"": "EventSink;"};

$$.EventSink = {"": "Object;"};

$$.StreamController = {"": "StreamSink;stream>",
  add$1: function(_, value) {
    return this.stream._liblib0$_add$1(value);
  },
  $asStreamSink: null
};

$$._SingleControllerStream = {"": "_SingleStreamImpl;_subscriptionHandler,_pauseHandler,_subscriber,_state,_pendingEvents",
  _subscriptionHandler$0: function() {
    return this._subscriptionHandler.call$0();
  },
  _pauseHandler$0: function() {
    return this._pauseHandler.call$0();
  },
  _onSubscriptionStateChange$0: function() {
    var e, s, exception, t1;
    if (this._subscriptionHandler != null)
      try {
        this._subscriptionHandler$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e, s).throwDelayed$0();
      }

  },
  _onPauseStateChange$0: function() {
    var e, s, exception, t1;
    if (this._pauseHandler != null)
      try {
        this._pauseHandler$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e, s).throwDelayed$0();
      }

  },
  $as_SingleStreamImpl: null
};

$$._StreamImpl = {"": "Stream;_state@",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    var subscription;
    if (this.get$_isComplete())
      return $._DoneSubscription$(onDone);
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    subscription = this._createSubscription$4(onData, onError, onDone, true === unsubscribeOnError);
    this._addListener$1(subscription);
    return subscription;
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  _liblib0$_add$1: function(value) {
    if (this.get$_liblib0$_isClosed())
      throw $.$$throw($.StateError$("Sending on closed stream"));
    if (!this.get$_mayFireState()) {
      this._addPendingEvent$1($._DelayedData$(value));
      return;
    }
    if (this.get$_hasPendingEvent())
      this._addPendingEvent$1($._DelayedData$(value));
    else
      this._sendData$1(value);
    this._handlePendingEvents$0();
  },
  get$_liblib0$_add: function() {
    return new $.BoundClosure$1(this, "_liblib0$_add$1");
  },
  _addError$1: function(error) {
    if (this.get$_liblib0$_isClosed())
      throw $.$$throw($.StateError$("Sending on closed stream"));
    if (!this.get$_mayFireState()) {
      this._addPendingEvent$1($._DelayedError$(error));
      return;
    }
    if (this.get$_hasPendingEvent())
      this._addPendingEvent$1($._DelayedError$(error));
    else
      this._sendError$1(error);
    this._handlePendingEvents$0();
  },
  get$_addError: function() {
    return new $.BoundClosure$1(this, "_addError$1");
  },
  _close$0: function() {
    if (this.get$_liblib0$_isClosed())
      return;
    this._state = $.$or$n(this._state, 1);
    if (!this.get$_mayFireState()) {
      this._addPendingEvent$1($.CONSTANT15);
      return;
    }
    if (this.get$_hasPendingEvent()) {
      this._addPendingEvent$1($._DelayedDone$());
      this._handlePendingEvents$0();
    } else
      this._sendDone$0();
  },
  get$_close: function() {
    return new $.BoundClosure$0(this, "_close$0");
  },
  get$_liblib0$_isClosed: function() {
    return $.$and$n(this._state, 1) !== 0;
  },
  get$_isComplete: function() {
    return $.$and$n(this._state, 2) !== 0;
  },
  get$_isPaused: function() {
    var t1 = this._state;
    if (typeof t1 !== "number")
      return this.get$_isPaused$bailout(1, t1);
    return t1 >= 64;
  },
  get$_isPaused$bailout: function(state0, t1) {
    return $.$ge$n(t1, 64);
  },
  get$_isInputPaused: function() {
    var t1 = this._state;
    if (typeof t1 !== "number")
      return this.get$_isInputPaused$bailout(1, t1);
    return t1 >= 32;
  },
  get$_isInputPaused$bailout: function(state0, t1) {
    return $.$ge$n(t1, 32);
  },
  get$_hasPendingResume: function() {
    return $.$and$n(this._state, 32) !== 0;
  },
  get$_isInactive: function() {
    return $.$and$n(this._state, 24) === 0;
  },
  get$_isInCallback: function() {
    return $.$and$n(this._state, 16) !== 0;
  },
  get$_isFiring: function() {
    return $.$and$n(this._state, 8) !== 0;
  },
  get$_hasPendingEvent: function() {
    var t1 = this._pendingEvents;
    return t1 != null && t1.get$isEmpty(t1) !== true;
  },
  get$_currentEventIdBit: function() {
    var t1 = this._state;
    if (typeof t1 !== "number")
      return this.get$_currentEventIdBit$bailout(1, t1);
    return $.JSInt_methods.$shr(t1 & 4, 2);
  },
  get$_currentEventIdBit$bailout: function(state0, t1) {
    return $.JSInt_methods.$shr($.$and$n(t1, 4), 2);
  },
  get$_mayFireState: function() {
    return $.$and$n(this._state, 4294967256) === 0;
  },
  _incrementPauseCount$1: function(listener) {
    listener._incrementPauseCount$0();
    this._state = $.$and$n(this._state, 4294967263);
    this._updatePauseCount$1(1);
  },
  _decrementPauseCount$1: function(listener) {
    listener._decrementPauseCount$0();
    this._updatePauseCount$1(-1);
  },
  _updatePauseCount$1: function(by) {
    var oldState = this._state;
    if (by >= 0)
      this._state = $.$add$ns(oldState, by << 6 >>> 0);
    else
      this._state = $.$sub$n(oldState, -by << 6 >>> 0);
  },
  _startFiring$0: function() {
    this._state = $.$xor$n(this._state, 12);
  },
  _endFiring$1: function(wasInputPaused) {
    this._state = $.$xor$n(this._state, 8);
    this._checkCallbacks$2(true, wasInputPaused);
  },
  _pause$2: function(listener, resumeSignal) {
    var wasInputPaused, wasPaused;
    if (!listener.get$_isSubscribed())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    wasInputPaused = this.get$_isInputPaused();
    wasPaused = this.get$_isPaused();
    this._incrementPauseCount$1(listener);
    if (resumeSignal != null)
      resumeSignal.whenComplete$1(new $._StreamImpl__pause_anon(this, listener));
    if (wasPaused !== true && this.get$_hasPendingEvent() && this._pendingEvents.get$isScheduled())
      this._pendingEvents.cancelSchedule$0();
    if (this.get$_isInactive() && wasInputPaused !== true) {
      this._checkCallbacks$2(true, false);
      if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
        this._pendingEvents.schedule$1(this);
    }
  },
  _resume$2: function(listener, fromEvent) {
    if (!listener.get$isPaused())
      return;
    this._decrementPauseCount$1(listener);
    if (this.get$_isPaused() !== true)
      if (this.get$_hasPendingEvent()) {
        this._state = $.$or$n(this._state, 32);
        if (this.get$_isInactive())
          if (fromEvent)
            this._handlePendingEvents$0();
          else
            this._pendingEvents.schedule$1(this);
      } else if (this.get$_isInactive()) {
        this._checkCallbacks$2(true, true);
        if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
          if (fromEvent)
            this._handlePendingEvents$0();
          else
            this._pendingEvents.schedule$1(this);
      }
  },
  _checkCallbacks$2: function(hadSubscribers, wasPaused) {
    var hasSubscribers, isPaused;
    if (this.get$_isInCallback())
      return;
    if (this.get$_hasPendingResume() && !this.get$_hasPendingEvent())
      this._state = $.$xor$n(this._state, 32);
    this._state = $.$or$n(this._state, 16);
    for (; true; wasPaused = isPaused, hadSubscribers = hasSubscribers) {
      hasSubscribers = this.get$_hasSubscribers();
      isPaused = this.get$_isInputPaused();
      if (!$.$eq(hadSubscribers, hasSubscribers))
        this._onSubscriptionStateChange$0();
      else if ($.$eq(isPaused, wasPaused) !== true)
        this._onPauseStateChange$0();
      else {
        this._state = $.$xor$n(this._state, 16);
        return;
      }
    }
  },
  _onPauseStateChange$0: function() {
  },
  _onSubscriptionStateChange$0: function() {
  },
  _addPendingEvent$1: function($event) {
    var events;
    if (this._pendingEvents == null)
      this._pendingEvents = $._StreamImplEvents$();
    events = this._pendingEvents;
    events.add$1(events, $event);
    if (this.get$_isPaused() === true || this.get$_isFiring())
      return;
    if (this.get$_isInCallback()) {
      this._pendingEvents.schedule$1(this);
      return;
    }
  },
  _handlePendingEvents$0: function() {
    if (!this.get$_hasPendingEvent())
      return;
    var events = this._pendingEvents;
    do {
      if (this.get$_isPaused() === true)
        return;
      if (events.get$isScheduled())
        events.cancelSchedule$0();
      events.handleNext$1(this);
    } while (events.get$isEmpty(events) !== true);
  },
  _sendData$1: function(value) {
    if (this.get$_hasSubscribers() !== true)
      return;
    this._forEachSubscriber$1(new $._StreamImpl__sendData_anon(value));
  },
  _sendError$1: function(error) {
    if (this.get$_hasSubscribers() !== true)
      return;
    this._forEachSubscriber$1(new $._StreamImpl__sendError_anon(error));
  },
  _sendDone$0: function() {
    this._state = $.$or$n(this._state, 2);
    if (this.get$_hasSubscribers() !== true)
      return;
    this._forEachSubscriber$1(new $._StreamImpl__sendDone_anon(this));
  },
  $asStream: null
};

$$._StreamImpl__pause_anon = {"": "Closure;this_0,listener_1",
  call$0: function() {
    this.this_0._resume$2(this.listener_1, true);
  }
};

$$._StreamImpl__sendData_anon = {"": "Closure;value_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendData$1(this.value_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e0, s).throwDelayed$0();
      }
    }

  }
};

$$._StreamImpl__sendError_anon = {"": "Closure;error_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendError$1(this.error_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$withCause(e0, s, this.error_0).throwDelayed$0();
      }
    }

  }
};

$$._StreamImpl__sendDone_anon = {"": "Closure;this_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    this.this_0._cancel$1(subscriber);
    try {
      subscriber._sendDone$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e0, s).throwDelayed$0();
      }
    }

  }
};

$$._SingleStreamImpl = {"": "_StreamImpl;",
  get$_hasSubscribers: function() {
    return this._subscriber != null;
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._StreamSubscriptionImpl$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _addListener$1: function(subscription) {
    if (this.get$_hasSubscribers() === true)
      throw $.$$throw($.StateError$("Stream already has subscriber."));
    this._updatePauseCount$1(-1);
    this._subscriber = subscription;
    subscription._setSubscribed$1(0);
    if (this.get$_isInactive()) {
      this._checkCallbacks$2(false, true);
      if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
        this._pendingEvents.schedule$1(this);
    }
  },
  _cancel$1: function(subscriber) {
    var t1, resumeCount;
    t1 = this._subscriber;
    if (t1 == null ? subscriber != null : t1 !== subscriber)
      return;
    this._subscriber = null;
    resumeCount = subscriber._setUnsubscribed$0();
    t1 = -resumeCount;
    this._updatePauseCount$1(this.get$_isComplete() ? t1 : t1 + 1);
    if (this.get$_isInactive()) {
      this._checkCallbacks$2(true, resumeCount > 0);
      if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
        this._pendingEvents.schedule$1(this);
    }
  },
  _forEachSubscriber$1: function(action) {
    var wasInputPaused, subscription;
    wasInputPaused = this.get$_isInputPaused();
    subscription = this._subscriber;
    this._startFiring$0();
    action.call$1(subscription);
    this._endFiring$1(wasInputPaused);
  },
  _SingleStreamImpl$0: function(T) {
    this._updatePauseCount$1(1);
  },
  $as_StreamImpl: null
};

$$._MultiStreamImpl = {"": "_StreamImpl;_nextLink@,_previousLink@",
  get$isBroadcast: function() {
    return true;
  },
  asBroadcastStream$0: function() {
    return this;
  },
  get$_hasSubscribers: function() {
    return !$._InternalLinkList_isEmpty(this);
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._StreamSubscriptionImpl$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _forEachSubscriber$1: function(action) {
    var wasInputPaused, cursor, cursor0;
    if (!this.get$_hasSubscribers())
      return;
    wasInputPaused = this.get$_isInputPaused();
    this._startFiring$0();
    cursor = this._nextLink;
    for (; cursor !== this; cursor = cursor0) {
      if (cursor._needsEvent$1(this.get$_currentEventIdBit())) {
        action.call$1(cursor);
        cursor._toggleEventReceived$0();
      }
      cursor0 = cursor.get$_nextLink();
      if (cursor.get$_isPendingUnsubscribe())
        this._removeListener$1(cursor);
    }
    this._endFiring$1(wasInputPaused);
  },
  _addListener$1: function(listener) {
    var hadSubscribers;
    listener._setSubscribed$1(this.get$_currentEventIdBit());
    hadSubscribers = this.get$_hasSubscribers();
    $._InternalLinkList_add(this, listener);
    if (!hadSubscribers && this.get$_isInactive()) {
      this._checkCallbacks$2(false, false);
      if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
        this._pendingEvents.schedule$1(this);
    }
  },
  _cancel$1: function(listener) {
    var t1, wasInputPaused;
    t1 = listener.get$_nextLink();
    if (listener == null ? t1 == null : listener === t1)
      return;
    if (this.get$_isFiring())
      if (listener._needsEvent$1(this.get$_currentEventIdBit()))
        listener._setPendingUnsubscribe$1(this.get$_currentEventIdBit());
      else
        this._removeListener$1(listener);
    else {
      wasInputPaused = this.get$_isInputPaused();
      this._removeListener$1(listener);
      if (this.get$_isInactive()) {
        this._checkCallbacks$2(true, wasInputPaused);
        if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
          this._pendingEvents.schedule$1(this);
      }
    }
  },
  _removeListener$1: function(listener) {
    var pauseCount, t1;
    pauseCount = listener._setUnsubscribed$0();
    $._InternalLink_unlink(listener);
    if (pauseCount > 0) {
      this._updatePauseCount$1(-pauseCount);
      if (this.get$_isPaused() !== true && this.get$_hasPendingEvent()) {
        t1 = this._state;
        if (typeof t1 !== "number")
          return this._removeListener$1$bailout(1, t1);
        this._state = (t1 | 32) >>> 0;
      }
    }
  },
  _removeListener$1$bailout: function(state0, t1) {
    switch (state0) {
      case 0:
        pauseCount = listener._setUnsubscribed$0();
        $._InternalLink_unlink(listener);
      case 1:
        var pauseCount;
        if (state0 === 1 || state0 === 0 && pauseCount > 0)
          switch (state0) {
            case 0:
              this._updatePauseCount$1(-pauseCount);
            case 1:
              if (state0 === 1 || state0 === 0 && this.get$_isPaused() !== true && this.get$_hasPendingEvent())
                switch (state0) {
                  case 0:
                    t1 = this._state;
                  case 1:
                    state0 = 0;
                    this._state = $.$or$n(t1, 32);
                }
          }
    }
  },
  _MultiStreamImpl$0: function(T) {
    this._previousLink = this;
    this._nextLink = this;
  },
  $as_StreamImpl: null
};

$$._StreamSubscriptionImpl = {"": "_StreamListener;_unsubscribeOnError,_liblib0$_onData,_onError,_onDone,_source,_state,_nextLink,_previousLink",
  _liblib0$_onData$1: function(arg0) {
    return this._liblib0$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  onError$1: function(_, handleError) {
    this._onError = handleError == null ? $._nullErrorHandler : handleError;
  },
  get$onError: function(receiver) {
    return new $.BoundClosure$i1(this, "onError$1", receiver);
  },
  _sendData$1: function(data) {
    this._liblib0$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
    if (this._unsubscribeOnError)
      this._source._cancel$1(this);
  },
  _sendDone$0: function() {
    this._onDone$0();
  },
  cancel$0: function() {
    this._source._cancel$1(this);
  },
  pause$1: function(_, resumeSignal) {
    this._source._pause$2(this, resumeSignal);
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  }
};

$$._DelayedEvent = {"": "Object;next@"};

$$._DelayedData = {"": "_DelayedEvent;value,next",
  perform$1: function(stream) {
    stream._sendData$1(this.value);
  }
};

$$._DelayedError = {"": "_DelayedEvent;error>,next",
  perform$1: function(stream) {
    stream._sendError$1(this.error);
  }
};

$$._DelayedDone = {"": "Object;",
  perform$1: function(stream) {
    stream._sendDone$0();
  },
  get$next: function() {
    return;
  },
  set$next: function(_) {
    throw $.$$throw($.StateError$("No events after a done."));
  }
};

$$._InternalLink = {"": "Object;_nextLink@,_previousLink@",
  _InternalLink$0: function() {
    this._nextLink = this;
    this._previousLink = this;
  }
};

$$._StreamListener = {"": "_InternalLink;_state@",
  get$isPaused: function() {
    return this._state >= 8;
  },
  get$_isPendingUnsubscribe: function() {
    return (this._state & 2) !== 0;
  },
  get$_isSubscribed: function() {
    return (this._state & 1) !== 0;
  },
  _needsEvent$1: function(currentEventIdBit) {
    return $.JSInt_methods.$shr(this._state & 4, 2) !== currentEventIdBit;
  },
  _toggleEventReceived$0: function() {
    this._state = (this._state ^ 4) >>> 0;
  },
  _setSubscribed$1: function(eventIdBit) {
    this._state = (1 | eventIdBit << 2) >>> 0;
  },
  _setPendingUnsubscribe$1: function(currentEventIdBit) {
    this._state = (this._state | 6) >>> 0;
    this._state = (this._state ^ (1 ^ currentEventIdBit) << 2) >>> 0;
  },
  _setUnsubscribed$0: function() {
    var timesPaused = $.JSNumber_methods.$shr(this._state, 3);
    this._state = 0;
    return timesPaused;
  },
  _incrementPauseCount$0: function() {
    this._state = this._state + 8;
  },
  _decrementPauseCount$0: function() {
    this._state = this._state - 8;
  }
};

$$._PendingEvents = {"": "Object;scheduleTimer?",
  get$isScheduled: function() {
    return this.scheduleTimer != null;
  },
  schedule$1: function(stream) {
    if (this.get$isScheduled())
      return;
    this.scheduleTimer = $.Timer_Timer($.CONSTANT3, new $._PendingEvents_schedule_anon(this, stream));
  },
  cancelSchedule$0: function() {
    this.scheduleTimer.cancel$0();
    this.scheduleTimer = null;
  }
};

$$._PendingEvents_schedule_anon = {"": "Closure;this_0,stream_1",
  call$0: function() {
    this.this_0.set$scheduleTimer(null);
    this.stream_1._handlePendingEvents$0();
  }
};

$$._StreamImplEvents = {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,scheduleTimer",
  get$isEmpty: function(_) {
    return this.lastPendingEvent == null;
  },
  get$isScheduled: function() {
    return this.scheduleTimer != null;
  },
  add$1: function(_, $event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = $event;
      this.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      this.lastPendingEvent = $event;
    }
  },
  handleNext$1: function(stream) {
    var $event = this.firstPendingEvent;
    this.firstPendingEvent = $event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    $event.perform$1(stream);
  }
};

$$._DoneSubscription = {"": "Object;_handler<,_timer,_liblib0$_pauseCount",
  _handler$0: function() {
    return this._handler.call$0();
  },
  _delayDone$0: function() {
    this._timer = $.Timer_Timer($.CONSTANT3, new $._DoneSubscription__delayDone_anon(this));
  },
  get$_isComplete: function() {
    return this._timer == null && this._liblib0$_pauseCount === 0;
  },
  onError$1: function(_, handleError) {
  },
  get$onError: function(receiver) {
    return new $.BoundClosure$i1(this, "onError$1", receiver);
  },
  pause$1: function(_, signal) {
    var t1;
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    t1 = this._timer;
    if (t1 != null) {
      t1.cancel$0();
      this._timer = null;
    }
    this._liblib0$_pauseCount = this._liblib0$_pauseCount + 1;
    if (signal != null)
      signal.whenComplete$1(this.get$resume());
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._liblib0$_pauseCount;
    if (t1 === 0)
      return;
    this._liblib0$_pauseCount = t1 - 1;
    if (this._liblib0$_pauseCount === 0)
      this._delayDone$0();
  },
  get$resume: function() {
    return new $.BoundClosure$0(this, "resume$0");
  },
  cancel$0: function() {
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._timer;
    if (t1 != null) {
      t1.cancel$0();
      this._timer = null;
    }
    this._liblib0$_pauseCount = 0;
  },
  _DoneSubscription$1: function(_handler) {
    this._delayDone$0();
  }
};

$$._DoneSubscription__delayDone_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    if (t1.get$_handler() != null)
      t1._handler$0();
  }
};

$$._SingleStreamMultiplexer = {"": "_MultiStreamImpl;_source,_subscription,_nextLink,_previousLink,_state,_pendingEvents",
  _onSubscriptionStateChange$0: function() {
    var t1, t2;
    if (this.get$_hasSubscribers()) {
      t1 = this.get$_liblib0$_add();
      t2 = this.get$_addError();
      this._subscription = this._source.listen$3$onDone$onError(t1, this.get$_close(), t2);
    } else {
      t1 = this._subscription;
      if (t1 == null)
        return;
      t1.cancel$0();
      this._subscription = null;
    }
  },
  $as_MultiStreamImpl: null
};

$$.Timer_run_anon = {"": "Closure;",
  call$0: function() {
    var runCallbacks, i, callback, newCallbacks, exception;
    runCallbacks = $.get$Timer__runCallbacks();
    $.Timer__runCallbacks = [];
    for (i = 0; $.$lt$n(i, $.get$length$asx(runCallbacks)) === true; i = $.$add$ns(i, 1)) {
      callback = $.$index$asx(runCallbacks, i);
      try {
        callback.call$0();
      } catch (exception) {
        $.unwrapException(exception);
        newCallbacks = $.get$Timer__runCallbacks();
        $.Timer__runCallbacks = [];
        i = $.$add$ns(i, 1);
        $.addAll$1$ax($.get$Timer__runCallbacks(), $.sublist$1$ax(runCallbacks, i));
        $.addAll$1$ax($.get$Timer__runCallbacks(), newCallbacks);
        throw exception;
      }

    }
  }
};

$$._HashMapTable = {"": "_HashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 2;
  },
  _value$1: function(offset) {
    var t1, t3;
    if (typeof offset !== "number")
      return this._value$1$bailout(1, offset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._value$1$bailout(2, offset, t1);
    t3 = offset + 1;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _value$1$bailout: function(state0, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        return $.$index$asx(t1, $.$add$ns(offset, 1));
    }
  },
  _setValue$2: function(offset, value) {
    $.$indexSet$ax(this._table, $.$add$ns(offset, 1), value);
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
    var t1, t3, t4;
    if (typeof fromTable !== "object" || fromTable === null || (fromTable.constructor !== Array || !!fromTable.immutable$list) && !fromTable.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, fromTable, fromOffset, toOffset, t1);
    t3 = toOffset + 1;
    t4 = fromOffset + 1;
    if (t4 < 0 || t4 >= fromTable.length)
      throw $.ioore(t4);
    t4 = fromTable[t4];
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    t1[t3] = t4;
  },
  _copyEntry$3$bailout1: function(state0, fromTable, fromOffset, toOffset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        $.$indexSet$ax(t1, $.$add$ns(toOffset, 1), $.$index$asx(fromTable, fromOffset + 1));
    }
  }
};

$$.HashMap = {"": "Object;_hashTable<",
  containsKey$1: function(key) {
    var t1 = this._hashTable._get$1(key);
    if (typeof t1 !== "number")
      return this.containsKey$1$bailout(1, t1);
    return t1 >= 0;
  },
  containsKey$1$bailout: function(state0, t1) {
    return $.$ge$n(t1, 0);
  },
  addAll$1: function(_, other) {
    $.forEach$1$ax(other, new $.HashMap_addAll_anon(this));
  },
  $index: function(_, key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if (typeof offset !== "number")
      return this.$$index$bailout(1, t1, offset);
    if (offset >= 0)
      return t1._value$1(offset);
    return;
  },
  $$index$bailout: function(state0, t1, offset) {
    if ($.$ge$n(offset, 0))
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(_, key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  remove$1: function(_, key) {
    var t1, offset, oldValue;
    t1 = this._hashTable;
    offset = t1._remove$1(key);
    if (typeof offset !== "number")
      return this.remove$1$bailout(1, offset, t1);
    if (offset < 0)
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  remove$1$bailout: function(state0, offset, t1) {
    var oldValue;
    if ($.$lt$n(offset, 0))
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  forEach$1: function(_, action) {
    var t1, modificationCount, table, entrySize, t2, offset, entry;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    table = t1._table;
    if (typeof table !== "object" || table === null || (table.constructor !== Array || !!table.immutable$list) && !table.$isJavaScriptIndexingBehavior())
      return this.forEach$1$bailout(1, action, table, t1, modificationCount);
    entrySize = t1.get$_entrySize();
    for (t2 = table.length, offset = 0; offset < t2; offset += entrySize) {
      if (offset < 0)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
    }
  },
  forEach$1$bailout: function(state0, action, table, t1, modificationCount) {
    var entrySize, t2, offset, entry;
    entrySize = t1.get$_entrySize();
    for (t2 = $.getInterceptor$asx(table), offset = 0; offset < t2.get$length(table); offset += entrySize) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
    }
  },
  get$keys: function() {
    return $._HashTableKeyIterable$(this._hashTable, $.getRuntimeTypeArgument(this, this["$asHashMap"], 0));
  },
  get$values: function(_) {
    return $._HashTableValueIterable$(this._hashTable, 1, $.getRuntimeTypeArgument(this, this["$asHashMap"], 1));
  },
  get$length: function(_) {
    return this._hashTable.get$_elementCount();
  },
  get$isEmpty: function(_) {
    return this._hashTable.get$_elementCount() === 0;
  },
  toString$0: function(_) {
    return $.ToString_mapToString(this);
  },
  HashMap$0: function(K, V) {
    this._hashTable._container = this;
  },
  $isMap: true
};

$$.HashMap_addAll_anon = {"": "Closure;this_0",
  call$2: function(key, value) {
    var t1, offset;
    t1 = this.this_0;
    offset = t1.get$_hashTable()._put$1(key);
    t1.get$_hashTable()._setValue$2(offset, value);
    t1.get$_hashTable()._checkCapacity$0();
  }
};

$$._DeadEntry = {"": "Object;"};

$$._NullKey = {"": "Object;",
  get$hashCode: function(_) {
    return $.JSNull_methods.get$hashCode(null);
  }
};

$$._HashTable = {"": "Object;",
  _key$1: function(offset) {
    var t1, key;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._key$1$bailout(1, offset, t1);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    key = t1[offset];
    if (key !== $.CONSTANT1)
      return key;
    return;
  },
  _key$1$bailout: function(state0, offset, t1) {
    var key = $.$index$asx(t1, offset);
    if (key !== $.CONSTANT1)
      return key;
    return;
  },
  get$_elementCount: function() {
    return this._entryCount - this._deletedCount;
  },
  get$_entrySize: function() {
    return 1;
  },
  _checkModification$1: function(expectedModificationCount) {
    if (this._modificationCount !== expectedModificationCount)
      throw $.$$throw($.ConcurrentModificationError$(this._container));
  },
  _recordModification$0: function() {
    this._modificationCount = this._modificationCount + 1 & 1073741823;
  },
  _createTable$1: function(capacity) {
    return $.List_List($.$mul$n(capacity, this.get$_entrySize()), null);
  },
  _nextProbe$3: function(previousIndex, probeCount, capacity) {
    if (typeof capacity !== "number")
      return this._nextProbe$3$bailout(1, previousIndex, probeCount, capacity);
    return (previousIndex + probeCount & capacity - 1) >>> 0;
  },
  _nextProbe$3$bailout: function(state0, previousIndex, probeCount, capacity) {
    var t1 = $.$sub$n(capacity, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return (previousIndex + probeCount & t1) >>> 0;
  },
  _isFree$1: function(marker) {
    return marker == null || marker === $.CONSTANT0;
  },
  _probeForAdd$2: function(hashCode, object) {
    var entrySize, index, t1, firstTombstone, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = $.$and$n(hashCode, $.$sub$n(this._capacity, 1));
    for (t1 = null == object, firstTombstone = -1, probeCount = 0; true;) {
      offset = index * entrySize;
      entry = $.$index$asx(this._table, offset);
      if (entry === $.CONSTANT0) {
        if (firstTombstone < 0)
          firstTombstone = offset;
      } else if (entry == null) {
        if (firstTombstone < 0)
          return offset;
        return firstTombstone;
      } else if (($.CONSTANT1 === entry ? t1 : $.$eq(entry, object)) === true)
        return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _probeForLookup$2: function(hashCode, object) {
    var entrySize, index, t1, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = $.$and$n(hashCode, $.$sub$n(this._capacity, 1));
    for (t1 = null == object, probeCount = 0; true;) {
      offset = index * entrySize;
      entry = $.$index$asx(this._table, offset);
      if (entry == null)
        return -1;
      else if ($.CONSTANT0 !== entry)
        if (($.CONSTANT1 === entry ? t1 : $.$eq(entry, object)) === true)
          return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _checkCapacity$0: function() {
    var t1, t3, freeCount;
    t1 = this._capacity;
    if (typeof t1 !== "number")
      return this._checkCapacity$0$bailout(1, t1);
    t3 = this._entryCount;
    freeCount = t1 - t3;
    if (freeCount * 4 < t1 || freeCount < this._deletedCount)
      this._grow$1(t3 - this._deletedCount);
  },
  _checkCapacity$0$bailout: function(state0, t1, t2, freeCount, t3) {
    switch (state0) {
      case 0:
        t1 = this._capacity;
      case 1:
        state0 = 0;
        freeCount = $.$sub$n(t1, this._entryCount);
        t1 = $.getInterceptor$n(freeCount);
        t2 = t1.$mul(freeCount, 4);
        t3 = this._capacity;
      case 2:
        state0 = 0;
        if ($.$lt$n(t2, t3) === true || t1.$lt(freeCount, this._deletedCount) === true)
          this._grow$1(this._entryCount - this._deletedCount);
    }
  },
  _grow$1: function(contentCount) {
    var capacity, minCapacity, oldTable;
    capacity = this._capacity;
    if (typeof capacity !== "number")
      return this._grow$1$bailout(1, contentCount, capacity);
    minCapacity = contentCount * 2;
    for (; capacity < minCapacity;)
      capacity *= 2;
    oldTable = this._table;
    this._table = this._createTable$1(capacity);
    this._capacity = capacity;
    this._entryCount = 0;
    this._deletedCount = 0;
    this._addAllEntries$1(oldTable);
    this._recordModification$0();
  },
  _grow$1$bailout: function(state0, contentCount, capacity) {
    var minCapacity, t1, oldTable;
    minCapacity = contentCount * 2;
    for (; t1 = $.getInterceptor$n(capacity), t1.$lt(capacity, minCapacity) === true;)
      capacity = t1.$mul(capacity, 2);
    oldTable = this._table;
    this._table = this._createTable$1(capacity);
    this._capacity = capacity;
    this._entryCount = 0;
    this._deletedCount = 0;
    this._addAllEntries$1(oldTable);
    this._recordModification$0();
  },
  _addAllEntries$1: function(oldTable) {
    var t1, i, object;
    if (typeof oldTable !== "object" || oldTable === null || (oldTable.constructor !== Array || !!oldTable.immutable$list) && !oldTable.$isJavaScriptIndexingBehavior())
      return this._addAllEntries$1$bailout(1, oldTable);
    for (t1 = oldTable.length, i = 0; i < t1; i += this.get$_entrySize()) {
      if (i < 0)
        throw $.ioore(i);
      object = oldTable[i];
      if (!(object == null || object === $.CONSTANT0))
        this._copyEntry$3(oldTable, i, this._put$1(object));
    }
  },
  _addAllEntries$1$bailout: function(state0, oldTable) {
    var t1, i, object;
    for (t1 = $.getInterceptor$asx(oldTable), i = 0; i < t1.get$length(oldTable); i += this.get$_entrySize()) {
      object = t1.$index(oldTable, i);
      if (!(object == null || object === $.CONSTANT0))
        this._copyEntry$3(oldTable, i, this._put$1(object));
    }
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
  },
  _get$1: function(key) {
    return this._probeForLookup$2($.get$hashCode$(key), key);
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2($.get$hashCode$(key), key);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout(1, key, t1, offset);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry == null)
      this._entryCount = this._entryCount + 1;
    else if (oldEntry === $.CONSTANT0)
      this._deletedCount = this._deletedCount - 1;
    else
      return offset;
    if (key == null)
      key = $.CONSTANT1;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout(2, key, t1, offset);
    if (offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._recordModification$0();
    return offset;
  },
  _put$1$bailout: function(state0, key, t1, offset) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2($.get$hashCode$(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$index$asx(t1, offset);
        if (oldEntry == null)
          this._entryCount = this._entryCount + 1;
        else if (oldEntry === $.CONSTANT0)
          this._deletedCount = this._deletedCount - 1;
        else
          return offset;
        if (key == null)
          key = $.CONSTANT1;
        t1 = this._table;
      case 2:
        var oldEntry;
        state0 = 0;
        $.$indexSet$ax(t1, offset, key);
        this._recordModification$0();
        return offset;
    }
  },
  _remove$1: function(key) {
    var offset = this._probeForLookup$2($.get$hashCode$(key), key);
    if (typeof offset !== "number")
      return this._remove$1$bailout(1, offset);
    if (offset >= 0)
      this._deleteEntry$1(offset);
    return offset;
  },
  _remove$1$bailout: function(state0, offset) {
    if ($.$ge$n(offset, 0))
      this._deleteEntry$1(offset);
    return offset;
  },
  _deleteEntry$1: function(offset) {
    var key, t1;
    key = $.CONSTANT0;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._deleteEntry$1$bailout(1, offset, t1, key);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._deletedCount = this._deletedCount + 1;
    this._recordModification$0();
  },
  _deleteEntry$1$bailout: function(state0, offset, t1, key) {
    $.$indexSet$ax(t1, offset, key);
    this._deletedCount = this._deletedCount + 1;
    this._recordModification$0();
  },
  _HashTable$1: function(initialCapacity) {
    this._table = this._createTable$1(initialCapacity);
  }
};

$$._HashTableIterable = {"": "Iterable;_hashTable<",
  get$length: function(_) {
    return this._hashTable.get$_elementCount();
  },
  forEach$1: function(_, action) {
    var t1, entrySize, table, modificationCount, t2, offset, entry;
    t1 = this._hashTable;
    entrySize = t1.get$_entrySize();
    table = t1._table;
    if (typeof table !== "object" || table === null || (table.constructor !== Array || !!table.immutable$list) && !table.$isJavaScriptIndexingBehavior())
      return this.forEach$1$bailout1(1, action, entrySize, t1, table);
    modificationCount = t1._modificationCount;
    for (t2 = table.length, offset = 0; offset < t2; offset += entrySize) {
      if (offset < 0)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout1: function(state0, action, entrySize, t1, table) {
    var modificationCount, t2, offset, entry;
    modificationCount = t1._modificationCount;
    for (t2 = $.getInterceptor$asx(table), offset = 0; offset < t2.get$length(table); offset += entrySize) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
    }
  },
  $asIterable: function() {
    return null;
  }
};

$$._HashTableIterator = {"": "Object;_hashTable<",
  moveNext$0: function() {
    var t1, table, entrySize, t2, t3, entry;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    table = t1._table;
    if (typeof table !== "object" || table === null || (table.constructor !== Array || !!table.immutable$list) && !table.$isJavaScriptIndexingBehavior())
      return this.moveNext$0$bailout(1, table, t1);
    entrySize = t1.get$_entrySize();
    for (t2 = table.length; t3 = this._offset, t3 < t2;) {
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      entry = table[t3];
      this._offset = t3 + entrySize;
      if (!t1._isFree$1(entry)) {
        this._liblib1$_current = this._valueAt$2(t3, entry);
        return true;
      }
    }
    this._liblib1$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, table, t1) {
    var entrySize, t2, currentOffset, entry;
    entrySize = t1.get$_entrySize();
    for (t2 = $.getInterceptor$asx(table); this._offset < t2.get$length(table);) {
      currentOffset = this._offset;
      entry = t2.$index(table, currentOffset);
      this._offset = currentOffset + entrySize;
      if (!t1._isFree$1(entry)) {
        this._liblib1$_current = this._valueAt$2(currentOffset, entry);
        return true;
      }
    }
    this._liblib1$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib1$_current;
  }
};

$$._HashTableKeyIterable = {"": "_HashTableIterable;_hashTable",
  get$iterator: function(_) {
    return $._HashTableKeyIterator$(this._hashTable);
  },
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT1)
      return;
    return key;
  },
  $as_HashTableIterable: null
};

$$._HashTableKeyIterator = {"": "_HashTableIterator;_hashTable,_modificationCount,_offset,_liblib1$_current",
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT1)
      return;
    return key;
  }
};

$$._HashTableValueIterable = {"": "_HashTableIterable;_entryIndex,_hashTable",
  get$iterator: function(_) {
    return $._HashTableValueIterator$(this._hashTable, this._entryIndex);
  },
  _valueAt$2: function(offset, key) {
    var t1, t3;
    t1 = this._hashTable._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._valueAt$2$bailout1(1, offset, t1);
    t3 = offset + this._entryIndex;
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _valueAt$2$bailout1: function(state0, offset, t1) {
    return $.$index$asx(t1, offset + this._entryIndex);
  },
  $as_HashTableIterable: null
};

$$._HashTableValueIterator = {"": "_HashTableIterator;_entryIndex,_hashTable,_modificationCount,_offset,_liblib1$_current",
  _valueAt$2: function(offset, key) {
    var t1, t3;
    if (typeof offset !== "number")
      return this._valueAt$2$bailout1(1, offset);
    t1 = this._hashTable._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._valueAt$2$bailout1(2, offset, t1);
    t3 = offset + this._entryIndex;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _valueAt$2$bailout1: function(state0, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._hashTable._table;
      case 2:
        state0 = 0;
        return $.$index$asx(t1, $.$add$ns(offset, this._entryIndex));
    }
  }
};

$$._LinkedHashMapTable = {"": "_LinkedHashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 4;
  },
  _value$1: function(offset) {
    var t1, t3;
    if (typeof offset !== "number")
      return this._value$1$bailout(1, offset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._value$1$bailout(2, offset, t1);
    t3 = offset + 3;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _value$1$bailout: function(state0, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        return $.$index$asx(t1, $.$add$ns(offset, 3));
    }
  },
  _setValue$2: function(offset, value) {
    $.$indexSet$ax(this._table, $.$add$ns(offset, 3), value);
  },
  _copyEntry$3: function(oldTable, fromOffset, toOffset) {
    var t1, t3, t4;
    if (typeof oldTable !== "object" || oldTable === null || (oldTable.constructor !== Array || !!oldTable.immutable$list) && !oldTable.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    if (typeof fromOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, oldTable, fromOffset, toOffset, t1);
    t3 = toOffset + 3;
    t4 = fromOffset + 3;
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= oldTable.length)
      throw $.ioore(t4);
    t4 = oldTable[t4];
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    t1[t3] = t4;
  },
  _copyEntry$3$bailout1: function(state0, oldTable, fromOffset, toOffset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        $.$indexSet$ax(t1, $.$add$ns(toOffset, 3), $.$index$asx(oldTable, $.$add$ns(fromOffset, 3)));
    }
  }
};

$$.LinkedHashMap = {"": "Object;_hashTable<",
  containsKey$1: function(key) {
    return $.$ge$n(this._hashTable._get$1(key), 0);
  },
  addAll$1: function(_, other) {
    $.forEach$1$ax(other, new $.LinkedHashMap_addAll_anon(this));
  },
  $index: function(_, key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if ($.$ge$n(offset, 0))
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(_, key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  remove$1: function(_, key) {
    var t1, offset, oldValue;
    t1 = this._hashTable;
    offset = t1._remove$1(key);
    if ($.$lt$n(offset, 0))
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  forEach$1: function(_, action) {
    var t1, modificationCount, offset;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    offset = t1._next$1(0);
    if (typeof offset !== "number")
      return this.forEach$1$bailout(1, action, t1, modificationCount, offset);
    for (; !$.$eq(offset, 0); offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout: function(state0, action, t1, modificationCount, offset) {
    for (; $.$eq(offset, 0) !== true; offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  get$keys: function() {
    return $._LinkedHashTableKeyIterable$(this._hashTable, $.getRuntimeTypeArgument(this, this["$asLinkedHashMap"], 0));
  },
  get$values: function(_) {
    return $._LinkedHashTableValueIterable$(this._hashTable, 3, $.getRuntimeTypeArgument(this, this["$asLinkedHashMap"], 1));
  },
  get$length: function(_) {
    return this._hashTable.get$_elementCount();
  },
  toString$0: function(_) {
    return $.ToString_mapToString(this);
  },
  LinkedHashMap$0: function(K, V) {
    this._hashTable._container = this;
  },
  $isMap: true
};

$$.LinkedHashMap_addAll_anon = {"": "Closure;this_0",
  call$2: function(key, value) {
    var t1, offset;
    t1 = this.this_0;
    offset = t1.get$_hashTable()._put$1(key);
    t1.get$_hashTable()._setValue$2(offset, value);
    t1.get$_hashTable()._checkCapacity$0();
  }
};

$$.LinkedHashSet = {"": "Collection;_table",
  get$iterator: function(_) {
    return $._LinkedHashTableKeyIterator$(this._table);
  },
  forEach$1: function(_, action) {
    var offset, modificationCount;
    offset = this._table._next$1(0);
    if (typeof offset !== "number")
      return this.forEach$1$bailout1(1, action, offset);
    modificationCount = this._table._modificationCount;
    for (; !$.$eq(offset, 0);) {
      action.call$1(this._table._key$1(offset));
      this._table._checkModification$1(modificationCount);
      offset = this._table._next$1(offset);
    }
  },
  forEach$1$bailout1: function(state0, action, offset) {
    var modificationCount = this._table._modificationCount;
    for (; $.$eq(offset, 0) !== true;) {
      action.call$1(this._table._key$1(offset));
      this._table._checkModification$1(modificationCount);
      offset = this._table._next$1(offset);
    }
  },
  get$length: function(_) {
    return this._table.get$_elementCount();
  },
  add$1: function(_, element) {
    this._table._put$1(element);
    this._table._checkCapacity$0();
  },
  addAll$1: function(_, objects) {
    var t1, t2;
    for (t1 = $.get$iterator$ax(objects); t1.moveNext$0();) {
      t2 = t1.get$current();
      this._table._put$1(t2);
      this._table._checkCapacity$0();
    }
  },
  remove$1: function(_, object) {
    var offset = this._table._remove$1(object);
    if (typeof offset !== "number")
      return this.remove$1$bailout1(1, offset);
    if (offset >= 0) {
      this._table._checkCapacity$0();
      return true;
    }
    return false;
  },
  remove$1$bailout1: function(state0, offset) {
    if ($.$ge$n(offset, 0)) {
      this._table._checkCapacity$0();
      return true;
    }
    return false;
  },
  toString$0: function(_) {
    return $.ToString_collectionToString(this);
  },
  LinkedHashSet$0: function(E) {
    this._table._container = this;
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._LinkedHashTableHeadMarker = {"": "Object;"};

$$._LinkedHashTable = {"": "_HashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 3;
  },
  _createTable$1: function(capacity) {
    var result, t1;
    result = $.List_List($.$mul$n(capacity, this.get$_entrySize()), null);
    t1 = result.length;
    if (0 >= t1)
      throw $.ioore(0);
    result[0] = $.CONSTANT4;
    if (1 >= t1)
      throw $.ioore(1);
    result[1] = 0;
    if (2 >= t1)
      throw $.ioore(2);
    result[2] = 0;
    return result;
  },
  _next$1: function(offset) {
    var t1, t3;
    if (typeof offset !== "number")
      return this._next$1$bailout(1, offset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._next$1$bailout(2, offset, t1);
    t3 = offset + 1;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _next$1$bailout: function(state0, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        return $.$index$asx(t1, $.$add$ns(offset, 1));
    }
  },
  _linkLast$1: function(offset) {
    var last, t1;
    last = $.$index$asx(this._table, 2);
    t1 = $.getInterceptor$ns(offset);
    $.$indexSet$ax(this._table, t1.$add(offset, 1), 0);
    $.$indexSet$ax(this._table, t1.$add(offset, 2), last);
    $.$indexSet$ax(this._table, $.$add$ns(last, 1), offset);
    $.$indexSet$ax(this._table, 2, offset);
  },
  _unlink$1: function(offset) {
    var t1, next, prev;
    t1 = $.getInterceptor$ns(offset);
    next = $.$index$asx(this._table, t1.$add(offset, 1));
    prev = $.$index$asx(this._table, t1.$add(offset, 2));
    $.$indexSet$ax(this._table, t1.$add(offset, 1), null);
    $.$indexSet$ax(this._table, t1.$add(offset, 2), null);
    $.$indexSet$ax(this._table, $.$add$ns(prev, 1), next);
    $.$indexSet$ax(this._table, $.$add$ns(next, 2), prev);
  },
  _addAllEntries$1: function(oldTable) {
    var t1, offset, object, t2, nextOffset;
    if (typeof oldTable !== "object" || oldTable === null || (oldTable.constructor !== Array || !!oldTable.immutable$list) && !oldTable.$isJavaScriptIndexingBehavior())
      return this._addAllEntries$1$bailout1(1, oldTable);
    t1 = oldTable.length;
    if (1 >= t1)
      throw $.ioore(1);
    offset = oldTable[1];
    if (typeof offset !== "number")
      return this._addAllEntries$1$bailout1(2, oldTable, offset, $.JSArray_methods);
    for (; !$.$eq(offset, 0); offset = nextOffset) {
      if (offset !== (offset | 0))
        throw $.iae(offset);
      if (offset < 0 || offset >= t1)
        throw $.ioore(offset);
      object = oldTable[offset];
      t2 = offset + 1;
      if (t2 >= t1)
        throw $.ioore(t2);
      nextOffset = oldTable[t2];
      this._copyEntry$3(oldTable, offset, this._put$1(object));
    }
  },
  _addAllEntries$1$bailout1: function(state0, oldTable, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$asx(oldTable);
        offset = t1.$index(oldTable, 1);
      case 2:
        var t2, object, nextOffset;
        state0 = 0;
        for (; t2 = $.getInterceptor(offset), t2.$eq(offset, 0) !== true; offset = nextOffset) {
          object = t1.$index(oldTable, offset);
          nextOffset = t1.$index(oldTable, t2.$add(offset, 1));
          this._copyEntry$3(oldTable, offset, this._put$1(object));
        }
    }
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2($.get$hashCode$(key), key);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout1(1, key, t1, offset);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry === $.CONSTANT0)
      this._deletedCount = this._deletedCount - 1;
    else if (oldEntry == null)
      this._entryCount = this._entryCount + 1;
    else
      return offset;
    this._recordModification$0();
    if (key == null)
      key = $.CONSTANT1;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout1(2, key, t1, offset);
    if (offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._linkLast$1(offset);
    return offset;
  },
  _put$1$bailout1: function(state0, key, t1, offset) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2($.get$hashCode$(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$index$asx(t1, offset);
        if (oldEntry === $.CONSTANT0)
          this._deletedCount = this._deletedCount - 1;
        else if (oldEntry == null)
          this._entryCount = this._entryCount + 1;
        else
          return offset;
        this._recordModification$0();
        if (key == null)
          key = $.CONSTANT1;
        t1 = this._table;
      case 2:
        var oldEntry;
        state0 = 0;
        $.$indexSet$ax(t1, offset, key);
        this._linkLast$1(offset);
        return offset;
    }
  },
  _deleteEntry$1: function(offset) {
    var key, t1;
    this._unlink$1(offset);
    key = $.CONSTANT0;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._deleteEntry$1$bailout1(1, offset, t1, key);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._deletedCount = this._deletedCount + 1;
    this._recordModification$0();
  },
  _deleteEntry$1$bailout1: function(state0, offset, t1, key) {
    $.$indexSet$ax(t1, offset, key);
    this._deletedCount = this._deletedCount + 1;
    this._recordModification$0();
  }
};

$$._LinkedHashTableKeyIterable = {"": "Iterable;_table",
  get$iterator: function(_) {
    return $._LinkedHashTableKeyIterator$(this._table);
  },
  get$length: function(_) {
    return this._table.get$_elementCount();
  },
  $asIterable: function() {
    return null;
  }
};

$$._LinkedHashTableKeyIterator = {"": "_LinkedHashTableIterator;_hashTable,_modificationCount,_offset,_liblib1$_current",
  _getCurrent$1: function(offset) {
    return this._hashTable._key$1(offset);
  }
};

$$._LinkedHashTableValueIterable = {"": "Iterable;_hashTable<,_valueIndex",
  get$iterator: function(_) {
    return $._LinkedHashTableValueIterator$(this._hashTable, this._valueIndex);
  },
  get$length: function(_) {
    return this._hashTable.get$_elementCount();
  },
  $asIterable: function() {
    return null;
  }
};

$$._LinkedHashTableValueIterator = {"": "_LinkedHashTableIterator;_valueIndex,_hashTable,_modificationCount,_offset,_liblib1$_current",
  _getCurrent$1: function(offset) {
    return $.$index$asx(this._hashTable._table, $.$add$ns(offset, this._valueIndex));
  }
};

$$._LinkedHashTableIterator = {"": "Object;_hashTable<",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    t2 = this._offset;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(1, t1, t2);
    if (t2 === 0) {
      this._liblib1$_current = null;
      return false;
    }
    this._liblib1$_current = this._getCurrent$1(t2);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  moveNext$0$bailout: function(state0, t1, t2) {
    if ($.$eq(t2, 0) === true) {
      this._liblib1$_current = null;
      return false;
    }
    this._liblib1$_current = this._getCurrent$1(this._offset);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  get$current: function() {
    return this._liblib1$_current;
  }
};

$$.ListQueue = {"": "Collection;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return $._ListQueueIterator$(this);
  },
  forEach$1: function(_, action) {
    var modificationCount, i, i0, t1;
    modificationCount = this._modificationCount;
    for (i = this._head; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      this._checkModification$1(modificationCount);
    }
  },
  get$isEmpty: function(_) {
    return this._head === this._tail;
  },
  get$length: function(_) {
    return $.$and$n($.$sub$n(this._tail, this._head), this._table.length - 1);
  },
  elementAt$1: function(_, index) {
    var t1, t2, t3;
    if (index < 0 || index > this.get$length(this))
      throw $.$$throw($.RangeError$range(index, 0, this.get$length(this)));
    t1 = this._table;
    t2 = t1.length;
    t3 = (this._head + index & t2 - 1) >>> 0;
    if (t3 < 0 || t3 >= t2)
      throw $.ioore(t3);
    return t1[t3];
  },
  toList$1$growable: function(_, growable) {
    var t1, list;
    if (growable === true) {
      t1 = this.get$length(this);
      list = $.List_List($, $.getRuntimeTypeArgument(this, this["$asListQueue"], 0));
      $.setRuntimeTypeInfo(list, [$.getRuntimeTypeArgument(this, this["$asListQueue"], 0)]);
      $.JSArray_methods.set$length(list, t1);
    } else {
      list = $.List_List(this.get$length(this), $.getRuntimeTypeArgument(this, this["$asListQueue"], 0));
      $.setRuntimeTypeInfo(list, [$.getRuntimeTypeArgument(this, this["$asListQueue"], 0)]);
    }
    this._writeToList$1(list);
    return list;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(_, element) {
    this._add$1(element);
  },
  addAll$1: function(_, elements) {
    var addCount, $length, t1, t2, t3, endSpace, preSpace;
    if (typeof elements === "object" && elements !== null && (elements.constructor === Array || elements.$isList())) {
      addCount = $.get$length$asx(elements);
      $length = this.get$length(this);
      if (typeof addCount !== "number")
        throw $.iae(addCount);
      t1 = $length + addCount;
      t2 = this._table;
      t3 = t2.length;
      if (t1 >= t3) {
        this._preGrow$1(t1);
        $.JSArray_methods.setRange$4(this._table, $length, addCount, elements, 0);
        this._tail = $.$add$ns(this._tail, addCount);
      } else {
        t1 = this._tail;
        if (typeof t1 !== "number")
          throw $.iae(t1);
        endSpace = t3 - t1;
        if (addCount < endSpace) {
          $.JSArray_methods.setRange$4(t2, t1, addCount, elements, 0);
          this._tail = $.$add$ns(this._tail, addCount);
        } else {
          preSpace = addCount - endSpace;
          $.JSArray_methods.setRange$4(t2, t1, endSpace, elements, 0);
          $.JSArray_methods.setRange$4(this._table, 0, preSpace, elements, endSpace);
          this._tail = preSpace;
        }
      }
      this._modificationCount = this._modificationCount + 1;
    } else
      for (t1 = $.get$iterator$ax(elements); t1.moveNext$0();)
        this._add$1(t1.get$current());
  },
  remove$1: function(_, object) {
    var i, i0, t1;
    for (i = this._head; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if ($.$eq(t1[i], object) === true) {
        this._remove$1(i);
        return;
      }
    }
    this._modificationCount = this._modificationCount + 1;
  },
  toString$0: function(_) {
    return $.ToString_collectionToString(this);
  },
  addLast$1: function(_, element) {
    this._add$1(element);
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  removeLast$0: function(_) {
    var t1, t2;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    this._tail = $.$and$n($.$sub$n(this._tail, 1), this._table.length - 1);
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  _checkModification$1: function(expectedModificationCount) {
    if (typeof expectedModificationCount !== "number")
      return this._checkModification$1$bailout(1, expectedModificationCount);
    if (expectedModificationCount !== this._modificationCount)
      throw $.$$throw($.ConcurrentModificationError$(this));
  },
  _checkModification$1$bailout: function(state0, expectedModificationCount) {
    if ($.$eq(expectedModificationCount, this._modificationCount) !== true)
      throw $.$$throw($.ConcurrentModificationError$(this));
  },
  _add$1: function(element) {
    var t1, t2;
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    t1[t2] = element;
    this._tail = $.$and$n(t2 + 1, this._table.length - 1);
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _remove$1: function(offset) {
    var t1, t2, mask, t3, startDistance, t4, i, prevOffset, nextOffset;
    t1 = this._table;
    t2 = t1.length;
    mask = t2 - 1;
    t3 = this._head;
    startDistance = (offset - t3 & mask) >>> 0;
    t4 = this._tail;
    if (typeof t4 !== "number")
      return this._remove$1$bailout(1, offset, mask, startDistance, t4);
    if (startDistance < (t4 - offset & mask) >>> 0) {
      for (i = offset; i !== t3; i = prevOffset) {
        prevOffset = (i - 1 & mask) >>> 0;
        if (prevOffset < 0 || prevOffset >= t2)
          throw $.ioore(prevOffset);
        t4 = t1[prevOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t4;
      }
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      this._head = (t3 + 1 & mask) >>> 0;
      return (offset + 1 & mask) >>> 0;
    } else {
      this._tail = (t4 - 1 & mask) >>> 0;
      for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._tail, i !== t3; i = nextOffset) {
        nextOffset = (i + 1 & mask) >>> 0;
        if (nextOffset < 0 || nextOffset >= t2)
          throw $.ioore(nextOffset);
        t3 = t1[nextOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t3;
      }
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      return offset;
    }
  },
  _remove$1$bailout: function(state0, offset, mask, startDistance, t1) {
    switch (state0) {
      case 0:
        mask = this._table.length - 1;
        startDistance = (offset - this._head & mask) >>> 0;
        t1 = this._tail;
      case 1:
        state0 = 0;
      case 2:
        var t2, i, t3, prevOffset, nextOffset;
        if (state0 === 0 && startDistance < $.$and$n($.$sub$n(t1, offset), mask)) {
          for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._head, i !== t3; i = prevOffset) {
            prevOffset = (i - 1 & mask) >>> 0;
            if (prevOffset < 0 || prevOffset >= t2)
              throw $.ioore(prevOffset);
            t3 = t1[prevOffset];
            if (i < 0 || i >= t2)
              throw $.ioore(i);
            t1[i] = t3;
          }
          if (t3 < 0 || t3 >= t2)
            throw $.ioore(t3);
          t1[t3] = null;
          this._head = (t3 + 1 & mask) >>> 0;
          return (offset + 1 & mask) >>> 0;
        } else
          switch (state0) {
            case 0:
              t1 = this._tail;
            case 2:
              state0 = 0;
              this._tail = $.$and$n($.$sub$n(t1, 1), mask);
              for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._tail, i !== t3; i = nextOffset) {
                nextOffset = (i + 1 & mask) >>> 0;
                if (nextOffset < 0 || nextOffset >= t2)
                  throw $.ioore(nextOffset);
                t3 = t1[nextOffset];
                if (i < 0 || i >= t2)
                  throw $.ioore(i);
                t1[i] = t3;
              }
              if (t3 !== (t3 | 0))
                throw $.iae(t3);
              if (t3 < 0 || t3 >= t2)
                throw $.ioore(t3);
              t1[t3] = null;
              return offset;
          }
    }
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = $.List_List(this._table.length * 2, $.getRuntimeTypeArgument(this, this["$asListQueue"], 0));
    $.setRuntimeTypeInfo(newTable, [$.getRuntimeTypeArgument(this, this["$asListQueue"], 0)]);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    $.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
    $.JSArray_methods.setRange$4(newTable, split, this._head, this._table, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  _writeToList$1: function(target) {
    var t1, t2, $length, firstPartSize;
    t1 = $.JSInt_methods.$le(this._head, this._tail);
    t2 = this._head;
    if (t1) {
      $length = $.$sub$n(this._tail, t2);
      $.JSArray_methods.setRange$4(target, 0, $length, this._table, this._head);
      return $length;
    } else {
      t1 = this._table;
      firstPartSize = t1.length - t2;
      $.JSArray_methods.setRange$4(target, 0, firstPartSize, t1, t2);
      $.JSArray_methods.setRange$4(target, firstPartSize, this._tail, this._table, 0);
      return $.$add$ns(this._tail, firstPartSize);
    }
  },
  _preGrow$1: function(newElementCount) {
    var newTable = $.List_List($.ListQueue__nextPowerOf2(newElementCount), $.getRuntimeTypeArgument(this, this["$asListQueue"], 0));
    $.setRuntimeTypeInfo(newTable, [$.getRuntimeTypeArgument(this, this["$asListQueue"], 0)]);
    this._tail = this._writeToList$1(newTable);
    this._table = newTable;
    this._head = 0;
  },
  ListQueue$1: function(initialCapacity, E) {
    var t1;
    if (initialCapacity == null || $.JSNull_methods.$lt(initialCapacity, 8))
      initialCapacity = 8;
    else if (!$.ListQueue__isPowerOf2(initialCapacity))
      initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    t1 = $.List_List(initialCapacity, E);
    $.setRuntimeTypeInfo(t1, [E]);
    this._table = t1;
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._ListQueueIterator = {"": "Object;_queue,_end,_modificationCount,_liblib1$_position,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    t1._checkModification$1(this._modificationCount);
    t2 = this._liblib1$_position;
    if (t2 === this._end) {
      this._liblib1$_current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw $.ioore(t2);
    this._liblib1$_current = t3[t2];
    this._liblib1$_position = (this._liblib1$_position + 1 & t1._table.length - 1) >>> 0;
    return true;
  }
};

$$.Collection = {"": "Iterable;",
  addAll$1: function(_, elements) {
    var t1;
    for (t1 = $.get$iterator$ax(elements); t1.moveNext$0();)
      this.add$1(this, t1.get$current());
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  },
  $asIterable: function() {
    return null;
  }
};

$$.DateTime = {"": "Object;millisecondsSinceEpoch<,isUtc",
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDateTime))
      return false;
    return $.$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch) === true && $.$eq(this.isUtc, other.isUtc) === true;
  },
  $lt: function(_, other) {
    return $.$lt$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $le: function(_, other) {
    return $.$le$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $gt: function(_, other) {
    return $.$gt$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $ge: function(_, other) {
    return $.$ge$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  compareTo$1: function(_, other) {
    return $.compareTo$1$ns(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function(_) {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function(_) {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_fourDigits();
    t2 = new $.DateTime_toString_threeDigits();
    t3 = new $.DateTime_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(_, duration) {
    return $.DateTime$fromMillisecondsSinceEpoch($.$add$ns(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.abs$0$n(millisecondsSinceEpoch) > 8640000000000000)
      throw $.$$throw($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.$$throw($.ArgumentError$(isUtc));
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  $isDateTime: true
};

$$.DateTime_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$n(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) === true ? "-" : "";
    if (absN >= 1000)
      return $.S(n);
    if (absN >= 100)
      return sign + "0" + $.S(absN);
    if (absN >= 10)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$.DateTime_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$ge(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.DateTime_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.Duration = {"": "Object;_duration<",
  $add: function(_, other) {
    return $.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
  },
  $sub: function(_, other) {
    return $.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
  },
  $mul: function(_, factor) {
    if (typeof factor !== "number")
      throw $.iae(factor);
    return $.Duration$(0, 0, this._duration * factor, 0, 0, 0);
  },
  $tdiv: function(_, quotient) {
    if ($.$eq(quotient, 0) === true)
      throw $.$$throw($.IntegerDivisionByZeroException$());
    if (typeof quotient !== "number")
      throw $.iae(quotient);
    return $.Duration$(0, 0, $.JSNumber_methods.$tdiv(this._duration, quotient), 0, 0, 0);
  },
  $lt: function(_, other) {
    return this._duration < other.get$_duration();
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $le: function(_, other) {
    return this._duration <= other.get$_duration();
  },
  $ge: function(_, other) {
    return this._duration >= other.get$_duration();
  },
  get$inHours: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 3600000000);
  },
  get$inMinutes: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 60000000);
  },
  get$inSeconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000000);
  },
  get$inMilliseconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000);
  },
  get$inMicroseconds: function() {
    return this._duration;
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDuration))
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return $.JSNumber_methods.get$hashCode(this._duration);
  },
  compareTo$1: function(_, other) {
    return $.JSNumber_methods.compareTo$1(this._duration, other.get$_duration());
  },
  toString$0: function(_) {
    var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new $.Duration_toString_sixDigits();
    t2 = new $.Duration_toString_twoDigits();
    if (this.get$inMicroseconds() < 0)
      return "-" + $.S($.Duration$(0, 0, -this.get$inMicroseconds(), 0, 0, 0));
    twoDigitMinutes = t2.call$1($.JSNumber_methods.remainder$1(this.get$inMinutes(), 60));
    twoDigitSeconds = t2.call$1($.JSNumber_methods.remainder$1(this.get$inSeconds(), 60));
    sixDigitUs = t1.call$1($.JSNumber_methods.remainder$1(this.get$inMicroseconds(), 1000000));
    return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(sixDigitUs);
  },
  $isDuration: true
};

$$.Duration_toString_sixDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100000) === true)
      return $.S(n);
    if (t1.$ge(n, 10000) === true)
      return "0" + $.S(n);
    if (t1.$ge(n, 1000) === true)
      return "00" + $.S(n);
    if (t1.$ge(n, 100) === true)
      return "000" + $.S(n);
    if (t1.$gt(n, 10) === true)
      return "0000" + $.S(n);
    return "00000" + $.S(n);
  }
};

$$.Duration_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.NullThrownError = {"": "Object;",
  toString$0: function(_) {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function(_) {
    var t1, t2, t3, t4, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.StringBuffer$("");
    t1.i_1 = 0;
    t2 = this._arguments;
    for (; $.$lt$n(t1.i_1, t2.length) === true; t1.i_1 = $.$add$ns(t1.i_1, 1)) {
      if ($.$gt$n(t1.i_1, 0) === true)
        t1.sb_0.write$1(", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      t3.write$1($.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    t2.forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (t2 == null)
      return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
    else {
      t3 = t1.sb_0;
      actualParameters = t3.toString$0(t3);
      t1.sb_0 = $.StringBuffer$("");
      for (i = 0; $.JSNumber_methods.$lt(i, $.JSNull_methods.get$length(t2)); ++i) {
        if (i > 0)
          t1.sb_0.write$1(", ");
        t1.sb_0.write$1($.JSNull_methods.$index(t2, i));
      }
      t1 = t1.sb_0;
      formalParameters = t1.toString$0(t1);
      t1 = this._memberName;
      return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + actualParameters + ")\n" + "Found: " + $.S(t1) + "(" + formalParameters + ")";
    }
  }
};

$$.UnsupportedError = {"": "Object;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  }
};

$$.UnimplementedError = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    return t1 != null ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function(_) {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function(_) {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.FormatException = {"": "Object;message",
  toString$0: function(_) {
    return "FormatException: " + this.message;
  },
  $isException: true
};

$$.IntegerDivisionByZeroException = {"": "Object;",
  toString$0: function(_) {
    return "IntegerDivisionByZeroException";
  },
  $isException: true
};

$$.Iterable = {"": "Object;",
  where$1: function(_, f) {
    return $.WhereIterable$(this, f, $.getRuntimeTypeArgument(this, this["$asIterable"], 0));
  },
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      f.call$1(t1.get$current());
  },
  join$1: function(_, separator) {
    var iterator, buffer;
    if (typeof separator !== "string")
      return this.join$1$bailout(1, separator);
    iterator = this.get$iterator(this);
    if (!iterator.moveNext$0())
      return "";
    buffer = $.StringBuffer$("");
    if (separator === "")
      do
        buffer.write$1($.S(iterator.get$current()));
      while (iterator.moveNext$0());
    else {
      buffer.write$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0();) {
        buffer.write$1(separator);
        buffer.write$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0(buffer);
  },
  join$1$bailout: function(state0, separator) {
    var iterator, buffer;
    iterator = this.get$iterator(this);
    if (!iterator.moveNext$0())
      return "";
    buffer = $.StringBuffer$("");
    if (separator == null || $.$eq(separator, "") === true)
      do
        buffer.write$1($.S(iterator.get$current()));
      while (iterator.moveNext$0());
    else {
      buffer.write$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0();) {
        buffer.write$1(separator);
        buffer.write$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0(buffer);
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable, $.getRuntimeTypeArgument(this, this["$asIterable"], 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0();)
      ++count;
    return count;
  },
  elementAt$1: function(_, index) {
    var t1, remaining, t2;
    if (!(typeof index === "number" && Math.floor(index) === index) || index < 0)
      throw $.$$throw($.RangeError$value(index));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0();) {
      t2 = t1.get$current();
      if (remaining === 0)
        return t2;
      --remaining;
    }
    throw $.$$throw($.RangeError$value(index));
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return "Instance of '" + $.S($.Primitives_objectTypeName(receiver)) + "'";
  }
};

$$.StringBuffer = {"": "Object;_contents",
  get$length: function(_) {
    return this._contents.length;
  },
  get$isEmpty: function(_) {
    return this.get$length(this) === 0;
  },
  write$1: function(obj) {
    var str;
    if (typeof obj !== "string")
      return this.write$1$bailout(1, obj);
    str = obj;
    this._contents = this._contents + str;
  },
  write$1$bailout: function(state0, obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  writeln$1: function(obj) {
    this.write$1(obj);
    this.write$1("\n");
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  }
};

$$._ChildrenElementList = {"": "Object;_element,_childElements",
  toList$1$growable: function(_, growable) {
    var t1, output, len, t2, i, t3;
    t1 = this._childElements;
    if (growable === true) {
      output = [];
      $.JSArray_methods.set$length(output, $.get$length$asx(t1));
    } else {
      output = $.List_List($.get$length$asx(t1), $.Element);
      $.setRuntimeTypeInfo(output, [$.Element]);
    }
    for (t1 = this._childElements, len = $.get$length$asx(t1), t2 = $.getInterceptor$asx(t1), i = 0; i < len; ++i) {
      t3 = t2.$index(t1, i);
      if (i >= output.length)
        throw $.ioore(i);
      output[i] = t3;
    }
    return output;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  forEach$1: function(_, f) {
    var t1;
    for (t1 = $.get$iterator$ax(this._childElements); t1.moveNext$0();)
      f.call$1(t1.get$current());
  },
  elementAt$1: function(_, index) {
    return $.$index$asx(this._childElements, index);
  },
  get$length: function(_) {
    return $.get$length$asx(this._childElements);
  },
  $index: function(_, index) {
    return $.$index$asx(this._childElements, index);
  },
  $indexSet: function(_, index, value) {
    $.$$dom_replaceChild$2$x(this._element, value, $.$index$asx(this._childElements, index));
  },
  add$1: function(_, value) {
    $.append$1$x(this._element, value);
    return value;
  },
  get$iterator: function(_) {
    return $.JSArray_methods.get$iterator(this.toList$0(this));
  },
  addAll$1: function(_, iterable) {
    var t1, t2, t3;
    if (typeof iterable === "object" && iterable !== null && !!iterable.$is_ChildNodeListLazy)
      iterable = $.List_List$from(iterable, true, null);
    for (t1 = $.get$iterator$ax(iterable), t2 = this._element, t3 = $.getInterceptor$x(t2); t1.moveNext$0();)
      t3.append$1(t2, t1.get$current());
  },
  remove$1: function(_, object) {
    var t1;
    if (typeof object === "object" && object !== null && object.$isElement()) {
      t1 = this._element;
      if (object.parentNode === t1)
        $.$$dom_removeChild$1$x(t1, object);
    }
  },
  sublist$2: function(_, start, end) {
    if (end == null)
      end = this.get$length(this);
    return $._FrozenElementList$_wrap($.Lists_getRange(this, start, end, []));
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  indexOf$2: function(_, element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length(this));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  clear$0: function(_) {
    $.getInterceptor$x(this._element).textContent = "";
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      $.$$dom_removeChild$1$x(this._element, result);
    return result;
  },
  get$last: function(_) {
    var result = this._element.lastElementChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [null]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$._FrozenElementList = {"": "Object;_nodeList",
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      f.call$1(t1.get$current());
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable, $.Element);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(_, index) {
    return $.$index$asx(this._nodeList, index);
  },
  get$length: function(_) {
    return $.get$length$asx(this._nodeList);
  },
  $index: function(_, index) {
    return $.$index$asx(this._nodeList, index);
  },
  $indexSet: function(_, index, value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  add$1: function(_, value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$iterator: function(_) {
    return $._FrozenElementListIterator$(this);
  },
  addAll$1: function(_, iterable) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  sublist$2: function(_, start, end) {
    return $._FrozenElementList$_wrap($.sublist$2$ax(this._nodeList, start, end));
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  indexOf$2: function(_, element, start) {
    return $.indexOf$2$asx(this._nodeList, element, start);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  clear$0: function(_) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeLast$0: function(_) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  remove$1: function(_, element) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [null]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$._FrozenElementListIterator = {"": "Object;_list,_liblib2$_index,_current",
  moveNext$0: function() {
    var t1, nextIndex, t2;
    t1 = this._liblib2$_index;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextIndex = t1 + 1;
    t1 = this._list;
    t2 = t1.get$length(t1);
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(2, t1, t2, nextIndex);
    if (nextIndex < t2) {
      this._current = t1.$index(t1, nextIndex);
      this._liblib2$_index = nextIndex;
      return true;
    }
    this._liblib2$_index = t1.get$length(t1);
    this._current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, t2, nextIndex) {
    switch (state0) {
      case 0:
        t1 = this._liblib2$_index;
      case 1:
        state0 = 0;
        nextIndex = $.$add$ns(t1, 1);
        t1 = this._list;
        t2 = t1.get$length(t1);
      case 2:
        state0 = 0;
        if ($.$lt$n(nextIndex, t2) === true) {
          this._current = t1.$index(t1, nextIndex);
          this._liblib2$_index = nextIndex;
          return true;
        }
        this._liblib2$_index = t1.get$length(t1);
        this._current = null;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$._ElementCssClassSet = {"": "CssClassSet;_element",
  readClasses$0: function() {
    var s, t1, trimmed;
    s = $.LinkedHashSet$($.String);
    for (t1 = $.JSArray_methods.get$iterator($.split$1$s(this._element.className, " ")); t1.moveNext$0();) {
      trimmed = $.trim$0$s(t1.get$current());
      if (!$.JSString_methods.get$isEmpty(trimmed))
        s.add$1(s, trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    $.List_List$from(s, true, null);
    $.getInterceptor$x(this._element).className = s.join$1(s, " ");
  }
};

$$.HttpRequest_getString_anon = {"": "Closure;",
  call$1: function(xhr) {
    return $.get$responseText$x(xhr);
  }
};

$$.HttpRequest_request_anon = {"": "Closure;completer_0,xhr_1",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.xhr_1;
    if (!($.$ge$n(t1.status, 200) && $.$lt$n(t1.status, 300))) {
      t2 = t1.status;
      t2 = t2 === 0 || t2 === 304;
    } else
      t2 = true;
    t3 = this.completer_0;
    if (t2)
      t3.complete$1(t3, t1);
    else
      t3.completeError$1(e);
  }
};

$$.HttpRequest_request_anon0 = {"": "Closure;completer_2",
  call$1: function(e) {
    this.completer_2.completeError$1(e);
  }
};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$last: function(_) {
    var result = this._this.lastChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  add$1: function(_, value) {
    $.append$1$x(this._this, value);
  },
  addAll$1: function(_, iterable) {
    var t1, len, t3, i, t2;
    if (typeof iterable === "object" && iterable !== null && !!iterable.$is_ChildNodeListLazy) {
      t1 = this._this;
      if (iterable._this !== t1) {
        len = iterable.get$length(iterable);
        if (typeof len !== "number")
          return this.addAll$1$bailout(1, iterable, len, t1);
        t3 = $.getInterceptor$x(t1);
        i = 0;
        for (; i < len; ++i)
          t3.append$1(t1, iterable.$index(iterable, 0));
      }
      return;
    }
    for (t1 = $.get$iterator$ax(iterable), t2 = this._this, t3 = $.getInterceptor$x(t2); t1.moveNext$0();)
      t3.append$1(t2, t1.get$current());
  },
  addAll$1$bailout: function(state0, iterable, len, t1) {
    switch (state0) {
      case 0:
      case 1:
        var t3, i, t2;
        if (state0 === 1 || state0 === 0 && typeof iterable === "object" && iterable !== null && !!iterable.$is_ChildNodeListLazy)
          switch (state0) {
            case 0:
              t1 = this._this;
            case 1:
              if (state0 === 1 || state0 === 0 && iterable._this !== t1)
                switch (state0) {
                  case 0:
                    len = iterable.get$length(iterable);
                  case 1:
                    state0 = 0;
                    t3 = $.getInterceptor$x(t1);
                    i = 0;
                    for (; $.JSNumber_methods.$lt(i, len); ++i)
                      t3.append$1(t1, iterable.$index(iterable, 0));
                }
              return;
          }
        for (t1 = $.get$iterator$ax(iterable), t2 = this._this, t3 = $.getInterceptor$x(t2); t1.moveNext$0();)
          t3.append$1(t2, t1.get$current());
    }
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      $.$$dom_removeChild$1$x(this._this, result);
    return result;
  },
  remove$1: function(_, object) {
    var t1;
    if (!(typeof object === "object" && object !== null && object.$isNode()))
      return;
    t1 = this._this;
    if (t1 !== object.parentNode)
      return;
    $.$$dom_removeChild$1$x(t1, object);
  },
  clear$0: function(_) {
    $.getInterceptor$x(this._this).textContent = "";
  },
  $indexSet: function(_, index, value) {
    var t1 = this._this;
    $.$$dom_replaceChild$2$x(t1, value, $.$index$asx(t1.childNodes, index));
  },
  get$iterator: function(_) {
    return $.get$iterator$ax(this._this.childNodes);
  },
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(_, f) {
    return $.WhereIterable$(this, f, null);
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable, $.Node);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(_, index) {
    return $.$index$asx(this._this.childNodes, index);
  },
  indexOf$2: function(_, element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length(this));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  sublist$2: function(_, start, end) {
    if (end == null)
      $.$eq(end, this.get$length(this));
    return $.Lists_getRange(this, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  get$length: function(_) {
    return $.get$length$asx(this._this.childNodes);
  },
  $index: function(_, index) {
    return $.$index$asx(this._this.childNodes, index);
  },
  $is_ChildNodeListLazy: true,
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [null]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$._AttributeMap = {"": "Object;",
  forEach$1: function(_, f) {
    var t1, t2;
    for (t1 = $.JSArray_methods.get$iterator(this.get$keys()); t1.moveNext$0();) {
      t2 = t1.get$current();
      f.call$2(t2, this.$index(this, t2));
    }
  },
  get$keys: function() {
    var attributes, keys, t1, len, i;
    attributes = this._element.attributes;
    keys = $.List_List($, $.String);
    $.setRuntimeTypeInfo(keys, [$.String]);
    for (t1 = $.getInterceptor$asx(attributes), len = t1.get$length(attributes), i = 0; i < len; ++i)
      if (this._matches$1(t1.$index(attributes, i)))
        keys.push(t1.$index(attributes, i).localName);
    return keys;
  },
  get$values: function(_) {
    var attributes, values, t1, len, i;
    attributes = this._element.attributes;
    values = $.List_List($, $.String);
    $.setRuntimeTypeInfo(values, [$.String]);
    for (t1 = $.getInterceptor$asx(attributes), len = t1.get$length(attributes), i = 0; i < len; ++i)
      if (this._matches$1(t1.$index(attributes, i)))
        values.push($.get$value$x(t1.$index(attributes, i)));
    return values;
  },
  $isMap: true,
  $asMap: function () { return [$.String, $.String]; }
};

$$._ElementAttributeMap = {"": "_AttributeMap;_element",
  containsKey$1: function(key) {
    return $.$$dom_hasAttribute$1$x(this._element, key);
  },
  $index: function(_, key) {
    return $.$$dom_getAttribute$1$x(this._element, key);
  },
  $indexSet: function(_, key, value) {
    $.$$dom_setAttribute$2$x(this._element, key, value);
  },
  remove$1: function(_, key) {
    var t1, t2, value;
    t1 = this._element;
    t2 = $.getInterceptor$x(t1);
    value = t2.$$dom_getAttribute$1(t1, key);
    t2.$$dom_removeAttribute$1(t1, key);
    return value;
  },
  get$length: function(_) {
    return this.get$keys().length;
  },
  _matches$1: function(node) {
    return node.namespaceURI == null;
  }
};

$$.CssClassSet = {"": "Object;",
  toString$0: function(_) {
    var t1 = this.readClasses$0();
    return t1.join$1(t1, " ");
  },
  get$iterator: function(_) {
    var t1 = this.readClasses$0();
    return t1.get$iterator(t1);
  },
  forEach$1: function(_, f) {
    var t1 = this.readClasses$0();
    t1.forEach$1(t1, f);
  },
  get$length: function(_) {
    var t1 = this.readClasses$0();
    return t1.get$length(t1);
  },
  add$1: function(_, value) {
    var t1, s;
    t1 = new $.CssClassSet_add_anon(value);
    s = this.readClasses$0();
    t1.call$1(s);
    this.writeClasses$1(s);
  },
  remove$1: function(_, value) {
    var s, result;
    if (!(typeof value === "string"))
      return false;
    s = this.readClasses$0();
    result = s.remove$1(s, value);
    this.writeClasses$1(s);
    return result;
  },
  addAll$1: function(_, iterable) {
    var t1, s;
    t1 = new $.CssClassSet_addAll_anon(iterable);
    s = this.readClasses$0();
    t1.call$1(s);
    this.writeClasses$1(s);
  },
  toList$1$growable: function(_, growable) {
    var t1 = this.readClasses$0();
    return t1.toList$1$growable(t1, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(_, index) {
    var t1 = this.readClasses$0();
    return t1.elementAt$1(t1, index);
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.String]; };
  }
};

$$.CssClassSet_add_anon = {"": "Closure;value_0",
  call$1: function(s) {
    return $.add$1$ax(s, this.value_0);
  }
};

$$.CssClassSet_addAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.addAll$1$ax(s, this.iterable_0);
  }
};

$$._EventStream = {"": "Stream;_liblib2$_target,_eventType,_useCapture",
  asBroadcastStream$0: function() {
    return this;
  },
  get$isBroadcast: function() {
    return true;
  },
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._liblib2$_target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  $asStream: null
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_liblib2$_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (t1 != null)
      $.$$dom_removeEventListener$3$x(this._liblib2$_target, this._eventType, t1, this._useCapture);
    this._liblib2$_target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._liblib2$_target == null;
  },
  onError$1: function(_, handleError) {
  },
  get$onError: function(receiver) {
    return new $.BoundClosure$i1(this, "onError$1", receiver);
  },
  pause$1: function(_, resumeSignal) {
    var t1;
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    this._pauseCount = this._pauseCount + 1;
    t1 = this._onData;
    if (t1 != null)
      $.$$dom_removeEventListener$3$x(this._liblib2$_target, this._eventType, t1, this._useCapture);
    if (resumeSignal != null)
      resumeSignal.whenComplete$1(this.get$resume());
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  resume$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    if (!this.get$_paused())
      throw $.$$throw($.StateError$("Subscription is not paused."));
    this._pauseCount = this._pauseCount - 1;
    this._tryResume$0();
  },
  get$resume: function() {
    return new $.BoundClosure$0(this, "resume$0");
  },
  _tryResume$0: function() {
    if (this._onData != null && !this.get$_paused())
      $.$$dom_addEventListener$3$x(this._liblib2$_target, this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture, null);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._CustomEventStreamProvider = {"": "Object;_eventTypeGetter",
  _eventTypeGetter$1: function(arg0) {
    return this._eventTypeGetter.call$1(arg0);
  },
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventTypeGetter$1(e), useCapture, null);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$.Point0 = {"": "Object;x>,y>",
  toString$0: function(_) {
    return "(" + $.S(this.x) + ", " + $.S(this.y) + ")";
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isPoint0))
      return false;
    return $.$eq(this.x, other.x) === true && $.$eq(this.y, other.y) === true;
  },
  $add: function(_, other) {
    var t1 = $.getInterceptor$x(other);
    return $.Point$0($.$add$ns(this.x, t1.get$x(other)), $.$add$ns(this.y, t1.get$y(other)));
  },
  $sub: function(_, other) {
    var t1 = $.getInterceptor$x(other);
    return $.Point$0($.$sub$n(this.x, t1.get$x(other)), $.$sub$n(this.y, t1.get$y(other)));
  },
  $mul: function(_, factor) {
    return $.Point$0($.$mul$n(this.x, factor), $.$mul$n(this.y, factor));
  },
  ceil$0: function(_) {
    return $.Point$0($.ceil$0$nx(this.x), $.ceil$0$nx(this.y));
  },
  round$0: function(_) {
    return $.Point$0($.round$0$nx(this.x), $.round$0$nx(this.y));
  },
  toInt$0: function(_) {
    return $.Point$0($.toInt$0$nx(this.x), $.toInt$0$nx(this.y));
  },
  $isPoint0: true
};

$$.Rect = {"": "Object;left>,top>,width>,height>",
  get$right: function(_) {
    return $.$add$ns(this.left, this.width);
  },
  get$bottom: function(_) {
    return $.$add$ns(this.top, this.height);
  },
  toString$0: function(_) {
    return "(" + $.S(this.left) + ", " + $.S(this.top) + ", " + $.S(this.width) + ", " + $.S(this.height) + ")";
  },
  $eq: function(_, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && other.$isRect()))
      return false;
    t1 = this.left;
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$left(other);
    return (t1 == null ? t3 == null : t1 === t3) && $.$eq(this.top, t2.get$top(other)) === true && $.$eq(this.width, t2.get$width(other)) === true && $.$eq(this.height, t2.get$height(other)) === true;
  },
  ceil$0: function(_) {
    return $.Rect$($.ceil$0$nx(this.left), $.ceil$0$nx(this.top), $.ceil$0$nx(this.width), $.ceil$0$nx(this.height));
  },
  round$0: function(_) {
    return $.Rect$($.round$0$nx(this.left), $.round$0$nx(this.top), $.round$0$nx(this.width), $.round$0$nx(this.height));
  },
  toInt$0: function(_) {
    return $.Rect$($.toInt$0$nx(this.left), $.toInt$0$nx(this.top), $.toInt$0$nx(this.width), $.toInt$0$nx(this.height));
  },
  get$topLeft: function(_) {
    return $.Point$0(this.left, this.top);
  },
  $isRect: function() {
    return true;
  },
  $asRect: function() {
    return null;
  }
};

$$._TypedImageData = {"": "Object;data>,height>,width>", $is_TypedImageData: true,
  $isImageData: function() {
    return true;
  },
  $asImageData: function() {
    return null;
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$top: function(_) {
    return $._DOMWindowCrossFrame__createSafe(this._window.top);
  }
};

$$._LocationWrapper = {"": "Object;_ptr",
  get$pathname: function(_) {
    return $._LocationWrapper__get(this._ptr, "pathname");
  },
  toString$0: function(_) {
    return this._ptr.toString();
  },
  $isLocation: function() {
    return true;
  },
  $asLocation: function() {
    return null;
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var nextPosition, t1;
    nextPosition = this._position + 1;
    t1 = this._length;
    if (nextPosition < t1) {
      this._current = $.$index$asx(this._array, nextPosition);
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  get$current: function() {
    return this._current;
  }
};

$$.convertDartToNative_Dictionary_anon = {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_0;
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t1.push(value);
    this.copies_1.push(null);
    return $length;
  }
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"": "Closure;copies_2",
  call$1: function(i) {
    var t1 = this.copies_2;
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  }
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"": "Closure;copies_3",
  call$2: function(i, x) {
    var t1 = this.copies_3;
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    t1[i] = x;
  }
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, t2, $length, i;
    if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.$isJavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    if (e instanceof Date)
      throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
    if (e instanceof RegExp)
      throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.JSArray_methods.get$iterator(Object.keys(e)); t1.moveNext$0();) {
        t2 = t1.get$current();
        copy.$indexSet(copy, t2, this.call$1(e[t2]));
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      $length = e.length;
      if (this.mustCopy_4)
        copy = new Array($length);
      else
        copy = e;
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(2, e, $length, copy, $.JSArray_methods, slot);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e, $length, copy, t1, slot) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor(e);
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
        if (e instanceof RegExp)
          throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
        if (Object.getPrototypeOf(e) === Object.prototype) {
          slot = this.findSlot_5.call$1(e);
          copy = this.readSlot_6.call$1(slot);
          if (copy != null)
            return copy;
          copy = $.makeLiteralMap([]);
          this.writeSlot_7.call$2(slot, copy);
          for (t1 = $.JSArray_methods.get$iterator(Object.keys(e)); t1.moveNext$0();) {
            t2 = t1.get$current();
            copy.$indexSet(copy, t2, this.call$1(e[t2]));
          }
          return copy;
        }
      case 2:
        var t2, i;
        if (state0 === 2 || state0 === 0 && e instanceof Array)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (copy != null)
                return copy;
              $length = t1.get$length(e);
              copy = this.mustCopy_4 ? new Array($length) : e;
            case 2:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t2 = $.getInterceptor$ax(copy), i = 0; $.JSNumber_methods.$lt(i, $length); ++i)
                t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
              return copy;
          }
        return e;
    }
  }
};

$$.FilteredElementList = {"": "Object;_node,_childNodes",
  get$_filtered: function() {
    var t1 = this._childNodes;
    return $.List_List$from(t1.where$1(t1, new $.FilteredElementList__filtered_anon()), true, $.Element);
  },
  forEach$1: function(_, f) {
    $.JSArray_methods.forEach$1(this.get$_filtered(), f);
  },
  $indexSet: function(_, index, value) {
    var t1 = this.get$_filtered();
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    $.replaceWith$1$x(t1[index], value);
  },
  add$1: function(_, value) {
    var t1 = this._childNodes;
    t1.add$1(t1, value);
  },
  addAll$1: function(_, iterable) {
    var t1, t2;
    for (t1 = $.get$iterator$ax(iterable), t2 = this._childNodes; t1.moveNext$0();)
      t2.add$1(t2, t1.get$current());
  },
  clear$0: function(_) {
    var t1 = this._childNodes;
    t1.clear$0(t1);
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      $.remove$0$ax(result);
    return result;
  },
  remove$1: function(_, element) {
    var i, t1, indexElement;
    if (!(typeof element === "object" && element !== null && element.$isElement()))
      return;
    for (i = 0; i < this.get$length(this); ++i) {
      t1 = this.get$_filtered();
      if (i >= t1.length)
        throw $.ioore(i);
      indexElement = t1[i];
      if (indexElement === element) {
        $.remove$0$ax(indexElement);
        return;
      }
    }
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable, $.Element);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(_, index) {
    var t1 = this.get$_filtered();
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  get$length: function(_) {
    return this.get$_filtered().length;
  },
  $index: function(_, index) {
    var t1 = this.get$_filtered();
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  get$iterator: function(_) {
    return $.JSArray_methods.get$iterator(this.get$_filtered());
  },
  sublist$2: function(_, start, end) {
    return $.JSArray_methods.sublist$2(this.get$_filtered(), start, end);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  indexOf$2: function(_, element, start) {
    return $.JSArray_methods.indexOf$2(this.get$_filtered(), element, start);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  get$last: function(_) {
    return $.JSArray_methods.get$last(this.get$_filtered());
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [null]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$.FilteredElementList__filtered_anon = {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && n.$isElement();
  }
};

$$._AttributeClassSet = {"": "CssClassSet;_liblib3$_element",
  readClasses$0: function() {
    var t1, classname, s, trimmed;
    t1 = $.get$attributes$x(this._liblib3$_element);
    classname = t1.$index(t1, "class");
    s = $.LinkedHashSet$($.String);
    if (classname == null)
      return s;
    for (t1 = $.JSArray_methods.get$iterator($.split$1$s(classname, " ")); t1.moveNext$0();) {
      trimmed = $.trim$0$s(t1.get$current());
      if (!$.JSString_methods.get$isEmpty(trimmed))
        s.add$1(s, trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var t1 = $.get$attributes$x(this._liblib3$_element);
    t1.$indexSet(t1, "class", s.join$1(s, " "));
  }
};

$$.main_anon = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.FilterDemo$());
  }
};

$$.main_anon0 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.MaskingDemo$());
  }
};

$$.main_anon1 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.MovieClipDemo$());
  }
};

$$.main_anon2 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.PerformanceDemo$());
  }
};

$$.main_anon3 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.SoundDemo$());
  }
};

$$.main_anon4 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.FlumpDemo$());
  }
};

$$.main_anon5 = {"": "Closure;",
  call$1: function(_) {
    return $.stage.addChild$1($.TexturePackerDemo$());
  }
};

$$.FilterDemo = {"": "DisplayObjectContainer;_filters,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  FilterDemo$0: function() {
    var targetBitmapData, sourceBitmapData, backgroundBitmapData, t1, t2, i, x, y, filter, $name, backgroundBitmap, textField;
    targetBitmapData = $.BitmapData$(940, 500, true, 0);
    sourceBitmapData = $.resourceManager.getBitmapData$1("king");
    backgroundBitmapData = $.BitmapData$(230, 245, true, 4293980400);
    this.addChild$1($.Bitmap$(targetBitmapData, "auto"));
    for (t1 = this._filters, t2 = $.getInterceptor$x(sourceBitmapData), i = 0; i < t1.length; ++i) {
      x = 235 * $.JSNumber_methods.$mod(i, 4);
      y = 250 * $.JSNumber_methods.$tdiv(i, 4);
      filter = $.propertyTypeCast($.$index$asx(t1[i], "filter"), "$isBitmapFilter");
      if (i >= t1.length)
        throw $.ioore(i);
      $name = $.stringTypeCast($.$index$asx(t1[i], "name"));
      targetBitmapData.applyFilter$4(sourceBitmapData, $.Rectangle$(0, 0, t2.get$width(sourceBitmapData), t2.get$height(sourceBitmapData)), $.Point$(x + 40, y + 45), filter);
      backgroundBitmap = $.Bitmap$(backgroundBitmapData, "auto");
      backgroundBitmap.set$x(backgroundBitmap, x);
      backgroundBitmap.set$y(backgroundBitmap, y);
      this.addChildAt$2(backgroundBitmap, 0);
      textField = $.TextField$();
      textField.set$defaultTextFormat($.TextFormat$("Helvetica Neue, Helvetica, Arial", 14, 4278190080, "left", false, 0, false, 0, 0, 0, false));
      textField.set$x(textField, x + 5);
      textField.set$y(textField, y + 5);
      textField.set$width(textField, 200);
      textField.set$text(textField, $name);
      this.addChild$1(textField);
    }
  }
};

$$.MaskingDemo = {"": "DisplayObjectContainer;_random,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  MaskingDemo$0: function() {
    var flowerField, t1, i, t2, bitmap, tween, starPath, a1, a2, rectangleMask, circleMask, customMask;
    flowerField = $.Sprite$();
    flowerField.set$pivotX(470);
    flowerField.set$pivotY(250);
    flowerField.set$x(flowerField, 470);
    flowerField.set$y(flowerField, 250);
    this.addChild$1(flowerField);
    for (t1 = this._random, i = 0; i < 150; ++i) {
      t2 = t1.nextInt$1(3);
      bitmap = $.Bitmap$($.resourceManager.getBitmapData$1("flower" + $.S(1 + t2)), "auto");
      bitmap.set$pivotX(64);
      bitmap.set$pivotY(64);
      bitmap.set$x(bitmap, 64 + t1.nextInt$1(812));
      bitmap.set$y(bitmap, 64 + t1.nextInt$1(372));
      flowerField.addChild$1(bitmap);
      tween = $.Tween$(bitmap, 600, $.TransitionFunction_linear);
      tween.animate$2("rotation", 188.49555921538757);
      $.add$1$ax($.juggler, tween);
    }
    starPath = $.List_List($, $.Point);
    $.setRuntimeTypeInfo(starPath, [$.Point]);
    for (i = 0; i < 6; ++i) {
      t1 = i * 60;
      a1 = t1 * 3.141592653589793 / 180;
      a2 = (t1 + 30) * 3.141592653589793 / 180;
      starPath.push($.Point$(470 + 200 * $.cos(a1), 250 + 200 * $.sin(a1)));
      starPath.push($.Point$(470 + 100 * $.cos(a2), 250 + 100 * $.sin(a2)));
    }
    rectangleMask = $.Mask$rectangle(100, 100, 740, 300);
    circleMask = $.Mask$circle(470, 250, 200);
    customMask = $.Mask$custom(starPath);
    $.get$onClick$x($.query("#mask-none")).listen$1(new $.anon9(flowerField));
    $.get$onClick$x($.query("#mask-rectangle")).listen$1(new $.anon10(flowerField, rectangleMask));
    $.get$onClick$x($.query("#mask-circle")).listen$1(new $.anon11(flowerField, circleMask));
    $.get$onClick$x($.query("#mask-custom")).listen$1(new $.anon12(flowerField, customMask));
    $.get$onClick$x($.query("#mask-spin")).listen$1(new $.anon13(flowerField));
  }
};

$$.anon9 = {"": "Closure;flowerField_0",
  call$1: function(e) {
    var t1 = this.flowerField_0;
    t1.set$mask(t1, null);
    return;
  }
};

$$.anon10 = {"": "Closure;flowerField_1,rectangleMask_2",
  call$1: function(e) {
    var t1, t2;
    t1 = this.rectangleMask_2;
    t2 = this.flowerField_1;
    t2.set$mask(t2, t1);
    return t1;
  }
};

$$.anon11 = {"": "Closure;flowerField_3,circleMask_4",
  call$1: function(e) {
    var t1, t2;
    t1 = this.circleMask_4;
    t2 = this.flowerField_3;
    t2.set$mask(t2, t1);
    return t1;
  }
};

$$.anon12 = {"": "Closure;flowerField_5,customMask_6",
  call$1: function(e) {
    var t1, t2;
    t1 = this.customMask_6;
    t2 = this.flowerField_5;
    t2.set$mask(t2, t1);
    return t1;
  }
};

$$.anon13 = {"": "Closure;flowerField_7",
  call$1: function(e) {
    var t1, rotate;
    t1 = this.flowerField_7;
    rotate = $.Tween$(t1, 2, $.TransitionFunction_easeInOutBack);
    rotate.animate$2("rotation", 12.566370614359172);
    rotate.set$onComplete(rotate, new $._anon(t1));
    $.add$1$ax($.juggler, rotate);
  }
};

$$._anon = {"": "Closure;flowerField_8",
  call$0: function() {
    this.flowerField_8.set$rotation(0);
    return 0;
  }
};

$$.MovieClipDemo = {"": "DisplayObjectContainer;_random,_liblib6$_textureAtlas,_bitmapDatas,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  _startWalkingMan$0: function() {
    var scale, movieClip, t1, tween;
    scale = this._random.nextDouble$0();
    movieClip = $.MovieClip$(this._bitmapDatas, 30, true);
    movieClip.set$x(movieClip, -128);
    movieClip.set$y(movieClip, 20 + 180 * scale);
    t1 = 0.5 + 0.5 * scale;
    movieClip.set$scaleY(t1);
    movieClip.set$scaleX(t1);
    movieClip.play$0(movieClip);
    this.addChild$1(movieClip);
    $.JSArray_methods.sort$1(this._children, new $.MovieClipDemo__startWalkingMan_anon());
    tween = $.Tween$(movieClip, 5 + (1 - scale) * 5, $.TransitionFunction_linear);
    tween.animate$2("x", 940);
    tween.set$onComplete(tween, new $.MovieClipDemo__startWalkingMan_anon0(this, movieClip));
    $.add$1$ax($.juggler, movieClip);
    $.add$1$ax($.juggler, tween);
    $.juggler.delayCall$2(this.get$_startWalkingMan(), 0.2);
  },
  get$_startWalkingMan: function() {
    return new $.BoundClosure$0(this, "_startWalkingMan$0");
  },
  MovieClipDemo$0: function() {
    this._liblib6$_textureAtlas = $.resourceManager.getTextureAtlas$1("walkTextureAtlas");
    this._bitmapDatas = this._liblib6$_textureAtlas.getBitmapDatas$1("walk");
    this._startWalkingMan$0();
  }
};

$$.MovieClipDemo__startWalkingMan_anon = {"": "Closure;",
  call$2: function(c1, c2) {
    return $.toInt$0$nx($.$sub$n($.get$y$x(c1), $.get$y$x(c2)));
  }
};

$$.MovieClipDemo__startWalkingMan_anon0 = {"": "Closure;this_0,movieClip_1",
  call$0: function() {
    var t1, t2;
    t1 = $.juggler;
    t2 = this.movieClip_1;
    $.remove$1$ax(t1, t2);
    this.this_0.removeChild$1(t2);
  }
};

$$.FlyingFlag = {"": "Bitmap;vx,vy,bitmapData,pixelSnapping,clipRectangle,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  advanceTime$1: function(time) {
    var tx, ty;
    tx = this.get$x(this) + this.vx * time;
    ty = this.get$y(this) + this.vy * time;
    if (tx > 910 || tx < 30)
      this.vx = -this.vx;
    else
      this.set$x(this, tx);
    if (ty > 470 || ty < 30)
      this.vy = -this.vy;
    else
      this.set$y(this, ty);
    return true;
  },
  FlyingFlag$3: function(bitmapData, vx, vy) {
    var t1 = $.getInterceptor$x(bitmapData);
    this.set$pivotX($.$div$n(t1.get$width(bitmapData), 2));
    this.set$pivotY($.$div$n(t1.get$height(bitmapData), 2));
  },
  $isAnimatable: true
};

$$.PerformanceDemo = {"": "DisplayObjectContainer;_fpsAverage,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  _onEnterFrame$1: function(e) {
    var t1, t2;
    if (this._fpsAverage == null)
      this._fpsAverage = 1 / e.get$passedTime();
    else {
      t1 = e.get$passedTime();
      t2 = this._fpsAverage;
      if (typeof t2 !== "number")
        throw $.iae(t2);
      this._fpsAverage = 0.05 / t1 + 0.95 * t2;
    }
    t1 = "fps: " + $.S($.round$0$nx(this._fpsAverage));
    $.set$innerHtml$x($.query$1$x(document, "#fpsMeter"), t1);
  },
  get$_onEnterFrame: function() {
    return new $.BoundClosure$1(this, "_onEnterFrame$1");
  },
  _addFlags$1: function(amount) {
    var textureAtlas, flagNames, t1, flyingFlag;
    textureAtlas = $.resourceManager.getTextureAtlas$1("flags");
    flagNames = textureAtlas.get$frameNames();
    if (typeof flagNames !== "string" && (typeof flagNames !== "object" || flagNames === null || flagNames.constructor !== Array && !flagNames.$isJavaScriptIndexingBehavior()))
      return this._addFlags$1$bailout(1, flagNames, amount, textureAtlas);
    for (; --amount, amount >= 0;) {
      t1 = $.CONSTANT21.nextInt$1(flagNames.length);
      if (t1 < 0 || t1 >= flagNames.length)
        throw $.ioore(t1);
      flyingFlag = $.FlyingFlag$(textureAtlas.getBitmapData$1(flagNames[t1]), $.CONSTANT21.nextInt$1(200) - 100, $.CONSTANT21.nextInt$1(200) - 100);
      flyingFlag.set$x(flyingFlag, 30 + $.CONSTANT21.nextInt$1(880));
      flyingFlag.set$y(flyingFlag, 30 + $.CONSTANT21.nextInt$1(440));
      this.addChild$1(flyingFlag);
      $.add$1$ax($.juggler, flyingFlag);
    }
    t1 = "Flags: " + $.S(this.get$numChildren());
    $.set$innerHtml$x($.query$1$x(document, "#flagCounter"), t1);
  },
  _addFlags$1$bailout: function(state0, flagNames, amount, textureAtlas) {
    var t1, flyingFlag;
    for (t1 = $.getInterceptor$asx(flagNames); --amount, amount >= 0;) {
      flyingFlag = $.FlyingFlag$(textureAtlas.getBitmapData$1(t1.$index(flagNames, $.CONSTANT21.nextInt$1(t1.get$length(flagNames)))), $.CONSTANT21.nextInt$1(200) - 100, $.CONSTANT21.nextInt$1(200) - 100);
      flyingFlag.set$x(flyingFlag, 30 + $.CONSTANT21.nextInt$1(880));
      flyingFlag.set$y(flyingFlag, 30 + $.CONSTANT21.nextInt$1(440));
      this.addChild$1(flyingFlag);
      $.add$1$ax($.juggler, flyingFlag);
    }
    t1 = "Flags: " + $.S(this.get$numChildren());
    $.set$innerHtml$x($.query$1$x(document, "#flagCounter"), t1);
  },
  _removeFlags$1: function(amount) {
    var displayObject, t1;
    while (true) {
      --amount;
      if (!(amount >= 0 && this.get$numChildren() > 0))
        break;
      displayObject = this.getChildAt$1(0);
      displayObject.removeFromParent$0();
      $.remove$1$ax($.juggler, displayObject);
    }
    t1 = "Flags: " + $.S(this.get$numChildren());
    $.set$innerHtml$x($.query$1$x(document, "#flagCounter"), t1);
  },
  PerformanceDemo$0: function() {
    this._addFlags$1(250);
    $.get$onClick$x($.query("#minus10")).listen$1(new $.anon5(this));
    $.get$onClick$x($.query("#minus50")).listen$1(new $.anon6(this));
    $.get$onClick$x($.query("#plus50")).listen$1(new $.anon7(this));
    $.get$onClick$x($.query("#plus10")).listen$1(new $.anon8(this));
    this.get$onEnterFrame().listen$1(this.get$_onEnterFrame());
  }
};

$$.anon5 = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._removeFlags$1(10);
  }
};

$$.anon6 = {"": "Closure;this_1",
  call$1: function(e) {
    return this.this_1._removeFlags$1(50);
  }
};

$$.anon7 = {"": "Closure;this_2",
  call$1: function(e) {
    return this.this_2._addFlags$1(50);
  }
};

$$.anon8 = {"": "Closure;this_3",
  call$1: function(e) {
    return this.this_3._addFlags$1(10);
  }
};

$$.SoundDemo = {"": "DisplayObjectContainer;_heyJudeNotes,_heyJudeLyrics,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  SoundDemo$0: function() {
    this.addChild$1($.Bitmap$($.resourceManager.getBitmapData$1("Background"), "auto"));
    var piano = $.Piano$(this._heyJudeNotes, this._heyJudeLyrics);
    piano.set$x(piano, 120);
    piano.set$y(piano, 30);
    this.addChild$1(piano);
    $.get$onClick$x($.query("#startOver")).listen$1(new $.anon4(piano));
  }
};

$$.anon4 = {"": "Closure;piano_0",
  call$1: function(e) {
    return this.piano_0.resetSong$0();
  }
};

$$.Piano = {"": "DisplayObjectContainer;songNotes,songLyrics,_pianoNotes,_pianoKeys,_karaokeFinger,_songNoteIndex,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  checkSongNote$1: function(note) {
    var t1, t2, t3, t4;
    t1 = this._songNoteIndex;
    t2 = this.songNotes;
    t3 = t2.length;
    if (t1 < t3) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t3)
        throw $.ioore(t1);
      t4 = $.$eq(t2[t1], note) === true;
      t1 = t4;
    } else
      t1 = false;
    if (t1) {
      if (this._songNoteIndex === t2.length - 1)
        $.play$0$x($.resourceManager.getSound$1("Cheer"));
      this._songNoteIndex = this._songNoteIndex + 1;
      this._updateKaraoke$0();
    }
  },
  resetSong$0: function() {
    this._songNoteIndex = 0;
    var t1 = this._karaokeFinger;
    t1.set$alpha(t1, 1);
    this._updateKaraoke$0();
  },
  _updateKaraoke$0: function() {
    var lyricsDiv, t1, t2, wordIndex, w, last, t3, songNote, pianoKey, tweenX, tweenY, tween;
    lyricsDiv = $.query$1$x(document, "#lyrics");
    t1 = $.getInterceptor$x(lyricsDiv);
    t1.set$innerHtml(lyricsDiv, "");
    for (t2 = this.songLyrics, wordIndex = -1, w = 0, last = 0; w < t2.length; ++w) {
      if ($.$eq(t2[w], "") !== true)
        last = w;
      if (w === this._songNoteIndex)
        wordIndex = last;
    }
    for (w = 0; w < t2.length; ++w)
      if (w === wordIndex)
        t1.appendHtml$1(lyricsDiv, "<span id=\"word\">" + $.S(t2[w]) + "</span>");
      else
        t1.appendHtml$1(lyricsDiv, t2[w]);
    t1 = this._songNoteIndex;
    t2 = this.songNotes;
    t3 = t2.length;
    if (t1 < t3) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t3)
        throw $.ioore(t1);
      songNote = t2[t1];
      t1 = this._pianoKeys;
      if (t1.containsKey$1(songNote)) {
        pianoKey = t1.$index(t1, songNote);
        $.juggler.removeTweens$1(this._karaokeFinger);
        t1 = this._karaokeFinger;
        t1.set$y(t1, 0);
        tweenX = $.Tween$(this._karaokeFinger, 0.4, $.TransitionFunction_easeInOutCubic);
        tweenY = $.Tween$(this._karaokeFinger, 0.4, $.TransitionFunction_sine);
        t1 = $.getInterceptor$x(pianoKey);
        tweenX.animate$2("x", $.$add$ns(t1.get$x(pianoKey), $.$div$n(t1.get$width(pianoKey), 2)));
        tweenY.animate$2("y", -10);
        $.add$1$ax($.juggler, tweenX);
        $.add$1$ax($.juggler, tweenY);
      }
    } else {
      tween = $.Tween$(this._karaokeFinger, 0.4, $.TransitionFunction_linear);
      tween.animate$2("alpha", 0);
      $.add$1$ax($.juggler, tween);
    }
  },
  Piano$2: function(songNotes, songLyrics) {
    var t1, t2, n, x, t3, t4, n0, sound, pianoNote, pianoKey;
    for (t1 = this._pianoNotes, t2 = this._pianoKeys, n = 0, x = 0; t3 = t1.length, t4 = $.resourceManager, n < t3; n = n0) {
      n0 = n + 1;
      sound = t4.getSound$1("Note" + $.S(n0));
      if (n >= t1.length)
        throw $.ioore(n);
      pianoNote = t1[n];
      pianoKey = $.PianoKey$(this, pianoNote, sound);
      t2.$indexSet(t2, pianoNote, pianoKey);
      if ($.endsWith$1$s(pianoNote, "#")) {
        pianoKey.set$x(pianoKey, x - 16);
        pianoKey.set$y(pianoKey, 35);
        this.addChild$1(pianoKey);
      } else {
        pianoKey.set$x(pianoKey, x);
        pianoKey.set$y(pianoKey, 35);
        this.addChildAt$2(pianoKey, 0);
        x += 47;
      }
    }
    this._karaokeFinger = $.Bitmap$(t4.getBitmapData$1("Finger"), "auto");
    this._karaokeFinger.set$pivotX(20);
    this.addChild$1(this._karaokeFinger);
    this._updateKaraoke$0();
  }
};

$$.PianoKey = {"": "Sprite;piano,note,sound,buttonMode,useHandCursor,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  _keyDown$1: function(me) {
    if (me.get$buttonDown() === true) {
      $.play$0$x(this.sound);
      this.set$alpha(this, 0.7);
      this.piano.checkSongNote$1(this.note);
    }
  },
  get$_keyDown: function() {
    return new $.BoundClosure$1(this, "_keyDown$1");
  },
  _keyUp$1: function(me) {
    this.set$alpha(this, 1);
  },
  get$_keyUp: function() {
    return new $.BoundClosure$1(this, "_keyUp$1");
  },
  PianoKey$3: function(piano, note, sound) {
    var t1, t2, key, bitmapData, textColor, textFormat, textField;
    t1 = this.note;
    t2 = $.getInterceptor$s(t1);
    if (t2.endsWith$1(t1, "#"))
      key = "KeyBlack";
    else if (t2.startsWith$1(t1, "C5"))
      key = "KeyWhite0";
    else if (t2.startsWith$1(t1, "C") || t2.startsWith$1(t1, "F"))
      key = "KeyWhite1";
    else if (t2.startsWith$1(t1, "D") || t2.startsWith$1(t1, "G") || t2.startsWith$1(t1, "A"))
      key = "KeyWhite2";
    else
      key = t2.startsWith$1(t1, "E") || t2.startsWith$1(t1, "B") ? "KeyWhite3" : null;
    bitmapData = $.resourceManager.getBitmapData$1(key);
    this.addChild$1($.Bitmap$(bitmapData, "auto"));
    textColor = t2.endsWith$1(t1, "#") ? 4294967295 : 4278190080;
    textFormat = $.TextFormat$("Helvetica,Arial", 10, textColor, "center", false, 0, false, 0, 0, 0, false);
    textField = $.TextField$();
    textField.set$defaultTextFormat(textFormat);
    textField.set$text(textField, t1);
    t1 = $.getInterceptor$x(bitmapData);
    textField.set$width(textField, t1.get$width(bitmapData));
    textField.set$height(textField, 20);
    textField.mouseEnabled = false;
    textField.set$y(textField, $.$sub$n(t1.get$height(bitmapData), 20));
    this.addChild$1(textField);
    this.useHandCursor = true;
    this.get$onMouseDown(this).listen$1(this.get$_keyDown());
    this.get$onMouseOver(this).listen$1(this.get$_keyDown());
    this.get$onMouseUp(this).listen$1(this.get$_keyUp());
    this.get$onMouseOut(this).listen$1(this.get$_keyUp());
  }
};

$$.TextDemo = {"": "DisplayObjectContainer;sampleText,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  TextDemo$0: function() {
    var text, textField1, textField2, textField3, textField4;
    text = $.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2(this.sampleText, "\r", ""), "\n", "");
    textField1 = $.TextField$();
    textField1.set$defaultTextFormat($.TextFormat$("Helvetica,Arial", 14, 4278222848, "left", true, 0, true, 0, 0, 0, false));
    textField1.set$text(textField1, text);
    textField1.set$x(textField1, 10);
    textField1.set$y(textField1, 10);
    textField1.set$width(textField1, 920);
    textField1.set$height(textField1, 20);
    this.addChild$1(textField1);
    textField2 = $.TextField$();
    textField2.set$defaultTextFormat($.TextFormat$("Helvetica,Arial", 16, 4294901760, "left", false, 0, false, 0, 0, 0, false));
    textField2.set$text(textField2, text);
    textField2.set$x(textField2, 10);
    textField2.set$y(textField2, 50);
    textField2.set$width(textField2, 200);
    textField2.set$height(textField2, 300);
    textField2.set$wordWrap(textField2, true);
    this.addChild$1(textField2);
    textField3 = $.TextField$();
    textField3.set$defaultTextFormat($.TextFormat$("Helvetica,Arial", 16, 4278190335, "right", false, 0, false, 0, 0, 0, false));
    textField3.set$text(textField3, text);
    textField3.set$x(textField3, 300);
    textField3.set$y(textField3, 50);
    textField3.set$width(textField3, 200);
    textField3.set$height(textField3, 300);
    textField3.set$wordWrap(textField3, true);
    this.addChild$1(textField3);
    textField4 = $.TextField$();
    textField4.set$defaultTextFormat($.TextFormat$("Caesar Dressing", 30, 4278190080, "center", false, 0, false, 0, 0, 0, false));
    textField4.set$text(textField4, text);
    textField4.set$x(textField4, 590);
    textField4.set$y(textField4, 50);
    textField4.set$width(textField4, 340);
    textField4.set$height(textField4, 300);
    textField4.set$wordWrap(textField4, true);
    this.addChild$1(textField4);
  }
};

$$.TweenerDemo = {"": "DisplayObjectContainer;_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  TweenerDemo$0: function() {
    var textField1 = $.TextField$();
    textField1.set$defaultTextFormat($.TextFormat$("Helvetica,Arial", 14, 4289309097, "left", true, 0, false, 0, 0, 0, false));
    textField1.set$text(textField1, "ToDo: show a cool demo ...");
    textField1.set$x(textField1, 10);
    textField1.set$y(textField1, 10);
    textField1.set$width(textField1, 920);
    textField1.set$height(textField1, 20);
    this.addChild$1(textField1);
  }
};

$$.TransititionTypeDemo = {"": "Object;_transitionFunctions",
  getTransitionDiv$0: function() {
    var transitionDivElement, t1, t2, i, rowDiv, t3, t4, j, t5, $name, cellDiv;
    transitionDivElement = $.$$dom_createElement$1$x(document, "div");
    for (t1 = this._transitionFunctions, t2 = $.getInterceptor$x(transitionDivElement), i = 0; i < t1.length / 4; ++i) {
      rowDiv = $.$$dom_createElement$1$x(document, "div");
      t3 = $.getInterceptor$x(rowDiv);
      t4 = t3.get$classes(rowDiv);
      t4.add$1(t4, "row");
      $.add$1$ax(t2.get$children(transitionDivElement), rowDiv);
      for (t4 = i * 4, j = 0; j < 4; ++j) {
        t5 = t4 + j;
        if (t5 < 0 || t5 >= t1.length)
          throw $.ioore(t5);
        $name = $.$index$asx(t1[t5], "name");
        if (t5 >= t1.length)
          throw $.ioore(t5);
        cellDiv = this._drawTransition$2($name, $.$index$asx(t1[t5], "transition"));
        $.set$id$x(cellDiv, "cell");
        $.add$1$ax(t3.get$children(rowDiv), cellDiv);
      }
    }
    return transitionDivElement;
  },
  _drawTransition$2: function($name, transitionFunction) {
    var div, t1, t2, canvasElement, headline, stage, shape, graphics, i, ratio;
    div = $.$$dom_createElement$1$x(document, "div");
    t1 = $.getInterceptor$x(div);
    t2 = t1.get$classes(div);
    t2.add$1(t2, "span3");
    $.set$height$x(div.style, "130px");
    canvasElement = $.CanvasElement_CanvasElement(140, 200);
    t2 = $.getInterceptor$x(canvasElement);
    $.set$position$x(t2.get$style(canvasElement), "absolute");
    $.set$zIndex$x(t2.get$style(canvasElement), "1");
    $.add$1$ax(t1.get$children(div), canvasElement);
    headline = $.$$dom_createElement$1$x(document, "div");
    $.getInterceptor$x(headline).textContent = $name;
    $.set$position$x(headline.style, "relative");
    $.set$zIndex$x(headline.style, "2");
    $.set$top$x(headline.style, "6px");
    $.add$1$ax(t1.get$children(div), headline);
    stage = $.Stage$("stage", canvasElement);
    shape = $.Shape$();
    graphics = shape.get$graphics();
    graphics.beginPath$0(graphics);
    graphics.moveTo$2(graphics, 0.5, 30.5);
    graphics.lineTo$2(graphics, 199.5, 30.5);
    graphics.lineTo$2(graphics, 199.5, 109.5);
    graphics.lineTo$2(graphics, 0.5, 109.5);
    graphics.closePath$0(graphics);
    graphics.strokeColor$1(4278190080);
    graphics.fillColor$1(4292861919);
    graphics.beginPath$0(graphics);
    graphics.moveTo$2(graphics, 0.5, 109.5);
    for (i = 0; i <= 199; ++i) {
      ratio = i / 199;
      t1 = transitionFunction.call$1(ratio);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      graphics.lineTo$2(graphics, 0.5 + ratio * 199, 109.5 - 79 * t1);
    }
    graphics.strokeColor$2(4278190335, 2);
    stage.addChild$1(shape);
    stage.materialize$0();
    return div;
  }
};

$$.FlumpDemo = {"": "DisplayObjectContainer;_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  FlumpDemo$0: function() {
    var flumpLibrary, idle, walk, attack, defeat;
    flumpLibrary = $.resourceManager.getFlumpLibrary$1("flump");
    idle = $.FlumpMovie$(flumpLibrary, "idle");
    idle.set$x(idle, 500);
    idle.set$y(idle, 200);
    this.addChild$1(idle);
    walk = $.FlumpMovie$(flumpLibrary, "walk");
    walk.set$x(walk, 150);
    walk.set$y(walk, 460);
    this.addChild$1(walk);
    attack = $.FlumpMovie$(flumpLibrary, "attack");
    attack.set$x(attack, 450);
    attack.set$y(attack, 460);
    this.addChild$1(attack);
    defeat = $.FlumpMovie$(flumpLibrary, "defeat");
    defeat.set$x(defeat, 720);
    defeat.set$y(defeat, 460);
    this.addChild$1(defeat);
    $.add$1$ax($.juggler, idle);
    $.add$1$ax($.juggler, walk);
    $.add$1$ax($.juggler, attack);
    $.add$1$ax($.juggler, defeat);
    $.BitmapData_load("images/flumpLibraryAtlas0.png").then$1(new $.anon3(this));
  }
};

$$.anon3 = {"": "Closure;this_0",
  call$1: function(bitmapData) {
    var bitmap = $.Bitmap$(bitmapData, "auto");
    bitmap.set$x(bitmap, 40);
    bitmap.set$y(bitmap, 40);
    this.this_0.addChild$1(bitmap);
  }
};

$$.TexturePackerDemo = {"": "DisplayObjectContainer;_liblib6$_textureAtlas,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  _showLevelupAnimation$0: function() {
    var offset, i, bitmapData, bitmap, t1, tween1, tween2, offset0;
    for (offset = 330, i = 0; i < 7; ++i, offset = offset0) {
      bitmapData = this._liblib6$_textureAtlas.getBitmapData$1("LevelUp" + $.S(i));
      bitmap = $.Bitmap$(bitmapData, "auto");
      t1 = $.getInterceptor$x(bitmapData);
      bitmap.set$pivotX($.$div$n(t1.get$width(bitmapData), 2));
      bitmap.set$pivotY($.$div$n(t1.get$height(bitmapData), 2));
      bitmap.set$x(bitmap, offset + $.$div$n(t1.get$width(bitmapData), 2));
      bitmap.set$y(bitmap, 150);
      bitmap.set$scaleX(0);
      bitmap.set$scaleY(0);
      this.addChild$1(bitmap);
      tween1 = $.Tween$(bitmap, 2, $.TransitionFunction_easeOutElastic);
      tween1.animate$2("scaleX", 1);
      tween1.animate$2("scaleY", 1);
      tween1.set$delay(i * 0.05);
      tween2 = $.Tween$(bitmap, 0.4, $.TransitionFunction_linear);
      tween2.animate$2("scaleX", 0);
      tween2.animate$2("scaleY", 0);
      tween2.set$delay(2);
      tween2.set$onComplete(tween2, new $.TexturePackerDemo__showLevelupAnimation_anon(bitmap));
      $.add$1$ax($.juggler, tween1);
      $.add$1$ax($.juggler, tween2);
      t1 = t1.get$width(bitmapData);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      offset0 = offset + 5 + t1;
    }
    $.juggler.delayCall$2(new $.TexturePackerDemo__showLevelupAnimation_anon0(this), 3);
  },
  TexturePackerDemo$0: function() {
    this._liblib6$_textureAtlas = $.resourceManager.getTextureAtlas$1("levelUp");
    this._showLevelupAnimation$0();
    $.BitmapData_load("images/LevelupTextureAtlas.png").then$1(new $.anon2(this));
  }
};

$$.anon2 = {"": "Closure;this_0",
  call$1: function(bitmapData) {
    var bitmap = $.Bitmap$(bitmapData, "auto");
    bitmap.set$x(bitmap, 70);
    bitmap.set$y(bitmap, 40);
    this.this_0.addChild$1(bitmap);
  }
};

$$.TexturePackerDemo__showLevelupAnimation_anon = {"": "Closure;bitmap_0",
  call$0: function() {
    return this.bitmap_0.removeFromParent$0();
  }
};

$$.TexturePackerDemo__showLevelupAnimation_anon0 = {"": "Closure;this_1",
  call$0: function() {
    return this.this_1._showLevelupAnimation$0();
  }
};

$$.DelayedCall = {"": "Object;_action,_currentTime,_totalTime,_repeatCount",
  _action$0: function() {
    return this._action.call$0();
  },
  advanceTime$1: function(time) {
    var newTime, t1;
    newTime = $.$add$ns(this._currentTime, time);
    if (typeof newTime !== "number")
      return this.advanceTime$1$bailout(1, newTime);
    while (true) {
      t1 = this._totalTime;
      if (!(newTime >= t1 && this._repeatCount > 0))
        break;
      this._currentTime = t1;
      this._repeatCount = this._repeatCount - 1;
      this._action$0();
      newTime -= this._totalTime;
    }
    this._currentTime = newTime;
    return this._repeatCount > 0;
  },
  advanceTime$1$bailout: function(state0, newTime) {
    var t1;
    while (true) {
      t1 = $.getInterceptor$n(newTime);
      if (!(t1.$ge(newTime, this._totalTime) === true && this._repeatCount > 0))
        break;
      this._currentTime = this._totalTime;
      this._repeatCount = this._repeatCount - 1;
      this._action$0();
      newTime = t1.$sub(newTime, this._totalTime);
    }
    this._currentTime = newTime;
    return this._repeatCount > 0;
  },
  DelayedCall$2: function(action, delay) {
    this._totalTime = $.max(delay, 0.0001);
  },
  $isAnimatable: true
};

$$.Juggler = {"": "Object;_animatables,_animatablesCount,_elapsedTime",
  add$1: function(_, animatable) {
    var t1, t3, t4;
    if (animatable == null)
      return;
    if (this.contains$1(this, animatable))
      return;
    t1 = this._animatablesCount;
    if (t1 !== (t1 | 0))
      return this.add$1$bailout(1, animatable, t1);
    t3 = this._animatables;
    t4 = t3.length;
    if (t1 === t4)
      t3.push(animatable);
    else {
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      t3[t1] = animatable;
    }
    this._animatablesCount = this._animatablesCount + 1;
  },
  add$1$bailout: function(state0, animatable, t1) {
    var t3, t4;
    t3 = this._animatables;
    t4 = t3.length;
    if (t1 === t4)
      t3.push(animatable);
    else {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      t3[t1] = animatable;
    }
    this._animatablesCount = this._animatablesCount + 1;
  },
  remove$1: function(_, animatable) {
    var t1, i;
    if (animatable == null)
      return;
    for (t1 = this._animatables, i = 0; i < this._animatablesCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$eq(t1[i], animatable) === true) {
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i] = null;
        break;
      }
    }
  },
  contains$1: function(_, animatable) {
    var t1, i;
    if (animatable == null)
      return false;
    for (t1 = this._animatables, i = 0; i < this._animatablesCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$eq(t1[i], animatable) === true)
        return true;
    }
    return false;
  },
  removeTweens$1: function(displayObject) {
    var t1, i, animatable, t2;
    if (displayObject == null)
      return;
    for (t1 = this._animatables, i = 0; i < this._animatablesCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      animatable = t1[i];
      if (animatable != null && typeof animatable === "object" && animatable !== null && !!animatable.$isTween) {
        t2 = animatable.get$displayObject();
        if (t2 == null ? displayObject == null : t2 === displayObject) {
          if (i >= t1.length)
            throw $.ioore(i);
          t1[i] = null;
        }
      }
    }
  },
  delayCall$2: function(action, delay) {
    var delayedCall = $.DelayedCall$(action, delay);
    this.add$1(this, delayedCall);
    return delayedCall;
  },
  advanceTime$1: function(time) {
    var animatablesCount, t1, tail, head, animatable, t2, tail0, t3;
    this._elapsedTime = this._elapsedTime + time;
    animatablesCount = this._animatablesCount;
    if (animatablesCount !== (animatablesCount | 0))
      return this.advanceTime$1$bailout(1, time, animatablesCount);
    for (t1 = this._animatables, tail = 0, head = 0; head < animatablesCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      animatable = t1[head];
      if (animatable == null)
        continue;
      if ($.$eq(animatable.advanceTime$1(time), false) === true) {
        if (head >= t1.length)
          throw $.ioore(head);
        t1[head] = null;
        continue;
      }
      if (tail !== head) {
        t2 = t1.length;
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = animatable;
        if (head >= t2)
          throw $.ioore(head);
        t1[head] = null;
      }
      ++tail;
    }
    if (tail !== animatablesCount) {
      for (t2 = t1.length, head = animatablesCount; head < this._animatablesCount; ++head, tail = tail0) {
        tail0 = tail + 1;
        if (head < 0 || head >= t2)
          throw $.ioore(head);
        t3 = t1[head];
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = t3;
        t1[head] = null;
      }
      this._animatablesCount = tail;
    }
    return true;
  },
  advanceTime$1$bailout: function(state0, time, animatablesCount) {
    var t1, tail, head, animatable, t2, tail0, t3;
    for (t1 = this._animatables, tail = 0, head = 0; head < animatablesCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      animatable = t1[head];
      if (animatable == null)
        continue;
      if ($.$eq(animatable.advanceTime$1(time), false) === true) {
        if (head >= t1.length)
          throw $.ioore(head);
        t1[head] = null;
        continue;
      }
      if (tail !== head) {
        t2 = t1.length;
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = animatable;
        if (head >= t2)
          throw $.ioore(head);
        t1[head] = null;
      }
      ++tail;
    }
    if (tail !== animatablesCount) {
      for (t2 = t1.length, head = animatablesCount; head < this._animatablesCount; ++head, tail = tail0) {
        tail0 = tail + 1;
        if (head !== (head | 0))
          throw $.iae(head);
        if (head < 0 || head >= t2)
          throw $.ioore(head);
        t3 = t1[head];
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = t3;
        t1[head] = null;
      }
      this._animatablesCount = tail;
    }
    return true;
  },
  $isAnimatable: true
};

$$._TweenProperty = {"": "Object;name>,startValue@,targetValue<"};

$$.Tween = {"": "Object;_displayObject,_transitionFunction,_tweenProperties,_onStart,_onUpdate,_onComplete,_totalTime,_currentTime,_delay,_roundToInt,_started",
  _transitionFunction$1: function(arg0) {
    return this._transitionFunction.call$1(arg0);
  },
  _onStart$0: function() {
    return this._onStart.call$0();
  },
  _onUpdate$0: function() {
    return this._onUpdate.call$0();
  },
  _onComplete$0: function() {
    return this._onComplete.call$0();
  },
  animate$2: function(property, targetValue) {
    var t1 = $.JSArray_methods.indexOf$1(["x", "y", "pivotX", "pivotY", "scaleX", "scaleY", "skewX", "skewY", "rotation", "alpha"], property);
    if (typeof t1 !== "number")
      return this.animate$2$bailout(1, property, targetValue, t1);
    if (t1 === -1)
      throw $.$$throw($.ArgumentError$("Error #9003: The supplied property ('" + property + "') is not supported at this time."));
    if (this._displayObject != null && !this._started)
      this._tweenProperties.push($._TweenProperty$(property, 0, targetValue));
  },
  animate$2$bailout: function(state0, property, targetValue, t1) {
    if ($.$eq(t1, -1) === true)
      throw $.$$throw($.ArgumentError$("Error #9003: The supplied property ('" + property + "') is not supported at this time."));
    if (this._displayObject != null && !this._started)
      this._tweenProperties.push($._TweenProperty$(property, 0, targetValue));
  },
  advanceTime$1: function(time) {
    var t1, t2, i, tp, transition, t3, t4, value;
    t1 = this._currentTime;
    if (t1 < this._totalTime || !this._started) {
      this._currentTime = t1 + time;
      t1 = this._currentTime;
      t2 = this._totalTime;
      if (t1 > t2)
        this._currentTime = t2;
      if (this._currentTime >= 0) {
        if (!this._started) {
          this._started = true;
          for (t1 = this._displayObject, t2 = this._tweenProperties, i = 0; i < t2.length; ++i) {
            tp = t2[i];
            switch ($.get$name$x(tp)) {
              case "x":
                tp.set$startValue(t1.get$x(t1));
                break;
              case "y":
                tp.set$startValue(t1.get$y(t1));
                break;
              case "pivotX":
                tp.set$startValue(t1.get$pivotX());
                break;
              case "pivotY":
                tp.set$startValue(t1.get$pivotY());
                break;
              case "scaleX":
                tp.set$startValue(t1.get$scaleX());
                break;
              case "scaleY":
                tp.set$startValue(t1.get$scaleY());
                break;
              case "skewX":
                tp.set$startValue(t1.get$skewX());
                break;
              case "skewY":
                tp.set$startValue(t1.get$skewY());
                break;
              case "rotation":
                tp.set$startValue(t1.get$rotation());
                break;
              case "alpha":
                tp.set$startValue(t1.get$alpha(t1));
                break;
            }
          }
          if (this._onStart != null)
            this._onStart$0();
        }
        transition = this._transitionFunction$1(this._currentTime / this._totalTime);
        for (t1 = this._displayObject, t2 = this._tweenProperties, t3 = $.getInterceptor$n(transition), i = 0; i < t2.length; ++i) {
          tp = t2[i];
          t4 = tp.get$startValue();
          value = $.$add$ns(t4, t3.$mul(transition, $.$sub$n(tp.get$targetValue(), t4)));
          if (this._roundToInt)
            value = $.round$0$nx(value);
          switch ($.get$name$x(tp)) {
            case "x":
              t1.set$x(t1, value);
              break;
            case "y":
              t1.set$y(t1, value);
              break;
            case "pivotX":
              t1.set$pivotX(value);
              break;
            case "pivotY":
              t1.set$pivotY(value);
              break;
            case "scaleX":
              t1.set$scaleX(value);
              break;
            case "scaleY":
              t1.set$scaleY(value);
              break;
            case "skewX":
              t1.set$skewX(value);
              break;
            case "skewY":
              t1.set$skewY(value);
              break;
            case "rotation":
              t1.set$rotation(value);
              break;
            case "alpha":
              t1.set$alpha(t1, value);
              break;
          }
        }
        if (this._onUpdate != null)
          this._onUpdate$0();
        if (this._onComplete != null && this._currentTime === this._totalTime)
          this._onComplete$0();
      }
    }
    return this._currentTime < this._totalTime;
  },
  get$displayObject: function() {
    return this._displayObject;
  },
  set$delay: function(value) {
    if (!this._started)
      this._currentTime = this._currentTime + this._delay - value;
    this._delay = value;
  },
  set$onComplete: function(_, $function) {
    this._onComplete = $function;
  },
  Tween$3: function(displayObject, time, transitionFunction) {
    this._currentTime = 0;
    this._totalTime = $.max(0.0001, time);
    this._delay = 0;
    this._roundToInt = false;
    this._started = false;
  },
  $isTween: true,
  $isAnimatable: true
};

$$.Bitmap = {"": "DisplayObject;bitmapData,pixelSnapping,clipRectangle,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1, t2, width, height;
    t1 = this.bitmapData;
    t2 = t1 != null;
    width = t2 ? $.get$width$x(t1) : 0;
    height = t2 ? $.get$height$x(t1) : 0;
    return $._getBoundsTransformedHelper(matrix, width, height, returnRectangle);
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1 = this.bitmapData;
    if (t1 != null && localX >= 0 && localY >= 0 && $.JSNumber_methods.$lt(localX, $.get$width$x(t1)) && $.JSNumber_methods.$lt(localY, $.get$height$x(t1)))
      return this;
    return;
  },
  render$1: function(renderState) {
    var t1, t2;
    t1 = this.bitmapData;
    if (t1 != null) {
      t2 = this.clipRectangle;
      if (t2 == null)
        t1.render$1(renderState);
      else
        t1.renderClipped$2(renderState, t2);
    }
  },
  Bitmap$2: function(bitmapData, pixelSnapping) {
    this.clipRectangle = null;
  }
};

$$.BitmapData = {"": "Object;_width,_height,_transparent,_liblib5$_source,_context,_frameMode,_frameOffsetX,_frameOffsetY,_frameX,_frameY,_frameWidth,_frameHeight",
  get$width: function(_) {
    return this._width;
  },
  get$height: function(_) {
    return this._height;
  },
  applyFilter$4: function(sourceBitmapData, sourceRect, destPoint, filter) {
    filter.apply$4(sourceBitmapData, sourceRect, this, destPoint);
  },
  render$1: function(renderState) {
    var renderStateContext, t1, t2, t3, t4, t5, t6;
    renderStateContext = renderState.get$context(renderState);
    switch (this._frameMode) {
      case 0:
        $.drawImage$3$x(renderStateContext, this._liblib5$_source, this._frameOffsetX, this._frameOffsetY);
        break;
      case 1:
        t1 = this._liblib5$_source;
        t2 = this._frameX;
        t3 = this._frameY;
        t4 = this._frameWidth;
        t5 = this._frameHeight;
        $.drawImageScaledFromSource$9$x(renderStateContext, t1, t2, t3, t4, t5, this._frameOffsetX, this._frameOffsetY, t4, t5);
        break;
      case 2:
        t1 = $.getInterceptor$x(renderStateContext);
        t1.transform$6(renderStateContext, 0, -1, 1, 0, this._frameOffsetX, $.$add$ns(this._frameOffsetY, this._frameHeight));
        t2 = this._liblib5$_source;
        t3 = this._frameX;
        t4 = this._frameY;
        t5 = this._frameHeight;
        t6 = this._frameWidth;
        t1.drawImageScaledFromSource$9(renderStateContext, t2, t3, t4, t5, t6, 0, 0, t5, t6);
        break;
    }
  },
  renderClipped$2: function(renderState, clipRectangle) {
    var renderStateContext, fLeft, fTop, t1, fRight, t2, fBottom, cLeft, cTop, cRight, cBottom, iLeft, iTop, iRight, iBottom, iOffsetX, iOffsetY, iWidth, iHeight;
    renderStateContext = renderState.get$context(renderState);
    if ($.$le$n($.JSNull_methods.get$width(clipRectangle), 0) === true || $.$le$n($.JSNull_methods.get$height(clipRectangle), 0) === true)
      return;
    switch (this._frameMode) {
      case 0:
        $.drawImageScaledFromSource$9$x(renderStateContext, this._liblib5$_source, $.$sub$n($.JSNull_methods.get$x(clipRectangle), this._frameOffsetX), $.$sub$n($.JSNull_methods.get$y(clipRectangle), this._frameOffsetY), $.JSNull_methods.get$width(clipRectangle), $.JSNull_methods.get$height(clipRectangle), $.$add$ns($.JSNull_methods.get$x(clipRectangle), this._frameOffsetX), $.$add$ns($.JSNull_methods.get$y(clipRectangle), this._frameOffsetY), $.JSNull_methods.get$width(clipRectangle), $.JSNull_methods.get$height(clipRectangle));
        break;
      case 1:
        fLeft = this._frameX;
        fTop = this._frameY;
        t1 = $.getInterceptor$ns(fLeft);
        fRight = t1.$add(fLeft, this._frameWidth);
        t2 = $.getInterceptor$ns(fTop);
        fBottom = t2.$add(fTop, this._frameHeight);
        cLeft = $.$add$ns($.$sub$n(this._frameX, this._frameOffsetX), $.JSNull_methods.get$x(clipRectangle));
        cTop = $.$add$ns($.$sub$n(this._frameY, this._frameOffsetY), $.JSNull_methods.get$y(clipRectangle));
        cRight = $.$add$ns(cLeft, $.JSNull_methods.get$width(clipRectangle));
        cBottom = $.$add$ns(cTop, $.JSNull_methods.get$height(clipRectangle));
        iLeft = t1.$gt(fLeft, cLeft) === true ? fLeft : cLeft;
        iTop = t2.$gt(fTop, cTop) === true ? fTop : cTop;
        iRight = $.$lt$n(fRight, cRight) === true ? fRight : cRight;
        iBottom = $.$lt$n(fBottom, cBottom) === true ? fBottom : cBottom;
        iOffsetX = $.$add$ns($.$sub$n(this._frameOffsetX, fLeft), iLeft);
        iOffsetY = $.$add$ns($.$sub$n(this._frameOffsetY, fTop), iTop);
        iWidth = $.$sub$n(iRight, iLeft);
        iHeight = $.$sub$n(iBottom, iTop);
        if ($.$gt$n(iWidth, 0) === true && $.$gt$n(iHeight, 0) === true)
          $.drawImageScaledFromSource$9$x(renderStateContext, this._liblib5$_source, iLeft, iTop, iWidth, iHeight, iOffsetX, iOffsetY, iWidth, iHeight);
        break;
      case 2:
        fLeft = this._frameX;
        fTop = this._frameY;
        t1 = $.getInterceptor$ns(fLeft);
        fRight = t1.$add(fLeft, this._frameHeight);
        t2 = $.getInterceptor$ns(fTop);
        fBottom = t2.$add(fTop, this._frameWidth);
        cLeft = $.$sub$n($.$add$ns($.$sub$n($.$add$ns(this._frameX, this._frameOffsetY), $.JSNull_methods.get$y(clipRectangle)), this._frameHeight), $.JSNull_methods.get$height(clipRectangle));
        cTop = $.$add$ns($.$sub$n(this._frameY, this._frameOffsetX), $.JSNull_methods.get$x(clipRectangle));
        cRight = $.$add$ns(cLeft, $.JSNull_methods.get$height(clipRectangle));
        cBottom = $.$add$ns(cTop, $.JSNull_methods.get$width(clipRectangle));
        iLeft = t1.$gt(fLeft, cLeft) === true ? fLeft : cLeft;
        iTop = t2.$gt(fTop, cTop) === true ? fTop : cTop;
        iRight = $.$lt$n(fRight, cRight) === true ? fRight : cRight;
        iBottom = $.$lt$n(fBottom, cBottom) === true ? fBottom : cBottom;
        iOffsetX = $.$add$ns($.$sub$n(this._frameOffsetX, fTop), iTop);
        iOffsetY = $.$sub$n($.$add$ns(this._frameOffsetY, fRight), iRight);
        iWidth = $.$sub$n(iBottom, iTop);
        iHeight = $.$sub$n(iRight, iLeft);
        if ($.$gt$n(iWidth, 0) === true && $.$gt$n(iHeight, 0) === true) {
          t1 = $.getInterceptor$x(renderStateContext);
          t1.transform$6(renderStateContext, 0, -1, 1, 0, iOffsetX, $.$add$ns(iOffsetY, iHeight));
          t1.drawImageScaledFromSource$9(renderStateContext, this._liblib5$_source, iLeft, iTop, iHeight, iWidth, 0, 0, iHeight, iWidth);
        }
        break;
    }
  },
  _getContext$0: function() {
    var t1, canvas, t2, t3, t4, t5, t6;
    if (this._context == null) {
      t1 = this._width;
      canvas = $.CanvasElement_CanvasElement(this._height, t1);
      this._context = $.get$context2d$x(canvas);
      switch (this._frameMode) {
        case 0:
          $.drawImage$3$x(this._context, this._liblib5$_source, this._frameOffsetX, this._frameOffsetY);
          break;
        case 1:
          t1 = this._context;
          t2 = this._liblib5$_source;
          t3 = this._frameX;
          t4 = this._frameY;
          t5 = this._frameWidth;
          t6 = this._frameHeight;
          $.drawImageScaledFromSource$9$x(t1, t2, t3, t4, t5, t6, this._frameOffsetX, this._frameOffsetY, t5, t6);
          break;
        case 2:
          $.setTransform$6$x(this._context, 0, -1, 1, 0, this._frameOffsetX, $.$add$ns(this._frameOffsetY, this._frameHeight));
          t1 = this._context;
          t2 = this._liblib5$_source;
          t3 = this._frameX;
          t4 = this._frameY;
          t5 = this._frameHeight;
          t6 = this._frameWidth;
          $.drawImageScaledFromSource$9$x(t1, t2, t3, t4, t5, t6, 0, 0, t5, t6);
          $.setTransform$6$x(this._context, 1, 0, 0, 1, 0, 0);
          break;
      }
      this._liblib5$_source = canvas;
      this._frameMode = 0;
      this._frameOffsetX = 0;
      this._frameOffsetY = 0;
    }
    return this._context;
  },
  BitmapData$4: function(width, height, transparent, fillColor) {
    var t1, canvas;
    this._width = width;
    this._height = height;
    this._transparent = transparent;
    t1 = this._width;
    canvas = $.CanvasElement_CanvasElement(this._height, t1);
    this._context = $.get$context2d$x(canvas);
    t1 = this._transparent ? $._color2rgba(fillColor) : $._color2rgb(fillColor);
    $.set$fillStyle$x(this._context, t1);
    $.fillRect$4$x(this._context, 0, 0, width, height);
    this._liblib5$_source = canvas;
    this._frameMode = 0;
    this._frameOffsetX = 0;
    this._frameOffsetY = 0;
  },
  BitmapData$fromTextureAtlasFrame$1: function(textureAtlasFrame) {
    var t1;
    this._width = textureAtlasFrame.get$originalWidth();
    this._height = textureAtlasFrame.get$originalHeight();
    this._transparent = true;
    this._liblib5$_source = textureAtlasFrame.get$textureAtlas().get$imageElement();
    this._frameMode = textureAtlasFrame.get$rotated() === true ? 2 : 1;
    t1 = $.getInterceptor$x(textureAtlasFrame);
    this._frameOffsetX = t1.get$offsetX(textureAtlasFrame);
    this._frameOffsetY = t1.get$offsetY(textureAtlasFrame);
    this._frameX = textureAtlasFrame.get$frameX();
    this._frameY = textureAtlasFrame.get$frameY();
    this._frameWidth = textureAtlasFrame.get$frameWidth();
    this._frameHeight = textureAtlasFrame.get$frameHeight();
  },
  BitmapData$fromImageElement$1: function(imageElement) {
    var t1 = $.getInterceptor(imageElement);
    if (imageElement == null)
      throw $.$$throw($.ArgumentError$(null));
    this._width = t1.get$naturalWidth(imageElement);
    this._height = t1.get$naturalHeight(imageElement);
    this._transparent = true;
    this._liblib5$_source = imageElement;
    this._frameMode = 0;
    this._frameOffsetX = 0;
    this._frameOffsetY = 0;
  }
};

$$.BitmapData_load_anon = {"": "Closure;completer_0,image_1",
  call$1: function($event) {
    var t1 = this.completer_0;
    return t1.complete$1(t1, $.BitmapData$fromImageElement(this.image_1));
  }
};

$$.BitmapData_load_anon0 = {"": "Closure;completer_2",
  call$1: function($event) {
    return this.completer_2.completeError$1($.StateError$("Error loading image."));
  }
};

$$.anon = {"": "Closure;",
  call$0: function() {
    var t1 = $.List_List($, $.DisplayObject);
    $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
    return t1;
  }
};

$$.DisplayObject = {"": "EventDispatcher;_alpha<,_mask<,_cache<",
  get$onEnterFrame: function() {
    return $.CONSTANT32.forTarget$1(this);
  },
  get$x: function(_) {
    return this._x;
  },
  get$y: function(_) {
    return this._y;
  },
  get$pivotX: function() {
    return this._pivotX;
  },
  get$pivotY: function() {
    return this._pivotY;
  },
  get$scaleX: function() {
    return this._scaleX;
  },
  get$scaleY: function() {
    return this._scaleY;
  },
  get$skewX: function() {
    return this._skewX;
  },
  get$skewY: function() {
    return this._skewY;
  },
  get$rotation: function() {
    return this._rotation;
  },
  get$alpha: function(_) {
    return this._alpha;
  },
  get$visible: function() {
    return this._visible;
  },
  get$name: function(_) {
    return this._name;
  },
  get$parent: function(_) {
    return this._parent;
  },
  get$root: function() {
    var currentObject, currentObject0;
    for (currentObject = this; currentObject0 = currentObject._parent, currentObject0 != null; currentObject = currentObject0)
      ;
    return currentObject;
  },
  get$stage: function() {
    var root = this.get$root();
    if (typeof root === "object" && root !== null && !!root.$isStage)
      return root;
    return;
  },
  set$x: function(_, value) {
    this._x = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$y: function(_, value) {
    this._y = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$pivotX: function(value) {
    this._pivotX = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$pivotY: function(value) {
    this._pivotY = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$scaleX: function(value) {
    this._scaleX = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$scaleY: function(value) {
    this._scaleY = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$skewX: function(value) {
    this._skewX = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$skewY: function(value) {
    this._skewY = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$rotation: function(value) {
    this._rotation = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$alpha: function(_, value) {
    this._alpha = $.toDouble$0$n(value);
    this._transformationMatrixRefresh = true;
  },
  set$mask: function(_, value) {
    this._mask = value;
  },
  get$width: function(_) {
    return $.get$width$x(this.getBoundsTransformed$1(this.get$_transformationMatrix()));
  },
  get$height: function(_) {
    return $.get$height$x(this.getBoundsTransformed$1(this.get$_transformationMatrix()));
  },
  set$width: function(_, value) {
    var normalWidth;
    this.set$scaleX(1);
    normalWidth = this.get$width(this);
    this.set$scaleX($.$eq(normalWidth, 0) !== true ? $.$div$n(value, normalWidth) : 1);
  },
  set$height: function(_, value) {
    var normalHeight;
    this.set$scaleY(1);
    normalHeight = this.get$height(this);
    this.set$scaleY($.$eq(normalHeight, 0) !== true ? $.$div$n(value, normalHeight) : 1);
  },
  removeFromParent$0: function() {
    var t1 = this._parent;
    if (t1 != null)
      t1.removeChild$1(this);
  },
  get$_transformationMatrix: function() {
    var t1, t2, skewXrotation, skewYrotation, cosX, sinX, a, b, c, d, t3;
    if (this._transformationMatrixRefresh) {
      this._transformationMatrixRefresh = false;
      t1 = this._skewX;
      t2 = this._rotation;
      skewXrotation = t1 + t2;
      skewYrotation = this._skewY + t2;
      if (skewXrotation === 0 && skewYrotation === 0) {
        t1 = this._scaleX;
        t2 = this._scaleY;
        this._transformationMatrixPrivate.setTo$6(t1, 0, 0, t2, this._x - this._pivotX * t1, this._y - this._pivotY * t2);
      } else {
        cosX = $.cos(skewXrotation);
        sinX = $.sin(skewXrotation);
        t1 = this._scaleX;
        if (skewXrotation === skewYrotation) {
          if (typeof cosX !== "number")
            throw $.iae(cosX);
          a = t1 * cosX;
          if (typeof sinX !== "number")
            throw $.iae(sinX);
          b = t1 * sinX;
          t1 = this._scaleY;
          c = -t1 * sinX;
          d = t1 * cosX;
        } else {
          t2 = $.cos(skewYrotation);
          if (typeof t2 !== "number")
            throw $.iae(t2);
          a = t1 * t2;
          t2 = this._scaleX;
          t1 = $.sin(skewYrotation);
          if (typeof t1 !== "number")
            throw $.iae(t1);
          b = t2 * t1;
          t1 = this._scaleY;
          if (typeof sinX !== "number")
            throw $.iae(sinX);
          c = -t1 * sinX;
          if (typeof cosX !== "number")
            throw $.iae(cosX);
          d = t1 * cosX;
        }
        t1 = this._x;
        t2 = this._pivotX;
        t3 = this._pivotY;
        this._transformationMatrixPrivate.setTo$6(a, b, c, d, t1 - (t2 * a + t3 * c), this._y - (t2 * b + t3 * d));
      }
    }
    return this._transformationMatrixPrivate;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1;
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    t1 = $.getInterceptor$x(returnRectangle);
    t1.set$x(returnRectangle, matrix.get$tx());
    t1.set$y(returnRectangle, matrix.get$ty());
    t1.set$width(returnRectangle, 0);
    t1.set$height(returnRectangle, 0);
    return returnRectangle;
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    if ($.contains$2$asx(this.getBoundsTransformed$1(this._tmpMatrixIdentity), localX, localY))
      return this;
    return;
  },
  globalToLocal$1: function(globalPoint) {
    var t1, displayObject;
    t1 = this._tmpMatrix;
    t1.identity$0();
    for (displayObject = this; displayObject != null; displayObject = displayObject._parent)
      t1.concat$1(t1, displayObject.get$_transformationMatrix());
    t1.invert$0();
    return t1.transformPoint$1(globalPoint);
  },
  dispatchEvent$1: function(_, $event) {
    var ancestor, ancestors, t1, i;
    if ($event.get$captures() || $event.get$bubbles($event) === true) {
      for (ancestor = this._parent, ancestors = null; ancestor != null; ancestor = ancestor._parent)
        if (ancestor.hasEventListener$1($event.get$type($event))) {
          if (ancestors == null)
            ancestors = $.listTypeCast($.get$_displayObjectListPool().pop$0());
          $.add$1$ax(ancestors, ancestor);
        }
    } else
      ancestors = null;
    if ($event.get$captures() && ancestors != null) {
      t1 = $.getInterceptor$asx(ancestors);
      i = $.$sub$n(t1.get$length(ancestors), 1);
      if (typeof i !== "number")
        return this.dispatchEvent$1$bailout1(1, $event, t1, i, ancestors);
      for (; i >= 0; --i)
        if ($event.get$stopsPropagation() === false)
          t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 1);
    }
    if ($event.get$stopsPropagation() === false)
      this._dispatchEventInternal$4($event, this, this, 2);
    if ($event.get$bubbles($event) === true && ancestors != null)
      for (t1 = $.getInterceptor$asx(ancestors), i = 0; $.JSNumber_methods.$lt(i, t1.get$length(ancestors)); ++i)
        if ($event.get$stopsPropagation() === false)
          t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 3);
    if (ancestors != null) {
      $.clear$0$ax(ancestors);
      $.get$_displayObjectListPool().push$1(ancestors);
    }
  },
  dispatchEvent$1$bailout1: function(state0, $event, t1, i, ancestors) {
    switch (state0) {
      case 0:
        if ($event.get$captures() || $event.get$bubbles($event) === true) {
          for (ancestor = this._parent, ancestors = null; ancestor != null; ancestor = ancestor._parent)
            if (ancestor.hasEventListener$1($event.get$type($event))) {
              if (ancestors == null)
                ancestors = $.listTypeCast($.get$_displayObjectListPool().pop$0());
              $.add$1$ax(ancestors, ancestor);
            }
        } else
          ancestors = null;
      case 1:
        var ancestor, t2;
        if (state0 === 1 || state0 === 0 && $event.get$captures() && ancestors != null)
          switch (state0) {
            case 0:
              t1 = $.getInterceptor$asx(ancestors);
              i = $.$sub$n(t1.get$length(ancestors), 1);
            case 1:
              state0 = 0;
              for (; t2 = $.getInterceptor$n(i), t2.$ge(i, 0) === true; i = t2.$sub(i, 1))
                if ($event.get$stopsPropagation() === false)
                  t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 1);
          }
        if ($event.get$stopsPropagation() === false)
          this._dispatchEventInternal$4($event, this, this, 2);
        if ($event.get$bubbles($event) === true && ancestors != null)
          for (t1 = $.getInterceptor$asx(ancestors), i = 0; $.JSNumber_methods.$lt(i, t1.get$length(ancestors)); ++i)
            if ($event.get$stopsPropagation() === false)
              t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 3);
        if (ancestors != null) {
          $.clear$0$ax(ancestors);
          $.get$_displayObjectListPool().push$1(ancestors);
        }
    }
  },
  _setParent$1: function(value) {
    var ancestor;
    for (ancestor = value; ancestor != null; ancestor = ancestor._parent)
      if (ancestor === this)
        throw $.$$throw($.ArgumentError$("Error #2150: An object cannot be added as a child to one of it's children (or children's children, etc.)."));
    this._parent = value;
  }
};

$$.DisplayObjectContainer = {"": "InteractiveObject;",
  get$numChildren: function() {
    return this._children.length;
  },
  addChild$1: function(child) {
    var t1 = this._children;
    if (child.get$parent(child) === this) {
      $.JSArray_methods.removeAt$1(t1, $.JSArray_methods.indexOf$1(t1, child));
      t1.push(child);
    } else
      this.addChildAt$2(child, t1.length);
  },
  addChildAt$2: function(child, index) {
    var t1;
    if (index < 0 || index > this._children.length)
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    if (child === this)
      throw $.$$throw($.ArgumentError$("Error #2024: An object cannot be added as a child of itself."));
    t1 = this._children;
    if (child.get$parent(child) === this) {
      $.JSArray_methods.removeAt$1(t1, $.JSArray_methods.indexOf$1(t1, child));
      $.JSArray_methods.insert$2(t1, index > t1.length ? index - 1 : index, child);
    } else {
      child.removeFromParent$0();
      child._setParent$1(this);
      $.JSArray_methods.insert$2(t1, index, child);
      child.dispatchEvent$1(child, $.Event$("added", true));
      if (this.get$stage() != null)
        this._dispatchEventOnChildren$2(child, $.Event$("addedToStage", false));
    }
  },
  removeChild$1: function(child) {
    var childIndex = $.JSArray_methods.indexOf$1(this._children, child);
    if ($.$eq(childIndex, -1) === true)
      throw $.$$throw($.ArgumentError$("Error #2025: The supplied DisplayObject must be a child of the caller."));
    this.removeChildAt$1(childIndex);
  },
  removeChildAt$1: function(index) {
    var t1, child;
    t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) === true || t1.$ge(index, this._children.length) === true)
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    t1 = this._children;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    child = t1[index];
    $.dispatchEvent$1$x(child, $.Event$("removed", true));
    if (this.get$stage() != null)
      this._dispatchEventOnChildren$2(child, $.Event$("removedFromStage", false));
    child._setParent$1(null);
    $.JSArray_methods.removeAt$1(t1, index);
  },
  getChildAt$1: function(index) {
    var t1;
    if (index < 0 || index >= this._children.length)
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    t1 = this._children;
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1, t2, left, $top, right, bottom, i, child, rectangle, t3;
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    t1 = this._children;
    if (t1.length === 0)
      return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
    for (t2 = this._tmpMatrix, left = (1/0), $top = (1/0), right = (-1/0), bottom = (-1/0), i = 0; i < t1.length; ++i) {
      child = t1[i];
      t2.copyFromAndConcat$2(child.get$_transformationMatrix(), matrix);
      rectangle = child.getBoundsTransformed$2(t2, returnRectangle);
      t3 = $.getInterceptor$x(rectangle);
      if ($.$lt$n(t3.get$left(rectangle), left) === true)
        left = t3.get$left(rectangle);
      if ($.$lt$n(t3.get$top(rectangle), $top) === true)
        $top = t3.get$top(rectangle);
      if ($.$gt$n(t3.get$right(rectangle), right) === true)
        right = t3.get$right(rectangle);
      if ($.$gt$n(t3.get$bottom(rectangle), bottom) === true)
        bottom = t3.get$bottom(rectangle);
    }
    t1 = $.getInterceptor$x(returnRectangle);
    t1.set$x(returnRectangle, left);
    t1.set$y(returnRectangle, $top);
    t1.set$width(returnRectangle, $.$sub$n(right, left));
    t1.set$height(returnRectangle, $.$sub$n(bottom, $top));
    return returnRectangle;
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1, i, hit, child, matrix, deltaX, deltaY, displayObject;
    if (typeof localX !== "number")
      return this.hitTestInput$2$bailout1(1, localX, localY);
    if (typeof localY !== "number")
      return this.hitTestInput$2$bailout1(1, localX, localY);
    for (t1 = this._children, i = t1.length - 1, hit = null; i >= 0; --i) {
      if (i >= t1.length)
        throw $.ioore(i);
      child = t1[i];
      if (child.get$visible() === true) {
        matrix = child.get$_transformationMatrix();
        deltaX = localX - matrix.get$tx();
        deltaY = localY - matrix.get$ty();
        displayObject = child.hitTestInput$2((matrix.get$d() * deltaX - matrix.get$c() * deltaY) / matrix.get$det(), (matrix.get$a() * deltaY - matrix.get$b() * deltaX) / matrix.get$det());
        if (displayObject != null) {
          if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isInteractiveObject)
            if (displayObject.mouseEnabled)
              return this._mouseChildren ? displayObject : this;
          hit = this;
        }
      }
    }
    return hit;
  },
  hitTestInput$2$bailout1: function(state0, localX, localY) {
    var t1, i, t2, t3, hit, child, matrix, deltaX, deltaY, t4, t5, displayObject;
    for (t1 = this._children, i = t1.length - 1, t2 = $.getInterceptor$n(localX), t3 = $.getInterceptor$n(localY), hit = null; i >= 0; --i) {
      if (i >= t1.length)
        throw $.ioore(i);
      child = t1[i];
      if (child.get$visible() === true) {
        matrix = child.get$_transformationMatrix();
        deltaX = t2.$sub(localX, matrix.get$tx());
        deltaY = t3.$sub(localY, matrix.get$ty());
        t4 = matrix.get$d();
        if (typeof deltaX !== "number")
          throw $.iae(deltaX);
        t5 = matrix.get$c();
        if (typeof deltaY !== "number")
          throw $.iae(deltaY);
        displayObject = child.hitTestInput$2((t4 * deltaX - t5 * deltaY) / matrix.get$det(), (matrix.get$a() * deltaY - matrix.get$b() * deltaX) / matrix.get$det());
        if (displayObject != null) {
          if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isInteractiveObject)
            if (displayObject.mouseEnabled)
              return this._mouseChildren ? displayObject : this;
          hit = this;
        }
      }
    }
    return hit;
  },
  render$1: function(renderState) {
    var t1, i, child;
    for (t1 = this._children, i = 0; i < t1.length; ++i) {
      child = t1[i];
      if (child.get$visible() === true)
        renderState.renderDisplayObject$1(child);
    }
  },
  _dispatchEventOnChildren$2: function(displayObject, $event) {
    var children, i;
    $.dispatchEvent$1$x(displayObject, $event);
    if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isDisplayObjectContainer) {
      children = $.List_List$from(displayObject._children, false, $.DisplayObject);
      if (typeof children !== "string" && (typeof children !== "object" || children === null || children.constructor !== Array && !children.$isJavaScriptIndexingBehavior()))
        return this._dispatchEventOnChildren$2$bailout(1, $event, children);
      for (i = 0; i < children.length; ++i)
        this._dispatchEventOnChildren$2(children[i], $event);
    }
  },
  _dispatchEventOnChildren$2$bailout: function(state0, $event, children) {
    switch (state0) {
      case 0:
        $.dispatchEvent$1$x(displayObject, $event);
      case 1:
        var t1, i;
        if (state0 === 1 || state0 === 0 && typeof displayObject === "object" && displayObject !== null && !!displayObject.$isDisplayObjectContainer)
          switch (state0) {
            case 0:
              children = $.List_List$from(displayObject._children, false, $.DisplayObject);
            case 1:
              state0 = 0;
              for (t1 = $.getInterceptor$asx(children), i = 0; $.JSNumber_methods.$lt(i, t1.get$length(children)); ++i)
                this._dispatchEventOnChildren$2(t1.$index(children, i), $event);
          }
    }
  },
  $isDisplayObjectContainer: true
};

$$.Graphics = {"": "Object;_commands",
  beginPath$0: function(_) {
    return this._commands.push($._GraphicsCommand$("beginPath", null));
  },
  closePath$0: function(_) {
    return this._commands.push($._GraphicsCommand$("closePath", null));
  },
  moveTo$2: function(_, x, y) {
    return this._commands.push($._GraphicsCommand$("moveTo", [x, y]));
  },
  lineTo$2: function(_, x, y) {
    return this._commands.push($._GraphicsCommand$("lineTo", [x, y]));
  },
  strokeColor$4: function(color, width, joints, caps) {
    return this._commands.push($._GraphicsCommand$("strokeColor", [$._color2rgba(color), width, joints, caps]));
  },
  strokeColor$1: function(color) {
    return this.strokeColor$4(color, 1, "round", "round");
  },
  strokeColor$2: function(color, width) {
    return this.strokeColor$4(color, width, "round", "round");
  },
  fillColor$1: function(color) {
    return this._commands.push($._GraphicsCommand$("fillColor", [$._color2rgba(color)]));
  },
  render$1: function(renderState) {
    var context, t1, t2, t3, args, matrix;
    context = renderState.get$context(renderState);
    t1 = $.getInterceptor$x(context);
    t1.save$0(context);
    for (t2 = $.JSArray_methods.get$iterator(this._commands); t2.moveNext$0();) {
      t3 = t2.get$current();
      args = t3.get$arguments();
      switch ($.get$name$x(t3)) {
        case "beginPath":
          t1.beginPath$0(context);
          break;
        case "closePath":
          t1.closePath$0(context);
          break;
        case "moveTo":
          t3 = $.getInterceptor$asx(args);
          t1.moveTo$2(context, t3.$index(args, 0), t3.$index(args, 1));
          break;
        case "lineTo":
          t3 = $.getInterceptor$asx(args);
          t1.lineTo$2(context, t3.$index(args, 0), t3.$index(args, 1));
          break;
        case "arcTo":
          t3 = $.getInterceptor$asx(args);
          t1.arcTo$5(context, t3.$index(args, 0), t3.$index(args, 1), t3.$index(args, 2), t3.$index(args, 3), t3.$index(args, 4));
          break;
        case "quadraticCurveTo":
          t3 = $.getInterceptor$asx(args);
          t1.quadraticCurveTo$4(context, t3.$index(args, 0), t3.$index(args, 1), t3.$index(args, 2), t3.$index(args, 3));
          break;
        case "bezierCurveTo":
          t3 = $.getInterceptor$asx(args);
          t1.bezierCurveTo$6(context, t3.$index(args, 0), t3.$index(args, 1), t3.$index(args, 2), t3.$index(args, 3), t3.$index(args, 4), t3.$index(args, 5));
          break;
        case "arc":
          t3 = $.getInterceptor$asx(args);
          t1.arc$6(context, t3.$index(args, 0), t3.$index(args, 1), t3.$index(args, 2), t3.$index(args, 3), t3.$index(args, 4), t3.$index(args, 5));
          break;
        case "rect":
          t3 = $.getInterceptor$asx(args);
          t1.rect$4(context, t3.$index(args, 0), t3.$index(args, 1), t3.$index(args, 2), t3.$index(args, 3));
          break;
        case "strokeColor":
          t3 = $.getInterceptor$asx(args);
          t1.set$strokeStyle(context, t3.$index(args, 0));
          t1.set$lineWidth(context, t3.$index(args, 1));
          t1.set$lineJoin(context, t3.$index(args, 2));
          t1.set$lineCap(context, t3.$index(args, 3));
          t1.stroke$0(context);
          break;
        case "strokeGradient":
          t3 = $.getInterceptor$asx(args);
          t1.set$strokeStyle(context, t3.$index(args, 0)._getCanvasGradient$1(context));
          t1.set$lineWidth(context, t3.$index(args, 1));
          t1.set$lineJoin(context, t3.$index(args, 2));
          t1.set$lineCap(context, t3.$index(args, 3));
          t1.stroke$0(context);
          break;
        case "strokePattern":
          t3 = $.getInterceptor$asx(args);
          t1.set$strokeStyle(context, t3.$index(args, 0)._getCanvasPattern$1(context));
          t1.set$lineWidth(context, t3.$index(args, 1));
          t1.set$lineJoin(context, t3.$index(args, 2));
          t1.set$lineCap(context, t3.$index(args, 3));
          matrix = t3.$index(args, 0).get$_matrix();
          t1.save$0(context);
          t1.transform$6(context, matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
          t1.stroke$0(context);
          t1.restore$0(context);
          break;
        case "fillColor":
          t1.set$fillStyle(context, $.$index$asx(args, 0));
          t1.fill$0(context);
          break;
        case "fillGradient":
          t1.set$fillStyle(context, $.$index$asx(args, 0).getCanvasGradient$1(context));
          t1.fill$0(context);
          break;
        case "fillPattern":
          t3 = $.getInterceptor$asx(args);
          t1.set$fillStyle(context, t3.$index(args, 0).getCanvasPattern$1(context));
          matrix = t3.$index(args, 0).get$_matrix();
          t1.save$0(context);
          t1.transform$6(context, matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
          t1.fill$0(context);
          t1.restore$0(context);
          break;
      }
    }
    t1.restore$0(context);
  }
};

$$._GraphicsCommand = {"": "Object;name>,arguments<"};

$$.InteractiveObject = {"": "DisplayObject;",
  get$onMouseOut: function(_) {
    return $.CONSTANT28.forTarget$1(this);
  },
  get$onMouseOver: function(_) {
    return $.CONSTANT30.forTarget$1(this);
  },
  get$onMouseDown: function(_) {
    return $.CONSTANT31.forTarget$1(this);
  },
  get$onMouseUp: function(_) {
    return $.CONSTANT29.forTarget$1(this);
  },
  $isInteractiveObject: true
};

$$.Mask = {"": "Object;_type,_rectangle,_circle,_points",
  render$1: function(renderState) {
    var context, t1, t2, i;
    context = renderState.get$context(renderState);
    t1 = $.getInterceptor$x(context);
    t1.beginPath$0(context);
    switch (this._type) {
      case 0:
        t2 = this._rectangle;
        t1.rect$4(context, t2.x, t2.y, t2.width, t2.height);
        break;
      case 1:
        t2 = this._circle;
        t1.arc$6(context, t2.x, t2.y, t2.radius, 0, 6.283185307179586, false);
        break;
      case 2:
        t1.moveTo$2(context, $.get$x$x($.$index$asx(this._points, 0)), $.get$y$x($.$index$asx(this._points, 0)));
        for (i = 1; i < $.get$length$asx(this._points); ++i)
          t1.lineTo$2(context, $.get$x$x($.$index$asx(this._points, i)), $.get$y$x($.$index$asx(this._points, i)));
        break;
    }
    t1.clip$0(context);
  },
  Mask$rectangle$4: function(x, y, width, height) {
    this._type = 0;
    this._rectangle = $.Rectangle$(x, y, width, height);
  },
  Mask$circle$3: function(x, y, radius) {
    this._type = 1;
    this._circle = $.Circle$(x, y, radius);
  },
  Mask$custom$1: function(points) {
    this._type = 2;
    this._points = points;
    if ($.get$length$asx(this._points) < 3)
      throw $.$$throw($.ArgumentError$("A custom mask needs at least 3 points."));
  }
};

$$.MovieClip = {"": "FlipBook;_liblib5$_bitmapDatas,_frameRate,_currentFrame,_frameTime,_play,_loop,_progressEvent,_completeEvent,clipRectangle,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams"};

$$.Shape = {"": "DisplayObject;_graphics,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  get$graphics: function() {
    return this._graphics;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1;
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    t1 = $.getInterceptor$x(returnRectangle);
    t1.set$x(returnRectangle, matrix.get$tx());
    t1.set$y(returnRectangle, matrix.get$ty());
    t1.set$width(returnRectangle, 0);
    t1.set$height(returnRectangle, 0);
    return returnRectangle;
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    return;
  },
  render$1: function(renderState) {
    this._graphics.render$1(renderState);
  },
  Shape$0: function() {
    this._graphics = $.Graphics$();
  }
};

$$.Sprite = {"": "DisplayObjectContainer;buttonMode,useHandCursor,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams", $isSprite: true};

$$._MouseButton = {"": "Object;target*,buttonDown@,clickTime@,clickCount@,mouseDownEventType<,mouseUpEventType<,mouseClickEventType<,mouseDoubleClickEventType<"};

$$._Touch = {"": "Object;touchPointID<,target*,primaryTouchPoint<"};

$$.Stage = {"": "DisplayObjectContainer;_canvas,_context,_focus,_renderState,_renderMode,_mouseCursor,_mousePosition,_mouseTarget,_mouseButtons,_touches,_mouseEvent,_keyboardEvent,_touchEvent,_touchEventSubscriptions,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  _throwStageException$0: function() {
    throw $.$$throw($.UnsupportedError$("Error #2071: The Stage class does not implement this property or method."));
  },
  set$x: function(_, value) {
    this._throwStageException$0();
  },
  set$y: function(_, value) {
    this._throwStageException$0();
  },
  set$pivotX: function(value) {
    this._throwStageException$0();
  },
  set$pivotY: function(value) {
    this._throwStageException$0();
  },
  set$scaleX: function(value) {
    this._throwStageException$0();
  },
  set$scaleY: function(value) {
    this._throwStageException$0();
  },
  set$rotation: function(value) {
    this._throwStageException$0();
  },
  set$alpha: function(_, value) {
    this._throwStageException$0();
  },
  set$width: function(_, value) {
    this._throwStageException$0();
  },
  set$height: function(_, value) {
    this._throwStageException$0();
  },
  materialize$0: function() {
    var t1 = this._renderMode;
    if (t1 === "auto" || t1 === "once") {
      t1 = this._renderState;
      t1.reset$0(t1);
      this.render$1(this._renderState);
      if (this._renderMode === "once")
        this._renderMode = "stop";
    }
  },
  _onMouseCursorChanged$1: function(action) {
    var t1 = $.Mouse__getCssStyle(this._mouseCursor);
    $.set$cursor$x(this._canvas.style, t1);
  },
  get$_onMouseCursorChanged: function() {
    return new $.BoundClosure$1(this, "_onMouseCursorChanged$1");
  },
  _onMouseEvent$1: function($event) {
    var t1, clientRect, time, button, t2, stagePoint, mouseButton, target, mouseCursor, t3, t4, t5, mouseEventType, isClick, isDoubleClick, localPoint;
    t1 = $.getInterceptor$x($event);
    t1.preventDefault$0($event);
    clientRect = $.getBoundingClientRect$0$x(this._canvas);
    time = $.DateTime$_now().millisecondsSinceEpoch;
    button = t1.get$button($event);
    t2 = $.getInterceptor$x(clientRect);
    stagePoint = $.Point$($.$sub$n($.get$x$x(t1.get$client($event)), t2.get$left(clientRect)), $.$sub$n($.get$y$x(t1.get$client($event)), t2.get$top(clientRect)));
    t2 = $.getInterceptor$n(button);
    if (t2.$lt(button, 0) || t2.$gt(button, 2))
      return;
    if ($.$eq(t1.get$type($event), "mousemove") === true && this._mousePosition.equals$1(stagePoint))
      return;
    mouseButton = $.$index$asx(this._mouseButtons, button);
    this._mousePosition = stagePoint;
    target = $.$eq(t1.get$type($event), "mouseout") !== true ? $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), "$isInteractiveObject") : null;
    mouseCursor = typeof target === "object" && target !== null && !!target.$isSprite ? target.useHandCursor ? "button" : "arrow" : "arrow";
    if (this._mouseCursor !== mouseCursor) {
      this._mouseCursor = mouseCursor;
      t2 = $.Mouse__getCssStyle(mouseCursor);
      $.set$cursor$x(this._canvas.style, t2);
    }
    t2 = this._mouseTarget;
    if (t2 != null && $.$eq(t2, target) !== true) {
      t2 = this._mouseTarget;
      t3 = mouseButton.get$buttonDown();
      t4 = this._mouseTarget.get$stage() != null ? this._mouseTarget.globalToLocal$1(stagePoint) : $.Point$zero();
      t5 = this._mouseEvent;
      t5._reset$2("mouseOut", true);
      t5.set$_localPoint(t4);
      t5.set$_stagePoint(stagePoint);
      t5._buttonDown = t3;
      $.dispatchEvent$1$x(t2, t5);
      this._mouseTarget = null;
    }
    t2 = target != null;
    if (t2) {
      t3 = this._mouseTarget;
      t4 = target == null ? t3 != null : target !== t3;
      t3 = t4;
    } else
      t3 = false;
    if (t3) {
      t3 = mouseButton.get$buttonDown();
      t4 = target.globalToLocal$1(stagePoint);
      t5 = this._mouseEvent;
      t5._reset$2("mouseOver", true);
      t5.set$_localPoint(t4);
      t5.set$_stagePoint(stagePoint);
      t5._buttonDown = t3;
      target.dispatchEvent$1(target, t5);
      this._mouseTarget = target;
    }
    if ($.$eq(t1.get$type($event), "mousedown") === true) {
      mouseEventType = mouseButton.get$mouseDownEventType();
      t3 = $.getInterceptor$x(mouseButton);
      t4 = t3.get$target(mouseButton);
      if ((target == null ? t4 != null : target !== t4) || $.$gt$n(time, $.$add$ns(mouseButton.get$clickTime(), 500)) === true)
        mouseButton.set$clickCount(0);
      mouseButton.set$buttonDown(true);
      t3.set$target(mouseButton, target);
      mouseButton.set$clickTime(time);
      mouseButton.set$clickCount($.$add$ns(mouseButton.get$clickCount(), 1));
    } else
      mouseEventType = null;
    if ($.$eq(t1.get$type($event), "mouseup") === true) {
      mouseEventType = mouseButton.get$mouseUpEventType();
      mouseButton.set$buttonDown(false);
      isClick = $.$eq($.get$target$x(mouseButton), target);
      isDoubleClick = isClick === true && $.get$isEven$JSInt(mouseButton.get$clickCount()) && $.$lt$n(time, $.$add$ns(mouseButton.get$clickTime(), 500)) === true;
    } else {
      isClick = false;
      isDoubleClick = false;
    }
    if ($.$eq(t1.get$type($event), "mousemove") === true)
      mouseEventType = "mouseMove";
    if (mouseEventType != null && t2) {
      localPoint = target.globalToLocal$1(stagePoint);
      t1 = mouseButton.get$clickCount();
      t2 = mouseButton.get$buttonDown();
      t3 = this._mouseEvent;
      t3._reset$2(mouseEventType, true);
      t3.set$_localPoint(localPoint);
      t3.set$_stagePoint(stagePoint);
      t3._buttonDown = t2;
      t3._clickCount = t1;
      target.dispatchEvent$1(target, t3);
      if (isClick === true)
        if (isDoubleClick && target.doubleClickEnabled) {
          t1 = mouseButton.get$buttonDown();
          t2 = this._mouseEvent;
          t2._reset$2(mouseButton.get$mouseDoubleClickEventType(), true);
          t2.set$_localPoint(localPoint);
          t2.set$_stagePoint(stagePoint);
          t2._buttonDown = t1;
          target.dispatchEvent$1(target, t2);
        } else {
          t1 = mouseButton.get$buttonDown();
          t2 = this._mouseEvent;
          t2._reset$2(mouseButton.get$mouseClickEventType(), true);
          t2.set$_localPoint(localPoint);
          t2.set$_stagePoint(stagePoint);
          t2._buttonDown = t1;
          target.dispatchEvent$1(target, t2);
        }
    }
  },
  get$_onMouseEvent: function() {
    return new $.BoundClosure$1(this, "_onMouseEvent$1");
  },
  _onMouseWheelEvent$1: function($event) {
    var clientRect, t1, t2, stagePoint, target, t3, t4, t5;
    clientRect = $.getBoundingClientRect$0$x(this._canvas);
    t1 = $.getInterceptor$x($event);
    t2 = $.getInterceptor$x(clientRect);
    stagePoint = $.Point$($.$sub$n($.get$x$x(t1.get$client($event)), t2.get$left(clientRect)), $.$sub$n($.get$y$x(t1.get$client($event)), t2.get$top(clientRect)));
    target = $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), "$isInteractiveObject");
    if (target != null) {
      t2 = t1.get$deltaY($event);
      t3 = t1.get$deltaX($event);
      t4 = target.globalToLocal$1(stagePoint);
      t5 = this._mouseEvent;
      t5._reset$2("mouseWheel", true);
      t5.set$_localPoint(t4);
      t5.set$_stagePoint(stagePoint);
      t5._deltaX = t3;
      t5._deltaY = t2;
      target.dispatchEvent$1(target, t5);
      if (this._mouseEvent.get$stopsPropagation() === true)
        t1.preventDefault$0($event);
    }
  },
  get$_onMouseWheelEvent: function() {
    return new $.BoundClosure$1(this, "_onMouseWheelEvent$1");
  },
  _onMultitouchInputModeChanged$1: function(inputMode) {
    $.JSArray_methods.forEach$1(this._touchEventSubscriptions, new $.Stage__onMultitouchInputModeChanged_anon());
    $.Multitouch__initialize();
    if ($.$eq($.Multitouch__inputMode, "touchPoint") === true)
      this._touchEventSubscriptions = [$.get$onTouchStart$x(this._canvas).listen$1(this.get$_onTouchEvent()), $.get$onTouchEnd$x(this._canvas).listen$1(this.get$_onTouchEvent()), $.get$onTouchMove$x(this._canvas).listen$1(this.get$_onTouchEvent()), $.get$onTouchEnter$x(this._canvas).listen$1(this.get$_onTouchEvent()), $.get$onTouchLeave$x(this._canvas).listen$1(this.get$_onTouchEvent()), $.get$onTouchCancel$x(this._canvas).listen$1(this.get$_onTouchEvent())];
  },
  get$_onMultitouchInputModeChanged: function() {
    return new $.BoundClosure$1(this, "_onMultitouchInputModeChanged$1");
  },
  _onTouchEvent$1: function($event) {
    var t1, clientRect, t2, t3, t4, t5, identifier, stagePoint, target, touch, t6, t7, t8, t9, touchEventType;
    t1 = $.getInterceptor$x($event);
    t1.preventDefault$0($event);
    clientRect = $.getBoundingClientRect$0$x(this._canvas);
    for (t2 = $.get$iterator$ax(t1.get$changedTouches($event)), t3 = $.getInterceptor$x(clientRect); t2.moveNext$0();) {
      t4 = t2.get$current();
      t5 = $.getInterceptor$x(t4);
      identifier = t5.get$identifier(t4);
      stagePoint = $.Point$($.$sub$n($.get$x$x(t5.get$client(t4)), t3.get$left(clientRect)), $.$sub$n($.get$y$x(t5.get$client(t4)), t3.get$top(clientRect)));
      target = $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), "$isInteractiveObject");
      t4 = this._touches.containsKey$1(identifier);
      t5 = this._touches;
      touch = t4 ? t5.$index(t5, identifier) : $._Touch$(target, t5.get$length(t5) === 0);
      t4 = $.getInterceptor$x(touch);
      if (t4.get$target(touch) != null && $.$eq(t4.get$target(touch), target) !== true) {
        t5 = t4.get$target(touch);
        t6 = touch.get$primaryTouchPoint();
        t7 = touch.get$touchPointID();
        t8 = t4.get$target(touch).get$stage() != null ? t4.get$target(touch).globalToLocal$1(stagePoint) : $.Point$zero();
        t9 = this._touchEvent;
        t9._reset$2("touchOut", true);
        t9.set$_localPoint(t8);
        t9.set$_stagePoint(stagePoint);
        t9._touchPointID = t7;
        t9._isPrimaryTouchPoint = t6;
        $.dispatchEvent$1$x(t5, t9);
        t4.set$target(touch, null);
      }
      t5 = target != null;
      if (t5) {
        t6 = t4.get$target(touch);
        t7 = target == null ? t6 != null : target !== t6;
        t6 = t7;
      } else
        t6 = false;
      if (t6) {
        t6 = touch.get$primaryTouchPoint();
        t7 = touch.get$touchPointID();
        t8 = target.globalToLocal$1(stagePoint);
        t9 = this._touchEvent;
        t9._reset$2("touchOver", true);
        t9.set$_localPoint(t8);
        t9.set$_stagePoint(stagePoint);
        t9._touchPointID = t7;
        t9._isPrimaryTouchPoint = t6;
        target.dispatchEvent$1(target, t9);
        t4.set$target(touch, target);
      }
      if ($.$eq(t1.get$type($event), "touchstart") === true) {
        t4 = this._touches;
        t4.$indexSet(t4, identifier, touch);
        touchEventType = "touchBegin";
      } else
        touchEventType = null;
      if ($.$eq(t1.get$type($event), "touchend") === true) {
        t4 = this._touches;
        t4.remove$1(t4, identifier);
        touchEventType = "touchEnd";
      }
      if ($.$eq(t1.get$type($event), "touchcancel") === true) {
        t4 = this._touches;
        t4.remove$1(t4, identifier);
        touchEventType = "touchCancel";
      }
      if ($.$eq(t1.get$type($event), "touchmove") === true)
        touchEventType = "touchMove";
      if (touchEventType != null && t5) {
        t4 = touch.get$primaryTouchPoint();
        t5 = touch.get$touchPointID();
        t6 = target.globalToLocal$1(stagePoint);
        t7 = this._touchEvent;
        t7._reset$2(touchEventType, true);
        t7.set$_localPoint(t6);
        t7.set$_stagePoint(stagePoint);
        t7._touchPointID = t5;
        t7._isPrimaryTouchPoint = t4;
        target.dispatchEvent$1(target, t7);
      }
    }
  },
  get$_onTouchEvent: function() {
    return new $.BoundClosure$1(this, "_onTouchEvent$1");
  },
  _onKeyEvent$1: function($event) {
    var t1, keyboardEventType, t2, t3, t4, t5, t6, t7;
    t1 = $.getInterceptor$x($event);
    t1.preventDefault$0($event);
    keyboardEventType = $.$eq(t1.get$type($event), "keyup") === true ? "keyUp" : null;
    if ($.$eq(t1.get$type($event), "keydown") === true)
      keyboardEventType = "keyDown";
    t2 = t1.get$keyCode($event);
    t3 = t1.get$charCode($event);
    t4 = t1.get$shiftKey($event);
    t5 = t1.get$ctrlKey($event);
    t6 = t1.get$altKey($event);
    t7 = this._keyboardEvent;
    t7._reset$2(keyboardEventType, true);
    t7._altKey = t6;
    t7._ctrlKey = t5;
    t7._shiftKey = t4;
    t7._charCode = t3;
    t7._keyCode = t2;
    t7._keyLocation = 0;
    if (t1.get$keyLocation($event) === 1)
      this._keyboardEvent._keyLocation = 1;
    if (t1.get$keyLocation($event) === 2)
      this._keyboardEvent._keyLocation = 2;
    if (t1.get$keyLocation($event) === 3)
      this._keyboardEvent._keyLocation = 3;
    if (t1.get$keyLocation($event) === 5)
      this._keyboardEvent._keyLocation = 4;
    if (t1.get$keyLocation($event) === 4)
      this._keyboardEvent._keyLocation = 4;
    t1 = this._focus;
    if (t1 != null)
      $.JSNull_methods.dispatchEvent$1(t1, this._keyboardEvent);
  },
  get$_onKeyEvent: function() {
    return new $.BoundClosure$1(this, "_onKeyEvent$1");
  },
  _onTextEvent$1: function($event) {
    var t1, charCode, textEvent;
    t1 = $.getInterceptor$x($event);
    charCode = $.$eq(t1.get$charCode($event), 0) !== true ? t1.get$charCode($event) : t1.get$keyCode($event);
    textEvent = $.TextEvent$("textInput", true);
    textEvent._text = $.String_String$fromCharCodes([charCode]);
    t1 = this._focus;
    if (t1 != null)
      $.JSNull_methods.dispatchEvent$1(t1, textEvent);
  },
  get$_onTextEvent: function() {
    return new $.BoundClosure$1(this, "_onTextEvent$1");
  },
  Stage$2: function($name, canvas) {
    this._name = $name;
    this._canvas = canvas;
    $.focus$0$x(this._canvas);
    this._context = $.get$context2d$x(canvas);
    this._renderState = $.RenderState$fromCanvasRenderingContext2D(this._context, null);
    this._renderMode = "auto";
    this._mouseCursor = "arrow";
    $.get$Mouse__onMouseCursorChanged().listen$1(this.get$_onMouseCursorChanged());
    this._mouseButtons = [$._MouseButton$("mouseDown", "mouseUp", "click", "doubleClick"), $._MouseButton$("middleMouseDown", "middleMouseUp", "middleClick", "middleClick"), $._MouseButton$("rightMouseDown", "rightMouseUp", "rightClick", "rightClick")];
    this._mouseTarget = null;
    this._mousePosition = $.Point$(0, 0);
    this._mouseEvent = $.MouseEvent$("click", true);
    $.get$onMouseDown$x(this._canvas).listen$1(this.get$_onMouseEvent());
    $.get$onMouseUp$x(this._canvas).listen$1(this.get$_onMouseEvent());
    $.get$onMouseMove$x(this._canvas).listen$1(this.get$_onMouseEvent());
    $.get$onMouseOut$x(this._canvas).listen$1(this.get$_onMouseEvent());
    $.get$onMouseWheel$x(this._canvas).listen$1(this.get$_onMouseWheelEvent());
    this._touches = $.Map_Map($.$int, $._Touch);
    this._touchEvent = $.TouchEvent$("touchBegin", true);
    $.get$Multitouch__onInputModeChanged().listen$1(this.get$_onMultitouchInputModeChanged());
    this._onMultitouchInputModeChanged$1(null);
    this._keyboardEvent = $.KeyboardEvent$("keyDown", true);
    $.get$onKeyDown$x(this._canvas).listen$1(this.get$_onKeyEvent());
    $.get$onKeyUp$x(this._canvas).listen$1(this.get$_onKeyEvent());
    $.get$onKeyPress$x(this._canvas).listen$1(this.get$_onTextEvent());
  },
  $isStage: true
};

$$.Stage__onMultitouchInputModeChanged_anon = {"": "Closure;",
  call$1: function(s) {
    return s.cancel$0();
  }
};

$$.FlipBook = {"": "InteractiveObject;_frameRate<",
  get$totalFrames: function() {
    return this._liblib5$_bitmapDatas.length;
  },
  set$loop: function(_, value) {
    this._loop = value;
  },
  play$0: function(_) {
    this._play = true;
    this._frameTime = null;
  },
  stop$0: function(_) {
    this._play = false;
    this._frameTime = null;
  },
  advanceTime$1: function(time) {
    var t1, frameDuration, lastFrame, nextFrame;
    if (!this._play)
      return true;
    t1 = this._frameTime;
    if (t1 == null) {
      this._frameTime = 0;
      this._dispatchEventInternal$4(this._progressEvent, this, this, 2);
    } else {
      this._frameTime = $.$add$ns(t1, time);
      frameDuration = 1 / this._frameRate;
      while (true) {
        if (!(this._play && $.$ge$n(this._frameTime, frameDuration)))
          break;
        lastFrame = this._currentFrame;
        t1 = lastFrame + 1;
        nextFrame = this._loop === true ? $.JSNumber_methods.$mod(t1, this.get$totalFrames()) : $.min(t1, this.get$totalFrames() - 1);
        this._currentFrame = nextFrame;
        this._frameTime = $.$sub$n(this._frameTime, frameDuration);
        t1 = lastFrame !== nextFrame;
        if (t1) {
          this._dispatchEventInternal$4(this._progressEvent, this, this, 2);
          if (this._currentFrame !== nextFrame)
            return true;
        }
        if (t1 && nextFrame === this.get$totalFrames() - 1 && $.$eq(this._loop, false) === true) {
          this._dispatchEventInternal$4(this._completeEvent, this, this, 2);
          if (this._currentFrame !== nextFrame)
            return true;
        }
      }
    }
    return true;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1, t2, bitmapData;
    t1 = this._liblib5$_bitmapDatas;
    t2 = this._currentFrame;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    bitmapData = t1[t2];
    t2 = $.getInterceptor$x(bitmapData);
    return $._getBoundsTransformedHelper(matrix, t2.get$width(bitmapData), t2.get$height(bitmapData), returnRectangle);
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1, t2, bitmapData;
    t1 = this._liblib5$_bitmapDatas;
    t2 = this._currentFrame;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    bitmapData = t1[t2];
    if (localX >= 0)
      if (localY >= 0) {
        t1 = $.getInterceptor$x(bitmapData);
        t1 = $.JSNumber_methods.$lt(localX, t1.get$width(bitmapData)) && $.JSNumber_methods.$lt(localY, t1.get$height(bitmapData));
      } else
        t1 = false;
    else
      t1 = false;
    if (t1)
      return this;
    return;
  },
  render$1: function(renderState) {
    var t1, t2, bitmapData;
    t1 = this._liblib5$_bitmapDatas;
    t2 = this._currentFrame;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    bitmapData = t1[t2];
    t1 = this.clipRectangle;
    if (t1 == null)
      bitmapData.render$1(renderState);
    else
      bitmapData.renderClipped$2(renderState, t1);
  },
  FlipBook$3: function(bitmapDatas, frameRate, loop) {
    this._liblib5$_bitmapDatas = bitmapDatas;
    this._frameRate = frameRate;
    this._currentFrame = 0;
    this._frameTime = null;
    this._play = false;
    this._loop = loop;
    this._progressEvent = $.Event$("progress", false);
    this._completeEvent = $.Event$("complete", false);
    this.clipRectangle = null;
  },
  $isAnimatable: true
};

$$.FlumpLibrary = {"": "Object;_url,_md5,_frameRate<,_movieDatas,_textureGroups",
  _getFlumpMovieData$1: function($name) {
    var t1, t2;
    for (t1 = $.JSArray_methods.get$iterator(this._movieDatas); t1.moveNext$0();) {
      t2 = t1.get$current();
      if ($.$eq($.get$id$x(t2), $name) === true)
        return t2;
    }
    throw $.$$throw($.ArgumentError$("The movie '" + $.S($name) + "' is not available."));
  },
  _createSymbol$1: function($name) {
    var t1, t2;
    for (t1 = $.JSArray_methods.get$iterator(this._textureGroups); t1.moveNext$0();) {
      t2 = t1.get$current();
      if (t2.get$flumpTextures().containsKey$1($name)) {
        t1 = t2.get$flumpTextures();
        return t1.$index(t1, $name);
      }
    }
    for (t1 = $.JSArray_methods.get$iterator(this._movieDatas); t1.moveNext$0();)
      if ($.$eq($.get$id$x(t1.get$current()), $name) === true)
        return $.FlumpMovie$(this, $name);
    throw $.$$throw($.ArgumentError$("The symbol '" + $.S($name) + "' is not available."));
  }
};

$$.FlumpLibrary_load_anon = {"": "Closure;url_0,completer_1",
  call$1: function(flumpJson) {
    var data, textureGroupLoaders, flumpLibrary, t1, t2, flumpTextureGroup;
    data = $.propertyTypeCast($.parse(flumpJson, null), "$isMap");
    textureGroupLoaders = $.List_List($, null);
    flumpLibrary = $.FlumpLibrary$();
    flumpLibrary._url = this.url_0;
    flumpLibrary._md5 = data.$index(data, "md5");
    flumpLibrary._frameRate = $.toInt$0$nx(data.$index(data, "frameRate"));
    for (t1 = $.get$iterator$ax($.listTypeCast(data.$index(data, "movies"))), t2 = flumpLibrary._movieDatas; t1.moveNext$0();)
      t2.push($._FlumpMovieData$(t1.get$current(), flumpLibrary));
    for (t1 = $.get$iterator$ax($.listTypeCast(data.$index(data, "textureGroups"))), t2 = flumpLibrary._textureGroups; t1.moveNext$0();) {
      flumpTextureGroup = $._FlumpTextureGroup$(t1.get$current(), flumpLibrary);
      t2.push(flumpTextureGroup);
      textureGroupLoaders.push(flumpTextureGroup.completer.future);
    }
    t1 = $._FutureImpl__FutureImpl$wait(textureGroupLoaders);
    t2 = this.completer_1;
    t1.then$1(new $.FlumpLibrary_load__anon(t2, flumpLibrary)).catchError$1(new $.FlumpLibrary_load__anon0(t2));
  }
};

$$.FlumpLibrary_load__anon = {"": "Closure;completer_2,flumpLibrary_3",
  call$1: function(value) {
    var t1 = this.completer_2;
    t1.complete$1(t1, this.flumpLibrary_3);
  }
};

$$.FlumpLibrary_load__anon0 = {"": "Closure;completer_4",
  call$1: function(error) {
    this.completer_4.completeError$1($.StateError$("Failed to load image."));
  }
};

$$.FlumpLibrary_load_anon0 = {"": "Closure;completer_5",
  call$1: function(error) {
    this.completer_5.completeError$1($.StateError$("Failed to load json file."));
  }
};

$$.FlumpMovie = {"": "DisplayObject;_flumpLibrary,_flumpMovieData,_flumpMovieLayers,_time,_liblib5$_duration,_frame,_frames,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  advanceTime$1: function(time) {
    var frameTime, t1, t2;
    this._time = this._time + time;
    frameTime = $.JSNumber_methods.$mod(this._time, this._liblib5$_duration);
    this._frame = $.min($.JSNumber_methods.toInt$0($.$div$n($.$mul$n(this._frames, frameTime), this._liblib5$_duration)), $.$sub$n(this._frames, 1));
    for (t1 = $.JSArray_methods.get$iterator(this._flumpMovieLayers); t1.moveNext$0();) {
      t2 = t1.get$current();
      t2.advanceTime$1(time);
      t2.setFrame$1(this._frame);
    }
    return true;
  },
  render$1: function(renderState) {
    var t1, t2;
    for (t1 = $.JSArray_methods.get$iterator(this._flumpMovieLayers); t1.moveNext$0();) {
      t2 = t1.get$current();
      if (t2.get$visible() === true)
        renderState.renderDisplayObject$1(t2);
    }
  },
  FlumpMovie$2: function(flumpLibrary, $name) {
    var t1, t2, t3, t4;
    for (t1 = this._flumpMovieData, t2 = $.JSArray_methods.get$iterator(t1.get$flumpLayerDatas()), t3 = this._flumpLibrary, t4 = this._flumpMovieLayers; t2.moveNext$0();)
      t4.push($._FlumpMovieLayer$(t3, t2.get$current()));
    this._frames = t1.get$frames();
    this._liblib5$_duration = $.$div$n(this._frames, t3.get$_frameRate());
  },
  $isAnimatable: true
};

$$._FlumpMovieLayer = {"": "DisplayObject;flumpLibrary,flumpLayerData,symbols,symbol,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  advanceTime$1: function(time) {
    var t1 = this.symbol;
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAnimatable)
      $.propertyTypeCast(t1, "$isAnimatable").advanceTime$1(time);
  },
  setFrame$1: function(frame) {
    var t1, keyframe, t2, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, nextKeyframe, interped, ease, inv, t, interped0, a, b, c, d, tx, ty;
    t1 = this.flumpLayerData;
    keyframe = t1.getKeyframeForFrame$1(frame);
    t2 = $.getInterceptor$x(keyframe);
    x = t2.get$x(keyframe);
    y = t2.get$y(keyframe);
    scaleX = keyframe.get$scaleX();
    scaleY = keyframe.get$scaleY();
    skewX = keyframe.get$skewX();
    skewY = keyframe.get$skewY();
    pivotX = keyframe.get$pivotX();
    pivotY = keyframe.get$pivotY();
    alpha = t2.get$alpha(keyframe);
    if ($.$eq(t2.get$index(keyframe), frame) !== true && keyframe.get$tweened() === true) {
      nextKeyframe = t1.getKeyframeAfter$1(keyframe);
      t1 = $.getInterceptor(nextKeyframe);
      if (nextKeyframe != null) {
        interped = $.$div$n($.$sub$n(frame, t2.get$index(keyframe)), t2.get$duration(keyframe));
        ease = keyframe.get$ease();
        t2 = $.getInterceptor(ease);
        if (t2.$eq(ease, 0) !== true) {
          if (t2.$lt(ease, 0) === true) {
            inv = 1 - interped;
            t = 1 - inv * inv;
            if (typeof ease !== "number")
              throw $.iae(ease);
            ease = 0 - ease;
          } else
            t = interped * interped;
          t2 = $.$mul$n(ease, t);
          if (typeof ease !== "number")
            throw $.iae(ease);
          interped0 = $.$add$ns(t2, (1 - ease) * interped);
          interped = interped0;
        }
        x = $.$add$ns(x, $.$mul$n($.$sub$n(t1.get$x(nextKeyframe), x), interped));
        y = $.$add$ns(y, $.$mul$n($.$sub$n(t1.get$y(nextKeyframe), y), interped));
        scaleX = $.$add$ns(scaleX, $.$mul$n($.$sub$n(nextKeyframe.get$scaleX(), scaleX), interped));
        scaleY = $.$add$ns(scaleY, $.$mul$n($.$sub$n(nextKeyframe.get$scaleY(), scaleY), interped));
        skewX = $.$add$ns(skewX, $.$mul$n($.$sub$n(nextKeyframe.get$skewX(), skewX), interped));
        skewY = $.$add$ns(skewY, $.$mul$n($.$sub$n(nextKeyframe.get$skewY(), skewY), interped));
        alpha = $.$add$ns(alpha, $.$mul$n($.$sub$n(t1.get$alpha(nextKeyframe), alpha), interped));
      }
    }
    t1 = $.getInterceptor$n(scaleX);
    a = t1.$mul(scaleX, Math.cos($.checkNum(skewY)));
    b = t1.$mul(scaleX, Math.sin($.checkNum(skewY)));
    t1 = $.getInterceptor$n(scaleY);
    c = t1.$negate(scaleY) * Math.sin($.checkNum(skewX));
    d = t1.$mul(scaleY, Math.cos($.checkNum(skewX)));
    t1 = $.getInterceptor$n(pivotX);
    t2 = $.getInterceptor$n(pivotY);
    tx = $.$sub$n(x, $.$add$ns(t1.$mul(pivotX, a), t2.$mul(pivotY, c)));
    ty = $.$sub$n(y, $.$add$ns(t1.$mul(pivotX, b), t2.$mul(pivotY, d)));
    this._transformationMatrixRefresh = false;
    this._transformationMatrixPrivate.setTo$6(a, b, c, d, tx, ty);
    this._alpha = alpha;
    this._visible = keyframe.get$visible();
    t1 = keyframe.get$ref();
    if (t1 != null) {
      t2 = this.symbols;
      t1 = t2.$index(t2, t1);
    } else
      t1 = null;
    this.symbol = t1;
  },
  render$1: function(renderState) {
    var t1 = this.symbol;
    if (t1 != null)
      t1.render$1(renderState);
  },
  _FlumpMovieLayer$2: function(flumpLibrary, flumpLayerData) {
    var t1, t2, t3, t4;
    for (t1 = $.JSArray_methods.get$iterator(flumpLayerData.get$flumpKeyframeDatas()), t2 = this.symbols; t1.moveNext$0();) {
      t3 = t1.get$current();
      t4 = t3.get$ref();
      if (t4 != null && !t2.containsKey$1(t4)) {
        t3 = t3.get$ref();
        t2.$indexSet(t2, t3, flumpLibrary._createSymbol$1(t3));
      }
    }
    this.setFrame$1(0);
  },
  $isAnimatable: true
};

$$._FlumpMovieData = {"": "Object;id>,flumpLibrary,flumpLayerDatas<",
  get$frames: function() {
    var t1, $frames;
    for (t1 = $.JSArray_methods.get$iterator(this.flumpLayerDatas), $frames = 0; t1.moveNext$0();)
      $frames = $.max($frames, t1.get$current().get$frames());
    return $frames;
  },
  _FlumpMovieData$2: function(json, flumpLibrary) {
    var t1, t2;
    for (t1 = $.get$iterator$ax($.$index$asx(json, "layers")), t2 = this.flumpLayerDatas; t1.moveNext$0();)
      t2.push($._FlumpLayerData$(t1.get$current()));
  }
};

$$._FlumpLayerData = {"": "Object;name>,flipbook,flumpKeyframeDatas<",
  get$frames: function() {
    var t1, t2, t3, flumpKeyframeData;
    t1 = this.flumpKeyframeDatas;
    t2 = t1.length;
    t3 = t2 - 1;
    if (t3 < 0)
      throw $.ioore(t3);
    flumpKeyframeData = t1[t3];
    t3 = $.getInterceptor$x(flumpKeyframeData);
    return $.$add$ns(t3.get$index(flumpKeyframeData), t3.get$duration(flumpKeyframeData));
  },
  getKeyframeForFrame$1: function(frame) {
    var t1, i, t2;
    if (typeof frame !== "number")
      return this.getKeyframeForFrame$1$bailout(1, frame);
    t1 = this.flumpKeyframeDatas;
    i = 1;
    while (true) {
      if (!(i < t1.length && $.$le$n($.get$index$x(t1[i]), frame) === true))
        break;
      ++i;
    }
    t2 = i - 1;
    if (t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  getKeyframeForFrame$1$bailout: function(state0, frame) {
    var t1, i, t2;
    t1 = this.flumpKeyframeDatas;
    i = 1;
    while (true) {
      if (!(i < t1.length && $.$le$n($.get$index$x(t1[i]), frame) === true))
        break;
      ++i;
    }
    t2 = i - 1;
    if (t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  getKeyframeAfter$1: function(flumpKeyframeData) {
    var t1, t2, i, t3;
    for (t1 = this.flumpKeyframeDatas, t2 = t1.length, i = 0; i < t2 - 1; ++i) {
      t3 = t1[i];
      if (t3 == null ? flumpKeyframeData == null : t3 === flumpKeyframeData)
        return t1[i + 1];
    }
    return;
  },
  _FlumpLayerData$1: function(json) {
    var t1, t2;
    for (t1 = $.get$iterator$ax($.$index$asx(json, "keyframes")), t2 = this.flumpKeyframeDatas; t1.moveNext$0();)
      t2.push($._FlumpKeyframeData$(t1.get$current()));
  }
};

$$._FlumpKeyframeData = {"": "Object;index>,duration>,ref<,label,x*,y*,scaleX<,scaleY<,skewX<,skewY<,pivotX<,pivotY<,visible<,alpha>,tweened<,ease<",
  _FlumpKeyframeData$1: function(json) {
    var t1 = $.getInterceptor$asx(json);
    this.index = t1.$index(json, "index");
    this.duration = t1.$index(json, "duration");
    this.ref = json.containsKey$1("ref") === true ? t1.$index(json, "ref") : null;
    this.label = json.containsKey$1("label") === true ? t1.$index(json, "label") : null;
    this.x = json.containsKey$1("loc") === true ? $.$index$asx(t1.$index(json, "loc"), 0) : 0;
    this.y = json.containsKey$1("loc") === true ? $.$index$asx(t1.$index(json, "loc"), 1) : 0;
    this.scaleX = json.containsKey$1("scale") === true ? $.$index$asx(t1.$index(json, "scale"), 0) : 1;
    this.scaleY = json.containsKey$1("scale") === true ? $.$index$asx(t1.$index(json, "scale"), 1) : 1;
    this.skewX = json.containsKey$1("skew") === true ? $.$index$asx(t1.$index(json, "skew"), 0) : 0;
    this.skewY = json.containsKey$1("skew") === true ? $.$index$asx(t1.$index(json, "skew"), 1) : 0;
    this.pivotX = json.containsKey$1("pivot") === true ? $.$index$asx(t1.$index(json, "pivot"), 0) : 0;
    this.pivotY = json.containsKey$1("pivot") === true ? $.$index$asx(t1.$index(json, "pivot"), 1) : 0;
    this.visible = json.containsKey$1("visible") !== true || t1.$index(json, "visible");
    this.alpha = json.containsKey$1("alpha") === true ? t1.$index(json, "alpha") : 1;
    this.tweened = json.containsKey$1("tweened") !== true || t1.$index(json, "tweened");
    this.ease = json.containsKey$1("ease") === true ? t1.$index(json, "ease") : 0;
  }
};

$$._FlumpTextureGroup = {"": "Object;flumpLibrary,flumpTextures<,completer<",
  _FlumpTextureGroup$2: function(json, flumpLibrary, box_0) {
    var t1, t2, t3, t4, file, url, imageElement, t5, symbol, rect, origin, flumpTexture, t6;
    this.flumpTextures = $.Map_Map($.String, $._FlumpTexture);
    this.completer = $.Completer_Completer();
    box_0.imageLoadCount_0 = 0;
    for (t1 = $.get$iterator$ax($.listTypeCast($.$index$asx(json, "atlases"))), t2 = this.flumpLibrary; t1.moveNext$0();) {
      t3 = t1.get$current();
      t4 = $.getInterceptor$asx(t3);
      file = $.stringTypeCast(t4.$index(t3, "file"));
      url = $._replaceFilename(t2._url, file);
      box_0.imageLoadCount_0 = $.$add$ns(box_0.imageLoadCount_0, 1);
      imageElement = $.ImageElement_ImageElement(null, null, null);
      t5 = $.getInterceptor$x(imageElement);
      t5.get$onLoad(imageElement).listen$1(new $.anon0(box_0, this));
      t5.get$onError(imageElement).listen$1(new $.anon1(this));
      t5.set$src(imageElement, url);
      for (t3 = $.get$iterator$ax($.listTypeCast(t4.$index(t3, "textures"))); t3.moveNext$0();) {
        t4 = t3.get$current();
        t5 = $.getInterceptor$asx(t4);
        symbol = $.stringTypeCast(t5.$index(t4, "symbol"));
        rect = $.listTypeCast(t5.$index(t4, "rect"));
        origin = $.listTypeCast(t5.$index(t4, "origin"));
        t4 = $.getInterceptor$asx(rect);
        t5 = $.getInterceptor$asx(origin);
        flumpTexture = $._FlumpTexture$(t4.$index(rect, 0), t4.$index(rect, 1), t4.$index(rect, 2), t4.$index(rect, 3), t5.$index(origin, 0), t5.$index(origin, 1), imageElement);
        t6 = this.flumpTextures;
        t6.$indexSet(t6, symbol, flumpTexture);
      }
    }
  }
};

$$.anon0 = {"": "Closure;box_0,this_1",
  call$1: function($event) {
    var t1, imageLoadCount, t2;
    t1 = this.box_0;
    imageLoadCount = $.$sub$n(t1.imageLoadCount_0, 1);
    t1.imageLoadCount_0 = imageLoadCount;
    if ($.$eq(imageLoadCount, 0) === true) {
      t1 = this.this_1;
      t2 = t1.get$completer();
      t2.complete$1(t2, t1);
    }
  }
};

$$.anon1 = {"": "Closure;this_2",
  call$1: function($event) {
    this.this_2.get$completer().completeError$1($.StateError$("Failed to load image."));
  }
};

$$._FlumpTexture = {"": "Object;x*,y*,width*,height*,originX,originY,imageElement,_sourceRect,_destinationRect",
  render$1: function(renderState) {
    var t1, t2, t3, t4, t5;
    t1 = renderState.get$context(renderState);
    t2 = this.x;
    t3 = this.y;
    t4 = this.width;
    t5 = this.height;
    $.drawImageScaledFromSource$9$x(t1, this.imageElement, t2, t3, t4, t5, 0, 0, t4, t5);
  }
};

$$.RenderLoop = {"": "Object;_juggler,_stages,_renderTime,_enterFrameIndex,_enterFrameEvent",
  get$juggler: function() {
    return this._juggler;
  },
  _onAnimationFrame$1: function(currentTime) {
    var t1, deltaTime, deltaTimeSec, i;
    if (typeof currentTime !== "number")
      return this._onAnimationFrame$1$bailout(1, currentTime);
    $.requestAnimationFrame$1$x(window, this.get$_onAnimationFrame());
    if ($.get$isNaN$n(this._renderTime))
      this._renderTime = currentTime;
    t1 = this._renderTime;
    if (typeof t1 !== "number")
      return this._onAnimationFrame$1$bailout(2, currentTime, t1);
    if (t1 > currentTime)
      this._renderTime = currentTime;
    t1 = this._renderTime;
    if (typeof t1 !== "number")
      return this._onAnimationFrame$1$bailout(3, currentTime, t1);
    deltaTime = currentTime - t1;
    deltaTimeSec = deltaTime / 1000;
    if (deltaTime >= 1) {
      this._renderTime = currentTime;
      this._enterFrameEvent._passedTime = deltaTimeSec;
      this._enterFrameIndex._dispatchEvent$1(this._enterFrameEvent);
      this._juggler.advanceTime$1(deltaTimeSec);
      for (i = 0; t1 = this._stages, i < t1.length; ++i)
        t1[i].materialize$0();
    }
  },
  _onAnimationFrame$1$bailout: function(state0, currentTime, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        $.requestAnimationFrame$1$x(window, this.get$_onAnimationFrame());
        if ($.get$isNaN$n(this._renderTime))
          this._renderTime = currentTime;
        t1 = this._renderTime;
      case 2:
        state0 = 0;
        if ($.$gt$n(t1, currentTime) === true)
          this._renderTime = currentTime;
        t1 = this._renderTime;
      case 3:
        var deltaTime, deltaTimeSec, i;
        state0 = 0;
        deltaTime = $.$sub$n(currentTime, t1);
        t1 = $.getInterceptor$n(deltaTime);
        deltaTimeSec = t1.$div(deltaTime, 1000);
        if (t1.$ge(deltaTime, 1) === true) {
          this._renderTime = currentTime;
          this._enterFrameEvent._passedTime = deltaTimeSec;
          this._enterFrameIndex._dispatchEvent$1(this._enterFrameEvent);
          this._juggler.advanceTime$1(deltaTimeSec);
          for (i = 0; t1 = this._stages, i < t1.length; ++i)
            t1[i].materialize$0();
        }
    }
  },
  get$_onAnimationFrame: function() {
    return new $.BoundClosure$1(this, "_onAnimationFrame$1");
  },
  addStage$1: function(stage) {
    this._stages.push(stage);
  },
  RenderLoop$0: function() {
    this._juggler = $.Juggler$();
    var t1 = $.List_List($, $.Stage);
    $.setRuntimeTypeInfo(t1, [$.Stage]);
    this._stages = t1;
    this._renderTime = (0/0);
    this._enterFrameIndex = $.get$_EventStreamIndex_enterFrame();
    this._enterFrameEvent = $.EnterFrameEvent$(0);
    $.requestAnimationFrame$1$x($.window(), this.get$_onAnimationFrame());
  }
};

$$.RenderState = {"": "Object;_context,_matrices,_alphas,_depth",
  get$context: function(_) {
    return this._context;
  },
  reset$0: function(_) {
    var t1, m, a, t2, t3;
    this._depth = 0;
    t1 = this._matrices;
    if (0 >= t1.length)
      throw $.ioore(0);
    m = t1[0];
    t1 = this._alphas;
    if (0 >= t1.length)
      throw $.ioore(0);
    a = t1[0];
    t1 = this._context;
    t2 = $.getInterceptor$x(t1);
    t2.setTransform$6(t1, m.get$a(), m.get$b(), m.get$c(), m.get$d(), m.get$tx(), m.get$ty());
    t2.set$globalAlpha(t1, a);
    t3 = t1.canvas;
    t2.clearRect$4(t1, 0, 0, t3.width, t3.height);
  },
  renderDisplayObject$1: function(displayObject) {
    var d1, d2, t1, t2, m1, m2, t3, a1, a2, t4, mask, cache;
    d1 = this._depth;
    d2 = d1 + 1;
    t1 = this._matrices;
    t2 = t1.length;
    if (d1 < 0 || d1 >= t2)
      throw $.ioore(d1);
    m1 = t1[d1];
    if (d2 < 0 || d2 >= t2)
      throw $.ioore(d2);
    m2 = t1[d2];
    t1 = this._alphas;
    t3 = t1.length;
    if (d1 >= t3)
      throw $.ioore(d1);
    a1 = t1[d1];
    a2 = $.$mul$n(displayObject.get$_alpha(), a1);
    if (d2 >= t3)
      throw $.ioore(d2);
    t1[d2] = a2;
    m2.copyFromAndConcat$2(displayObject.get$_transformationMatrix(), m1);
    t1 = this._context;
    t4 = $.getInterceptor$x(t1);
    t4.setTransform$6(t1, m2.get$a(), m2.get$b(), m2.get$c(), m2.get$d(), m2.get$tx(), m2.get$ty());
    t4.set$globalAlpha(t1, a2);
    this._depth = d2;
    mask = displayObject.get$_mask();
    cache = displayObject.get$_cache();
    t2 = mask != null;
    if (t2) {
      t4.save$0(t1);
      mask.render$1(this);
    }
    if (cache != null)
      cache.render$1(this);
    else
      displayObject.render$1(this);
    if (t2)
      t4.restore$0(t1);
    this._depth = d1;
  },
  RenderState$fromCanvasRenderingContext2D$2: function(context, matrix) {
    var t1, t2, t3, t4, i, t5, m, a;
    for (t1 = this._matrices, t2 = t1.length, t3 = this._alphas, t4 = t3.length, i = 0; i < 100; ++i) {
      t5 = $.Matrix$fromIdentity();
      if (i >= t2)
        throw $.ioore(i);
      t1[i] = t5;
      if (i >= t4)
        throw $.ioore(i);
      t3[i] = 1;
    }
    if (matrix != null) {
      if (0 >= t2)
        throw $.ioore(0);
      t1[0].copyFrom$1(matrix);
    }
    if (0 >= t2)
      throw $.ioore(0);
    m = t1[0];
    if (0 >= t4)
      throw $.ioore(0);
    a = t3[0];
    t1 = this._context;
    t3 = $.getInterceptor$x(t1);
    t3.setTransform$6(t1, m.get$a(), m.get$b(), m.get$c(), m.get$d(), m.get$tx(), m.get$ty());
    t3.set$globalAlpha(t1, a);
  }
};

$$.EnterFrameEvent = {"": "Event;_passedTime,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  get$passedTime: function() {
    return this._passedTime;
  },
  get$captures: function() {
    return false;
  },
  EnterFrameEvent$1: function(passedTime) {
    this._passedTime = passedTime;
  }
};

$$.Event = {"": "Object;_type,_bubbles,_eventPhase,_target<,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    this._type = type;
    this._bubbles = bubbles;
    this._eventPhase = 2;
    this._target = null;
    this._currentTarget = null;
    this._stopsPropagation = false;
    this._stopsImmediatePropagation = false;
  },
  get$stopsPropagation: function() {
    return this._stopsPropagation;
  },
  get$type: function(_) {
    return this._type;
  },
  get$bubbles: function(_) {
    return this._bubbles;
  },
  get$captures: function() {
    return true;
  },
  get$target: function(_) {
    return this._target;
  },
  Event$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.EventDispatcher = {"": "Object;",
  hasEventListener$1: function(type) {
    var t1 = this._eventStreams;
    if (t1 != null)
      return t1.containsKey$1(type) || this._eventStreams.containsKey$1($.S(type) + "_CAPTURE");
    else
      return false;
  },
  dispatchEvent$1: function(_, $event) {
    this._dispatchEventInternal$4($event, this, this, 2);
  },
  _dispatchEventInternal$4: function($event, target, currentTarget, eventPhase) {
    var eventStreamKey, t1, eventStream;
    if (this._eventStreams != null) {
      eventStreamKey = eventPhase === 1 ? $.S($event.get$type($event)) + "_CAPTURE" : $event.get$type($event);
      t1 = this._eventStreams;
      eventStream = t1.$index(t1, eventStreamKey);
      if (eventStream != null) {
        $event._target = target;
        $event._currentTarget = currentTarget;
        $event._eventPhase = eventPhase;
        $event._stopsPropagation = false;
        $event._stopsImmediatePropagation = false;
        eventStream._dispatchEvent$1($event);
      }
    }
  },
  _getEventStream$2: function(eventType, useCapture) {
    var eventStreamKey, t1, eventStream;
    if (this._eventStreams == null)
      this._eventStreams = $.HashMap$($.String, $._EventStream0);
    eventStreamKey = useCapture ? eventType + "_CAPTURE" : eventType;
    t1 = this._eventStreams;
    eventStream = t1.$index(t1, eventStreamKey);
    if (eventStream == null) {
      t1 = this._eventStreams;
      eventStream = $._EventStream$0(this, eventType, useCapture, null);
      t1.$indexSet(t1, eventStreamKey, eventStream);
    }
    return eventStream;
  }
};

$$._EventStream0 = {"": "Stream;_target<,_liblib5$_eventType,_liblib5$_useCapture,_subscriptions,_subscriptionsCount<",
  get$isBroadcast: function() {
    return true;
  },
  asBroadcastStream$0: function() {
    return this;
  },
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    var subscription, t1, t2, t3;
    subscription = $._EventStreamSubscription$0(this, onData);
    t1 = this._subscriptionsCount;
    t2 = this._subscriptions;
    t3 = t2.length;
    if (t1 === t3)
      t2.push(subscription);
    else {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t3)
        throw $.ioore(t1);
      t2[t1] = subscription;
    }
    this._subscriptionsCount = this._subscriptionsCount + 1;
    if (this._liblib5$_eventType === "enterFrame" && !this._liblib5$_useCapture)
      $.get$_EventStreamIndex_enterFrame()._addEventStream$1(this);
    return subscription;
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  _onSubscriptionCancel$1: function(subscription) {
    var t1, i;
    for (t1 = this._subscriptions, i = 0; i < this._subscriptionsCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$eq(t1[i], subscription) === true) {
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i] = null;
        break;
      }
    }
  },
  _dispatchEvent$1: function($event) {
    var subscriptionsCount, t1, tail, head, subscription, t2, tail0, t3;
    subscriptionsCount = this._subscriptionsCount;
    if (subscriptionsCount !== (subscriptionsCount | 0))
      return this._dispatchEvent$1$bailout(1, $event, subscriptionsCount);
    for (t1 = this._subscriptions, tail = 0, head = 0; head < subscriptionsCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      subscription = t1[head];
      if (subscription == null)
        continue;
      subscription._liblib5$_onData$1($event);
      if (tail !== head) {
        t2 = t1.length;
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = subscription;
        if (head >= t2)
          throw $.ioore(head);
        t1[head] = null;
      }
      ++tail;
    }
    if (tail !== subscriptionsCount) {
      for (t2 = t1.length, head = subscriptionsCount; head < this._subscriptionsCount; ++head, tail = tail0) {
        tail0 = tail + 1;
        if (head < 0 || head >= t2)
          throw $.ioore(head);
        t3 = t1[head];
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = t3;
        t1[head] = null;
      }
      this._subscriptionsCount = tail;
    }
  },
  _dispatchEvent$1$bailout: function(state0, $event, subscriptionsCount) {
    var t1, tail, head, subscription, t2, tail0, t3;
    for (t1 = this._subscriptions, tail = 0, head = 0; head < subscriptionsCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      subscription = t1[head];
      if (subscription == null)
        continue;
      subscription._liblib5$_onData$1($event);
      if (tail !== head) {
        t2 = t1.length;
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = subscription;
        if (head >= t2)
          throw $.ioore(head);
        t1[head] = null;
      }
      ++tail;
    }
    if (tail !== subscriptionsCount) {
      for (t2 = t1.length, head = subscriptionsCount; head < this._subscriptionsCount; ++head, tail = tail0) {
        tail0 = tail + 1;
        if (head !== (head | 0))
          throw $.iae(head);
        if (head < 0 || head >= t2)
          throw $.ioore(head);
        t3 = t1[head];
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = t3;
        t1[head] = null;
      }
      this._subscriptionsCount = tail;
    }
  },
  $asStream: null
};

$$._EventStreamIndex = {"": "Object;_eventStreams,_eventStreamsCount",
  _addEventStream$1: function(eventStream) {
    var t1, i, t2, t3;
    for (t1 = this._eventStreams, i = 0; t2 = this._eventStreamsCount, i < t2; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$eq(t1[i], eventStream) === true)
        return;
    }
    t3 = t1.length;
    if (t2 === t3)
      t1.push(eventStream);
    else {
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t3)
        throw $.ioore(t2);
      t1[t2] = eventStream;
    }
    this._eventStreamsCount = this._eventStreamsCount + 1;
  },
  _dispatchEvent$1: function($event) {
    var eventStreamsCount, t1, tail, head, eventStream, t2, tail0, t3;
    $event._eventPhase = 2;
    $event._stopsPropagation = false;
    $event._stopsImmediatePropagation = false;
    eventStreamsCount = this._eventStreamsCount;
    if (eventStreamsCount !== (eventStreamsCount | 0))
      return this._dispatchEvent$1$bailout(1, $event, eventStreamsCount);
    for (t1 = this._eventStreams, tail = 0, head = 0; head < eventStreamsCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      eventStream = t1[head];
      if (eventStream == null)
        continue;
      if (eventStream.get$_subscriptionsCount() === 0) {
        t1[head] = null;
        continue;
      }
      $event._target = eventStream.get$_target();
      $event._currentTarget = eventStream.get$_target();
      eventStream._dispatchEvent$1($event);
      if (tail !== head) {
        t2 = t1.length;
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = eventStream;
        if (head >= t2)
          throw $.ioore(head);
        t1[head] = null;
      }
      ++tail;
    }
    if (tail !== eventStreamsCount) {
      for (t2 = t1.length, head = eventStreamsCount; head < this._eventStreamsCount; ++head, tail = tail0) {
        tail0 = tail + 1;
        if (head < 0 || head >= t2)
          throw $.ioore(head);
        t3 = t1[head];
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = t3;
        t1[head] = null;
      }
      this._eventStreamsCount = tail;
    }
  },
  _dispatchEvent$1$bailout: function(state0, $event, eventStreamsCount) {
    var t1, tail, head, eventStream, t2, tail0, t3;
    for (t1 = this._eventStreams, tail = 0, head = 0; head < eventStreamsCount; ++head) {
      if (head >= t1.length)
        throw $.ioore(head);
      eventStream = t1[head];
      if (eventStream == null)
        continue;
      if (eventStream.get$_subscriptionsCount() === 0) {
        t1[head] = null;
        continue;
      }
      $event._target = eventStream.get$_target();
      $event._currentTarget = eventStream.get$_target();
      eventStream._dispatchEvent$1($event);
      if (tail !== head) {
        t2 = t1.length;
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = eventStream;
        if (head >= t2)
          throw $.ioore(head);
        t1[head] = null;
      }
      ++tail;
    }
    if (tail !== eventStreamsCount) {
      for (t2 = t1.length, head = eventStreamsCount; head < this._eventStreamsCount; ++head, tail = tail0) {
        tail0 = tail + 1;
        if (head !== (head | 0))
          throw $.iae(head);
        if (head < 0 || head >= t2)
          throw $.ioore(head);
        t3 = t1[head];
        if (tail >= t2)
          throw $.ioore(tail);
        t1[tail] = t3;
        t1[head] = null;
      }
      this._eventStreamsCount = tail;
    }
  }
};

$$.EventStreamProvider0 = {"": "Object;_liblib5$_eventType",
  forTarget$2$useCapture: function(target, useCapture) {
    return target._getEventStream$2(this._liblib5$_eventType, useCapture);
  },
  forTarget$1: function(target) {
    return this.forTarget$2$useCapture(target, false);
  }
};

$$._EventStreamSubscription0 = {"": "StreamSubscription;_eventStream,_liblib5$_onData,_liblib5$_pauseCount,_liblib5$_canceled",
  _liblib5$_onData$1: function(arg0) {
    return this._liblib5$_onData.call$1(arg0);
  },
  cancel$0: function() {
    if (!this._liblib5$_canceled) {
      this._eventStream._onSubscriptionCancel$1(this);
      this._liblib5$_canceled = true;
      this._liblib5$_onData = null;
    }
  },
  onError$1: function(_, handleError) {
  },
  get$onError: function(receiver) {
    return new $.BoundClosure$i1(this, "onError$1", receiver);
  },
  get$_liblib5$_paused: function() {
    return this._liblib5$_pauseCount > 0;
  },
  pause$1: function(_, resumeSignal) {
    this._liblib5$_pauseCount = this._liblib5$_pauseCount + 1;
    if (resumeSignal != null)
      resumeSignal.whenComplete$1(this.get$resume());
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    if (!this.get$_liblib5$_paused())
      throw $.$$throw($.StateError$("Subscription is not paused."));
    this._liblib5$_pauseCount = this._liblib5$_pauseCount - 1;
  },
  get$resume: function() {
    return new $.BoundClosure$0(this, "resume$0");
  },
  _liblib5$_EventStreamSubscription$2: function(_eventStream, _onData) {
    this._liblib5$_pauseCount = 0;
    this._liblib5$_canceled = false;
  }
};

$$.KeyboardEvent = {"": "Event;_altKey,_ctrlKey,_shiftKey,_commandKey,_controlKey,_charCode,_keyCode,_keyLocation,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._altKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._commandKey = false;
    this._controlKey = false;
    this._charCode = 0;
    this._keyCode = 0;
    this._keyLocation = 0;
  },
  get$altKey: function(_) {
    return this._altKey;
  },
  get$ctrlKey: function(_) {
    return this._ctrlKey;
  },
  get$shiftKey: function(_) {
    return this._shiftKey;
  },
  get$charCode: function(_) {
    return this._charCode;
  },
  get$keyCode: function(_) {
    return this._keyCode;
  },
  get$keyLocation: function(_) {
    return this._keyLocation;
  },
  KeyboardEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.MouseEvent = {"": "Event;_localX,_localY,_stageX,_stageY,_buttonDown,_altKey,_controlKey,_ctrlKey,_shiftKey,_clickCount,_deltaX,_deltaY,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._localY = 0;
    this._localX = 0;
    this._stageY = 0;
    this._stageX = 0;
    this._buttonDown = false;
    this._altKey = false;
    this._controlKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._clickCount = 0;
    this._deltaX = 0;
    this._deltaY = 0;
  },
  set$_localPoint: function(point) {
    this._localX = point.x;
    this._localY = point.y;
  },
  set$_stagePoint: function(point) {
    this._stageX = point.x;
    this._stageY = point.y;
  },
  get$buttonDown: function() {
    return this._buttonDown;
  },
  get$altKey: function(_) {
    return this._altKey;
  },
  get$ctrlKey: function(_) {
    return this._ctrlKey;
  },
  get$shiftKey: function(_) {
    return this._shiftKey;
  },
  get$clickCount: function() {
    return this._clickCount;
  },
  get$deltaX: function(_) {
    return this._deltaX;
  },
  get$deltaY: function(_) {
    return this._deltaY;
  },
  MouseEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.TextEvent = {"": "Event;_text,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation"};

$$.TouchEvent = {"": "Event;_touchPointID,_isPrimaryTouchPoint,_localX,_localY,_stageX,_stageY,_altKey,_controlKey,_ctrlKey,_shiftKey,_pressure,_sizeX,_sizeY,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._touchPointID = 0;
    this._isPrimaryTouchPoint = false;
    this._localY = 0;
    this._localX = 0;
    this._stageY = 0;
    this._stageX = 0;
    this._altKey = false;
    this._controlKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._pressure = 1;
    this._sizeX = 0;
    this._sizeY = 0;
  },
  set$_localPoint: function(point) {
    this._localX = point.x;
    this._localY = point.y;
  },
  set$_stagePoint: function(point) {
    this._stageX = point.x;
    this._stageY = point.y;
  },
  get$touchPointID: function() {
    return this._touchPointID;
  },
  get$altKey: function(_) {
    return this._altKey;
  },
  get$ctrlKey: function(_) {
    return this._ctrlKey;
  },
  get$shiftKey: function(_) {
    return this._shiftKey;
  },
  TouchEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.BitmapFilter = {"": "Object;", $isBitmapFilter: true};

$$.BlurFilter = {"": "BitmapFilter;blurX,blurY",
  apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
    var sourceImageData, t1, sourceData, sourceWidth, sourceHeight, t4, weightX, t5, weightY, weightXinv, weightYinv, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, destinationContext, t6, destinationImageData, destinationData, buffer, t2, sum, t3, t7, z, x, offsetSource, offsetDestination, sum0, dif, y, t8, t9, color;
    sourceImageData = $.getImageData$4$x(sourceBitmapData._getContext$0(), sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
    t1 = $.getInterceptor$x(sourceImageData);
    sourceData = t1.get$data(sourceImageData);
    if (typeof sourceData !== "string" && (typeof sourceData !== "object" || sourceData === null || sourceData.constructor !== Array && !sourceData.$isJavaScriptIndexingBehavior()))
      return this.apply$4$bailout1(1, t1, destinationBitmapData, destinationPoint, sourceImageData, sourceData);
    sourceWidth = t1.get$width(sourceImageData);
    if (typeof sourceWidth !== "number")
      return this.apply$4$bailout1(2, t1, destinationBitmapData, destinationPoint, sourceImageData, sourceData, sourceWidth);
    sourceHeight = t1.get$height(sourceImageData);
    if (typeof sourceHeight !== "number")
      return this.apply$4$bailout1(3, 0, destinationBitmapData, destinationPoint, 0, sourceData, sourceWidth, sourceHeight);
    t4 = this.blurX;
    weightX = t4 * t4;
    t5 = this.blurY;
    weightY = t5 * t5;
    weightXinv = $.JSInt_methods.$tdiv(4194304, weightX);
    weightYinv = $.JSInt_methods.$tdiv(4194304, weightY);
    rx2 = t4 * 2;
    ry2 = t5 * 2;
    destinationWidth = sourceWidth + rx2;
    destinationHeight = sourceHeight + ry2;
    sourceWidth4 = sourceWidth * 4;
    destinationWidth4 = destinationWidth * 4;
    destinationContext = destinationBitmapData._getContext$0();
    t6 = $.getInterceptor$x(destinationContext);
    destinationImageData = t6.createImageData$2(destinationContext, destinationWidth, destinationHeight);
    destinationData = $.get$data$x(destinationImageData);
    if (typeof destinationData !== "object" || destinationData === null || (destinationData.constructor !== Array || !!destinationData.immutable$list) && !destinationData.$isJavaScriptIndexingBehavior())
      return this.apply$4$bailout1(4, 0, 0, destinationPoint, 0, sourceData, sourceWidth, sourceHeight, weightXinv, weightYinv, destinationHeight, destinationWidth4, t4, destinationData, weightX, t5, weightY, rx2, sourceWidth4, destinationWidth, ry2, destinationContext, t6, destinationImageData);
    buffer = $.List_List(1024, $.$int);
    $.setRuntimeTypeInfo(buffer, [$.$int]);
    $._premultiplyAlpha(sourceData);
    for (t1 = buffer.length, t2 = $.getInterceptor$asx(sourceData), sum = $.JSInt_methods.$shr(weightY, 1), t3 = sourceData.length, t7 = destinationData.length, z = 0; z < 4; ++z)
      for (x = 0; x < sourceWidth; ++x) {
        offsetSource = x * 4 + z;
        offsetDestination = (x + t4) * 4 + z;
        for (sum0 = sum, dif = 0, y = 0; y < destinationHeight; ++y) {
          t8 = $.JSNumber_methods.$shr(sum0 * weightYinv, 22);
          if (offsetDestination !== (offsetDestination | 0))
            throw $.iae(offsetDestination);
          if (offsetDestination < 0 || offsetDestination >= t7)
            throw $.ioore(offsetDestination);
          destinationData[offsetDestination] = t8;
          offsetDestination += destinationWidth4;
          if (y >= ry2) {
            t8 = y & 1023;
            if (t8 >= t1)
              throw $.ioore(t8);
            t8 = buffer[t8];
            if (typeof t8 !== "number")
              throw $.iae(t8);
            t9 = y - t5 & 1023;
            if (t9 >= t1)
              throw $.ioore(t9);
            t9 = buffer[t9];
            if (typeof t9 !== "number")
              throw $.iae(t9);
            dif -= 2 * t8 - t9;
          } else if (y >= t5) {
            t8 = y & 1023;
            if (t8 >= t1)
              throw $.ioore(t8);
            t8 = buffer[t8];
            if (typeof t8 !== "number")
              throw $.iae(t8);
            dif -= 2 * t8;
          }
          if (y < sourceHeight) {
            if (offsetSource !== (offsetSource | 0))
              throw $.iae(offsetSource);
            if (offsetSource < 0 || offsetSource >= t3)
              throw $.ioore(offsetSource);
            t8 = sourceData[offsetSource];
            if (typeof t8 !== "number")
              return this.apply$4$bailout1(5, t1, 0, destinationPoint, 0, sourceData, sourceWidth, sourceHeight, weightXinv, weightYinv, destinationHeight, destinationWidth4, t4, destinationData, weightX, t5, 0, rx2, sourceWidth4, destinationWidth, ry2, destinationContext, t6, destinationImageData, $.JSArray_methods, buffer, x, sum, offsetDestination, z, dif, t8, sum0, offsetSource, y, t2);
            color = t8;
          } else
            color = 0;
          t8 = y + t5 & 1023;
          if (t8 >= t1)
            throw $.ioore(t8);
          buffer[t8] = color;
          dif += color;
          sum0 += dif;
          offsetSource += sourceWidth4;
        }
      }
    for (sum = $.JSInt_methods.$shr(weightX, 1), t2 = t4 * 4, z = 0; z < 4; ++z)
      for (y = 0; y < destinationHeight; ++y) {
        t3 = y * destinationWidth4;
        offsetSource = t3 + t2 + z;
        offsetDestination = t3 + z;
        for (sum0 = sum, dif = 0, x = 0; x < destinationWidth; ++x) {
          t3 = $.JSNumber_methods.$shr(sum0 * weightXinv, 22);
          if (offsetDestination !== (offsetDestination | 0))
            throw $.iae(offsetDestination);
          if (offsetDestination < 0 || offsetDestination >= t7)
            throw $.ioore(offsetDestination);
          destinationData[offsetDestination] = t3;
          offsetDestination += 4;
          if (x >= rx2) {
            t3 = x & 1023;
            if (t3 >= t1)
              throw $.ioore(t3);
            t3 = buffer[t3];
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t8 = x - t4 & 1023;
            if (t8 >= t1)
              throw $.ioore(t8);
            t8 = buffer[t8];
            if (typeof t8 !== "number")
              throw $.iae(t8);
            dif -= 2 * t3 - t8;
          } else if (x >= t4) {
            t3 = x & 1023;
            if (t3 >= t1)
              throw $.ioore(t3);
            t3 = buffer[t3];
            if (typeof t3 !== "number")
              throw $.iae(t3);
            dif -= 2 * t3;
          }
          if (x < sourceWidth) {
            if (offsetSource !== (offsetSource | 0))
              throw $.iae(offsetSource);
            if (offsetSource < 0 || offsetSource >= t7)
              throw $.ioore(offsetSource);
            t3 = destinationData[offsetSource];
            if (typeof t3 !== "number")
              return this.apply$4$bailout1(6, t1, 0, destinationPoint, 0, 0, sourceWidth, 0, weightXinv, 0, destinationHeight, destinationWidth4, t4, destinationData, 0, t5, 0, rx2, 0, destinationWidth, 0, destinationContext, t6, destinationImageData, $.JSArray_methods, buffer, x, sum, offsetDestination, z, dif, t3, sum0, offsetSource, y, t2);
            color = t3;
          } else
            color = 0;
          t3 = x + t4 & 1023;
          if (t3 >= t1)
            throw $.ioore(t3);
          buffer[t3] = color;
          dif += color;
          sum0 += dif;
          offsetSource += 4;
        }
      }
    $._unpremultiplyAlpha(destinationData);
    t6.putImageData$3(destinationContext, destinationImageData, $.$sub$n(destinationPoint.x, t4), $.$sub$n(destinationPoint.y, t5));
  },
  apply$4$bailout1: function(state0, t1, destinationBitmapData, destinationPoint, sourceImageData, sourceData, sourceWidth, sourceHeight, weightXinv, weightYinv, destinationHeight, destinationWidth4, t4, destinationData, weightX, t5, weightY, rx2, sourceWidth4, destinationWidth, ry2, destinationContext, t6, destinationImageData, t3, buffer, x, sum, offsetDestination, z, dif, t7, sum0, offsetSource, y, t2) {
    switch (state0) {
      case 0:
        sourceImageData = $.getImageData$4$x(sourceBitmapData._getContext$0(), sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
        t1 = $.getInterceptor$x(sourceImageData);
        sourceData = t1.get$data(sourceImageData);
      case 1:
        state0 = 0;
        sourceWidth = t1.get$width(sourceImageData);
      case 2:
        state0 = 0;
        sourceHeight = t1.get$height(sourceImageData);
      case 3:
        state0 = 0;
        t4 = this.blurX;
        weightX = t4 * t4;
        t5 = this.blurY;
        weightY = t5 * t5;
        weightXinv = $.JSInt_methods.$tdiv(4194304, weightX);
        weightYinv = $.JSInt_methods.$tdiv(4194304, weightY);
        rx2 = t4 * 2;
        ry2 = t5 * 2;
        t6 = $.getInterceptor$ns(sourceWidth);
        destinationWidth = t6.$add(sourceWidth, rx2);
        destinationHeight = $.$add$ns(sourceHeight, ry2);
        sourceWidth4 = t6.$mul(sourceWidth, 4);
        destinationWidth4 = $.$mul$n(destinationWidth, 4);
        destinationContext = destinationBitmapData._getContext$0();
        t6 = $.getInterceptor$x(destinationContext);
        destinationImageData = t6.createImageData$2(destinationContext, destinationWidth, destinationHeight);
        destinationData = $.get$data$x(destinationImageData);
      case 4:
        state0 = 0;
        buffer = $.List_List(1024, $.$int);
        $.setRuntimeTypeInfo(buffer, [$.$int]);
        $._premultiplyAlpha(sourceData);
        t1 = buffer.length;
        t2 = $.getInterceptor$asx(sourceData);
        t3 = $.getInterceptor$ax(destinationData);
        sum = $.JSInt_methods.$shr(weightY, 1);
        z = 0;
      case 5:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(z < 4))
                  break L0;
                x = 0;
              case 5:
                L1:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.JSNumber_methods.$lt(x, sourceWidth))
                          break L1;
                        offsetSource = x * 4 + z;
                        offsetDestination = (x + t4) * 4 + z;
                        sum0 = sum;
                        dif = 0;
                        y = 0;
                      case 5:
                        L2:
                          while (true)
                            switch (state0) {
                              case 0:
                                if (!$.JSNumber_methods.$lt(y, destinationHeight))
                                  break L2;
                                t3.$indexSet(destinationData, offsetDestination, $.JSNumber_methods.$shr(sum0 * weightYinv, 22));
                                if (typeof destinationWidth4 !== "number")
                                  throw $.iae(destinationWidth4);
                                offsetDestination += destinationWidth4;
                                if (y >= ry2) {
                                  t7 = y & 1023;
                                  if (t7 >= t1)
                                    throw $.ioore(t7);
                                  t7 = buffer[t7];
                                  if (typeof t7 !== "number")
                                    throw $.iae(t7);
                                  t8 = y - t5 & 1023;
                                  if (t8 >= t1)
                                    throw $.ioore(t8);
                                  t8 = buffer[t8];
                                  if (typeof t8 !== "number")
                                    throw $.iae(t8);
                                  dif -= 2 * t7 - t8;
                                } else if (y >= t5) {
                                  t7 = y & 1023;
                                  if (t7 >= t1)
                                    throw $.ioore(t7);
                                  t7 = buffer[t7];
                                  if (typeof t7 !== "number")
                                    throw $.iae(t7);
                                  dif -= 2 * t7;
                                }
                              case 5:
                                if (state0 === 5 || state0 === 0 && $.JSNumber_methods.$lt(y, sourceHeight))
                                  switch (state0) {
                                    case 0:
                                      t7 = t2.$index(sourceData, offsetSource);
                                    case 5:
                                      state0 = 0;
                                      color = t7;
                                  }
                                else
                                  color = 0;
                                t7 = y + t5 & 1023;
                                if (t7 >= t1)
                                  throw $.ioore(t7);
                                buffer[t7] = color;
                                if (typeof color !== "number")
                                  throw $.iae(color);
                                dif += color;
                                sum0 += dif;
                                if (typeof sourceWidth4 !== "number")
                                  throw $.iae(sourceWidth4);
                                offsetSource += sourceWidth4;
                                ++y;
                            }
                        ++x;
                    }
                ++z;
            }
        sum = $.JSInt_methods.$shr(weightX, 1);
        t2 = t4 * 4;
        z = 0;
      case 6:
        var t8, color;
        L3:
          while (true)
            switch (state0) {
              case 0:
                if (!(z < 4))
                  break L3;
                y = 0;
              case 6:
                L4:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.JSNumber_methods.$lt(y, destinationHeight))
                          break L4;
                        if (typeof destinationWidth4 !== "number")
                          throw $.iae(destinationWidth4);
                        t7 = y * destinationWidth4;
                        offsetSource = t7 + t2 + z;
                        offsetDestination = t7 + z;
                        sum0 = sum;
                        dif = 0;
                        x = 0;
                      case 6:
                        L5:
                          while (true)
                            switch (state0) {
                              case 0:
                                if (!$.JSNumber_methods.$lt(x, destinationWidth))
                                  break L5;
                                t3.$indexSet(destinationData, offsetDestination, $.JSNumber_methods.$shr(sum0 * weightXinv, 22));
                                offsetDestination += 4;
                                if (x >= rx2) {
                                  t7 = x & 1023;
                                  if (t7 >= t1)
                                    throw $.ioore(t7);
                                  t7 = buffer[t7];
                                  if (typeof t7 !== "number")
                                    throw $.iae(t7);
                                  t8 = x - t4 & 1023;
                                  if (t8 >= t1)
                                    throw $.ioore(t8);
                                  t8 = buffer[t8];
                                  if (typeof t8 !== "number")
                                    throw $.iae(t8);
                                  dif -= 2 * t7 - t8;
                                } else if (x >= t4) {
                                  t7 = x & 1023;
                                  if (t7 >= t1)
                                    throw $.ioore(t7);
                                  t7 = buffer[t7];
                                  if (typeof t7 !== "number")
                                    throw $.iae(t7);
                                  dif -= 2 * t7;
                                }
                              case 6:
                                if (state0 === 6 || state0 === 0 && $.JSNumber_methods.$lt(x, sourceWidth))
                                  switch (state0) {
                                    case 0:
                                      t7 = t3.$index(destinationData, offsetSource);
                                    case 6:
                                      state0 = 0;
                                      color = t7;
                                  }
                                else
                                  color = 0;
                                t7 = x + t4 & 1023;
                                if (t7 >= t1)
                                  throw $.ioore(t7);
                                buffer[t7] = color;
                                if (typeof color !== "number")
                                  throw $.iae(color);
                                dif += color;
                                sum0 += dif;
                                offsetSource += 4;
                                ++x;
                            }
                        ++y;
                    }
                ++z;
            }
        $._unpremultiplyAlpha(destinationData);
        t6.putImageData$3(destinationContext, destinationImageData, $.$sub$n(destinationPoint.x, t4), $.$sub$n(destinationPoint.y, t5));
    }
  },
  BlurFilter$2: function(blurX, blurY) {
    var t1 = this.blurX;
    if (t1 < 1 || this.blurY < 1)
      throw $.$$throw($.ArgumentError$("Error #9004: The minimum blur size is 1."));
    if (t1 > 128 || this.blurY > 128)
      throw $.$$throw($.ArgumentError$("Error #9004: The maximum blur size is 128."));
  }
};

$$.ColorMatrixFilter = {"": "BitmapFilter;_matrix<",
  apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
    var imageData, data, t2, a00, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, t1, index, srcR, t3, srcG, t4, srcB, t5, srcA;
    imageData = $.getImageData$4$x(sourceBitmapData._getContext$0(), sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
    data = $.get$data$x(imageData);
    if (typeof data !== "object" || data === null || (data.constructor !== Array || !!data.immutable$list) && !data.$isJavaScriptIndexingBehavior())
      return this.apply$4$bailout1(1, destinationBitmapData, destinationPoint, imageData, data);
    t2 = this._matrix;
    if (0 >= t2.length)
      throw $.ioore(0);
    a00 = $.toInt$0$nx($.$mul$n(t2[0], 65536));
    if (typeof a00 !== "number")
      return this.apply$4$bailout1(2, destinationBitmapData, destinationPoint, imageData, data, a00, t2);
    if (1 >= t2.length)
      throw $.ioore(1);
    a01 = $.toInt$0$nx($.$mul$n(t2[1], 65536));
    if (typeof a01 !== "number")
      return this.apply$4$bailout1(3, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01);
    if (2 >= t2.length)
      throw $.ioore(2);
    a02 = $.toInt$0$nx($.$mul$n(t2[2], 65536));
    if (typeof a02 !== "number")
      return this.apply$4$bailout1(4, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02);
    if (3 >= t2.length)
      throw $.ioore(3);
    a03 = $.toInt$0$nx($.$mul$n(t2[3], 65536));
    if (typeof a03 !== "number")
      return this.apply$4$bailout1(5, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03);
    if (4 >= t2.length)
      throw $.ioore(4);
    a04 = $.toInt$0$nx($.$mul$n(t2[4], 65536));
    if (typeof a04 !== "number")
      return this.apply$4$bailout1(6, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04);
    if (5 >= t2.length)
      throw $.ioore(5);
    a05 = $.toInt$0$nx($.$mul$n(t2[5], 65536));
    if (typeof a05 !== "number")
      return this.apply$4$bailout1(7, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05);
    if (6 >= t2.length)
      throw $.ioore(6);
    a06 = $.toInt$0$nx($.$mul$n(t2[6], 65536));
    if (typeof a06 !== "number")
      return this.apply$4$bailout1(8, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06);
    if (7 >= t2.length)
      throw $.ioore(7);
    a07 = $.toInt$0$nx($.$mul$n(t2[7], 65536));
    if (typeof a07 !== "number")
      return this.apply$4$bailout1(9, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07);
    if (8 >= t2.length)
      throw $.ioore(8);
    a08 = $.toInt$0$nx($.$mul$n(t2[8], 65536));
    if (typeof a08 !== "number")
      return this.apply$4$bailout1(10, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08);
    if (9 >= t2.length)
      throw $.ioore(9);
    a09 = $.toInt$0$nx($.$mul$n(t2[9], 65536));
    if (typeof a09 !== "number")
      return this.apply$4$bailout1(11, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09);
    if (10 >= t2.length)
      throw $.ioore(10);
    a10 = $.toInt$0$nx($.$mul$n(t2[10], 65536));
    if (typeof a10 !== "number")
      return this.apply$4$bailout1(12, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10);
    if (11 >= t2.length)
      throw $.ioore(11);
    a11 = $.toInt$0$nx($.$mul$n(t2[11], 65536));
    if (typeof a11 !== "number")
      return this.apply$4$bailout1(13, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11);
    if (12 >= t2.length)
      throw $.ioore(12);
    a12 = $.toInt$0$nx($.$mul$n(t2[12], 65536));
    if (typeof a12 !== "number")
      return this.apply$4$bailout1(14, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12);
    if (13 >= t2.length)
      throw $.ioore(13);
    a13 = $.toInt$0$nx($.$mul$n(t2[13], 65536));
    if (typeof a13 !== "number")
      return this.apply$4$bailout1(15, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13);
    if (14 >= t2.length)
      throw $.ioore(14);
    a14 = $.toInt$0$nx($.$mul$n(t2[14], 65536));
    if (typeof a14 !== "number")
      return this.apply$4$bailout1(16, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14);
    if (15 >= t2.length)
      throw $.ioore(15);
    a15 = $.toInt$0$nx($.$mul$n(t2[15], 65536));
    if (typeof a15 !== "number")
      return this.apply$4$bailout1(17, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15);
    if (16 >= t2.length)
      throw $.ioore(16);
    a16 = $.toInt$0$nx($.$mul$n(t2[16], 65536));
    if (typeof a16 !== "number")
      return this.apply$4$bailout1(18, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16);
    if (17 >= t2.length)
      throw $.ioore(17);
    a17 = $.toInt$0$nx($.$mul$n(t2[17], 65536));
    if (typeof a17 !== "number")
      return this.apply$4$bailout1(19, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17);
    if (18 >= t2.length)
      throw $.ioore(18);
    a18 = $.toInt$0$nx($.$mul$n(t2[18], 65536));
    if (typeof a18 !== "number")
      return this.apply$4$bailout1(20, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    if (19 >= t2.length)
      throw $.ioore(19);
    a19 = $.toInt$0$nx($.$mul$n(t2[19], 65536));
    if (typeof a19 !== "number")
      return this.apply$4$bailout1(21, destinationBitmapData, destinationPoint, imageData, data, a00, 0, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
    if ($.get$_isLittleEndianSystem() === true)
      for (t1 = data.length, index = 0; index <= t1 - 4; index += 4) {
        t2 = index + 0;
        srcR = data[t2];
        t3 = index + 1;
        srcG = data[t3];
        t4 = index + 2;
        srcB = data[t4];
        t5 = index + 3;
        srcA = data[t5];
        if (typeof srcR !== "number")
          throw $.iae(srcR);
        if (typeof srcG !== "number")
          throw $.iae(srcG);
        if (typeof srcB !== "number")
          throw $.iae(srcB);
        if (typeof srcA !== "number")
          throw $.iae(srcA);
        data[t2] = $.JSNumber_methods.$shr(a00 * srcR + a01 * srcG + a02 * srcB + a03 * srcA + a04, 16);
        data[t3] = $.JSNumber_methods.$shr(a05 * srcR + a06 * srcG + a07 * srcB + a08 * srcA + a09, 16);
        data[t4] = $.JSNumber_methods.$shr(a10 * srcR + a11 * srcG + a12 * srcB + a13 * srcA + a14, 16);
        data[t5] = $.JSNumber_methods.$shr(a15 * srcR + a16 * srcG + a17 * srcB + a18 * srcA + a19, 16);
      }
    else
      for (t1 = data.length, index = 0; index <= t1 - 4; index += 4) {
        t2 = index + 0;
        srcA = data[t2];
        t3 = index + 1;
        srcB = data[t3];
        t4 = index + 2;
        srcG = data[t4];
        t5 = index + 3;
        srcR = data[t5];
        if (typeof srcR !== "number")
          throw $.iae(srcR);
        if (typeof srcG !== "number")
          throw $.iae(srcG);
        if (typeof srcB !== "number")
          throw $.iae(srcB);
        if (typeof srcA !== "number")
          throw $.iae(srcA);
        data[t2] = $.JSNumber_methods.$shr(a15 * srcR + a16 * srcG + a17 * srcB + a18 * srcA + a19, 16);
        data[t3] = $.JSNumber_methods.$shr(a10 * srcR + a11 * srcG + a12 * srcB + a13 * srcA + a14, 16);
        data[t4] = $.JSNumber_methods.$shr(a05 * srcR + a06 * srcG + a07 * srcB + a08 * srcA + a09, 16);
        data[t5] = $.JSNumber_methods.$shr(a00 * srcR + a01 * srcG + a02 * srcB + a03 * srcA + a04, 16);
      }
    $.putImageData$3$x(destinationBitmapData._getContext$0(), imageData, destinationPoint.x, destinationPoint.y);
  },
  apply$4$bailout1: function(state0, destinationBitmapData, destinationPoint, imageData, data, a00, t2, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {
    switch (state0) {
      case 0:
        imageData = $.getImageData$4$x(sourceBitmapData._getContext$0(), sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
        data = $.get$data$x(imageData);
      case 1:
        state0 = 0;
        t2 = this._matrix;
        if (0 >= t2.length)
          throw $.ioore(0);
        a00 = $.toInt$0$nx($.$mul$n(t2[0], 65536));
      case 2:
        state0 = 0;
        if (1 >= t2.length)
          throw $.ioore(1);
        a01 = $.toInt$0$nx($.$mul$n(t2[1], 65536));
      case 3:
        state0 = 0;
        if (2 >= t2.length)
          throw $.ioore(2);
        a02 = $.toInt$0$nx($.$mul$n(t2[2], 65536));
      case 4:
        state0 = 0;
        if (3 >= t2.length)
          throw $.ioore(3);
        a03 = $.toInt$0$nx($.$mul$n(t2[3], 65536));
      case 5:
        state0 = 0;
        if (4 >= t2.length)
          throw $.ioore(4);
        a04 = $.toInt$0$nx($.$mul$n(t2[4], 65536));
      case 6:
        state0 = 0;
        if (5 >= t2.length)
          throw $.ioore(5);
        a05 = $.toInt$0$nx($.$mul$n(t2[5], 65536));
      case 7:
        state0 = 0;
        if (6 >= t2.length)
          throw $.ioore(6);
        a06 = $.toInt$0$nx($.$mul$n(t2[6], 65536));
      case 8:
        state0 = 0;
        if (7 >= t2.length)
          throw $.ioore(7);
        a07 = $.toInt$0$nx($.$mul$n(t2[7], 65536));
      case 9:
        state0 = 0;
        if (8 >= t2.length)
          throw $.ioore(8);
        a08 = $.toInt$0$nx($.$mul$n(t2[8], 65536));
      case 10:
        state0 = 0;
        if (9 >= t2.length)
          throw $.ioore(9);
        a09 = $.toInt$0$nx($.$mul$n(t2[9], 65536));
      case 11:
        state0 = 0;
        if (10 >= t2.length)
          throw $.ioore(10);
        a10 = $.toInt$0$nx($.$mul$n(t2[10], 65536));
      case 12:
        state0 = 0;
        if (11 >= t2.length)
          throw $.ioore(11);
        a11 = $.toInt$0$nx($.$mul$n(t2[11], 65536));
      case 13:
        state0 = 0;
        if (12 >= t2.length)
          throw $.ioore(12);
        a12 = $.toInt$0$nx($.$mul$n(t2[12], 65536));
      case 14:
        state0 = 0;
        if (13 >= t2.length)
          throw $.ioore(13);
        a13 = $.toInt$0$nx($.$mul$n(t2[13], 65536));
      case 15:
        state0 = 0;
        if (14 >= t2.length)
          throw $.ioore(14);
        a14 = $.toInt$0$nx($.$mul$n(t2[14], 65536));
      case 16:
        state0 = 0;
        if (15 >= t2.length)
          throw $.ioore(15);
        a15 = $.toInt$0$nx($.$mul$n(t2[15], 65536));
      case 17:
        state0 = 0;
        if (16 >= t2.length)
          throw $.ioore(16);
        a16 = $.toInt$0$nx($.$mul$n(t2[16], 65536));
      case 18:
        state0 = 0;
        if (17 >= t2.length)
          throw $.ioore(17);
        a17 = $.toInt$0$nx($.$mul$n(t2[17], 65536));
      case 19:
        state0 = 0;
        if (18 >= t2.length)
          throw $.ioore(18);
        a18 = $.toInt$0$nx($.$mul$n(t2[18], 65536));
      case 20:
        state0 = 0;
        if (19 >= t2.length)
          throw $.ioore(19);
        a19 = $.toInt$0$nx($.$mul$n(t2[19], 65536));
      case 21:
        var t1, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, index, t18, srcR, t19, srcG, t20, srcB, t21, srcA;
        state0 = 0;
        if ($.get$_isLittleEndianSystem() === true)
          for (t1 = $.getInterceptor$asx(data), t2 = $.getInterceptor$n(a00), t3 = $.getInterceptor$n(a01), t4 = $.getInterceptor$n(a02), t5 = $.getInterceptor$n(a03), t6 = $.getInterceptor$n(a05), t7 = $.getInterceptor$n(a06), t8 = $.getInterceptor$n(a07), t9 = $.getInterceptor$n(a08), t10 = $.getInterceptor$n(a10), t11 = $.getInterceptor$n(a11), t12 = $.getInterceptor$n(a12), t13 = $.getInterceptor$n(a13), t14 = $.getInterceptor$n(a15), t15 = $.getInterceptor$n(a16), t16 = $.getInterceptor$n(a17), t17 = $.getInterceptor$n(a18), index = 0; $.JSNumber_methods.$le(index, $.$sub$n(t1.get$length(data), 4)); index += 4) {
            t18 = index + 0;
            srcR = t1.$index(data, t18);
            t19 = index + 1;
            srcG = t1.$index(data, t19);
            t20 = index + 2;
            srcB = t1.$index(data, t20);
            t21 = index + 3;
            srcA = t1.$index(data, t21);
            t1.$indexSet(data, t18, $.$shr$n($.$add$ns($.$add$ns($.$add$ns($.$add$ns(t2.$mul(a00, srcR), t3.$mul(a01, srcG)), t4.$mul(a02, srcB)), t5.$mul(a03, srcA)), a04), 16));
            t1.$indexSet(data, t19, $.$shr$n($.$add$ns($.$add$ns($.$add$ns($.$add$ns(t6.$mul(a05, srcR), t7.$mul(a06, srcG)), t8.$mul(a07, srcB)), t9.$mul(a08, srcA)), a09), 16));
            t1.$indexSet(data, t20, $.$shr$n($.$add$ns($.$add$ns($.$add$ns($.$add$ns(t10.$mul(a10, srcR), t11.$mul(a11, srcG)), t12.$mul(a12, srcB)), t13.$mul(a13, srcA)), a14), 16));
            t1.$indexSet(data, t21, $.$shr$n($.$add$ns($.$add$ns($.$add$ns($.$add$ns(t14.$mul(a15, srcR), t15.$mul(a16, srcG)), t16.$mul(a17, srcB)), t17.$mul(a18, srcA)), a19), 16));
          }
        else
          for (t1 = $.getInterceptor$asx(data), t2 = $.getInterceptor$n(a15), t3 = $.getInterceptor$n(a16), t4 = $.getInterceptor$n(a17), t5 = $.getInterceptor$n(a18), t6 = $.getInterceptor$n(a10), t7 = $.getInterceptor$n(a11), t8 = $.getInterceptor$n(a12), t9 = $.getInterceptor$n(a13), t10 = $.getInterceptor$n(a05), t11 = $.getInterceptor$n(a06), t12 = $.getInterceptor$n(a07), t13 = $.getInterceptor$n(a08), t14 = $.getInterceptor$n(a00), t15 = $.getInterceptor$n(a01), t16 = $.getInterceptor$n(a02), t17 = $.getInterceptor$n(a03), index = 0; $.JSNumber_methods.$le(index, $.$sub$n(t1.get$length(data), 4)); index += 4) {
            t18 = index + 0;
            srcA = t1.$index(data, t18);
            t19 = index + 1;
            srcB = t1.$index(data, t19);
            t20 = index + 2;
            srcG = t1.$index(data, t20);
            t21 = index + 3;
            srcR = t1.$index(data, t21);
            t1.$indexSet(data, t18, $.$shr$n($.$add$ns($.$add$ns($.$add$ns($.$add$ns(t2.$mul(a15, srcR), t3.$mul(a16, srcG)), t4.$mul(a17, srcB)), t5.$mul(a18, srcA)), a19), 16));
            t1.$indexSet(data, t19, $.$shr$n($.$add$ns($.$add$ns($.$add$ns($.$add$ns(t6.$mul(a10, srcR), t7.$mul(a11, srcG)), t8.$mul(a12, srcB)), t9.$mul(a13, srcA)), a14), 16));
            t1.$indexSet(data, t20, $.$shr$n($.$add$ns($.$add$ns($.$add$ns($.$add$ns(t10.$mul(a05, srcR), t11.$mul(a06, srcG)), t12.$mul(a07, srcB)), t13.$mul(a08, srcA)), a09), 16));
            t1.$indexSet(data, t21, $.$shr$n($.$add$ns($.$add$ns($.$add$ns($.$add$ns(t14.$mul(a00, srcR), t15.$mul(a01, srcG)), t16.$mul(a02, srcB)), t17.$mul(a03, srcA)), a04), 16));
          }
        $.putImageData$3$x(destinationBitmapData._getContext$0(), imageData, destinationPoint.x, destinationPoint.y);
    }
  }
};

$$.DropShadowFilter = {"": "BitmapFilter;distance,angle,color,alpha>,blurX,blurY,strength,inner,knockout,hideObject",
  apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
    var sourceContext, sourceData, sourceWidth, sourceHeight, t4, weightX, t5, weightY, weightXinv, weightYinv, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, alphaChannel, destinationContext, t1, destinationImageData, destinationData, buffer, t2, t3, sum, t6, t7, x, offsetSource, offsetDestination, sum0, dif, y, t8, t9, alpha, aColor, rColor, gColor, bColor, i, sx, sy, dx, dy, sRect, uRect;
    sourceContext = sourceBitmapData._getContext$0();
    sourceData = $.get$data$x($.getImageData$4$x(sourceContext, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height));
    if (typeof sourceData !== "string" && (typeof sourceData !== "object" || sourceData === null || sourceData.constructor !== Array && !sourceData.$isJavaScriptIndexingBehavior()))
      return this.apply$4$bailout1(1, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext);
    sourceWidth = sourceRect.width;
    if (typeof sourceWidth !== "number")
      return this.apply$4$bailout1(2, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth);
    sourceHeight = sourceRect.height;
    if (typeof sourceHeight !== "number")
      return this.apply$4$bailout1(3, 0, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight);
    t4 = this.blurX;
    weightX = t4 * t4;
    t5 = this.blurY;
    weightY = t5 * t5;
    weightXinv = $.JSInt_methods.$tdiv(4194304, weightX);
    weightYinv = $.JSInt_methods.$tdiv(4194304, weightY);
    rx2 = t4 * 2;
    ry2 = t5 * 2;
    destinationWidth = sourceWidth + rx2;
    destinationHeight = sourceHeight + ry2;
    sourceWidth4 = sourceWidth * 4;
    destinationWidth4 = destinationWidth * 4;
    alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
    destinationContext = destinationBitmapData._getContext$0();
    t1 = $.getInterceptor$x(destinationContext);
    destinationImageData = t1.createImageData$2(destinationContext, destinationWidth, destinationHeight);
    destinationData = $.get$data$x(destinationImageData);
    if (typeof destinationData !== "object" || destinationData === null || (destinationData.constructor !== Array || !!destinationData.immutable$list) && !destinationData.$isJavaScriptIndexingBehavior())
      return this.apply$4$bailout1(4, 0, 0, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, rx2, alphaChannel, destinationContext, ry2, t1, destinationImageData, weightYinv, weightXinv, destinationHeight, destinationWidth4, destinationData, destinationWidth, sourceWidth4, t4, weightX, t5, weightY);
    buffer = $.List_List(1024, $.$int);
    $.setRuntimeTypeInfo(buffer, [$.$int]);
    for (t2 = buffer.length, t3 = $.getInterceptor$asx(sourceData), sum = $.JSInt_methods.$shr(weightY, 1), t6 = sourceData.length, t7 = destinationData.length, x = 0; x < sourceWidth; ++x) {
      offsetSource = x * 4 + alphaChannel;
      offsetDestination = (x + t4) * 4 + alphaChannel;
      for (sum0 = sum, dif = 0, y = 0; y < destinationHeight; ++y) {
        t8 = $.JSNumber_methods.$shr(sum0 * weightYinv, 22);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t7)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t8;
        offsetDestination += destinationWidth4;
        if (y >= ry2) {
          t8 = y & 1023;
          if (t8 >= t2)
            throw $.ioore(t8);
          t8 = buffer[t8];
          if (typeof t8 !== "number")
            throw $.iae(t8);
          t9 = y - t5 & 1023;
          if (t9 >= t2)
            throw $.ioore(t9);
          t9 = buffer[t9];
          if (typeof t9 !== "number")
            throw $.iae(t9);
          dif -= 2 * t8 - t9;
        } else if (y >= t5) {
          t8 = y & 1023;
          if (t8 >= t2)
            throw $.ioore(t8);
          t8 = buffer[t8];
          if (typeof t8 !== "number")
            throw $.iae(t8);
          dif -= 2 * t8;
        }
        if (y < sourceHeight) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t6)
            throw $.ioore(offsetSource);
          t8 = sourceData[offsetSource];
          if (typeof t8 !== "number")
            return this.apply$4$bailout1(5, 0, 0, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, rx2, alphaChannel, destinationContext, ry2, t1, destinationImageData, weightYinv, weightXinv, destinationHeight, destinationWidth4, destinationData, destinationWidth, sourceWidth4, t4, weightX, t5, 0, buffer, dif, t3, t8, sum0, offsetSource, y, offsetDestination, $.JSArray_methods, x, sum, t2);
          alpha = t8;
        } else
          alpha = 0;
        t8 = y + t5 & 1023;
        if (t8 >= t2)
          throw $.ioore(t8);
        buffer[t8] = alpha;
        dif += alpha;
        sum0 += dif;
        offsetSource += sourceWidth4;
      }
    }
    for (sum = $.JSInt_methods.$shr(weightX, 1), t3 = t4 * 4, y = 0; y < destinationHeight; ++y) {
      t6 = y * destinationWidth4;
      offsetSource = t6 + t3 + alphaChannel;
      offsetDestination = t6 + alphaChannel;
      for (sum0 = sum, dif = 0, x = 0; x < destinationWidth; ++x) {
        t6 = $.JSNumber_methods.$shr(sum0 * weightXinv, 22);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t7)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t6;
        offsetDestination += 4;
        if (x >= rx2) {
          t6 = x & 1023;
          if (t6 >= t2)
            throw $.ioore(t6);
          t6 = buffer[t6];
          if (typeof t6 !== "number")
            throw $.iae(t6);
          t8 = x - t4 & 1023;
          if (t8 >= t2)
            throw $.ioore(t8);
          t8 = buffer[t8];
          if (typeof t8 !== "number")
            throw $.iae(t8);
          dif -= 2 * t6 - t8;
        } else if (x >= t4) {
          t6 = x & 1023;
          if (t6 >= t2)
            throw $.ioore(t6);
          t6 = buffer[t6];
          if (typeof t6 !== "number")
            throw $.iae(t6);
          dif -= 2 * t6;
        }
        if (x < sourceWidth) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t7)
            throw $.ioore(offsetSource);
          t6 = destinationData[offsetSource];
          if (typeof t6 !== "number")
            return this.apply$4$bailout1(6, 0, 0, destinationPoint, 0, sourceContext, sourceWidth, sourceHeight, rx2, alphaChannel, destinationContext, 0, t1, destinationImageData, 0, weightXinv, destinationHeight, destinationWidth4, destinationData, destinationWidth, 0, t4, 0, t5, 0, buffer, dif, t3, t6, sum0, offsetSource, y, offsetDestination, $.JSArray_methods, x, sum, t2);
          alpha = t6;
        } else
          alpha = 0;
        t6 = x + t4 & 1023;
        if (t6 >= t2)
          throw $.ioore(t6);
        buffer[t6] = alpha;
        dif += alpha;
        sum0 += dif;
        offsetSource += 4;
      }
    }
    aColor = $.toInt$0$nx($.$mul$n(this.alpha, 256));
    if (typeof aColor !== "number")
      return this.apply$4$bailout1(7, 0, 0, destinationPoint, 0, sourceContext, sourceWidth, sourceHeight, 0, 0, destinationContext, 0, t1, destinationImageData, 0, 0, destinationHeight, 0, destinationData, destinationWidth, 0, t4, 0, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, aColor);
    t3 = this.color;
    rColor = $.JSInt_methods.$shr(t3, 16) & 255;
    gColor = $.JSInt_methods.$shr(t3, 8) & 255;
    bColor = $.JSInt_methods.$shr(t3, 0) & 255;
    if ($.get$_isLittleEndianSystem() === true)
      for (i = 0; i <= destinationData.length - 4; i += 4) {
        destinationData[i + 0] = rColor;
        destinationData[i + 1] = gColor;
        destinationData[i + 2] = bColor;
        t2 = i + 3;
        t3 = $.$shr$n($.$mul$n(destinationData[t2], aColor), 8);
        if (t2 >= destinationData.length)
          throw $.ioore(t2);
        destinationData[t2] = t3;
      }
    else
      for (i = 0; i <= destinationData.length - 4; i += 4) {
        t2 = i + 0;
        t3 = $.$shr$n($.$mul$n(destinationData[t2], aColor), 8);
        t6 = destinationData.length;
        if (t2 >= t6)
          throw $.ioore(t2);
        destinationData[t2] = t3;
        t3 = i + 1;
        if (t3 >= t6)
          throw $.ioore(t3);
        destinationData[t3] = bColor;
        t3 = i + 2;
        if (t3 >= t6)
          throw $.ioore(t3);
        destinationData[t3] = gColor;
        t3 = i + 3;
        if (t3 >= t6)
          throw $.ioore(t3);
        destinationData[t3] = rColor;
      }
    sx = destinationPoint.x;
    sy = destinationPoint.y;
    t2 = this.distance;
    t3 = this.angle;
    dx = $.$add$ns($.$sub$n(sx, t4), $.JSNumber_methods.toInt$0($.JSNumber_methods.round$0(t2 * Math.cos($.checkNum(t3)))));
    dy = $.$add$ns($.$sub$n(destinationPoint.y, t5), $.JSNumber_methods.toInt$0($.JSNumber_methods.round$0(t2 * Math.sin($.checkNum(t3)))));
    sRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight);
    uRect = sRect.union$1(sRect, $.Rectangle$(dx, dy, destinationWidth, destinationHeight));
    t1.setTransform$6(destinationContext, 1, 0, 0, 1, 0, 0);
    t1.clearRect$4(destinationContext, uRect.x, uRect.y, uRect.width, uRect.height);
    t1.putImageData$3(destinationContext, destinationImageData, dx, dy);
    if (!this.hideObject)
      t1.drawImage$3(destinationContext, sourceContext.canvas, sx, sy);
  },
  apply$4$bailout1: function(state0, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, rx2, alphaChannel, destinationContext, ry2, t1, destinationImageData, weightYinv, weightXinv, destinationHeight, destinationWidth4, destinationData, destinationWidth, sourceWidth4, t4, weightX, t5, weightY, buffer, dif, t3, t7, sum0, offsetSource, y, offsetDestination, t6, x, sum, t2, aColor) {
    switch (state0) {
      case 0:
        sourceContext = sourceBitmapData._getContext$0();
        sourceData = $.get$data$x($.getImageData$4$x(sourceContext, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height));
      case 1:
        state0 = 0;
        sourceWidth = sourceRect.width;
      case 2:
        state0 = 0;
        sourceHeight = sourceRect.height;
      case 3:
        state0 = 0;
        t4 = this.blurX;
        weightX = t4 * t4;
        t5 = this.blurY;
        weightY = t5 * t5;
        weightXinv = $.JSInt_methods.$tdiv(4194304, weightX);
        weightYinv = $.JSInt_methods.$tdiv(4194304, weightY);
        rx2 = t4 * 2;
        ry2 = t5 * 2;
        t6 = $.getInterceptor$ns(sourceWidth);
        destinationWidth = t6.$add(sourceWidth, rx2);
        destinationHeight = $.$add$ns(sourceHeight, ry2);
        sourceWidth4 = t6.$mul(sourceWidth, 4);
        destinationWidth4 = $.$mul$n(destinationWidth, 4);
        alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
        destinationContext = destinationBitmapData._getContext$0();
        t1 = $.getInterceptor$x(destinationContext);
        destinationImageData = t1.createImageData$2(destinationContext, destinationWidth, destinationHeight);
        destinationData = $.get$data$x(destinationImageData);
      case 4:
        state0 = 0;
        buffer = $.List_List(1024, $.$int);
        $.setRuntimeTypeInfo(buffer, [$.$int]);
        t2 = buffer.length;
        t3 = $.getInterceptor$asx(sourceData);
        t6 = $.getInterceptor$ax(destinationData);
        sum = $.JSInt_methods.$shr(weightY, 1);
        x = 0;
      case 5:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.JSNumber_methods.$lt(x, sourceWidth))
                  break L0;
                offsetSource = x * 4 + alphaChannel;
                offsetDestination = (x + t4) * 4 + alphaChannel;
                sum0 = sum;
                dif = 0;
                y = 0;
              case 5:
                L1:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.JSNumber_methods.$lt(y, destinationHeight))
                          break L1;
                        t6.$indexSet(destinationData, offsetDestination, $.JSNumber_methods.$shr(sum0 * weightYinv, 22));
                        if (typeof destinationWidth4 !== "number")
                          throw $.iae(destinationWidth4);
                        offsetDestination += destinationWidth4;
                        if (y >= ry2) {
                          t7 = y & 1023;
                          if (t7 >= t2)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          t8 = y - t5 & 1023;
                          if (t8 >= t2)
                            throw $.ioore(t8);
                          t8 = buffer[t8];
                          if (typeof t8 !== "number")
                            throw $.iae(t8);
                          dif -= 2 * t7 - t8;
                        } else if (y >= t5) {
                          t7 = y & 1023;
                          if (t7 >= t2)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          dif -= 2 * t7;
                        }
                      case 5:
                        if (state0 === 5 || state0 === 0 && $.JSNumber_methods.$lt(y, sourceHeight))
                          switch (state0) {
                            case 0:
                              t7 = t3.$index(sourceData, offsetSource);
                            case 5:
                              state0 = 0;
                              alpha = t7;
                          }
                        else
                          alpha = 0;
                        t7 = y + t5 & 1023;
                        if (t7 >= t2)
                          throw $.ioore(t7);
                        buffer[t7] = alpha;
                        if (typeof alpha !== "number")
                          throw $.iae(alpha);
                        dif += alpha;
                        sum0 += dif;
                        if (typeof sourceWidth4 !== "number")
                          throw $.iae(sourceWidth4);
                        offsetSource += sourceWidth4;
                        ++y;
                    }
                ++x;
            }
        sum = $.JSInt_methods.$shr(weightX, 1);
        t3 = t4 * 4;
        y = 0;
      case 6:
        L2:
          while (true)
            switch (state0) {
              case 0:
                if (!$.JSNumber_methods.$lt(y, destinationHeight))
                  break L2;
                if (typeof destinationWidth4 !== "number")
                  throw $.iae(destinationWidth4);
                t7 = y * destinationWidth4;
                offsetSource = t7 + t3 + alphaChannel;
                offsetDestination = t7 + alphaChannel;
                sum0 = sum;
                dif = 0;
                x = 0;
              case 6:
                L3:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.JSNumber_methods.$lt(x, destinationWidth))
                          break L3;
                        t6.$indexSet(destinationData, offsetDestination, $.JSNumber_methods.$shr(sum0 * weightXinv, 22));
                        offsetDestination += 4;
                        if (x >= rx2) {
                          t7 = x & 1023;
                          if (t7 >= t2)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          t8 = x - t4 & 1023;
                          if (t8 >= t2)
                            throw $.ioore(t8);
                          t8 = buffer[t8];
                          if (typeof t8 !== "number")
                            throw $.iae(t8);
                          dif -= 2 * t7 - t8;
                        } else if (x >= t4) {
                          t7 = x & 1023;
                          if (t7 >= t2)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          dif -= 2 * t7;
                        }
                      case 6:
                        if (state0 === 6 || state0 === 0 && $.JSNumber_methods.$lt(x, sourceWidth))
                          switch (state0) {
                            case 0:
                              t7 = t6.$index(destinationData, offsetSource);
                            case 6:
                              state0 = 0;
                              alpha = t7;
                          }
                        else
                          alpha = 0;
                        t7 = x + t4 & 1023;
                        if (t7 >= t2)
                          throw $.ioore(t7);
                        buffer[t7] = alpha;
                        if (typeof alpha !== "number")
                          throw $.iae(alpha);
                        dif += alpha;
                        sum0 += dif;
                        offsetSource += 4;
                        ++x;
                    }
                ++y;
            }
        aColor = $.toInt$0$nx($.$mul$n(this.alpha, 256));
      case 7:
        var t8, alpha, rColor, gColor, bColor, i, sx, sy, dx, dy, sRect, uRect;
        state0 = 0;
        t3 = this.color;
        rColor = $.JSInt_methods.$shr(t3, 16) & 255;
        gColor = $.JSInt_methods.$shr(t3, 8) & 255;
        bColor = $.JSInt_methods.$shr(t3, 0) & 255;
        if ($.get$_isLittleEndianSystem() === true)
          for (t2 = $.getInterceptor$asx(destinationData), i = 0; $.JSNumber_methods.$le(i, $.$sub$n(t2.get$length(destinationData), 4)); i += 4) {
            t2.$indexSet(destinationData, i + 0, rColor);
            t2.$indexSet(destinationData, i + 1, gColor);
            t2.$indexSet(destinationData, i + 2, bColor);
            t3 = i + 3;
            t2.$indexSet(destinationData, t3, $.$shr$n($.$mul$n(t2.$index(destinationData, t3), aColor), 8));
          }
        else
          for (t2 = $.getInterceptor$asx(destinationData), i = 0; $.JSNumber_methods.$le(i, $.$sub$n(t2.get$length(destinationData), 4)); i += 4) {
            t3 = i + 0;
            t2.$indexSet(destinationData, t3, $.$shr$n($.$mul$n(t2.$index(destinationData, t3), aColor), 8));
            t2.$indexSet(destinationData, i + 1, bColor);
            t2.$indexSet(destinationData, i + 2, gColor);
            t2.$indexSet(destinationData, i + 3, rColor);
          }
        sx = destinationPoint.x;
        sy = destinationPoint.y;
        t2 = this.distance;
        t3 = this.angle;
        dx = $.$add$ns($.$sub$n(sx, t4), $.JSNumber_methods.toInt$0($.JSNumber_methods.round$0(t2 * Math.cos($.checkNum(t3)))));
        dy = $.$add$ns($.$sub$n(destinationPoint.y, t5), $.JSNumber_methods.toInt$0($.JSNumber_methods.round$0(t2 * Math.sin($.checkNum(t3)))));
        sRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight);
        uRect = sRect.union$1(sRect, $.Rectangle$(dx, dy, destinationWidth, destinationHeight));
        t1.setTransform$6(destinationContext, 1, 0, 0, 1, 0, 0);
        t1.clearRect$4(destinationContext, uRect.x, uRect.y, uRect.width, uRect.height);
        t1.putImageData$3(destinationContext, destinationImageData, dx, dy);
        if (!this.hideObject)
          t1.drawImage$3(destinationContext, sourceContext.canvas, sx, sy);
    }
  },
  DropShadowFilter$10: function(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
    var t1 = this.blurX;
    if (t1 < 1 || this.blurY < 1)
      throw $.$$throw($.ArgumentError$("Error #9004: The minimum blur size is 1."));
    if (t1 > 128 || this.blurY > 128)
      throw $.$$throw($.ArgumentError$("Error #9004: The maximum blur size is 128."));
  }
};

$$.GlowFilter = {"": "BitmapFilter;color,alpha>,blurX,blurY,strength,inner,knockout,hideObject",
  apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
    var sourceContext, sourceData, sourceWidth, sourceHeight, t4, weightX, t5, weightY, weightXinv, weightYinv, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, alphaChannel, destinationContext, t1, destinationImageData, destinationData, buffer, t2, t3, sum, t6, t7, x, offsetSource, offsetDestination, sum0, dif, y, t8, t9, alpha, aColor, rColor, gColor, bColor, i, sx, sy, dx, dy, sRect, uRect;
    sourceContext = sourceBitmapData._getContext$0();
    sourceData = $.get$data$x($.getImageData$4$x(sourceContext, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height));
    if (typeof sourceData !== "string" && (typeof sourceData !== "object" || sourceData === null || sourceData.constructor !== Array && !sourceData.$isJavaScriptIndexingBehavior()))
      return this.apply$4$bailout1(1, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext);
    sourceWidth = sourceRect.width;
    if (typeof sourceWidth !== "number")
      return this.apply$4$bailout1(2, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth);
    sourceHeight = sourceRect.height;
    if (typeof sourceHeight !== "number")
      return this.apply$4$bailout1(3, 0, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight);
    t4 = this.blurX;
    weightX = t4 * t4;
    t5 = this.blurY;
    weightY = t5 * t5;
    weightXinv = $.JSInt_methods.$tdiv(4194304, weightX);
    weightYinv = $.JSInt_methods.$tdiv(4194304, weightY);
    rx2 = t4 * 2;
    ry2 = t5 * 2;
    destinationWidth = sourceWidth + rx2;
    destinationHeight = sourceHeight + ry2;
    sourceWidth4 = sourceWidth * 4;
    destinationWidth4 = destinationWidth * 4;
    alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
    destinationContext = destinationBitmapData._getContext$0();
    t1 = $.getInterceptor$x(destinationContext);
    destinationImageData = t1.createImageData$2(destinationContext, destinationWidth, destinationHeight);
    destinationData = $.get$data$x(destinationImageData);
    if (typeof destinationData !== "object" || destinationData === null || (destinationData.constructor !== Array || !!destinationData.immutable$list) && !destinationData.$isJavaScriptIndexingBehavior())
      return this.apply$4$bailout1(4, 0, 0, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, weightX, t5, weightY, alphaChannel, destinationContext, t1, rx2, weightXinv, weightYinv, destinationImageData, ry2, destinationHeight, destinationWidth4, destinationData, destinationWidth, sourceWidth4, t4);
    buffer = $.List_List(1024, $.$int);
    $.setRuntimeTypeInfo(buffer, [$.$int]);
    for (t2 = buffer.length, t3 = $.getInterceptor$asx(sourceData), sum = $.JSInt_methods.$shr(weightY, 1), t6 = sourceData.length, t7 = destinationData.length, x = 0; x < sourceWidth; ++x) {
      offsetSource = x * 4 + alphaChannel;
      offsetDestination = (x + t4) * 4 + alphaChannel;
      for (sum0 = sum, dif = 0, y = 0; y < destinationHeight; ++y) {
        t8 = $.JSNumber_methods.$shr(sum0 * weightYinv, 22);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t7)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t8;
        offsetDestination += destinationWidth4;
        if (y >= ry2) {
          t8 = y & 1023;
          if (t8 >= t2)
            throw $.ioore(t8);
          t8 = buffer[t8];
          if (typeof t8 !== "number")
            throw $.iae(t8);
          t9 = y - t5 & 1023;
          if (t9 >= t2)
            throw $.ioore(t9);
          t9 = buffer[t9];
          if (typeof t9 !== "number")
            throw $.iae(t9);
          dif -= 2 * t8 - t9;
        } else if (y >= t5) {
          t8 = y & 1023;
          if (t8 >= t2)
            throw $.ioore(t8);
          t8 = buffer[t8];
          if (typeof t8 !== "number")
            throw $.iae(t8);
          dif -= 2 * t8;
        }
        if (y < sourceHeight) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t6)
            throw $.ioore(offsetSource);
          t8 = sourceData[offsetSource];
          if (typeof t8 !== "number")
            return this.apply$4$bailout1(5, 0, 0, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, weightX, t5, 0, alphaChannel, destinationContext, t1, rx2, weightXinv, weightYinv, destinationImageData, ry2, destinationHeight, destinationWidth4, destinationData, destinationWidth, sourceWidth4, t4, offsetDestination, buffer, dif, t3, t2, sum0, t8, y, offsetSource, $.JSArray_methods, x, sum);
          alpha = t8;
        } else
          alpha = 0;
        t8 = y + t5 & 1023;
        if (t8 >= t2)
          throw $.ioore(t8);
        buffer[t8] = alpha;
        dif += alpha;
        sum0 += dif;
        offsetSource += sourceWidth4;
      }
    }
    for (sum = $.JSInt_methods.$shr(weightX, 1), t3 = t4 * 4, y = 0; y < destinationHeight; ++y) {
      t6 = y * destinationWidth4;
      offsetSource = t6 + t3 + alphaChannel;
      offsetDestination = t6 + alphaChannel;
      for (sum0 = sum, dif = 0, x = 0; x < destinationWidth; ++x) {
        t6 = $.JSNumber_methods.$shr(sum0 * weightXinv, 22);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t7)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t6;
        offsetDestination += 4;
        if (x >= rx2) {
          t6 = x & 1023;
          if (t6 >= t2)
            throw $.ioore(t6);
          t6 = buffer[t6];
          if (typeof t6 !== "number")
            throw $.iae(t6);
          t8 = x - t4 & 1023;
          if (t8 >= t2)
            throw $.ioore(t8);
          t8 = buffer[t8];
          if (typeof t8 !== "number")
            throw $.iae(t8);
          dif -= 2 * t6 - t8;
        } else if (x >= t4) {
          t6 = x & 1023;
          if (t6 >= t2)
            throw $.ioore(t6);
          t6 = buffer[t6];
          if (typeof t6 !== "number")
            throw $.iae(t6);
          dif -= 2 * t6;
        }
        if (x < sourceWidth) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t7)
            throw $.ioore(offsetSource);
          t6 = destinationData[offsetSource];
          if (typeof t6 !== "number")
            return this.apply$4$bailout1(6, 0, 0, destinationPoint, 0, sourceContext, sourceWidth, sourceHeight, 0, t5, 0, alphaChannel, destinationContext, t1, rx2, weightXinv, 0, destinationImageData, 0, destinationHeight, destinationWidth4, destinationData, destinationWidth, 0, t4, offsetDestination, buffer, dif, t3, t2, sum0, t6, y, offsetSource, $.JSArray_methods, x, sum);
          alpha = t6;
        } else
          alpha = 0;
        t6 = x + t4 & 1023;
        if (t6 >= t2)
          throw $.ioore(t6);
        buffer[t6] = alpha;
        dif += alpha;
        sum0 += dif;
        offsetSource += 4;
      }
    }
    aColor = $.toInt$0$nx($.$mul$n(this.alpha, 256));
    if (typeof aColor !== "number")
      return this.apply$4$bailout1(7, 0, 0, destinationPoint, 0, sourceContext, sourceWidth, sourceHeight, 0, t5, 0, 0, destinationContext, t1, 0, 0, 0, destinationImageData, 0, destinationHeight, 0, destinationData, destinationWidth, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, aColor);
    t3 = this.color;
    rColor = $.JSInt_methods.$shr(t3, 16) & 255;
    gColor = $.JSInt_methods.$shr(t3, 8) & 255;
    bColor = $.JSInt_methods.$shr(t3, 0) & 255;
    if ($.get$_isLittleEndianSystem() === true)
      for (i = 0; i <= destinationData.length - 4; i += 4) {
        destinationData[i + 0] = rColor;
        destinationData[i + 1] = gColor;
        destinationData[i + 2] = bColor;
        t2 = i + 3;
        t3 = $.$shr$n($.$mul$n(destinationData[t2], aColor), 8);
        if (t2 >= destinationData.length)
          throw $.ioore(t2);
        destinationData[t2] = t3;
      }
    else
      for (i = 0; i <= destinationData.length - 4; i += 4) {
        t2 = i + 0;
        t3 = $.$shr$n($.$mul$n(destinationData[t2], aColor), 8);
        t6 = destinationData.length;
        if (t2 >= t6)
          throw $.ioore(t2);
        destinationData[t2] = t3;
        t3 = i + 1;
        if (t3 >= t6)
          throw $.ioore(t3);
        destinationData[t3] = bColor;
        t3 = i + 2;
        if (t3 >= t6)
          throw $.ioore(t3);
        destinationData[t3] = gColor;
        t3 = i + 3;
        if (t3 >= t6)
          throw $.ioore(t3);
        destinationData[t3] = rColor;
      }
    sx = destinationPoint.x;
    sy = destinationPoint.y;
    dx = $.$sub$n(sx, t4);
    dy = $.$sub$n(destinationPoint.y, t5);
    sRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight);
    uRect = sRect.union$1(sRect, $.Rectangle$(dx, dy, destinationWidth, destinationHeight));
    t1.setTransform$6(destinationContext, 1, 0, 0, 1, 0, 0);
    t1.clearRect$4(destinationContext, uRect.x, uRect.y, uRect.width, uRect.height);
    t1.putImageData$3(destinationContext, destinationImageData, dx, dy);
    if (!this.hideObject)
      t1.drawImage$3(destinationContext, sourceContext.canvas, sx, sy);
  },
  apply$4$bailout1: function(state0, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext, sourceWidth, sourceHeight, weightX, t5, weightY, alphaChannel, destinationContext, t1, rx2, weightXinv, weightYinv, destinationImageData, ry2, destinationHeight, destinationWidth4, destinationData, destinationWidth, sourceWidth4, t4, offsetDestination, buffer, dif, t3, t2, sum0, t7, y, offsetSource, t6, x, sum, aColor) {
    switch (state0) {
      case 0:
        sourceContext = sourceBitmapData._getContext$0();
        sourceData = $.get$data$x($.getImageData$4$x(sourceContext, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height));
      case 1:
        state0 = 0;
        sourceWidth = sourceRect.width;
      case 2:
        state0 = 0;
        sourceHeight = sourceRect.height;
      case 3:
        state0 = 0;
        t4 = this.blurX;
        weightX = t4 * t4;
        t5 = this.blurY;
        weightY = t5 * t5;
        weightXinv = $.JSInt_methods.$tdiv(4194304, weightX);
        weightYinv = $.JSInt_methods.$tdiv(4194304, weightY);
        rx2 = t4 * 2;
        ry2 = t5 * 2;
        t6 = $.getInterceptor$ns(sourceWidth);
        destinationWidth = t6.$add(sourceWidth, rx2);
        destinationHeight = $.$add$ns(sourceHeight, ry2);
        sourceWidth4 = t6.$mul(sourceWidth, 4);
        destinationWidth4 = $.$mul$n(destinationWidth, 4);
        alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
        destinationContext = destinationBitmapData._getContext$0();
        t1 = $.getInterceptor$x(destinationContext);
        destinationImageData = t1.createImageData$2(destinationContext, destinationWidth, destinationHeight);
        destinationData = $.get$data$x(destinationImageData);
      case 4:
        state0 = 0;
        buffer = $.List_List(1024, $.$int);
        $.setRuntimeTypeInfo(buffer, [$.$int]);
        t2 = buffer.length;
        t3 = $.getInterceptor$asx(sourceData);
        t6 = $.getInterceptor$ax(destinationData);
        sum = $.JSInt_methods.$shr(weightY, 1);
        x = 0;
      case 5:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.JSNumber_methods.$lt(x, sourceWidth))
                  break L0;
                offsetSource = x * 4 + alphaChannel;
                offsetDestination = (x + t4) * 4 + alphaChannel;
                sum0 = sum;
                dif = 0;
                y = 0;
              case 5:
                L1:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.JSNumber_methods.$lt(y, destinationHeight))
                          break L1;
                        t6.$indexSet(destinationData, offsetDestination, $.JSNumber_methods.$shr(sum0 * weightYinv, 22));
                        if (typeof destinationWidth4 !== "number")
                          throw $.iae(destinationWidth4);
                        offsetDestination += destinationWidth4;
                        if (y >= ry2) {
                          t7 = y & 1023;
                          if (t7 >= t2)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          t8 = y - t5 & 1023;
                          if (t8 >= t2)
                            throw $.ioore(t8);
                          t8 = buffer[t8];
                          if (typeof t8 !== "number")
                            throw $.iae(t8);
                          dif -= 2 * t7 - t8;
                        } else if (y >= t5) {
                          t7 = y & 1023;
                          if (t7 >= t2)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          dif -= 2 * t7;
                        }
                      case 5:
                        if (state0 === 5 || state0 === 0 && $.JSNumber_methods.$lt(y, sourceHeight))
                          switch (state0) {
                            case 0:
                              t7 = t3.$index(sourceData, offsetSource);
                            case 5:
                              state0 = 0;
                              alpha = t7;
                          }
                        else
                          alpha = 0;
                        t7 = y + t5 & 1023;
                        if (t7 >= t2)
                          throw $.ioore(t7);
                        buffer[t7] = alpha;
                        if (typeof alpha !== "number")
                          throw $.iae(alpha);
                        dif += alpha;
                        sum0 += dif;
                        if (typeof sourceWidth4 !== "number")
                          throw $.iae(sourceWidth4);
                        offsetSource += sourceWidth4;
                        ++y;
                    }
                ++x;
            }
        sum = $.JSInt_methods.$shr(weightX, 1);
        t3 = t4 * 4;
        y = 0;
      case 6:
        L2:
          while (true)
            switch (state0) {
              case 0:
                if (!$.JSNumber_methods.$lt(y, destinationHeight))
                  break L2;
                if (typeof destinationWidth4 !== "number")
                  throw $.iae(destinationWidth4);
                t7 = y * destinationWidth4;
                offsetSource = t7 + t3 + alphaChannel;
                offsetDestination = t7 + alphaChannel;
                sum0 = sum;
                dif = 0;
                x = 0;
              case 6:
                L3:
                  while (true)
                    switch (state0) {
                      case 0:
                        if (!$.JSNumber_methods.$lt(x, destinationWidth))
                          break L3;
                        t6.$indexSet(destinationData, offsetDestination, $.JSNumber_methods.$shr(sum0 * weightXinv, 22));
                        offsetDestination += 4;
                        if (x >= rx2) {
                          t7 = x & 1023;
                          if (t7 >= t2)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          t8 = x - t4 & 1023;
                          if (t8 >= t2)
                            throw $.ioore(t8);
                          t8 = buffer[t8];
                          if (typeof t8 !== "number")
                            throw $.iae(t8);
                          dif -= 2 * t7 - t8;
                        } else if (x >= t4) {
                          t7 = x & 1023;
                          if (t7 >= t2)
                            throw $.ioore(t7);
                          t7 = buffer[t7];
                          if (typeof t7 !== "number")
                            throw $.iae(t7);
                          dif -= 2 * t7;
                        }
                      case 6:
                        if (state0 === 6 || state0 === 0 && $.JSNumber_methods.$lt(x, sourceWidth))
                          switch (state0) {
                            case 0:
                              t7 = t6.$index(destinationData, offsetSource);
                            case 6:
                              state0 = 0;
                              alpha = t7;
                          }
                        else
                          alpha = 0;
                        t7 = x + t4 & 1023;
                        if (t7 >= t2)
                          throw $.ioore(t7);
                        buffer[t7] = alpha;
                        if (typeof alpha !== "number")
                          throw $.iae(alpha);
                        dif += alpha;
                        sum0 += dif;
                        offsetSource += 4;
                        ++x;
                    }
                ++y;
            }
        aColor = $.toInt$0$nx($.$mul$n(this.alpha, 256));
      case 7:
        var t8, alpha, rColor, gColor, bColor, i, sx, sy, dx, dy, sRect, uRect;
        state0 = 0;
        t3 = this.color;
        rColor = $.JSInt_methods.$shr(t3, 16) & 255;
        gColor = $.JSInt_methods.$shr(t3, 8) & 255;
        bColor = $.JSInt_methods.$shr(t3, 0) & 255;
        if ($.get$_isLittleEndianSystem() === true)
          for (t2 = $.getInterceptor$asx(destinationData), i = 0; $.JSNumber_methods.$le(i, $.$sub$n(t2.get$length(destinationData), 4)); i += 4) {
            t2.$indexSet(destinationData, i + 0, rColor);
            t2.$indexSet(destinationData, i + 1, gColor);
            t2.$indexSet(destinationData, i + 2, bColor);
            t3 = i + 3;
            t2.$indexSet(destinationData, t3, $.$shr$n($.$mul$n(t2.$index(destinationData, t3), aColor), 8));
          }
        else
          for (t2 = $.getInterceptor$asx(destinationData), i = 0; $.JSNumber_methods.$le(i, $.$sub$n(t2.get$length(destinationData), 4)); i += 4) {
            t3 = i + 0;
            t2.$indexSet(destinationData, t3, $.$shr$n($.$mul$n(t2.$index(destinationData, t3), aColor), 8));
            t2.$indexSet(destinationData, i + 1, bColor);
            t2.$indexSet(destinationData, i + 2, gColor);
            t2.$indexSet(destinationData, i + 3, rColor);
          }
        sx = destinationPoint.x;
        sy = destinationPoint.y;
        dx = $.$sub$n(sx, t4);
        dy = $.$sub$n(destinationPoint.y, t5);
        sRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight);
        uRect = sRect.union$1(sRect, $.Rectangle$(dx, dy, destinationWidth, destinationHeight));
        t1.setTransform$6(destinationContext, 1, 0, 0, 1, 0, 0);
        t1.clearRect$4(destinationContext, uRect.x, uRect.y, uRect.width, uRect.height);
        t1.putImageData$3(destinationContext, destinationImageData, dx, dy);
        if (!this.hideObject)
          t1.drawImage$3(destinationContext, sourceContext.canvas, sx, sy);
    }
  },
  GlowFilter$8: function(color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
    var t1 = this.blurX;
    if (t1 < 1 || this.blurY < 1)
      throw $.$$throw($.ArgumentError$("Error #9004: The minimum blur size is 1."));
    if (t1 > 128 || this.blurY > 128)
      throw $.$$throw($.ArgumentError$("Error #9004: The maximum blur size is 128."));
  }
};

$$.Circle = {"": "Object;x*,y*,radius"};

$$.Matrix = {"": "Object;_a,_b,_c,_d,_tx,_ty,_det",
  get$a: function() {
    return this._a;
  },
  get$b: function() {
    return this._b;
  },
  get$c: function() {
    return this._c;
  },
  get$d: function() {
    return this._d;
  },
  get$tx: function() {
    return this._tx;
  },
  get$ty: function() {
    return this._ty;
  },
  get$det: function() {
    return this._det;
  },
  transformPoint$1: function(p) {
    return $.Point$($.$add$ns($.$add$ns($.$mul$n(p.x, this._a), $.$mul$n(p.y, this._c)), this._tx), $.$add$ns($.$add$ns($.$mul$n(p.x, this._b), $.$mul$n(p.y, this._d)), this._ty));
  },
  concat$1: function(_, matrix) {
    var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
    a1 = this._a;
    b1 = this._b;
    c1 = this._c;
    d1 = this._d;
    tx1 = this._tx;
    ty1 = this._ty;
    det1 = this._det;
    a2 = matrix.get$a();
    b2 = matrix.get$b();
    c2 = matrix.get$c();
    d2 = matrix.get$d();
    tx2 = matrix.get$tx();
    ty2 = matrix.get$ty();
    det2 = matrix.get$det();
    this._a = $.JSNumber_methods.toDouble$0(a1 * a2 + b1 * c2);
    this._b = $.JSNumber_methods.toDouble$0(a1 * b2 + b1 * d2);
    this._c = $.JSNumber_methods.toDouble$0(c1 * a2 + d1 * c2);
    this._d = $.JSNumber_methods.toDouble$0(c1 * b2 + d1 * d2);
    this._tx = $.JSNumber_methods.toDouble$0(tx1 * a2 + ty1 * c2 + tx2);
    this._ty = $.JSNumber_methods.toDouble$0(tx1 * b2 + ty1 * d2 + ty2);
    this._det = $.JSNumber_methods.toDouble$0(det1 * det2);
  },
  identity$0: function() {
    this._a = 1;
    this._b = 0;
    this._c = 0;
    this._d = 1;
    this._tx = 0;
    this._ty = 0;
    this._det = 1;
  },
  invert$0: function() {
    var a, b, c, d, tx, ty, det;
    a = this._a;
    b = this._b;
    c = this._c;
    d = this._d;
    tx = this._tx;
    ty = this._ty;
    det = this._det;
    this._a = $.JSDouble_methods.toDouble$0(d / det);
    this._b = -$.JSDouble_methods.toDouble$0(b / det);
    this._c = -$.JSDouble_methods.toDouble$0(c / det);
    this._d = $.JSDouble_methods.toDouble$0(a / det);
    this._tx = -$.JSNumber_methods.toDouble$0(this._a * tx + this._c * ty);
    this._ty = -$.JSNumber_methods.toDouble$0(this._b * tx + this._d * ty);
    this._det = $.JSDouble_methods.toDouble$0(1 / det);
  },
  setTo$6: function(a, b, c, d, tx, ty) {
    this._a = $.toDouble$0$n(a);
    this._b = $.toDouble$0$n(b);
    this._c = $.JSNumber_methods.toDouble$0(c);
    this._d = $.toDouble$0$n(d);
    this._tx = $.toDouble$0$n(tx);
    this._ty = $.toDouble$0$n(ty);
    this._det = $.JSNumber_methods.toDouble$0(this._a * this._d - this._b * this._c);
  },
  copyFrom$1: function(matrix) {
    this._a = $.toDouble$0$n(matrix.get$a());
    this._b = $.toDouble$0$n(matrix.get$b());
    this._c = $.toDouble$0$n(matrix.get$c());
    this._d = $.toDouble$0$n(matrix.get$d());
    this._tx = $.toDouble$0$n(matrix.get$tx());
    this._ty = $.toDouble$0$n(matrix.get$ty());
    this._det = $.toDouble$0$n(matrix.get$det());
  },
  copyFromAndConcat$2: function(copyMatrix, concatMatrix) {
    var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
    a1 = copyMatrix.get$a();
    b1 = copyMatrix.get$b();
    c1 = copyMatrix.get$c();
    d1 = copyMatrix.get$d();
    tx1 = copyMatrix.get$tx();
    ty1 = copyMatrix.get$ty();
    det1 = copyMatrix.get$det();
    a2 = concatMatrix.get$a();
    b2 = concatMatrix.get$b();
    c2 = concatMatrix.get$c();
    d2 = concatMatrix.get$d();
    tx2 = concatMatrix.get$tx();
    ty2 = concatMatrix.get$ty();
    det2 = concatMatrix.get$det();
    this._a = $.JSNumber_methods.toDouble$0(a1 * a2 + b1 * c2);
    this._b = $.JSNumber_methods.toDouble$0(a1 * b2 + b1 * d2);
    this._c = $.JSNumber_methods.toDouble$0(c1 * a2 + d1 * c2);
    this._d = $.JSNumber_methods.toDouble$0(c1 * b2 + d1 * d2);
    this._tx = $.JSNumber_methods.toDouble$0(tx1 * a2 + ty1 * c2 + tx2);
    this._ty = $.JSNumber_methods.toDouble$0(tx1 * b2 + ty1 * d2 + ty2);
    this._det = $.JSNumber_methods.toDouble$0(det1 * det2);
  }
};

$$.Point = {"": "Object;x*,y*",
  get$length: function(_) {
    var t1, t2;
    t1 = this.x;
    t1 = $.$mul$n(t1, t1);
    t2 = this.y;
    return $.sqrt($.$add$ns(t1, $.$mul$n(t2, t2)));
  },
  add$1: function(_, p) {
    var t1 = $.getInterceptor$x(p);
    return $.Point$($.$add$ns(this.x, t1.get$x(p)), $.$add$ns(this.y, t1.get$y(p)));
  },
  copyFrom$1: function(p) {
    this.x = $.JSNull_methods.get$x(p);
    this.y = $.JSNull_methods.get$y(p);
  },
  equals$1: function(p) {
    return $.$eq(this.x, p.x) === true && $.$eq(this.y, p.y) === true;
  }
};

$$.Rectangle = {"": "Object;x*,y*,width*,height*",
  get$left: function(_) {
    return this.x;
  },
  get$top: function(_) {
    return this.y;
  },
  get$right: function(_) {
    return $.$add$ns(this.x, this.width);
  },
  get$bottom: function(_) {
    return $.$add$ns(this.y, this.height);
  },
  contains$2: function(_, px, py) {
    return $.$le$n(this.x, px) === true && $.$le$n(this.y, py) === true && $.$ge$n(this.get$right(this), px) === true && $.$ge$n(this.get$bottom(this), py) === true;
  },
  copyFrom$1: function(r) {
    this.x = $.JSNull_methods.get$x(r);
    this.y = $.JSNull_methods.get$y(r);
    this.width = $.JSNull_methods.get$width(r);
    this.height = $.JSNull_methods.get$height(r);
  },
  union$1: function(_, rect) {
    var rLeft, rTop, rRight;
    rLeft = $.min(this.get$left(this), rect.get$left(rect));
    rTop = $.min(this.get$top(this), rect.get$top(rect));
    rRight = $.max(this.get$right(this), rect.get$right(rect));
    return $.Rectangle$(rLeft, rRight, rRight - rLeft, $.max(this.get$bottom(this), rect.get$bottom(rect)) - rTop);
  }
};

$$.Sound = {"": "Object;"};

$$.SoundChannel = {"": "EventDispatcher;"};

$$.SoundTransform = {"": "Object;volume',pan,leftToLeft,leftToRight,rightToRight,rightToLeft"};

$$.AudioElementSound = {"": "Sound;_audio<,_audioPool,_soundChannels",
  get$length: function(_) {
    return this._audio.duration;
  },
  play$2: function(_, loop, soundTransform) {
    if (soundTransform == null)
      soundTransform = $.SoundTransform$(1, 0);
    return $.AudioElementSoundChannel$(this, loop, soundTransform);
  },
  play$0: function($receiver) {
    return this.play$2($receiver, false, null);
  },
  _getAudioElement$1: function(soundChannel) {
    var audio;
    if ($.get$length$asx(this._audioPool) === 0) {
      audio = $.clone$1$x(this._audio, true);
      $.get$onEnded$x(audio).listen$1(this.get$_onAudioEnded());
    } else
      audio = $.removeAt$1$ax(this._audioPool, 0);
    this._soundChannels.push(soundChannel);
    return audio;
  },
  _releaseAudioElement$1: function(soundChannel) {
    var audio, index;
    audio = soundChannel._audio;
    index = $.JSArray_methods.indexOf$1(this._soundChannels, soundChannel);
    $.JSArray_methods.removeAt$1(this._soundChannels, index);
    $.add$1$ax(this._audioPool, audio);
    if ($.$gt$n(this._audio.currentTime, 0) && this._audio.ended === false)
      $.getInterceptor$x(this._audio).currentTime = 0;
  },
  _onAudioEnded$1: function($event) {
    var audio, soundChannel, i, t1, t2;
    audio = $.get$target$x($event);
    soundChannel = null;
    i = 0;
    while (true) {
      t1 = this._soundChannels;
      t2 = t1.length;
      if (!(i < t2 && soundChannel == null))
        break;
      if (i >= t2)
        throw $.ioore(i);
      if ($.$eq(t1[i].get$_audio(), audio) === true) {
        t1 = this._soundChannels;
        if (i >= t1.length)
          throw $.ioore(i);
        soundChannel = t1[i];
      }
      ++i;
    }
    if (soundChannel != null)
      $.stop$0$x(soundChannel);
  },
  get$_onAudioEnded: function() {
    return new $.BoundClosure$1(this, "_onAudioEnded$1");
  },
  AudioElementSound$0: function() {
    var t1 = $.List_List($, $.AudioElementSoundChannel);
    $.setRuntimeTypeInfo(t1, [$.AudioElementSoundChannel]);
    this._soundChannels = t1;
    this._audio = $.AudioElement_AudioElement($);
    $.get$onEnded$x(this._audio).listen$1(this.get$_onAudioEnded());
    t1 = $.List_List($, $.AudioElement);
    $.setRuntimeTypeInfo(t1, [$.AudioElement]);
    this._audioPool = t1;
    $.add$1$ax(this._audioPool, this._audio);
    $.add$1$ax($.get$children$x($.get$body$x($.document())), this._audio);
  }
};

$$.AudioElementSound_load_onCanPlayThrough = {"": "Closure;box_0,sound_1,loadCompleter_2",
  call$1: function($event) {
    var t1, t2;
    t1 = this.box_0;
    t1.onCanPlayThroughSubscription_0.cancel$0();
    t1.onErrorSubscription_1.cancel$0();
    t2 = this.loadCompleter_2;
    t2.complete$1(t2, this.sound_1);
  }
};

$$.AudioElementSound_load_onError = {"": "Closure;box_0,loadCompleter_3",
  call$1: function($event) {
    var t1 = this.box_0;
    t1.onCanPlayThroughSubscription_0.cancel$0();
    t1.onErrorSubscription_1.cancel$0();
    this.loadCompleter_3.completeError$1($.StateError$("Failed to load audio."));
  }
};

$$.AudioElementSoundChannel = {"": "SoundChannel;_audioElementSound,_audio<,_loop,_soundTransform,_eventStreams",
  set$soundTransform: function(value) {
    var t1, t2;
    this._soundTransform = value;
    t1 = this._audio;
    if (t1 != null) {
      t2 = this._soundTransform;
      $.set$volume$x(t1, t2 != null ? t2.volume : 1);
    }
  },
  stop$0: function(_) {
    var t1 = this._audio;
    if (t1 != null) {
      if ($.get$ended$x(t1) === false)
        $.pause$0$x(t1);
      this._audioElementSound._releaseAudioElement$1(this);
      this._audio = null;
    }
  },
  AudioElementSoundChannel$3: function(audioElementSound, loop, soundTransform) {
    var t1;
    this._audioElementSound = audioElementSound;
    this._loop = loop;
    this._soundTransform = soundTransform;
    this._audio = audioElementSound._getAudioElement$1(this);
    t1 = this._loop;
    $.set$loop$x(this._audio, t1);
    this.set$soundTransform(soundTransform);
    $.play$0$x(this._audio);
  }
};

$$.MockSound = {"": "Sound;",
  get$length: function(_) {
    return (0/0);
  },
  play$2: function(_, loop, soundTransform) {
    if (soundTransform == null)
      soundTransform = $.SoundTransform$(1, 0);
    return $.MockSoundChannel$(this, loop, soundTransform);
  },
  play$0: function($receiver) {
    return this.play$2($receiver, false, null);
  }
};

$$.MockSound_load_anon = {"": "Closure;",
  call$0: function() {
    return $.MockSound$();
  }
};

$$.MockSoundChannel = {"": "SoundChannel;_loop,_soundTransform,_eventStreams",
  stop$0: function(_) {
  },
  MockSoundChannel$3: function(mockSound, loop, soundTransform) {
    this._loop = loop;
    this._soundTransform = soundTransform;
  }
};

$$.WebAudioApiSound = {"": "Sound;_buffer",
  get$length: function(_) {
    return $.get$duration$x(this._buffer);
  },
  play$2: function(_, loop, soundTransform) {
    if (soundTransform == null)
      soundTransform = $.SoundTransform$(1, 0);
    return $.WebAudioApiSoundChannel$(this, loop, soundTransform);
  },
  play$0: function($receiver) {
    return this.play$2($receiver, false, null);
  },
  WebAudioApiSound$0: function() {
    if ($.get$SoundMixer__audioContext() == null)
      throw $.$$throw($.UnsupportedError$("This browser does not support Web Audio API."));
  }
};

$$.WebAudioApiSound_load_anon = {"": "Closure;sound_0,loadCompleter_1",
  call$1: function(request) {
    var audioData, audioContext, t1, t2;
    audioData = $.get$response$x(request);
    audioContext = $.get$SoundMixer__audioContext();
    t1 = this.sound_0;
    t2 = this.loadCompleter_1;
    $.decodeAudioData$3$x(audioContext, audioData, new $.WebAudioApiSound_load__anon(t1, t2), new $.WebAudioApiSound_load__anon0(t2));
  }
};

$$.WebAudioApiSound_load__anon = {"": "Closure;sound_2,loadCompleter_3",
  call$1: function(buffer) {
    var t1, t2;
    t1 = this.sound_2;
    t1._buffer = buffer;
    t2 = this.loadCompleter_3;
    t2.complete$1(t2, t1);
  }
};

$$.WebAudioApiSound_load__anon0 = {"": "Closure;loadCompleter_4",
  call$1: function(error) {
    this.loadCompleter_4.completeError$1($.StateError$("Failed to decode audio."));
  }
};

$$.WebAudioApiSound_load_anon0 = {"": "Closure;loadCompleter_5",
  call$1: function(error) {
    this.loadCompleter_5.completeError$1($.StateError$("Failed to load audio."));
  }
};

$$.WebAudioApiSoundChannel = {"": "SoundChannel;_webAudioApiSound,_soundTransform,_loop,_gainNode,_sourceNode,_eventStreams",
  stop$0: function(_) {
    $.stop$1$x(this._sourceNode, 0);
  },
  WebAudioApiSoundChannel$3: function(webAudioApiSound, loop, soundTransform) {
    var context, t1, t2;
    this._webAudioApiSound = webAudioApiSound;
    this._loop = loop;
    this._soundTransform = soundTransform;
    context = $.get$SoundMixer__audioContext();
    t1 = $.getInterceptor$x(context);
    this._gainNode = t1.createGain$0(context);
    $.connect$3$x(this._gainNode, t1.get$destination(context), 0, 0);
    t2 = this._soundTransform;
    t2 = t2 != null ? $.pow(t2.volume, 2) : 1;
    $.getInterceptor$x(this._gainNode.gain).value = t2;
    this._sourceNode = t1.createBufferSource$0(context);
    t2 = this._webAudioApiSound._buffer;
    $.getInterceptor$x(this._sourceNode).buffer = t2;
    $.getInterceptor$x(this._sourceNode).loop = loop;
    $.connect$3$x(this._sourceNode, this._gainNode, 0, 0);
    $.start$1$x(this._sourceNode, 0);
  }
};

$$.TextField = {"": "InteractiveObject;_text,_textColor,_defaultTextFormat,_autoSize,_gridFitType,_type,_wordWrap,_background,_backgroundColor,_border,_borderColor,_textWidth,_textHeight,_linesText,_linesMetrics,_canvasRefreshPending,_canvasWidth,_canvasHeight,_canvas,_context,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_mask,_cache,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_transformationMatrixPrivate,_transformationMatrixRefresh,_eventStreams",
  get$type: function(_) {
    return this._type;
  },
  get$width: function(_) {
    return this._canvasWidth;
  },
  get$height: function(_) {
    return this._canvasHeight;
  },
  set$text: function(_, value) {
    this._text = value;
    this._canvasRefreshPending = true;
  },
  set$defaultTextFormat: function(value) {
    this._defaultTextFormat = value;
    this._textColor = this._defaultTextFormat.color;
    this._canvasRefreshPending = true;
  },
  set$wordWrap: function(_, value) {
    this._wordWrap = value;
    this._canvasRefreshPending = true;
  },
  set$width: function(_, value) {
    this._canvasWidth = value;
    this._canvasRefreshPending = true;
  },
  set$height: function(_, value) {
    this._canvasHeight = value;
    this._canvasRefreshPending = true;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    return $._getBoundsTransformedHelper(matrix, this._canvasWidth, this._canvasHeight, returnRectangle);
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    if (localX >= 0 && localY >= 0 && $.JSNumber_methods.$lt(localX, this._canvasWidth) && $.JSNumber_methods.$lt(localY, this._canvasHeight))
      return this;
    return;
  },
  render$1: function(renderState) {
    this._canvasRefresh$0();
    $.drawImage$3$x(renderState._context, this._canvas, 0, 0);
  },
  _processTextLines$0: function() {
    var t1, t2, lineBuffer, t3, word, previousLength, line, metrics, offsetX, textLineMetrics;
    $.JSArray_methods.clear$0(this._linesText);
    $.JSArray_methods.clear$0(this._linesMetrics);
    if (!this._wordWrap)
      this._linesText.push(this._text);
    else
      for (t1 = $.JSArray_methods.get$iterator($.replaceAll$2$s(this._text, "\r", "").split("\n")); t1.moveNext$0();) {
        t2 = t1.get$current();
        lineBuffer = $.StringBuffer$("");
        for (t3 = $.JSArray_methods.get$iterator($.split$1$s(t2, " ")); t3.moveNext$0();) {
          word = t3.get$current();
          previousLength = lineBuffer.get$length(lineBuffer);
          t2 = previousLength > 0;
          lineBuffer.write$1(t2 ? " " + $.S(word) : word);
          line = lineBuffer.toString$0(lineBuffer);
          if ($.$gt$n($.measureText$1$x(this._context, line).width, this._canvasWidth)) {
            if (t2)
              line = $.JSString_methods.substring$2(line, 0, previousLength);
            else
              word = "";
            this._linesText.push(line);
            lineBuffer = $.StringBuffer$("");
            lineBuffer.write$1(word);
          }
        }
        if (!lineBuffer.get$isEmpty(lineBuffer))
          this._linesText.push(lineBuffer.toString$0(lineBuffer));
      }
    this._textWidth = 0;
    this._textHeight = 0;
    for (t1 = $.JSArray_methods.get$iterator(this._linesText); t1.moveNext$0();) {
      t2 = t1.get$current();
      metrics = $.measureText$1$x(this._context, t2);
      t2 = this._defaultTextFormat.align;
      offsetX = t2 === "center" || t2 === "justify" ? $.$div$n($.$sub$n(this._canvasWidth, metrics.width), 2) : 0;
      t2 = this._defaultTextFormat.align;
      if (t2 === "right" || t2 === "end")
        offsetX = $.$sub$n(this._canvasWidth, metrics.width);
      textLineMetrics = $.TextLineMetrics$(offsetX, metrics.width, this._defaultTextFormat.size, 0, 0, 0);
      this._linesMetrics.push(textLineMetrics);
      this._textWidth = $.max(this._textWidth, textLineMetrics.width);
      this._textHeight = $.$add$ns(this._textHeight, textLineMetrics.height);
    }
  },
  _canvasRefresh$0: function() {
    var canvasWidthInt, canvasHeightInt, fontStyle, t1, offsetY, i, metrics, t2, t3;
    if (this._canvasRefreshPending) {
      this._canvasRefreshPending = false;
      canvasWidthInt = $.toInt$0$nx($.ceil$0$nx(this._canvasWidth));
      canvasHeightInt = $.toInt$0$nx($.ceil$0$nx(this._canvasHeight));
      if (this._canvas == null) {
        this._canvas = $.CanvasElement_CanvasElement(canvasHeightInt, canvasWidthInt);
        this._context = $.get$context2d$x(this._canvas);
      }
      if ($.$eq($.get$width$x(this._canvas), canvasWidthInt) !== true)
        $.set$width$x(this._canvas, canvasWidthInt);
      if ($.$eq($.get$height$x(this._canvas), canvasHeightInt) !== true)
        $.set$height$x(this._canvas, canvasHeightInt);
      fontStyle = $.StringBuffer$("");
      fontStyle.write$1(this._defaultTextFormat.italic ? "italic " : "normal ");
      fontStyle.write$1("normal ");
      fontStyle.write$1(this._defaultTextFormat.bold ? "bold " : "normal ");
      fontStyle.write$1($.S(this._defaultTextFormat.size) + "px ");
      fontStyle.write$1($.S(this._defaultTextFormat.font) + ",sans-serif");
      t1 = fontStyle.toString$0(fontStyle);
      $.set$font$x(this._context, t1);
      $.set$textAlign$x(this._context, "start");
      $.set$textBaseline$x(this._context, "top");
      t1 = $._color2rgb(this._textColor);
      $.set$fillStyle$x(this._context, t1);
      this._processTextLines$0();
      if (this._background) {
        t1 = $._color2rgb(this._backgroundColor);
        $.set$fillStyle$x(this._context, t1);
        $.fillRect$4$x(this._context, 0, 0, this._canvasWidth, this._canvasHeight);
      } else
        $.clearRect$4$x(this._context, 0, 0, this._canvasWidth, this._canvasHeight);
      for (offsetY = 0, i = 0; i < this._linesText.length; ++i) {
        t1 = this._linesMetrics;
        if (i >= t1.length)
          throw $.ioore(i);
        metrics = t1[i];
        t1 = $._color2rgb(this._textColor);
        $.set$fillStyle$x(this._context, t1);
        t1 = this._context;
        t2 = this._linesText;
        if (i >= t2.length)
          throw $.ioore(i);
        t3 = $.getInterceptor$x(metrics);
        $.fillText$3$x(t1, t2[i], t3.get$x(metrics), offsetY);
        t3 = t3.get$height(metrics);
        if (typeof t3 !== "number")
          throw $.iae(t3);
        offsetY += t3;
      }
      if (this._border) {
        t1 = $._color2rgb(this._borderColor);
        $.set$strokeStyle$x(this._context, t1);
        $.set$lineWidth$x(this._context, 1);
        $.strokeRect$4$x(this._context, 0, 0, this._canvasWidth, this._canvasHeight);
      }
    }
  },
  TextField$0: function() {
    this._defaultTextFormat = $.TextFormat$("Arial", 12, 0, "left", false, 0, false, 0, 0, 0, false);
    var t1 = $.List_List($, $.String);
    $.setRuntimeTypeInfo(t1, [$.String]);
    this._linesText = t1;
    t1 = $.List_List($, $.TextLineMetrics);
    $.setRuntimeTypeInfo(t1, [$.TextLineMetrics]);
    this._linesMetrics = t1;
  }
};

$$.TextFormat = {"": "Object;font,size,color,bold,italic,underline,align,leftMargin,rightMargin,indent,leading,letterSpacing,blockIndent,bullet,kerning"};

$$.TextLineMetrics = {"": "Object;ascent,descent,height*,leading,width*,x*"};

$$.ObjectPool = {"": "Object;_pool,_valueFactory,_poolCount",
  _valueFactory$0: function() {
    return this._valueFactory.call$0();
  },
  pop$0: function() {
    var t1, t2, t3;
    t1 = this._poolCount;
    if (t1 === 0)
      return this._valueFactory$0();
    else {
      this._poolCount = t1 - 1;
      t2 = this._pool;
      t3 = this._poolCount;
      if (t3 !== (t3 | 0))
        return this.pop$0$bailout(1, t2, t3);
      if (t3 < 0 || t3 >= t2.length)
        throw $.ioore(t3);
      return t2[t3];
    }
  },
  pop$0$bailout: function(state0, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this._poolCount;
      case 1:
        var t1;
        if (state0 === 0 && t1 === 0)
          return this._valueFactory$0();
        else
          switch (state0) {
            case 0:
              this._poolCount = t1 - 1;
              t2 = this._pool;
              t3 = this._poolCount;
            case 1:
              state0 = 0;
              if (t3 !== (t3 | 0))
                throw $.iae(t3);
              if (t3 < 0 || t3 >= t2.length)
                throw $.ioore(t3);
              return t2[t3];
          }
    }
  },
  push$1: function(value) {
    var t1, t2, t3;
    t1 = this._poolCount;
    t2 = this._pool;
    t3 = t2.length;
    if (t1 === t3)
      t2.push(value);
    else {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t3)
        throw $.ioore(t1);
      t2[t1] = value;
    }
    this._poolCount = this._poolCount + 1;
  }
};

$$.ResourceManager = {"": "Object;_resources",
  _addResourceManagerResource$1: function(resource) {
    var kind, $name, key, t1;
    kind = resource.get$kind(resource);
    $name = resource.get$name(resource);
    key = kind + "." + $name;
    if (this._resources.containsKey$1(key))
      throw $.$$throw($.StateError$("ResourceManager already contains a resource called '" + $name + "'"));
    t1 = this._resources;
    t1.$indexSet(t1, key, resource);
  },
  _getResourceManagerResource$2: function(kind, $name) {
    var key, t1;
    key = kind + "." + $.S($name);
    if (!this._resources.containsKey$1(key))
      throw $.$$throw($.StateError$("ResourceManager does not contains a resource called '" + $.S($name) + "'"));
    t1 = this._resources;
    return t1.$index(t1, key);
  },
  addBitmapData$2: function($name, url) {
    var resource = $.ResourceManagerResource$("BitmapData", $name, url);
    resource._load$1($.BitmapData_load(url));
    this._addResourceManagerResource$1(resource);
  },
  addSound$2: function($name, url) {
    var resource = $.ResourceManagerResource$("Sound", $name, url);
    resource._load$1($.Sound_load(url));
    this._addResourceManagerResource$1(resource);
  },
  addTextureAtlas$3: function($name, url, textureAtlasFormat) {
    var resource = $.ResourceManagerResource$("TextureAtlas", $name, url);
    resource._load$1($.TextureAtlas_load(url, textureAtlasFormat));
    this._addResourceManagerResource$1(resource);
  },
  addFlumpLibrary$2: function($name, url) {
    var resource = $.ResourceManagerResource$("FlumpLibrary", $name, url);
    resource._load$1($.FlumpLibrary_load(url));
    this._addResourceManagerResource$1(resource);
  },
  load$0: function(_) {
    return $._FutureImpl__FutureImpl$wait($.JSArray_methods.map$1(this.get$pendingResources(), new $.ResourceManager_load_anon())).then$1(new $.ResourceManager_load_anon0(this));
  },
  get$pendingResources: function() {
    var t1 = this._resources;
    t1 = t1.get$values(t1);
    t1 = t1.where$1(t1, new $.ResourceManager_pendingResources_anon());
    return t1.toList$0(t1);
  },
  get$failedResources: function() {
    var t1 = this._resources;
    t1 = t1.get$values(t1);
    t1 = t1.where$1(t1, new $.ResourceManager_failedResources_anon());
    return t1.toList$0(t1);
  },
  getBitmapData$1: function($name) {
    return this._getResourceManagerResource$2("BitmapData", $name).get$resource();
  },
  getSound$1: function($name) {
    return this._getResourceManagerResource$2("Sound", $name).get$resource();
  },
  getTextureAtlas$1: function($name) {
    return this._getResourceManagerResource$2("TextureAtlas", $name).get$resource();
  },
  getFlumpLibrary$1: function($name) {
    return this._getResourceManagerResource$2("FlumpLibrary", $name).get$resource();
  },
  ResourceManager$0: function() {
    this._resources = $.Map_Map($.String, $.ResourceManagerResource);
  }
};

$$.ResourceManager_load_anon = {"": "Closure;",
  call$1: function(r) {
    return r.get$_loader();
  }
};

$$.ResourceManager_load_anon0 = {"": "Closure;this_0",
  call$1: function(value) {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.get$failedResources().length;
    if (t2 > 0)
      throw $.$$throw($.StateError$("Failed to load " + $.S(t2) + " resource(s)."));
    return t1;
  }
};

$$.ResourceManager_pendingResources_anon = {"": "Closure;",
  call$1: function(r) {
    return r.get$resource() == null;
  }
};

$$.ResourceManager_failedResources_anon = {"": "Closure;",
  call$1: function(r) {
    return $.get$error$x(r) != null;
  }
};

$$.ResourceManagerResource = {"": "Object;_kind,_name,_url,_loader<,_error?,_resource?",
  get$kind: function(_) {
    return this._kind;
  },
  get$name: function(_) {
    return this._name;
  },
  get$resource: function() {
    return this._resource;
  },
  get$error: function(_) {
    return this._error;
  },
  _load$1: function(loader) {
    this._loader = loader.then$2$onError(new $.ResourceManagerResource__load_anon(this), new $.ResourceManagerResource__load_anon0(this));
  },
  ResourceManagerResource$3: function(kind, $name, url) {
    this._kind = kind;
    this._name = $name;
    this._url = url;
    this._error = null;
    this._resource = null;
  }
};

$$.ResourceManagerResource__load_anon = {"": "Closure;this_0",
  call$1: function(value) {
    var t1 = this.this_0;
    t1.set$_resource(value);
    t1.set$_error(null);
  }
};

$$.ResourceManagerResource__load_anon0 = {"": "Closure;this_1",
  call$1: function(error) {
    var t1 = this.this_1;
    t1.set$_resource(null);
    t1.set$_error($.get$error$x(error));
  }
};

$$.TextureAtlas = {"": "Object;_imageElement,_frames",
  get$imageElement: function() {
    return this._imageElement;
  },
  getBitmapData$1: function($name) {
    var t1, bitmapData, i, t2;
    t1 = this._frames;
    bitmapData = null;
    i = 0;
    while (true) {
      t2 = t1.length;
      if (!(i < t2 && bitmapData == null))
        break;
      if (i >= t2)
        throw $.ioore(i);
      if ($.$eq($.get$name$x(t1[i]), $name) === true) {
        if (i >= t1.length)
          throw $.ioore(i);
        bitmapData = $.BitmapData$fromTextureAtlasFrame(t1[i]);
      }
      ++i;
    }
    if (bitmapData == null)
      throw $.$$throw($.ArgumentError$("TextureAtlasFrame not found: '" + $.S($name) + "'"));
    return bitmapData;
  },
  getBitmapDatas$1: function(namePrefix) {
    var bitmapDataList, t1, i;
    bitmapDataList = $.List_List($, $.BitmapData);
    $.setRuntimeTypeInfo(bitmapDataList, [$.BitmapData]);
    for (t1 = this._frames, i = 0; i < t1.length; ++i)
      if ($.$eq($.indexOf$1$asx($.get$name$x(t1[i]), namePrefix), 0) === true) {
        if (i >= t1.length)
          throw $.ioore(i);
        bitmapDataList.push($.BitmapData$fromTextureAtlasFrame(t1[i]));
      }
    return bitmapDataList;
  },
  get$frameNames: function() {
    var t1 = $.JSArray_methods.map$1(this._frames, new $.TextureAtlas_frameNames_anon());
    return t1.toList$0(t1);
  }
};

$$.TextureAtlas_load_parseFrame = {"": "Closure;textureAtlas_0",
  call$2: function(filename, frame) {
    var frameName, t1, taf, t2;
    frameName = $._getFilenameWithoutExtension(filename);
    t1 = this.textureAtlas_0;
    taf = $.TextureAtlasFrame$(frameName, t1);
    t2 = $.getInterceptor$asx(frame);
    taf._frameX = $.toInt$0$nx($.$index$asx(t2.$index(frame, "frame"), "x"));
    taf._frameY = $.toInt$0$nx($.$index$asx(t2.$index(frame, "frame"), "y"));
    taf._frameWidth = $.toInt$0$nx($.$index$asx(t2.$index(frame, "frame"), "w"));
    taf._frameHeight = $.toInt$0$nx($.$index$asx(t2.$index(frame, "frame"), "h"));
    taf._offsetX = $.toInt$0$nx($.$index$asx(t2.$index(frame, "spriteSourceSize"), "x"));
    taf._offsetY = $.toInt$0$nx($.$index$asx(t2.$index(frame, "spriteSourceSize"), "y"));
    taf._originalWidth = $.toInt$0$nx($.$index$asx(t2.$index(frame, "sourceSize"), "w"));
    taf._originalHeight = $.toInt$0$nx($.$index$asx(t2.$index(frame, "sourceSize"), "h"));
    taf._rotated = $.boolTypeCast(t2.$index(frame, "rotated"));
    t1._frames.push(taf);
  }
};

$$.TextureAtlas_load_anon = {"": "Closure;url_1,completer_2,textureAtlas_3,parseFrame_4",
  call$1: function(textureAtlasJson) {
    var data, t1, $frames, meta, t2, t3, t4, t5, t6;
    data = $.parse(textureAtlasJson, null);
    t1 = $.getInterceptor$asx(data);
    $frames = t1.$index(data, "frames");
    meta = t1.$index(data, "meta");
    if (typeof $frames === "object" && $frames !== null && ($frames.constructor === Array || $frames.$isList())) {
      for (t1 = $.get$iterator$ax($frames), t2 = this.parseFrame_4; t1.moveNext$0();) {
        t3 = t1.get$current();
        t2.call$2($.$index$asx(t3, "filename"), t3);
      }
      $frames = $frames;
    }
    if (typeof $frames === "object" && $frames !== null && !!$frames.$isMap)
      for (t1 = $.get$iterator$ax($frames.get$keys()), t2 = this.parseFrame_4; t1.moveNext$0();) {
        t3 = t1.get$current();
        t2.call$2(t3, $frames.$index($frames, t3));
      }
    t1 = $._replaceFilename(this.url_1, $.$index$asx(meta, "image"));
    t2 = this.textureAtlas_3;
    t3 = t2._imageElement;
    t4 = $.getInterceptor$x(t3);
    t5 = t4.get$onLoad(t3);
    t6 = this.completer_2;
    t5.listen$1(new $.TextureAtlas_load__anon(t6, t2));
    t4.get$onError(t3).listen$1(new $.TextureAtlas_load__anon0(t6));
    t4.set$src(t3, t1);
  }
};

$$.TextureAtlas_load__anon = {"": "Closure;completer_5,textureAtlas_6",
  call$1: function(e) {
    var t1 = this.completer_5;
    return t1.complete$1(t1, this.textureAtlas_6);
  }
};

$$.TextureAtlas_load__anon0 = {"": "Closure;completer_7",
  call$1: function(e) {
    return this.completer_7.completeError$1($.StateError$("Failed to load image."));
  }
};

$$.TextureAtlas_load_anon0 = {"": "Closure;completer_8",
  call$1: function(error) {
    this.completer_8.completeError$1($.StateError$("Failed to load json file."));
  }
};

$$.TextureAtlas_frameNames_anon = {"": "Closure;",
  call$1: function(f) {
    return $.get$name$x(f);
  }
};

$$.TextureAtlasFrame = {"": "Object;_name,_textureAtlas,_frameX,_frameY,_frameWidth,_frameHeight,_offsetX,_offsetY,_originalWidth,_originalHeight,_rotated",
  get$textureAtlas: function() {
    return this._textureAtlas;
  },
  get$name: function(_) {
    return this._name;
  },
  get$frameX: function() {
    return this._frameX;
  },
  get$frameY: function() {
    return this._frameY;
  },
  get$frameWidth: function() {
    return this._frameWidth;
  },
  get$frameHeight: function() {
    return this._frameHeight;
  },
  get$offsetX: function(_) {
    return this._offsetX;
  },
  get$offsetY: function(_) {
    return this._offsetY;
  },
  get$originalWidth: function() {
    return this._originalWidth;
  },
  get$originalHeight: function() {
    return this._originalHeight;
  },
  get$rotated: function() {
    return this._rotated;
  },
  TextureAtlasFrame$2: function($name, textureAtlas) {
    this._name = $name;
    this._textureAtlas = textureAtlas;
  }
};

// Bound closures
$$.BoundClosure$1 = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};

$$.BoundClosure$0 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};

$$.BoundClosure$i1 = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  }
};

Isolate.$finishClasses($$, $, null);
$$ = null;

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !src.$isJavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.$isJavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dstStart !== "number")
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart) {
    if (typeof count !== "number")
      throw $.iae(count);
    i = srcStart + count - 1;
    j = dstStart + count - 1;
    t1 = src.length;
    t2 = dst.length;
    for (; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  } else {
    t1 = src.length;
    t2 = dst.length;
    j = dstStart;
    i = srcStart;
    while (true) {
      if (typeof count !== "number")
        throw $.iae(count);
      if (!(i < srcStart + count))
        break;
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
      ++i;
      ++j;
    }
  }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if ($.JSNumber_methods.$lt(srcStart, dstStart)) {
    if (typeof count !== "number")
      throw $.iae(count);
    i = srcStart + count - 1;
    j = $.$sub$n($.$add$ns(dstStart, count), 1);
    t1 = $.getInterceptor$asx(src);
    for (; i >= srcStart; --i, j = $.$sub$n(j, 1))
      $.JSArray_methods.$indexSet(dst, j, t1.$index(src, i));
  } else {
    t1 = $.getInterceptor$asx(src);
    j = dstStart;
    i = srcStart;
    while (true) {
      if (typeof count !== "number")
        throw $.iae(count);
      if (!(i < srcStart + count))
        break;
      $.JSArray_methods.$indexSet(dst, j, t1.$index(src, i));
      ++i;
      j = $.$add$ns(j, 1);
    }
  }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex !== (startIndex | 0))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, i;
  t1 = $.getInterceptor$n(startIndex);
  if (t1.$ge(startIndex, a.length) === true)
    return -1;
  if (t1.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; $.$lt$n(i, endIndex) === true; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.ListIterator$ = function(iterable) {
  return new $.ListIterator(iterable, $.get$length$asx(iterable), 0, null);
};

$.MappedListIterable$ = function(_source, _f, S, T) {
  var t1 = new $.MappedListIterable(_source, _f);
  $.setRuntimeTypeInfo(t1, [S, T]);
  return t1;
};

$.WhereIterable$ = function(_iterable, _f, E) {
  var t1 = new $.WhereIterable(_iterable, _f);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.WhereIterator$ = function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
};

$.Sort__doSort = function(a, left, right, compare) {
  if (right - left <= 32)
    $.Sort_insertionSort_(a, left, right, compare);
  else
    $.Sort__dualPivotQuicksort(a, left, right, compare);
};

$.Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $.Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$gt$n(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$.Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$gt$n(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= a.length)
        throw $.ioore(j0);
      $.JSArray_methods.$indexSet(a, j, a[j0]);
      j = j0;
    }
    $.JSArray_methods.$indexSet(a, j, el);
  }
};

$.Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, k, ak, comp, t3, great0, less0, t4;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $.Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.JSNumber_methods.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.JSInt_methods.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$gt$n(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$gt$n(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$gt$n(compare.call$2(el1, el3), 0) === true) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.$gt$n(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$gt$n(compare.call$2(el1, el4), 0) === true) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.$gt$n(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$gt$n(compare.call$2(el2, el5), 0) === true) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.$gt$n(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$gt$n(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  t1 = $.$eq(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$n(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$lt$n(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else if ($.$gt$n(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$gt$n(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$lt$n(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
  t2 = less - 1;
  t3 = a.length;
  if (t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (left >= t3)
    throw $.ioore(left);
  a[left] = t4;
  a[t2] = el2;
  t2 = great + 1;
  if (t2 < 0 || t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (right >= t3)
    throw $.ioore(right);
  a[right] = t4;
  a[t2] = el4;
  $.Sort__doSort(a, left, less - 2, compare);
  $.Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$eq(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$eq(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$eq(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.$eq(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$eq(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$lt$n(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
    $.Sort__doSort(a, less, great, compare);
  } else
    $.Sort__doSort(a, less, great, compare);
};

$.Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t2, t3, great0, less0;
  sixth = $.JSNumber_methods.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.JSInt_methods.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$gt$n(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$gt$n(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$gt$n(compare.call$2(el1, el3), 0) === true) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.$gt$n(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$gt$n(compare.call$2(el1, el4), 0) === true) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.$gt$n(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$gt$n(compare.call$2(el2, el5), 0) === true) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.$gt$n(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$gt$n(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.JSArray_methods.$indexSet(a, index1, el1);
  $.JSArray_methods.$indexSet(a, index3, el3);
  $.JSArray_methods.$indexSet(a, index5, el5);
  if (left < 0 || left >= a.length)
    throw $.ioore(left);
  $.JSArray_methods.$indexSet(a, index2, a[left]);
  if (right < 0 || right >= a.length)
    throw $.ioore(right);
  $.JSArray_methods.$indexSet(a, index4, a[right]);
  less = left + 1;
  great = right - 1;
  t1 = $.$eq(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.JSArray_methods.$indexSet(a, k, a[less]);
          $.JSArray_methods.$indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$n(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.JSArray_methods.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.JSArray_methods.$indexSet(a, less, a[great]);
              $.JSArray_methods.$indexSet(a, great, ak);
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.JSArray_methods.$indexSet(a, k, a[great]);
              $.JSArray_methods.$indexSet(a, great, ak);
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$lt$n(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.JSArray_methods.$indexSet(a, k, a[less]);
          $.JSArray_methods.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$gt$n(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$gt$n(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$lt$n(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.JSArray_methods.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.JSArray_methods.$indexSet(a, less, a[great]);
              $.JSArray_methods.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.JSArray_methods.$indexSet(a, k, a[great]);
              $.JSArray_methods.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
  t2 = less - 1;
  if (t2 >= a.length)
    throw $.ioore(t2);
  $.JSArray_methods.$indexSet(a, left, a[t2]);
  $.JSArray_methods.$indexSet(a, t2, el2);
  t2 = great + 1;
  if (t2 < 0 || t2 >= a.length)
    throw $.ioore(t2);
  $.JSArray_methods.$indexSet(a, right, a[t2]);
  $.JSArray_methods.$indexSet(a, t2, el4);
  $.Sort__doSort(a, left, less - 2, compare);
  $.Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$eq(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$eq(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$eq(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.JSArray_methods.$indexSet(a, k, a[less]);
          $.JSArray_methods.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$eq(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$eq(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$lt$n(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              $.JSArray_methods.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.JSArray_methods.$indexSet(a, less, a[great]);
              $.JSArray_methods.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.JSArray_methods.$indexSet(a, k, a[great]);
              $.JSArray_methods.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
    $.Sort__doSort(a, less, great, compare);
  } else
    $.Sort__doSort(a, less, great, compare);
};

$.ToString_collectionToString = function(c) {
  var result = $.StringBuffer$("");
  $.ToString__emitCollection(c, result, $.List_List($, null));
  return result.toString$0(result);
};

$.ToString__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, first, t3;
  t1 = $.getInterceptor$ax(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  result.write$1(isList ? "[" : "{");
  for (t2 = $.get$iterator$ax(c), first = true; t2.moveNext$0(); first = false) {
    t3 = t2.get$current();
    if (!first)
      result.write$1(", ");
    $.ToString__emitObject(t3, result, visiting);
  }
  result.write$1(isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.ToString__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.ToString__containsRef(visiting, o))
      result.write$1(typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.ToString__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && !!o.$isMap)
    if ($.ToString__containsRef(visiting, o))
      result.write$1("{...}");
    else
      $.ToString__emitMap(o, result, visiting);
  else
    result.write$1(o);
};

$.ToString__containsRef = function(c, ref) {
  var t1;
  for (t1 = $.get$iterator$ax(c); t1.moveNext$0();)
    if (t1.get$current() === ref)
      return true;
  return false;
};

$.ToString_mapToString = function(m) {
  var result = $.StringBuffer$("");
  $.ToString__emitMap(m, result, $.List_List($, null));
  return result.toString$0(result);
};

$.ToString__emitMap = function(m, result, visiting) {
  var t1, t2;
  t1 = {};
  t2 = $.getInterceptor$ax(visiting);
  t2.add$1(visiting, m);
  result.write$1("{");
  t1.first_0 = true;
  m.forEach$1(m, new $.ToString__emitMap_anon(t1, result, visiting));
  result.write$1("}");
  t2.removeLast$0(visiting);
};

$.JsIsolateSink$fromPort = function(_port) {
  return new $.JsIsolateSink(false, _port);
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
};

$._currentIsolate = function() {
  return $globalState.currentContext;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue($._IsolateEvent), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var currentScript, stack, matches;
  currentScript = $.$currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  stack = new Error().stack;
  if (stack == null)
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw $.$$throw($.UnsupportedError$("Cannot extract URI from \"" + $.S(stack) + "\""));
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.currentManagerId = t2;
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.topEventLoop.enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        $.send$2$x(t1.$index(msg, "port"), t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      t1 = $globalState.managers;
      t2 = $.getInterceptor$x(sender);
      t1.remove$1(t1, t2.get$id(sender));
      t2.terminate$0(sender);
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true) {
        t1 = $globalState.mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      } else
        $.Primitives_printString($.toString$0(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, t1, exception;
  if ($globalState.isWorker === true) {
    t1 = $globalState.mainManager;
    t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  } else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($._ExceptionImplementation$(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePortImpl$();
  $.send$2$x(replyTo, "spawned", $._Isolate_port().toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, t2, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  t1 = $.getInterceptor$x(worker);
  t1.set$onmessage(worker, function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t2 = $globalState;
  workerId = t2.nextManagerId;
  t2.nextManagerId = workerId + 1;
  t1.set$id(worker, workerId);
  t2 = $globalState.managers;
  t2.$indexSet(t2, workerId, worker);
  t1.postMessage$1(worker, $._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$add$ns(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return $.get$globalThis().setTimeout != null;
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && value !== 0 || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  res = $.toString$0(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$add$ns($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw "Unable to print message: " + String(string);
};

$.Primitives_objectTypeName = function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback(object);
  if ($.$eq($name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  return t1.codeUnitAt$1($name, 0) === 36 ? t1.substring$1($name, 1) : $name;
};

$.Primitives_newFixedList = function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.JSArray_methods.get$iterator(codePoints); t1.moveNext$0();) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.JSNumber_methods.$shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.JSArray_methods.get$iterator(charCodes); t1.moveNext$0();) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString$0(this);
};

$.unwrapException = function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if (message === "null has no properties" || message === "'null' is not an object" || message === "'undefined' is not an object" || $.JSString_methods.endsWith$1(message, "is null") || $.JSString_methods.endsWith$1(message, "is undefined") || $.JSString_methods.endsWith$1(message, "is null or undefined") || $.JSString_methods.endsWith$1(message, "of undefined") || $.JSString_methods.endsWith$1(message, "of null"))
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    t1 = t1 ? message : "";
    return $._ExceptionImplementation$(t1);
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.JSArray_methods.get$iterator(keyValuePairs);
  result = $.LinkedHashMap$(null, null);
  for (; iterator.moveNext$0();) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($._ExceptionImplementation$("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function ($2, $3) { return function($0, $1) { return $3(closure, $2, arity, $0, $1) }})($._currentIsolate(), $.invokeClosure.call$5);
  closure.$identity = $function;
  return $function;
};

$.stringTypeCast = function(value) {
  if (typeof value === "string" || value == null)
    return value;
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), "String"));
};

$.boolTypeCast = function(value) {
  if (typeof value === "boolean" || value == null)
    return value;
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), "bool"));
};

$.propertyTypeCastError = function(value, property) {
  var t1 = $.getInterceptor$asx(property);
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.listTypeCast = function(value) {
  if (typeof value === "object" && value !== null && (value.constructor === Array || value.$isList()) || value == null)
    return value;
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), "List"));
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation("CastError: Casting value of type " + $.S(actualType) + " to" + " incompatible type " + expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  target.$builtinTypeInfo = typeInfo;
};

$.getRuntimeTypeInfo = function(target) {
  return target.$builtinTypeInfo;
};

$.getRuntimeTypeArgument = function(target, substitution, index) {
  var $arguments = $.substitute(substitution, $.getRuntimeTypeInfo(target));
  return $arguments == null ? null : $arguments[index];
};

$.substitute = function(substitution, $arguments) {
  if (substitution != null && (substitution.constructor === Array))
    $arguments = substitution;
  else if (typeof substitution == "function")
    $arguments = substitution.apply(null, $arguments);
  return $arguments;
};

$._convertJsonToDart = function(json, reviver) {
  var revive = reviver == null ? new $._convertJsonToDart_anon() : reviver;
  return revive.call$2("", new $._convertJsonToDart_walk(revive).call$1(json));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var $name = tag;
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "WebKitMutationObserver")
    return "MutationObserver";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
};

$.typeNameInOpera = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  return $name;
};

$.typeNameInFirefox = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "MouseScrollEvent")
    return "WheelEvent";
  if ($name === "OfflineResourceList")
    return "DOMApplicationCache";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
};

$.typeNameInIE = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "MouseWheelEvent")
    return "WheelEvent";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return $name;
};

$.constructorNameFallback = function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (typeof(navigator) !== "object")
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, $name, methods, $arguments) {
  var hasOwnPropertyFunction, tag, method, secondTag, proto;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  if (!$.isDartObject(obj)) {
    tag = $.getTypeNameOf(obj);
    method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
    if (method == null) {
      secondTag = $.alternateTag(obj, tag);
      if (secondTag != null)
        method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
    }
  } else
    method = null;
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT33));
  if (method == null)
    (function(){throw new TypeError($name + " is not a function");})();
  else {
    proto = Object.getPrototypeOf(obj);
    if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, $name))
      $.defineProperty(proto, $name, method);
  }
  return method.apply(obj, $arguments);
};

$.isDartObject = function(obj) {
  return ((obj) instanceof ($.Object));
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && $._dynamicMetadata0() != null)
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (method != null)
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function($name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[$name];
  if (f != null && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT33)[$name];
  if (dartMethod != null)
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, $name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, $name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive, $.JSSyntaxRegExp_makeNative(pattern, multiLine, caseSensitive, false));
};

$.JSSyntaxRegExp$_globalVersionOf = function(other) {
  var t1, t2, t3;
  t1 = other.get$pattern(other);
  t2 = other.get$isMultiLine();
  t3 = other.get$isCaseSensitive();
  return new $.JSSyntaxRegExp(t1, t2, t3, $.JSSyntaxRegExp_makeNative(t1, t2, t3, true));
};

$.JSSyntaxRegExp_makeNative = function(pattern, multiLine, caseSensitive, global) {
  var m, i, g, regexp, errorMessage;
  $.checkString(pattern);
  m = multiLine === true ? "m" : "";
  i = caseSensitive === true ? "" : "i";
  g = global ? "g" : "";
  regexp = (function() {try {return new RegExp(pattern, m + i + g);} catch (e) {return e;}})();
  if (regexp instanceof RegExp)
    return regexp;
  errorMessage = String(regexp);
  throw $.$$throw($.FormatException$("Illegal RegExp pattern: " + $.S(pattern) + ", " + errorMessage));
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp$_globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, $length, patternLength, startIndex, position, endIndex;
  result = $.List_List($, $.Match);
  $.setRuntimeTypeInfo(result, [$.Match]);
  $length = haystack.length;
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.JSString_methods.indexOf$2(haystack, needle, startIndex);
    if (position === -1)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = position + patternLength;
    if (endIndex === $length)
      break;
    else
      startIndex = position === endIndex ? startIndex + 1 : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.JSString_methods.indexOf$2(receiver, other, startIndex) !== -1;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.JSString_methods.substring$1(receiver, startIndex));
  else
    return $.get$iterator$ax($.allMatches$1$s(other, $.JSString_methods.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace("$", "$$$$"));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, $length, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer$("");
      $length = receiver.length;
      result.write$1(to);
      for (i = 0; i < $length; ++i) {
        result.write$1(receiver[i]);
        result.write$1(to);
      }
      return result.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, new RegExp(from.replace(new RegExp("[-[\\]{}()*+?.,\\\\^$|#\\s]", 'g'), "\\$&"), 'g'), to);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$.Future_Future$of = function($function) {
  var result, error, stackTrace, t1, exception;
  try {
    result = $function.call$0();
    t1 = $._FutureImpl$();
    t1._setOrChainValue$1(result);
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    error = t1;
    stackTrace = $.getTraceFromException(exception);
    return $._FutureImpl$immediateError(error, stackTrace);
  }

};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl$immediateError = function(error, stackTrace) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediateError$2(error, stackTrace);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, t3, t4, pos;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = $.get$iterator$ax(futures); t3.moveNext$0();) {
    t4 = t3.get$current();
    pos = t1.remaining_2;
    t1.remaining_2 = $.$add$ns(pos, 1);
    t4.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, pos));
  }
  if ($.$eq(t1.remaining_2, 0) === true)
    return $._FutureImpl$immediate($.CONSTANT5);
  t1.values_1 = $.List_List(t1.remaining_2, null);
  t1.completer_0 = $._CompleterImpl$();
  return t1.completer_0.future;
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._WhenFuture$ = function(_action) {
  return new $._WhenFuture(_action, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$.StreamController$ = function(onPauseStateChange, onSubscriptionStateChange, T) {
  var t1 = new $.StreamController($._SingleControllerStream$(onSubscriptionStateChange, onPauseStateChange, T));
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$._SingleControllerStream$ = function(_subscriptionHandler, _pauseHandler, T) {
  var t1 = new $._SingleControllerStream(_subscriptionHandler, _pauseHandler, null, 0, null);
  $.setRuntimeTypeInfo(t1, [T]);
  t1._SingleStreamImpl$0(T);
  return t1;
};

$._StreamSubscriptionImpl$ = function(source, _onData, _onError, _onDone, _unsubscribeOnError) {
  var t1 = new $._StreamSubscriptionImpl(_unsubscribeOnError, _onData, _onError, _onDone, source, 0, null, null);
  t1._InternalLink$0();
  return t1;
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  error.throwDelayed$0();
};

$._nullDoneHandler = function() {
};

$._DelayedData$ = function(value) {
  return new $._DelayedData(value, null);
};

$._DelayedError$ = function(error) {
  return new $._DelayedError(error, null);
};

$._DelayedDone$ = function() {
  return new $._DelayedDone();
};

$._InternalLink_unlink = function(element) {
  var next, previous;
  next = element.get$_nextLink();
  previous = element.get$_previousLink();
  next.set$_previousLink(previous);
  previous.set$_nextLink(next);
  element.set$_previousLink(element);
  element.set$_nextLink(element);
};

$._InternalLinkList_add = function(list, element) {
  var listEnd;
  if (element !== element._nextLink)
    $._InternalLink_unlink(element);
  listEnd = list._previousLink;
  listEnd.set$_nextLink(element);
  list._previousLink = element;
  element._previousLink = listEnd;
  element._nextLink = list;
};

$._InternalLinkList_isEmpty = function(list) {
  return list === list._nextLink;
};

$._StreamImplEvents$ = function() {
  return new $._StreamImplEvents(null, null, null);
};

$._DoneSubscription$ = function(_handler) {
  var t1 = new $._DoneSubscription(_handler, null, 0);
  t1._DoneSubscription$1(_handler);
  return t1;
};

$._SingleStreamMultiplexer$ = function(_source, T) {
  var t1 = new $._SingleStreamMultiplexer(_source, null, null, null, 0, null);
  $.setRuntimeTypeInfo(t1, [T]);
  t1._MultiStreamImpl$0(T);
  return t1;
};

$.Timer_Timer = function(duration, callback) {
  var milliseconds = duration.get$inMilliseconds();
  if (milliseconds < 0)
    milliseconds = 0;
  return $.TimerImpl$(milliseconds, callback);
};

$.Timer_run = function(callback) {
  $.add$1$ax($.get$Timer__runCallbacks(), callback);
  if ($.$eq($.get$length$asx($.get$Timer__runCallbacks()), 1) === true)
    $.Timer_Timer($.CONSTANT3, new $.Timer_run_anon());
};

$.IterableMixinWorkaround_sortList = function(list, compare) {
  $.Sort__doSort(list, 0, list.length - 1, compare);
};

$.IterableMixinWorkaround_setRangeList = function(list, start, $length, from, startFrom) {
  var t1 = $.getInterceptor($length);
  if (t1.$eq($length, 0) === true)
    return;
  if (t1.$lt($length, 0) === true)
    throw $.$$throw($.ArgumentError$($length));
  t1 = $.getInterceptor$n(start);
  if (t1.$lt(start, 0) === true)
    throw $.$$throw($.RangeError$value(start));
  if ($.$gt$n(t1.$add(start, $length), list.length) === true)
    throw $.$$throw($.RangeError$value(t1.$add(start, $length)));
  $.Arrays_copy(from, startFrom, list, start, $length);
};

$._HashMapTable$ = function() {
  var t1 = new $._HashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.HashMap$ = function(K, V) {
  var t1 = new $.HashMap($._HashMapTable$());
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1.HashMap$0(K, V);
  return t1;
};

$._HashTableKeyIterable$ = function(hashTable, K) {
  var t1 = new $._HashTableKeyIterable(hashTable);
  $.setRuntimeTypeInfo(t1, [K]);
  return t1;
};

$._HashTableKeyIterator$ = function(hashTable) {
  return new $._HashTableKeyIterator(hashTable, hashTable._modificationCount, 0, null);
};

$._HashTableValueIterable$ = function(hashTable, _entryIndex, V) {
  var t1 = new $._HashTableValueIterable(_entryIndex, hashTable);
  $.setRuntimeTypeInfo(t1, [V]);
  return t1;
};

$._HashTableValueIterator$ = function(hashTable, _entryIndex) {
  return new $._HashTableValueIterator(_entryIndex, hashTable, hashTable._modificationCount, 0, null);
};

$._LinkedHashMapTable$ = function() {
  var t1 = new $._LinkedHashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.LinkedHashMap$ = function(K, V) {
  var t1 = new $.LinkedHashMap($._LinkedHashMapTable$());
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1.LinkedHashMap$0(K, V);
  return t1;
};

$.LinkedHashSet$ = function(E) {
  var t1 = new $.LinkedHashSet($._LinkedHashTable$(8));
  $.setRuntimeTypeInfo(t1, [E]);
  t1.LinkedHashSet$0(E);
  return t1;
};

$._LinkedHashTable$ = function(initialCapacity) {
  var t1 = new $._LinkedHashTable(null, initialCapacity, 0, 0, 0, null);
  t1._HashTable$1(initialCapacity);
  return t1;
};

$._LinkedHashTableKeyIterable$ = function(_table, K) {
  var t1 = new $._LinkedHashTableKeyIterable(_table);
  $.setRuntimeTypeInfo(t1, [K]);
  return t1;
};

$._LinkedHashTableKeyIterator$ = function(hashTable) {
  return new $._LinkedHashTableKeyIterator(hashTable, hashTable._modificationCount, hashTable._next$1(0), null);
};

$._LinkedHashTableValueIterable$ = function(_hashTable, _valueIndex, V) {
  var t1 = new $._LinkedHashTableValueIterable(_hashTable, _valueIndex);
  $.setRuntimeTypeInfo(t1, [V]);
  return t1;
};

$._LinkedHashTableValueIterator$ = function(hashTable, _valueIndex) {
  return new $._LinkedHashTableValueIterator(_valueIndex, hashTable, hashTable._modificationCount, hashTable._next$1(0), null);
};

$.Queue_Queue = function(E) {
  return $.ListQueue$(null, E);
};

$.ListQueue$ = function(initialCapacity, E) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.ListQueue$1(initialCapacity, E);
  return t1;
};

$.ListQueue__isPowerOf2 = function(number) {
  return $.JSNull_methods.$and(number, $.JSNull_methods.$sub(number, 1)) === 0;
};

$.ListQueue__nextPowerOf2 = function(number) {
  var number0, nextNumber;
  number0 = $.$shl$n(number, 2) - 1;
  for (number = number0; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
};

$._ListQueueIterator$ = function(queue) {
  return new $._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
};

$.Comparable_compare = function(a, b) {
  return $.compareTo$1$ns(a, b);
};

$.DateTime$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DateTime$_now = function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
};

$.Duration$ = function(days, hours, microseconds, milliseconds, minutes, seconds) {
  if (typeof microseconds !== "number")
    throw $.iae(microseconds);
  return new $.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString$0(object);
  if (typeof object === "string")
    return "\"" + $.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"") + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.RangeError$range = function(value, start, end) {
  return new $.RangeError("value " + $.S(value) + " not in range " + $.S(start) + ".." + $.S(end));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.IntegerDivisionByZeroException$ = function() {
  return new $.IntegerDivisionByZeroException();
};

$.List_List = function($length) {
  var t1 = $ === $length;
  if (t1)
    $length = null;
  if (t1)
    return new Array(0);
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  return $.Primitives_newFixedList($length);
};

$.List_List$from = function(other, growable, E) {
  var list, t1, $length, fixedList, t2, i, t3;
  list = $.List_List($, E);
  $.setRuntimeTypeInfo(list, [E]);
  for (t1 = $.get$iterator$ax(other); t1.moveNext$0();)
    list.push(t1.get$current());
  if (growable === true)
    return list;
  $length = list.length;
  fixedList = $.List_List($length, E);
  $.setRuntimeTypeInfo(fixedList, [E]);
  for (t1 = list.length, t2 = fixedList.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    t3 = list[i];
    if (i >= t2)
      throw $.ioore(i);
    fixedList[i] = t3;
  }
  return fixedList;
};

$.Map_Map = function(K, V) {
  return $.HashMap$(K, V);
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!(charCodes.constructor === Array))
    charCodes = $.List_List$from(charCodes, true, null);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.StringBuffer$ = function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.query$1$x(document, selector);
};

$.AudioElement_AudioElement = function(src) {
  var t1 = $ === src;
  if (t1)
    src = null;
  if (!t1)
    return new Audio(src);
  return new Audio();
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = $.$$dom_createElement$1$x(document, "canvas");
  if (width != null)
    $.set$width$x(e, width);
  if (height != null)
    $.set$height$x(e, height);
  return e;
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, $.get$$$dom_children$x(element));
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, -1, null);
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.Element_Element$tag = function(tag) {
  return $._ElementFactoryProvider_createElement_tag(tag);
};

$.Element__determineMouseWheelEventType = function(e) {
  if (e.onwheel !== undefined)
    return "wheel";
  else if (e.onmousewheel !== undefined)
    return "mousewheel";
  else
    return "DOMMouseScroll";
};

$._ElementFactoryProvider_createElement_tag = function(tag) {
  return document.createElement(tag);
};

$.HttpRequest_getString = function(url, onProgress, withCredentials) {
  return $.HttpRequest_request(url, null, onProgress, null, null, withCredentials).then$1(new $.HttpRequest_getString_anon());
};

$.HttpRequest_request = function(url, method, onProgress, responseType, sendData, withCredentials) {
  var completer, xhr, t1;
  completer = $._CompleterImpl$();
  xhr = new XMLHttpRequest();
  if (method == null)
    method = "GET";
  t1 = $.getInterceptor$x(xhr);
  t1.open$3$async(xhr, method, url, true);
  if (withCredentials != null)
    t1.withCredentials = withCredentials;
  if (responseType != null)
    t1.responseType = responseType;
  if (onProgress != null)
    t1.get$onProgress(xhr).listen$1(onProgress);
  t1.get$onLoad(xhr).listen$1(new $.HttpRequest_request_anon(completer, xhr));
  t1.get$onError(xhr).listen$1(new $.HttpRequest_request_anon0(completer));
  if (sendData != null)
    t1.send$1(xhr, sendData);
  else
    t1.send$0(xhr);
  return completer.future;
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = $.$$dom_createElement$1$x(document, "img");
  if (src != null)
    $.set$src$x(e, src);
  if (width != null)
    $.set$width$x(e, width);
  if (height != null)
    $.set$height$x(e, height);
  return e;
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.Window__isDartLocation = function(thing) {
  var t1, exception;
  try {
    t1 = thing;
    return typeof t1 === "object" && t1 !== null && t1.$isLocation();
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._EventStream$ = function(_target, _eventType, _useCapture, T) {
  var t1 = new $._EventStream(_target, _eventType, _useCapture);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$.Point$0 = function(x, y) {
  return new $.Point0(x, y);
};

$.Rect$ = function(left, $top, width, height) {
  return new $.Rect(left, $top, width, height);
};

$._DocumentFragmentFactoryProvider_createDocumentFragment_html = function(html) {
  var fragment = $.createDocumentFragment$0$x(document);
  $.set$innerHtml$x(fragment, html);
  return fragment;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._TypedImageData$ = function(data, height, width) {
  return new $._TypedImageData(data, height, width);
};

$._convertNativeToDart_ImageData = function(nativeImageData) {
  0;
  if (typeof nativeImageData === "object" && nativeImageData !== null && nativeImageData.$isImageData())
    return nativeImageData;
  return $._TypedImageData$(nativeImageData.data, nativeImageData.height, nativeImageData.width);
};

$._convertDartToNative_ImageData = function(imageData) {
  if (typeof imageData === "object" && imageData !== null && !!imageData.$is_TypedImageData)
    return {data: imageData.data, height: imageData.height, width: imageData.width};
  return imageData;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  if (w === window)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$._LocationWrapper__get = function(p, m) {
  return p[m];
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.get$length$asx(array), -1, null);
};

$.convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.JSNull_methods.forEach$1(dict, new $.convertDartToNative_Dictionary_anon(object));
  return object;
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.Device_userAgent = function() {
  return $.get$navigator$x($.window()).userAgent;
};

$.Device_isOpera = function() {
  if ($.Device__isOpera == null)
    $.Device__isOpera = $.contains$2$asx($.Device_userAgent(), "Opera", 0);
  return $.Device__isOpera;
};

$.Device_isWebKit = function() {
  if ($.Device__isWebKit == null)
    $.Device__isWebKit = $.Device_isOpera() !== true && $.contains$2$asx($.Device_userAgent(), "WebKit", 0);
  return $.Device__isWebKit;
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, $.get$nodes$x(node));
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, t2, i;
  t1 = $.getInterceptor$asx(a);
  t2 = $.getInterceptor$n(startIndex);
  if (t2.$ge(startIndex, t1.get$length(a)) === true)
    return -1;
  if (t2.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; t2 = $.getInterceptor$n(i), t2.$lt(i, endIndex) === true; i = t2.$add(i, 1))
    if ($.$eq(t1.$index(a, i), element) === true)
      return i;
  return -1;
};

$.Lists_getRange = function(a, start, end, accumulator) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, end, accumulator);
  if (typeof start !== "number")
    return $.Lists_getRange$bailout(1, a, start, end, accumulator);
  if (typeof end !== "number")
    return $.Lists_getRange$bailout(1, a, start, end, accumulator);
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (end < start)
    throw $.$$throw($.RangeError$value(end));
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, end, accumulator) {
  var t1, t2, i;
  if ($.$lt$n(start, 0) === true)
    throw $.$$throw($.RangeError$value(start));
  t1 = $.getInterceptor$n(end);
  if (t1.$lt(end, start) === true)
    throw $.$$throw($.RangeError$value(end));
  t2 = $.getInterceptor$asx(a);
  if (t1.$gt(end, t2.get$length(a)) === true)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; t1 = $.getInterceptor$n(i), t1.$lt(i, end) === true; i = t1.$add(i, 1))
    accumulator.push(t2.$index(a, i));
  return accumulator;
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$._Isolate_port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$.parse = function(json, reviver) {
  var parsed, e, t1, exception;
  t1 = json;
  if (!(typeof t1 === "string"))
    throw $.$$throw($.ArgumentError$(json));
  parsed = null;
  try {
    parsed = JSON.parse(json);
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.FormatException$(String(e)));
  }

  return $._convertJsonToDart(parsed, reviver);
};

$.min = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.JSDouble_methods.get$isNegative(b) || $.JSDouble_methods.get$isNaN(b))
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return a + b;
        if ($.JSDouble_methods.get$isNaN(b))
          return b;
        return a;
      }
      if (b === 0 && $.JSNumber_methods.get$isNegative(a))
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.pow = function(x, exponent) {
  $.checkNum(x);
  $.checkNum(exponent);
  return Math.pow(x, exponent);
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.Random_Random = function(seed) {
  return $.CONSTANT21;
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.main = function() {
  var pathname, match, page, canvas, t1, transitionDiv;
  pathname = $.get$pathname$x($.get$location$x(window));
  match = $.RegExp_RegExp("([A-Za-z0-9-]+)\\.html", false, false).firstMatch$1(pathname);
  if (match != null && match.get$groupCount() === 1) {
    page = match.group$1(1);
    $.Primitives_printString("current page: " + $.S(page));
    canvas = $.query$1$x(document, "#stage");
    if (canvas != null) {
      $.stage = $.Stage$("stage", canvas);
      $.renderLoop = $.RenderLoop$();
      $.renderLoop.addStage$1($.stage);
      $.juggler = $.renderLoop.get$juggler();
      $.resourceManager = $.ResourceManager$();
    }
    switch (page) {
      case "filter":
        t1 = $.resourceManager;
        t1.addBitmapData$2("king", "images/king.png");
        $.load$0$x(t1).then$1(new $.main_anon());
        break;
      case "masking":
        t1 = $.resourceManager;
        t1.addBitmapData$2("flower1", "images/Flower1.png");
        t1.addBitmapData$2("flower2", "images/Flower2.png");
        t1.addBitmapData$2("flower3", "images/Flower3.png");
        $.load$0$x(t1).then$1(new $.main_anon0());
        break;
      case "movieclip":
        t1 = $.resourceManager;
        t1.addTextureAtlas$3("walkTextureAtlas", "images/walk.json", "jsonarray");
        $.load$0$x(t1).then$1(new $.main_anon1());
        break;
      case "performance":
        t1 = $.resourceManager;
        t1.addTextureAtlas$3("flags", "images/flags.json", "jsonarray");
        $.load$0$x(t1).then$1(new $.main_anon2());
        break;
      case "sound":
        t1 = $.resourceManager;
        t1.addBitmapData$2("KeyBlack", "images/piano/KeyBlack.png");
        t1.addBitmapData$2("KeyWhite0", "images/piano/KeyWhite0.png");
        t1.addBitmapData$2("KeyWhite1", "images/piano/KeyWhite1.png");
        t1.addBitmapData$2("KeyWhite2", "images/piano/KeyWhite2.png");
        t1.addBitmapData$2("KeyWhite3", "images/piano/KeyWhite3.png");
        t1.addBitmapData$2("Finger", "images/piano/Finger.png");
        t1.addBitmapData$2("Background", "images/piano/Background.jpg");
        t1.addSound$2("Cheer", "sounds/Cheer.mp3");
        t1.addSound$2("Note1", "sounds/piano/Note1.mp3");
        t1.addSound$2("Note2", "sounds/piano/Note2.mp3");
        t1.addSound$2("Note3", "sounds/piano/Note3.mp3");
        t1.addSound$2("Note4", "sounds/piano/Note4.mp3");
        t1.addSound$2("Note5", "sounds/piano/Note5.mp3");
        t1.addSound$2("Note6", "sounds/piano/Note6.mp3");
        t1.addSound$2("Note7", "sounds/piano/Note7.mp3");
        t1.addSound$2("Note8", "sounds/piano/Note8.mp3");
        t1.addSound$2("Note9", "sounds/piano/Note9.mp3");
        t1.addSound$2("Note10", "sounds/piano/Note10.mp3");
        t1.addSound$2("Note11", "sounds/piano/Note11.mp3");
        t1.addSound$2("Note12", "sounds/piano/Note12.mp3");
        t1.addSound$2("Note13", "sounds/piano/Note13.mp3");
        t1.addSound$2("Note14", "sounds/piano/Note14.mp3");
        t1.addSound$2("Note15", "sounds/piano/Note15.mp3");
        t1.addSound$2("Note16", "sounds/piano/Note16.mp3");
        t1.addSound$2("Note17", "sounds/piano/Note17.mp3");
        t1.addSound$2("Note18", "sounds/piano/Note18.mp3");
        t1.addSound$2("Note19", "sounds/piano/Note19.mp3");
        t1.addSound$2("Note20", "sounds/piano/Note20.mp3");
        t1.addSound$2("Note21", "sounds/piano/Note21.mp3");
        t1.addSound$2("Note22", "sounds/piano/Note22.mp3");
        t1.addSound$2("Note23", "sounds/piano/Note23.mp3");
        t1.addSound$2("Note24", "sounds/piano/Note24.mp3");
        t1.addSound$2("Note25", "sounds/piano/Note25.mp3");
        $.load$0$x(t1).then$1(new $.main_anon3());
        break;
      case "text":
        $.stage.addChild$1($.TextDemo$());
        break;
      case "tweener":
        $.stage.addChild$1($.TweenerDemo$());
        break;
      case "flump":
        t1 = $.resourceManager;
        t1.addFlumpLibrary$2("flump", "images/flumpLibrary.json");
        $.load$0$x(t1).then$1(new $.main_anon4());
        break;
      case "texturepacker":
        t1 = $.resourceManager;
        t1.addTextureAtlas$3("levelUp", "images/LevelupTextureAtlas.json", "jsonarray");
        $.load$0$x(t1).then$1(new $.main_anon5());
        break;
      case "transitions":
        transitionDiv = $.TransititionTypeDemo$().getTransitionDiv$0();
        $.add$1$ax($.get$children$x($.query$1$x(document, "#transitions")), transitionDiv);
        break;
    }
  }
};

$.FilterDemo$ = function() {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9;
  t1 = $.makeLiteralMap(["name", "DropShadowFilter (black)", "filter", $.DropShadowFilter$(10, 0.7853981633974483, 4278190080, 0.8, 8, 8, 1, false, false, false)]);
  t2 = $.makeLiteralMap(["name", "GlowFilter (red)", "filter", $.GlowFilter$(4294901760, 1, 20, 20, 2, false, false, false)]);
  t3 = $.makeLiteralMap(["name", "ColorMatrixFilter (grayscale)", "filter", $.ColorMatrixFilter$grayscale()]);
  t4 = $.makeLiteralMap(["name", "ColorMatrixFilter (invert)", "filter", $.ColorMatrixFilter$invert()]);
  t5 = $.makeLiteralMap(["name", "BlurFilter (radius 1)", "filter", $.BlurFilter$(1, 1)]);
  t6 = $.makeLiteralMap(["name", "BlurFilter (radius 5)", "filter", $.BlurFilter$(5, 5)]);
  t7 = $.makeLiteralMap(["name", "BlurFilter (radius 10)", "filter", $.BlurFilter$(10, 10)]);
  t8 = $.makeLiteralMap(["name", "BlurFilter (radius 20)", "filter", $.BlurFilter$(20, 20)]);
  t9 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t9, [$.DisplayObject]);
  t9 = new $.FilterDemo([t1, t2, t3, t4, t5, t6, t7, t8], t9, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t9.FilterDemo$0();
  return t9;
};

$.MaskingDemo$ = function() {
  var t1, t2;
  t1 = $.Random_Random(null);
  t2 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t2, [$.DisplayObject]);
  t2 = new $.MaskingDemo(t1, t2, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t2.MaskingDemo$0();
  return t2;
};

$.MovieClipDemo$ = function() {
  var t1, t2;
  t1 = $.Random_Random(null);
  t2 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t2, [$.DisplayObject]);
  t2 = new $.MovieClipDemo(t1, null, null, t2, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t2.MovieClipDemo$0();
  return t2;
};

$.FlyingFlag$ = function(bitmapData, vx, vy) {
  var t1 = new $.FlyingFlag(vx, vy, bitmapData, "auto", null, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.Bitmap$2(bitmapData, "auto");
  t1.FlyingFlag$3(bitmapData, vx, vy);
  return t1;
};

$.PerformanceDemo$ = function() {
  var t1 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
  t1 = new $.PerformanceDemo(null, t1, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.PerformanceDemo$0();
  return t1;
};

$.SoundDemo$ = function() {
  var t1 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
  t1 = new $.SoundDemo(["C4", "A3", "A3", "C4", "D4", "G3", "G3", "A3", "A3#", "F4", "F4", "E4", "C4", "D4", "C4", "A3#", "A3", "C4", "D4", "D4", "D4", "G4", "F4", "E4", "F4", "D4", "C4", "F3", "G3", "A3", "D4", "C4", "C4", "A3#", "A3", "E3", "F3"], ["Hey ", "Jude, ", "don't ", "make ", "it ", "bad.<br>", "Take ", "a ", "sad ", "song ", "and ", "make ", "it ", "better.<br>", "", "", "", "Remember ", "", "", "to ", "let ", "her ", "into ", "", "your ", "heart.<br>", "Than ", "you ", "can ", "start ", "", "to ", "make ", "things ", "better.", "", " "], t1, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.SoundDemo$0();
  return t1;
};

$.Piano$ = function(songNotes, songLyrics) {
  var t1, t2;
  t1 = $.Map_Map($.String, $.PianoKey);
  t2 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t2, [$.DisplayObject]);
  t2 = new $.Piano(songNotes, songLyrics, ["C3", "C3#", "D3", "D3#", "E3", "F3", "F3#", "G3", "G3#", "A3", "A3#", "B3", "C4", "C4#", "D4", "D4#", "E4", "F4", "F4#", "G4", "G4#", "A4", "A4#", "B4", "C5"], t1, null, 0, t2, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t2.Piano$2(songNotes, songLyrics);
  return t2;
};

$.PianoKey$ = function(piano, note, sound) {
  var t1 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
  t1 = new $.PianoKey(piano, note, sound, false, false, t1, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.PianoKey$3(piano, note, sound);
  return t1;
};

$.TextDemo$ = function() {
  var t1 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
  t1 = new $.TextDemo("Filet mignon leberkas pig pork chop biltong, short loin strip steak turkey brisket \nvenison. Pastrami venison pancetta, leberkas pork chop chicken prosciutto beef ribs \nbresaola kielbasa swine biltong capicola. Hamburger beef ribs ball tip drumstick salami \npig. Capicola pork loin shank, salami chicken hamburger tail. Sirloin spare ribs\nground round cow strip steak prosciutto swine bacon corned beef.", t1, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.TextDemo$0();
  return t1;
};

$.TweenerDemo$ = function() {
  var t1 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
  t1 = new $.TweenerDemo(t1, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.TweenerDemo$0();
  return t1;
};

$.TransititionTypeDemo$ = function() {
  return new $.TransititionTypeDemo([$.makeLiteralMap(["name", "linear", "transition", $.TransitionFunction_linear]), $.makeLiteralMap(["name", "sine", "transition", $.TransitionFunction_sine]), $.makeLiteralMap(["name", "cosine", "transition", $.TransitionFunction_cosine]), $.makeLiteralMap(["name", "random", "transition", $.TransitionFunction_random]), $.makeLiteralMap(["name", "easeInQuadratic", "transition", $.TransitionFunction_easeInQuadratic]), $.makeLiteralMap(["name", "easeOutQuadratic", "transition", $.TransitionFunction_easeOutQuadratic]), $.makeLiteralMap(["name", "easeInOutQuadratic", "transition", $.TransitionFunction_easeInOutQuadratic]), $.makeLiteralMap(["name", "easeOutInQuadratic", "transition", $.TransitionFunction_easeOutInQuadratic]), $.makeLiteralMap(["name", "easeInCubic", "transition", $.TransitionFunction_easeInCubic]), $.makeLiteralMap(["name", "easeOutCubic", "transition", $.TransitionFunction_easeOutCubic]), $.makeLiteralMap(["name", "easeInOutCubic", "transition", $.TransitionFunction_easeInOutCubic]), $.makeLiteralMap(["name", "easeOutInCubic", "transition", $.TransitionFunction_easeOutInCubic]), $.makeLiteralMap(["name", "easeInQuartic", "transition", $.TransitionFunction_easeInQuartic]), $.makeLiteralMap(["name", "easeOutQuartic", "transition", $.TransitionFunction_easeOutQuartic]), $.makeLiteralMap(["name", "easeInOutQuartic", "transition", $.TransitionFunction_easeInOutQuartic]), $.makeLiteralMap(["name", "easeOutInQuartic", "transition", $.TransitionFunction_easeOutInQuartic]), $.makeLiteralMap(["name", "easeInQuintic", "transition", $.TransitionFunction_easeInQuintic]), $.makeLiteralMap(["name", "easeOutQuintic", "transition", $.TransitionFunction_easeOutQuintic]), $.makeLiteralMap(["name", "easeInOutQuintic", "transition", $.TransitionFunction_easeInOutQuintic]), $.makeLiteralMap(["name", "easeOutInQuintic", "transition", $.TransitionFunction_easeOutInQuintic]), $.makeLiteralMap(["name", "easeInCircular", "transition", $.TransitionFunction_easeInCircular]), $.makeLiteralMap(["name", "easeOutCircular", "transition", $.TransitionFunction_easeOutCircular]), $.makeLiteralMap(["name", "easeInOutCircular", "transition", $.TransitionFunction_easeInOutCircular]), $.makeLiteralMap(["name", "easeOutInCircular", "transition", $.TransitionFunction_easeOutInCircular]), $.makeLiteralMap(["name", "easeInSine", "transition", $.TransitionFunction_easeInSine]), $.makeLiteralMap(["name", "easeOutSine", "transition", $.TransitionFunction_easeOutSine]), $.makeLiteralMap(["name", "easeInOutSine", "transition", $.TransitionFunction_easeInOutSine]), $.makeLiteralMap(["name", "easeOutInSine", "transition", $.TransitionFunction_easeOutInSine]), $.makeLiteralMap(["name", "easeInExponential", "transition", $.TransitionFunction_easeInExponential]), $.makeLiteralMap(["name", "easeOutExponential", "transition", $.TransitionFunction_easeOutExponential]), $.makeLiteralMap(["name", "easeInOutExponential", "transition", $.TransitionFunction_easeInOutExponential]), $.makeLiteralMap(["name", "easeOutInExponential", "transition", $.TransitionFunction_easeOutInExponential]), $.makeLiteralMap(["name", "easeInBack", "transition", $.TransitionFunction_easeInBack]), $.makeLiteralMap(["name", "easeOutBack", "transition", $.TransitionFunction_easeOutBack]), $.makeLiteralMap(["name", "easeInOutBack", "transition", $.TransitionFunction_easeInOutBack]), $.makeLiteralMap(["name", "easeOutInBack", "transition", $.TransitionFunction_easeOutInBack]), $.makeLiteralMap(["name", "easeInElastic", "transition", $.TransitionFunction_easeInElastic]), $.makeLiteralMap(["name", "easeOutElastic", "transition", $.TransitionFunction_easeOutElastic]), $.makeLiteralMap(["name", "easeInOutElastic", "transition", $.TransitionFunction_easeInOutElastic]), $.makeLiteralMap(["name", "easeOutInElastic", "transition", $.TransitionFunction_easeOutInElastic]), $.makeLiteralMap(["name", "easeInBounce", "transition", $.TransitionFunction_easeInBounce]), $.makeLiteralMap(["name", "easeOutBounce", "transition", $.TransitionFunction_easeOutBounce]), $.makeLiteralMap(["name", "easeInOutBounce", "transition", $.TransitionFunction_easeInOutBounce]), $.makeLiteralMap(["name", "easeOutInBounce", "transition", $.TransitionFunction_easeOutInBounce])]);
};

$.FlumpDemo$ = function() {
  var t1 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
  t1 = new $.FlumpDemo(t1, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.FlumpDemo$0();
  return t1;
};

$.TexturePackerDemo$ = function() {
  var t1 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
  t1 = new $.TexturePackerDemo(null, t1, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.TexturePackerDemo$0();
  return t1;
};

$.DelayedCall$ = function(action, delay) {
  var t1 = new $.DelayedCall(action, 0, 0, 1);
  t1.DelayedCall$2(action, delay);
  return t1;
};

$.Juggler$ = function() {
  var t1 = $.List_List($, $.Animatable);
  $.setRuntimeTypeInfo(t1, [$.Animatable]);
  return new $.Juggler(t1, 0, 0);
};

$.TransitionFunction_linear = function(ratio) {
  return ratio;
};

$.TransitionFunction_sine = function(ratio) {
  return 0.5 - 0.5 * Math.cos($.checkNum($.$mul$n($.$mul$n(ratio, 2), 3.141592653589793)));
};

$.TransitionFunction_cosine = function(ratio) {
  return 0.5 + 0.5 * Math.cos($.checkNum($.$mul$n($.$mul$n(ratio, 2), 3.141592653589793)));
};

$.TransitionFunction_random = function(ratio) {
  var t1;
  if ($.TransitionFunction__random == null)
    $.TransitionFunction__random = $.CONSTANT21;
  t1 = $.getInterceptor(ratio);
  if (t1.$eq(ratio, 0) === true || t1.$eq(ratio, 1) === true)
    return ratio;
  return $.TransitionFunction__random.nextDouble$0();
};

$.TransitionFunction_easeInQuadratic = function(ratio) {
  return $.$mul$n(ratio, ratio);
};

$.TransitionFunction_easeOutQuadratic = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return 1 - ratio * ratio;
};

$.TransitionFunction_easeInOutQuadratic = function(ratio) {
  var t1;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = t1.$mul(ratio, ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * (1 - ratio * ratio) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInQuadratic = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * (1 - ratio * ratio);
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$mul$n(t1, t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * t1 + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInCubic = function(ratio) {
  return $.$mul$n($.$mul$n(ratio, ratio), ratio);
};

$.TransitionFunction_easeOutCubic = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return 1 - ratio * ratio * ratio;
};

$.TransitionFunction_easeInOutCubic = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t2 = $.$mul$n(t1.$mul(ratio, ratio), ratio);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t2 = 0.5 * t2;
    t1 = t2;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * (1 - ratio * ratio * ratio) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInCubic = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * (1 - ratio * ratio * ratio);
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$mul$n($.$mul$n(t1, t1), t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * t1 + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInQuartic = function(ratio) {
  return $.$mul$n($.$mul$n($.$mul$n(ratio, ratio), ratio), ratio);
};

$.TransitionFunction_easeOutQuartic = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return 1 - ratio * ratio * ratio * ratio;
};

$.TransitionFunction_easeInOutQuartic = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t2 = $.$mul$n($.$mul$n(t1.$mul(ratio, ratio), ratio), ratio);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t2 = 0.5 * t2;
    t1 = t2;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * (1 - ratio * ratio * ratio * ratio) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInQuartic = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * (1 - ratio * ratio * ratio * ratio);
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$mul$n($.$mul$n($.$mul$n(t1, t1), t1), t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * t1 + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInQuintic = function(ratio) {
  return $.$mul$n($.$mul$n($.$mul$n($.$mul$n(ratio, ratio), ratio), ratio), ratio);
};

$.TransitionFunction_easeOutQuintic = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return 1 - ratio * ratio * ratio * ratio * ratio;
};

$.TransitionFunction_easeInOutQuintic = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t2 = $.$mul$n($.$mul$n($.$mul$n(t1.$mul(ratio, ratio), ratio), ratio), ratio);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t2 = 0.5 * t2;
    t1 = t2;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * (1 - ratio * ratio * ratio * ratio * ratio) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInQuintic = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * (1 - ratio * ratio * ratio * ratio * ratio);
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$mul$n($.$mul$n($.$mul$n($.$mul$n(t1, t1), t1), t1), t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * t1 + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInCircular = function(ratio) {
  var t1 = $.$mul$n(ratio, ratio);
  if (typeof t1 !== "number")
    throw $.iae(t1);
  return 1 - Math.sqrt($.checkNum(1 - t1));
};

$.TransitionFunction_easeOutCircular = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return Math.sqrt($.checkNum(1 - ratio * ratio));
};

$.TransitionFunction_easeInOutCircular = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = t1.$mul(ratio, ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * (1 - Math.sqrt($.checkNum(1 - t1)));
    t1 = t2;
  } else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    ratio = 1 - t1;
    t1 = 0.5 * Math.sqrt($.checkNum(1 - ratio * ratio)) + 0.5;
  }
  return t1;
};

$.TransitionFunction_easeOutInCircular = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    ratio = 1 - ratio;
    t1 = 0.5 * Math.sqrt($.checkNum(1 - ratio * ratio));
  } else {
    t1 = t1.$sub(ratio, 1);
    t1 = $.$mul$n(t1, t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * (1 - Math.sqrt($.checkNum(1 - t1))) + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeInSine = function(ratio) {
  return 1 - Math.cos($.checkNum($.$mul$n(ratio, 1.5707963267948966)));
};

$.TransitionFunction_easeOutSine = function(ratio) {
  return Math.sin($.checkNum($.$mul$n(ratio, 1.5707963267948966)));
};

$.TransitionFunction_easeInOutSine = function(ratio) {
  var t1;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  return t1.$lt(ratio, 1) === true ? 0.5 * (1 - Math.cos($.checkNum(t1.$mul(ratio, 1.5707963267948966)))) : 0.5 * Math.sin($.checkNum($.$mul$n(t1.$sub(ratio, 1), 1.5707963267948966))) + 0.5;
};

$.TransitionFunction_easeOutInSine = function(ratio) {
  var t1;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  return t1.$lt(ratio, 1) === true ? 0.5 * Math.sin($.checkNum(t1.$mul(ratio, 1.5707963267948966))) : 0.5 * (1 - Math.cos($.checkNum($.$mul$n(t1.$sub(ratio, 1), 1.5707963267948966)))) + 0.5;
};

$.TransitionFunction_easeInExponential = function(ratio) {
  var t1 = $.getInterceptor(ratio);
  if (t1.$eq(ratio, 0) === true)
    return 0;
  t1 = t1.$sub(ratio, 1);
  if (typeof t1 !== "number")
    throw $.iae(t1);
  t1 = 10 * t1;
  $.checkNum(2);
  $.checkNum(t1);
  return Math.pow(2, t1);
};

$.TransitionFunction_easeOutExponential = function(ratio) {
  var t1;
  if ($.$eq(ratio, 1) === true)
    return 1;
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  t1 = -10 * ratio;
  $.checkNum(2);
  $.checkNum(t1);
  return 1 - Math.pow(2, t1);
};

$.TransitionFunction_easeInOutExponential = function(ratio) {
  var t1;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  return t1.$lt(ratio, 1) === true ? 0.5 * $.TransitionFunction_easeInExponential(ratio) : 0.5 * $.TransitionFunction_easeOutExponential(t1.$sub(ratio, 1)) + 0.5;
};

$.TransitionFunction_easeOutInExponential = function(ratio) {
  var t1;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  return t1.$lt(ratio, 1) === true ? 0.5 * $.TransitionFunction_easeOutExponential(ratio) : 0.5 * $.TransitionFunction_easeInExponential(t1.$sub(ratio, 1)) + 0.5;
};

$.TransitionFunction_easeInBack = function(ratio) {
  var t1 = $.$mul$n(ratio, ratio);
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  return $.$mul$n(t1, 2.70158 * ratio - 1.70158);
};

$.TransitionFunction_easeOutBack = function(ratio) {
  var t1;
  ratio = $.$sub$n(ratio, 1);
  t1 = $.$mul$n(ratio, ratio);
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  return $.$add$ns($.$mul$n(t1, 2.70158 * ratio + 1.70158), 1);
};

$.TransitionFunction_easeInOutBack = function(ratio) {
  var t1, t2, t3;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = t1.$mul(ratio, ratio);
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    t1 = $.$mul$n(t1, 2.70158 * ratio - 1.70158);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t2 = $.TransitionFunction_easeOutBack(t1.$sub(ratio, 1));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * t2 + 0.5;
    t1 = t3;
  }
  return t1;
};

$.TransitionFunction_easeOutInBack = function(ratio) {
  var t1, t2, t3;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = $.TransitionFunction_easeOutBack(ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t1 = t1.$sub(ratio, 1);
    t2 = $.$mul$n(t1, t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = $.$mul$n(t2, 2.70158 * t1 - 1.70158);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * t2 + 0.5;
    t1 = t3;
  }
  return t1;
};

$.TransitionFunction_easeInElastic = function(ratio) {
  var t1 = $.getInterceptor(ratio);
  if (t1.$eq(ratio, 0) === true || t1.$eq(ratio, 1) === true)
    return ratio;
  ratio = t1.$sub(ratio, 1);
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  t1 = 10 * ratio;
  $.checkNum(2);
  $.checkNum(t1);
  return -Math.pow(2, t1) * Math.sin($.checkNum((ratio - 0.075) * 6.283185307179586 / 0.3));
};

$.TransitionFunction_easeOutElastic = function(ratio) {
  var t1;
  if (typeof ratio !== "number")
    return $.TransitionFunction_easeOutElastic$bailout(1, ratio);
  if (ratio === 0 || ratio === 1)
    return ratio;
  t1 = -10 * ratio;
  $.checkNum(2);
  $.checkNum(t1);
  return Math.pow(2, t1) * Math.sin($.checkNum((ratio - 0.075) * 6.283185307179586 / 0.3)) + 1;
};

$.TransitionFunction_easeOutElastic$bailout = function(state0, ratio) {
  var t1 = $.getInterceptor(ratio);
  if (t1.$eq(ratio, 0) === true || t1.$eq(ratio, 1) === true)
    return ratio;
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  t1 = -10 * ratio;
  $.checkNum(2);
  $.checkNum(t1);
  return Math.pow(2, t1) * Math.sin($.checkNum((ratio - 0.075) * 6.283185307179586 / 0.3)) + 1;
};

$.TransitionFunction_easeInOutElastic = function(ratio) {
  var t1, t2, t3;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = $.TransitionFunction_easeInElastic(ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t2 = $.TransitionFunction_easeOutElastic(t1.$sub(ratio, 1));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * t2 + 0.5;
    t1 = t3;
  }
  return t1;
};

$.TransitionFunction_easeOutInElastic = function(ratio) {
  var t1, t2, t3;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    t1 = $.TransitionFunction_easeOutElastic(ratio);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = 0.5 * t1;
  } else {
    t2 = $.TransitionFunction_easeInElastic(t1.$sub(ratio, 1));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = 0.5 * t2 + 0.5;
    t1 = t3;
  }
  return t1;
};

$.TransitionFunction_easeInBounce = function(ratio) {
  if (typeof ratio !== "number")
    throw $.iae(ratio);
  return 1 - $.TransitionFunction_easeOutBounce(1 - ratio);
};

$.TransitionFunction_easeOutBounce = function(ratio) {
  var t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 0.36363636363636365) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    return 7.5625 * ratio * ratio;
  } else if (t1.$lt(ratio, 0.7272727272727273) === true) {
    ratio = t1.$sub(ratio, 0.5454545454545454);
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    return 7.5625 * ratio * ratio + 0.75;
  } else if (t1.$lt(ratio, 0.9090909090909091) === true) {
    ratio = t1.$sub(ratio, 0.8181818181818182);
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    return 7.5625 * ratio * ratio + 0.9375;
  } else {
    ratio = t1.$sub(ratio, 0.9545454545454546);
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    return 7.5625 * ratio * ratio + 0.984375;
  }
};

$.TransitionFunction_easeInOutBounce = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true) {
    if (typeof ratio !== "number")
      throw $.iae(ratio);
    t1 = 0.5 * (1 - $.TransitionFunction_easeOutBounce(1 - ratio));
  } else {
    t2 = 0.5 * $.TransitionFunction_easeOutBounce(t1.$sub(ratio, 1)) + 0.5;
    t1 = t2;
  }
  return t1;
};

$.TransitionFunction_easeOutInBounce = function(ratio) {
  var t1, t2;
  ratio = $.$mul$n(ratio, 2);
  t1 = $.getInterceptor$n(ratio);
  if (t1.$lt(ratio, 1) === true)
    t1 = 0.5 * $.TransitionFunction_easeOutBounce(ratio);
  else {
    t1 = t1.$sub(ratio, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = 0.5 * (1 - $.TransitionFunction_easeOutBounce(1 - t1)) + 0.5;
    t1 = t2;
  }
  return t1;
};

$._TweenProperty$ = function($name, startValue, targetValue) {
  return new $._TweenProperty($name, startValue, targetValue);
};

$.Tween$ = function(displayObject, time, transitionFunction) {
  var t1, t2;
  t1 = $.List_List($, $._TweenProperty);
  $.setRuntimeTypeInfo(t1, [$._TweenProperty]);
  t2 = transitionFunction;
  t1 = new $.Tween(displayObject, t2, t1, null, null, null, null, null, null, null, null);
  t1.Tween$3(displayObject, time, transitionFunction);
  return t1;
};

$.Bitmap$ = function(bitmapData, pixelSnapping) {
  var t1 = new $.Bitmap(bitmapData, pixelSnapping, null, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.Bitmap$2(bitmapData, pixelSnapping);
  return t1;
};

$.BitmapData$ = function(width, height, transparent, fillColor) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$4(width, height, transparent, fillColor);
  return t1;
};

$.BitmapData$fromImageElement = function(imageElement) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$fromImageElement$1(imageElement);
  return t1;
};

$.BitmapData$fromTextureAtlasFrame = function(textureAtlasFrame) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$fromTextureAtlasFrame$1(textureAtlasFrame);
  return t1;
};

$.BitmapData_load = function(url) {
  var completer, image, t1;
  completer = $._CompleterImpl$();
  image = $.ImageElement_ImageElement(null, null, null);
  t1 = $.getInterceptor$x(image);
  t1.get$onLoad(image).listen$1(new $.BitmapData_load_anon(completer, image));
  t1.get$onError(image).listen$1(new $.BitmapData_load_anon0(completer));
  t1.set$src(image, url);
  return completer.future;
};

$.Graphics$ = function() {
  var t1 = $.List_List($, $._GraphicsCommand);
  $.setRuntimeTypeInfo(t1, [$._GraphicsCommand]);
  return new $.Graphics(t1);
};

$._GraphicsCommand$ = function($name, $arguments) {
  return new $._GraphicsCommand($name, $arguments);
};

$.Mask$rectangle = function(x, y, width, height) {
  var t1 = new $.Mask(null, null, null, null);
  t1.Mask$rectangle$4(x, y, width, height);
  return t1;
};

$.Mask$circle = function(x, y, radius) {
  var t1 = new $.Mask(null, null, null, null);
  t1.Mask$circle$3(x, y, radius);
  return t1;
};

$.Mask$custom = function(points) {
  var t1 = new $.Mask(null, null, null, null);
  t1.Mask$custom$1(points);
  return t1;
};

$.MovieClip$ = function(bitmapDatas, frameRate, loop) {
  var t1 = new $.MovieClip(null, null, null, null, null, null, null, null, null, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.FlipBook$3(bitmapDatas, frameRate, loop);
  return t1;
};

$.Shape$ = function() {
  var t1 = new $.Shape(null, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.Shape$0();
  return t1;
};

$.Sprite$ = function() {
  var t1 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
  return new $.Sprite(false, false, t1, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
};

$._MouseButton$ = function(mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType) {
  return new $._MouseButton(null, false, 0, 0, mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType);
};

$._Touch$ = function(target, primaryTouchPoint) {
  var t1 = $._Touch__globalTouchPointID;
  if (typeof t1 !== "number")
    return $._Touch$$bailout(1, target, primaryTouchPoint, t1);
  $._Touch__globalTouchPointID = t1 + 1;
  return new $._Touch(t1, target, primaryTouchPoint);
};

$._Touch$$bailout = function(state0, target, primaryTouchPoint, t1) {
  $._Touch__globalTouchPointID = $.$add$ns(t1, 1);
  return new $._Touch(t1, target, primaryTouchPoint);
};

$.Stage$ = function($name, canvas) {
  var t1 = $.List_List($, $.DisplayObject);
  $.setRuntimeTypeInfo(t1, [$.DisplayObject]);
  t1 = new $.Stage(null, null, null, null, null, null, null, null, null, null, null, null, null, [], t1, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.Stage$2($name, canvas);
  return t1;
};

$.FlumpLibrary$ = function() {
  var t1, t2;
  t1 = $.List_List($, $._FlumpMovieData);
  $.setRuntimeTypeInfo(t1, [$._FlumpMovieData]);
  t2 = $.List_List($, $._FlumpTextureGroup);
  $.setRuntimeTypeInfo(t2, [$._FlumpTextureGroup]);
  return new $.FlumpLibrary(null, null, null, t1, t2);
};

$.FlumpLibrary_load = function(url) {
  var completer = $._CompleterImpl$();
  $.HttpRequest_getString(url, null, null).then$1(new $.FlumpLibrary_load_anon(url, completer)).catchError$1(new $.FlumpLibrary_load_anon0(completer));
  return completer.future;
};

$.FlumpMovie$ = function(flumpLibrary, $name) {
  var t1 = $.List_List($, $._FlumpMovieLayer);
  $.setRuntimeTypeInfo(t1, [$._FlumpMovieLayer]);
  t1 = new $.FlumpMovie(flumpLibrary, flumpLibrary._getFlumpMovieData$1($name), t1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.FlumpMovie$2(flumpLibrary, $name);
  return t1;
};

$._FlumpMovieLayer$ = function(flumpLibrary, flumpLayerData) {
  var t1 = new $._FlumpMovieLayer(flumpLibrary, flumpLayerData, $.Map_Map($.String, $.BitmapDrawable), null, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1._FlumpMovieLayer$2(flumpLibrary, flumpLayerData);
  return t1;
};

$._FlumpMovieData$ = function(json, flumpLibrary) {
  var t1 = $.List_List($, $._FlumpLayerData);
  $.setRuntimeTypeInfo(t1, [$._FlumpLayerData]);
  t1 = new $._FlumpMovieData($.$index$asx(json, "id"), flumpLibrary, t1);
  t1._FlumpMovieData$2(json, flumpLibrary);
  return t1;
};

$._FlumpLayerData$ = function(json) {
  var t1, t2, t3;
  t1 = $.List_List($, $._FlumpKeyframeData);
  $.setRuntimeTypeInfo(t1, [$._FlumpKeyframeData]);
  t2 = $.getInterceptor$asx(json);
  t3 = t2.$index(json, "name");
  if (json.containsKey$1("flipbook") === true) {
    t2 = t2.$index(json, "flipbook");
    if (typeof t2 !== "boolean")
      return $._FlumpLayerData$$bailout(1, json, t2, t3, t1);
  } else
    t2 = false;
  t1 = new $._FlumpLayerData(t3, t2, t1);
  t1._FlumpLayerData$1(json);
  return t1;
};

$._FlumpLayerData$$bailout = function(state0, json, t2, t3, t1) {
  switch (state0) {
    case 0:
      t1 = $.List_List($, $._FlumpKeyframeData);
      $.setRuntimeTypeInfo(t1, [$._FlumpKeyframeData]);
      t2 = $.getInterceptor$asx(json);
      t3 = t2.$index(json, "name");
    case 1:
      if (state0 === 1 || state0 === 0 && json.containsKey$1("flipbook") === true)
        switch (state0) {
          case 0:
            t2 = t2.$index(json, "flipbook");
          case 1:
            state0 = 0;
        }
      else
        t2 = false;
      t1 = new $._FlumpLayerData(t3, t2, t1);
      t1._FlumpLayerData$1(json);
      return t1;
  }
};

$._FlumpKeyframeData$ = function(json) {
  var t1 = new $._FlumpKeyframeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1._FlumpKeyframeData$1(json);
  return t1;
};

$._FlumpTextureGroup$ = function(json, flumpLibrary) {
  var t1, t2;
  t1 = {};
  t2 = new $._FlumpTextureGroup(flumpLibrary, null, null);
  t2._FlumpTextureGroup$2(json, flumpLibrary, t1);
  return t2;
};

$._FlumpTexture$ = function(x, y, width, height, originX, originY, imageElement) {
  return new $._FlumpTexture(x, y, width, height, originX, originY, imageElement, null, null);
};

$.RenderLoop$ = function() {
  var t1 = new $.RenderLoop(null, null, null, null, null);
  t1.RenderLoop$0();
  return t1;
};

$.RenderState$fromCanvasRenderingContext2D = function(context, matrix) {
  var t1, t2;
  t1 = $.List_List(100, $.Matrix);
  $.setRuntimeTypeInfo(t1, [$.Matrix]);
  t2 = $.List_List(100, $.$double);
  $.setRuntimeTypeInfo(t2, [$.$double]);
  t2 = new $.RenderState(context, t1, t2, 0);
  t2.RenderState$fromCanvasRenderingContext2D$2(context, matrix);
  return t2;
};

$.EnterFrameEvent$ = function(passedTime) {
  var t1 = new $.EnterFrameEvent(null, null, null, null, null, null, null, null);
  t1.Event$2("enterFrame", false);
  t1.EnterFrameEvent$1(passedTime);
  return t1;
};

$.Event$ = function(type, bubbles) {
  var t1 = new $.Event(null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$._EventStream$0 = function(_target, _eventType, _useCapture, T) {
  var t1 = $.List_List($, $._EventStreamSubscription0);
  $.setRuntimeTypeInfo(t1, [$._EventStreamSubscription0]);
  t1 = new $._EventStream0(_target, _eventType, _useCapture, t1, 0);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$._EventStreamIndex$ = function() {
  var t1 = $.List_List($, $._EventStream0);
  $.setRuntimeTypeInfo(t1, [$._EventStream0]);
  return new $._EventStreamIndex(t1, 0);
};

$._EventStreamSubscription$0 = function(_eventStream, _onData) {
  var t1 = new $._EventStreamSubscription0(_eventStream, _onData, null, null);
  t1._liblib5$_EventStreamSubscription$2(_eventStream, _onData);
  return t1;
};

$.KeyboardEvent$ = function(type, bubbles) {
  var t1 = new $.KeyboardEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.KeyboardEvent$2(type, bubbles);
  return t1;
};

$.MouseEvent$ = function(type, bubbles) {
  var t1 = new $.MouseEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.MouseEvent$2(type, bubbles);
  return t1;
};

$.TextEvent$ = function(type, bubbles) {
  var t1 = new $.TextEvent("", null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$.TouchEvent$ = function(type, bubbles) {
  var t1 = new $.TouchEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.TouchEvent$2(type, bubbles);
  return t1;
};

$.BlurFilter$ = function(blurX, blurY) {
  var t1 = new $.BlurFilter(blurX, blurY);
  t1.BlurFilter$2(blurX, blurY);
  return t1;
};

$.ColorMatrixFilter$grayscale = function() {
  return new $.ColorMatrixFilter([0.212671, 0.71516, 0.072169, 0, 0, 0.212671, 0.71516, 0.072169, 0, 0, 0.212671, 0.71516, 0.072169, 0, 0, 0, 0, 0, 1, 0]);
};

$.ColorMatrixFilter$invert = function() {
  return new $.ColorMatrixFilter([-1, 0, 0, 0, 255, 0, -1, 0, 0, 255, 0, 0, -1, 0, 255, 0, 0, 0, 1, 0]);
};

$.DropShadowFilter$ = function(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
  var t1 = new $.DropShadowFilter(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  t1.DropShadowFilter$10(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  return t1;
};

$.GlowFilter$ = function(color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
  var t1 = new $.GlowFilter(color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  t1.GlowFilter$8(color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  return t1;
};

$.Circle$ = function(x, y, radius) {
  return new $.Circle(x, y, radius);
};

$.Matrix$fromIdentity = function() {
  return new $.Matrix(1, 0, 0, 1, 0, 0, 1);
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.Point$zero = function() {
  return new $.Point(0, 0);
};

$.Rectangle$ = function(x, y, width, height) {
  return new $.Rectangle(x, y, width, height);
};

$.Rectangle$zero = function() {
  return new $.Rectangle(0, 0, 0, 0);
};

$.Sound_load = function(url) {
  var engine, t1;
  engine = $.get$SoundMixer_engine();
  t1 = $.getInterceptor(engine);
  if (t1.$eq(engine, "WebAudioApi") === true)
    return $.WebAudioApiSound_load(url);
  if (t1.$eq(engine, "AudioElement") === true)
    return $.AudioElementSound_load(url);
  return $.MockSound_load(url);
};

$.Sound_adaptAudioUrl = function(url) {
  var match, supportedTypes, t1, fileType, filename, extension;
  match = $.RegExp_RegExp("\\.(ogg|mp3|wav)$", false, false).firstMatch$1(url);
  supportedTypes = $.get$SoundMixer__supportedTypes();
  if (match == null)
    throw $.$$throw($.ArgumentError$("Unsupported file extension."));
  t1 = $.getInterceptor$asx(supportedTypes);
  if ($.$eq(t1.get$length(supportedTypes), 0) === true)
    throw $.$$throw($.UnsupportedError$("This browser supports no known audio codec."));
  fileType = $.toLowerCase$0$s(match.group$1(1));
  if ($.$eq(t1.indexOf$1(supportedTypes, fileType), -1) === true) {
    filename = $.JSString_methods.substring$2(url, 0, url.length - fileType.length);
    extension = t1.$index(supportedTypes, 0);
    url = filename + $.S(extension);
  }
  return url;
};

$.SoundMixer__getEngine = function() {
  var engine, ua, t1;
  engine = $.get$SoundMixer__audioContext() != null ? "WebAudioApi" : "AudioElement";
  ua = window.navigator.userAgent;
  t1 = $.getInterceptor$asx(ua);
  if (t1.contains$1(ua, "IEMobile"))
    if (t1.contains$1(ua, "9.0") || t1.contains$1(ua, "10.0"))
      engine = "Mock";
  if (t1.contains$1(ua, "iPhone") || t1.contains$1(ua, "iPad") || t1.contains$1(ua, "iPod"))
    if (t1.contains$1(ua, "OS 3") || t1.contains$1(ua, "OS 4") || t1.contains$1(ua, "OS 5"))
      engine = "Mock";
  if ($.$eq($.get$length$asx($.get$SoundMixer__supportedTypes()), 0) === true)
    engine = "Mock";
  $.Primitives_printString("dartflash: supported audio engine is: " + engine);
  return engine;
};

$.SoundMixer__getAudioContext = function() {
  var t1, exception;
  try {
    t1 = new (window.AudioContext || window.webkitAudioContext)();
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return;
  }

};

$.SoundMixer__getSupportedTypes = function() {
  var supportedTypes, audio, valid, t1;
  supportedTypes = $.List_List($, $.String);
  $.setRuntimeTypeInfo(supportedTypes, [$.String]);
  audio = $.AudioElement_AudioElement($);
  valid = ["maybe", "probably"];
  t1 = $.getInterceptor$x(audio);
  if ($.$eq($.JSArray_methods.indexOf$1(valid, t1.canPlayType$2(audio, "audio/ogg", "")), -1) !== true)
    supportedTypes.push("ogg");
  if ($.$eq($.JSArray_methods.indexOf$1(valid, t1.canPlayType$2(audio, "audio/mpeg", "")), -1) !== true)
    supportedTypes.push("mp3");
  if ($.$eq($.JSArray_methods.indexOf$1(valid, t1.canPlayType$2(audio, "audio/wav", "")), -1) !== true)
    supportedTypes.push("wav");
  $.Primitives_printString("dartflash: supported audio types are: " + $.S(supportedTypes));
  return supportedTypes;
};

$.SoundTransform$ = function(volume, pan) {
  return new $.SoundTransform(volume, pan, 1, 0, 1, 0);
};

$.AudioElementSound$ = function() {
  var t1 = new $.AudioElementSound(null, null, null);
  t1.AudioElementSound$0();
  return t1;
};

$.AudioElementSound_load = function(url) {
  var t1, sound, audio, loadCompleter, t2, t3, t4;
  t1 = {};
  sound = $.AudioElementSound$();
  audio = sound._audio;
  loadCompleter = $._CompleterImpl$();
  t1.onCanPlayThroughSubscription_0 = null;
  t1.onErrorSubscription_1 = null;
  t2 = new $.AudioElementSound_load_onCanPlayThrough(t1, sound, loadCompleter);
  t3 = new $.AudioElementSound_load_onError(t1, loadCompleter);
  t4 = $.getInterceptor$x(audio);
  t1.onCanPlayThroughSubscription_0 = t4.get$onCanPlayThrough(audio).listen$1(t2);
  t1.onErrorSubscription_1 = t4.get$onError(audio).listen$1(t3);
  t4.src = $.Sound_adaptAudioUrl(url);
  t4.load$0(audio);
  return loadCompleter.future;
};

$.AudioElementSoundChannel$ = function(audioElementSound, loop, soundTransform) {
  var t1 = new $.AudioElementSoundChannel(null, null, null, null, null);
  t1.AudioElementSoundChannel$3(audioElementSound, loop, soundTransform);
  return t1;
};

$.MockSound$ = function() {
  return new $.MockSound();
};

$.MockSound_load = function(url) {
  return $.Future_Future$of(new $.MockSound_load_anon());
};

$.MockSoundChannel$ = function(mockSound, loop, soundTransform) {
  var t1 = new $.MockSoundChannel(null, null, null);
  t1.MockSoundChannel$3(mockSound, loop, soundTransform);
  return t1;
};

$.WebAudioApiSound$ = function() {
  var t1 = new $.WebAudioApiSound(null);
  t1.WebAudioApiSound$0();
  return t1;
};

$.WebAudioApiSound_load = function(url) {
  var sound, soundUrl, loadCompleter;
  sound = $.WebAudioApiSound$();
  soundUrl = $.Sound_adaptAudioUrl(url);
  loadCompleter = $._CompleterImpl$();
  $.HttpRequest_request(soundUrl, null, null, "arraybuffer", null, null).then$1(new $.WebAudioApiSound_load_anon(sound, loadCompleter)).catchError$1(new $.WebAudioApiSound_load_anon0(loadCompleter));
  return loadCompleter.future;
};

$.WebAudioApiSoundChannel$ = function(webAudioApiSound, loop, soundTransform) {
  var t1 = new $.WebAudioApiSoundChannel(null, null, null, null, null, null);
  t1.WebAudioApiSoundChannel$3(webAudioApiSound, loop, soundTransform);
  return t1;
};

$.TextField$ = function() {
  var t1 = new $.TextField("", 0, null, "none", "pixel", "dynamic", false, false, 0, false, 0, 0, 0, null, null, true, 100, 100, null, null, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, null, null, "", null, $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), $.Matrix$fromIdentity(), true, null);
  t1.TextField$0();
  return t1;
};

$.TextFormat$ = function(font, size, color, align, bold, indent, italic, leading, leftMargin, rightMargin, underline) {
  return new $.TextFormat(font, size, color, bold, italic, underline, align, leftMargin, rightMargin, indent, leading, 0, 0, false, false);
};

$.TextLineMetrics$ = function(x, width, height, ascent, descent, leading) {
  return new $.TextLineMetrics(ascent, descent, height, leading, width, x);
};

$.Mouse__getCssStyle = function(mouseCursor) {
  var cursor, style;
  cursor = $.$eq($.Mouse__customCursor, "auto") !== true ? $.Mouse__customCursor : mouseCursor;
  style = "auto";
  switch (cursor) {
    case "auto":
      style = "auto";
      break;
    case "arrow":
      style = "default";
      break;
    case "button":
      style = "pointer";
      break;
    case "hand":
      style = "move";
      break;
    case "ibeam":
      style = "text";
      break;
    case "wait":
      style = "wait";
      break;
  }
  return $.Mouse__isCursorHidden === true ? "none" : style;
};

$.Multitouch__initialize = function() {
  var ua, t1;
  if ($.$eq($.Multitouch__initialized, false) === true) {
    $.Multitouch__initialized = true;
    ua = window.navigator.userAgent;
    t1 = $.getInterceptor$asx(ua);
    if (t1.contains$1(ua, "iPhone") || t1.contains$1(ua, "iPad") || t1.contains$1(ua, "iPod")) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if (t1.contains$1(ua, "Android")) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if (t1.contains$1(ua, "IEMobile")) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
  }
};

$.ObjectPool$ = function(valueFactory, T) {
  var t1 = $.List_List($, T);
  $.setRuntimeTypeInfo(t1, [T]);
  t1 = new $.ObjectPool(t1, valueFactory, 0);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.ResourceManager$ = function() {
  var t1 = new $.ResourceManager(null);
  t1.ResourceManager$0();
  return t1;
};

$.ResourceManagerResource$ = function(kind, $name, url) {
  var t1 = new $.ResourceManagerResource(null, null, null, null, null, null);
  t1.ResourceManagerResource$3(kind, $name, url);
  return t1;
};

$.TextureAtlas$ = function() {
  var t1, t2;
  t1 = $.ImageElement_ImageElement(null, null, null);
  t2 = $.List_List($, $.TextureAtlasFrame);
  $.setRuntimeTypeInfo(t2, [$.TextureAtlasFrame]);
  return new $.TextureAtlas(t1, t2);
};

$.TextureAtlas_load = function(url, textureAtlasFormat) {
  var completer, textureAtlas, t1;
  completer = $._CompleterImpl$();
  textureAtlas = $.TextureAtlas$();
  switch (textureAtlasFormat) {
    case "json":
    case "jsonarray":
      t1 = new $.TextureAtlas_load_parseFrame(textureAtlas);
      $.HttpRequest_getString(url, null, null).then$1(new $.TextureAtlas_load_anon(url, completer, textureAtlas, t1)).catchError$1(new $.TextureAtlas_load_anon0(completer));
      break;
  }
  return completer.future;
};

$.TextureAtlasFrame$ = function($name, textureAtlas) {
  var t1 = new $.TextureAtlasFrame(null, null, null, null, null, null, null, null, null, null, null);
  t1.TextureAtlasFrame$2($name, textureAtlas);
  return t1;
};

$._color2rgb = function(color) {
  var t1, t2, t3;
  t1 = $.JSInt_methods.$shr(color, 16);
  t2 = $.JSInt_methods.$shr(color, 8);
  t3 = $.JSInt_methods.$shr(color, 0);
  return "rgb(" + $.S(t1 & 255) + "," + $.S(t2 & 255) + "," + $.S(t3 & 255) + ")";
};

$._color2rgba = function(color) {
  var t1, t2, t3, t4;
  t1 = $.JSInt_methods.$shr(color, 24);
  t2 = $.JSInt_methods.$shr(color, 16);
  t3 = $.JSInt_methods.$shr(color, 8);
  t4 = $.JSInt_methods.$shr(color, 0);
  return "rgba(" + $.S(t2 & 255) + "," + $.S(t3 & 255) + "," + $.S(t4 & 255) + "," + $.S((t1 & 255) / 255) + ")";
};

$._getFilenameWithoutExtension = function(filename) {
  return $.RegExp_RegExp("(.+?)(\\.[^.]*$|$)", false, false).firstMatch$1(filename).group$1(1);
};

$._replaceFilename = function(url, filename) {
  var path, t1;
  if (typeof filename !== "string")
    return $._replaceFilename$bailout(1, url, filename);
  path = $.RegExp_RegExp("^(.*/)?(?:$|(.+?)(?:(\\.[^.]*$)|$))", false, false).firstMatch$1(url).group$1(1);
  if (path == null)
    t1 = filename;
  else
    t1 = $.S(path) + filename;
  return t1;
};

$._replaceFilename$bailout = function(state0, url, filename) {
  var path = $.RegExp_RegExp("^(.*/)?(?:$|(.+?)(?:(\\.[^.]*$)|$))", false, false).firstMatch$1(url).group$1(1);
  return path == null ? filename : $.S(path) + $.S(filename);
};

$._checkLittleEndianSystem = function() {
  var canvas, t1;
  canvas = $.CanvasElement_CanvasElement(1, 1);
  t1 = $.getInterceptor$x(canvas);
  $.set$fillStyle$x(t1.get$context2d(canvas), "#000000");
  $.fillRect$4$x(t1.get$context2d(canvas), 0, 0, 1, 1);
  return $.$eq($.$index$asx($.get$data$x($.getImageData$4$x(t1.get$context2d(canvas), 0, 0, 1, 1)), 0), 0);
};

$._premultiplyAlpha = function(data) {
  var i, value, t1, t2, t3, t4;
  if (typeof data !== "object" || data === null || (data.constructor !== Array || !!data.immutable$list) && !data.$isJavaScriptIndexingBehavior())
    return $._premultiplyAlpha$bailout(1, data);
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; i <= data.length - 4; i += 4) {
      value = data[i + 3];
      t1 = i + 0;
      t2 = $.$tdiv$n($.$mul$n(data[t1], value), 255);
      t3 = data.length;
      if (t1 >= t3)
        throw $.ioore(t1);
      data[t1] = t2;
      t2 = i + 1;
      if (t2 >= t3)
        throw $.ioore(t2);
      t1 = $.$tdiv$n($.$mul$n(data[t2], value), 255);
      t4 = data.length;
      if (t2 >= t4)
        throw $.ioore(t2);
      data[t2] = t1;
      t1 = i + 2;
      if (t1 >= t4)
        throw $.ioore(t1);
      t2 = $.$tdiv$n($.$mul$n(data[t1], value), 255);
      if (t1 >= data.length)
        throw $.ioore(t1);
      data[t1] = t2;
    }
  else
    for (i = 0; i <= data.length - 4; i += 4) {
      value = data[i + 0];
      t1 = i + 1;
      t2 = $.$tdiv$n($.$mul$n(data[t1], value), 255);
      t3 = data.length;
      if (t1 >= t3)
        throw $.ioore(t1);
      data[t1] = t2;
      t2 = i + 2;
      if (t2 >= t3)
        throw $.ioore(t2);
      t1 = $.$tdiv$n($.$mul$n(data[t2], value), 255);
      t4 = data.length;
      if (t2 >= t4)
        throw $.ioore(t2);
      data[t2] = t1;
      t1 = i + 3;
      if (t1 >= t4)
        throw $.ioore(t1);
      t2 = $.$tdiv$n($.$mul$n(data[t1], value), 255);
      if (t1 >= data.length)
        throw $.ioore(t1);
      data[t1] = t2;
    }
};

$._premultiplyAlpha$bailout = function(state0, data) {
  var t1, i, value, t2;
  if ($.get$_isLittleEndianSystem() === true)
    for (t1 = $.getInterceptor$asx(data), i = 0; $.JSNumber_methods.$le(i, $.$sub$n(t1.get$length(data), 4)); i += 4) {
      value = t1.$index(data, i + 3);
      t2 = i + 0;
      t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), value), 255));
      t2 = i + 1;
      t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), value), 255));
      t2 = i + 2;
      t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), value), 255));
    }
  else
    for (t1 = $.getInterceptor$asx(data), i = 0; $.JSNumber_methods.$le(i, $.$sub$n(t1.get$length(data), 4)); i += 4) {
      value = t1.$index(data, i + 0);
      t2 = i + 1;
      t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), value), 255));
      t2 = i + 2;
      t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), value), 255));
      t2 = i + 3;
      t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), value), 255));
    }
};

$._unpremultiplyAlpha = function(data) {
  var i, alpha, t1, t2, t3, t4;
  if (typeof data !== "object" || data === null || (data.constructor !== Array || !!data.immutable$list) && !data.$isJavaScriptIndexingBehavior())
    return $._unpremultiplyAlpha$bailout(1, data);
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; i <= data.length - 4; i += 4) {
      alpha = data[i + 3];
      if ($.$gt$n(alpha, 0) === true) {
        t1 = i + 0;
        if (t1 >= data.length)
          throw $.ioore(t1);
        t2 = $.$tdiv$n($.$mul$n(data[t1], 255), alpha);
        t3 = data.length;
        if (t1 >= t3)
          throw $.ioore(t1);
        data[t1] = t2;
        t2 = i + 1;
        if (t2 >= t3)
          throw $.ioore(t2);
        t1 = $.$tdiv$n($.$mul$n(data[t2], 255), alpha);
        t4 = data.length;
        if (t2 >= t4)
          throw $.ioore(t2);
        data[t2] = t1;
        t1 = i + 2;
        if (t1 >= t4)
          throw $.ioore(t1);
        t2 = $.$tdiv$n($.$mul$n(data[t1], 255), alpha);
        if (t1 >= data.length)
          throw $.ioore(t1);
        data[t1] = t2;
      }
    }
  else
    for (i = 0; i <= data.length - 4; i += 4) {
      alpha = data[i + 0];
      if ($.$gt$n(alpha, 0) === true) {
        t1 = i + 1;
        if (t1 >= data.length)
          throw $.ioore(t1);
        t2 = $.$tdiv$n($.$mul$n(data[t1], 255), alpha);
        t3 = data.length;
        if (t1 >= t3)
          throw $.ioore(t1);
        data[t1] = t2;
        t2 = i + 2;
        if (t2 >= t3)
          throw $.ioore(t2);
        t1 = $.$tdiv$n($.$mul$n(data[t2], 255), alpha);
        t4 = data.length;
        if (t2 >= t4)
          throw $.ioore(t2);
        data[t2] = t1;
        t1 = i + 3;
        if (t1 >= t4)
          throw $.ioore(t1);
        t2 = $.$tdiv$n($.$mul$n(data[t1], 255), alpha);
        if (t1 >= data.length)
          throw $.ioore(t1);
        data[t1] = t2;
      }
    }
};

$._unpremultiplyAlpha$bailout = function(state0, data) {
  var t1, i, alpha, t2;
  if ($.get$_isLittleEndianSystem() === true)
    for (t1 = $.getInterceptor$asx(data), i = 0; $.JSNumber_methods.$le(i, $.$sub$n(t1.get$length(data), 4)); i += 4) {
      alpha = t1.$index(data, i + 3);
      if ($.$gt$n(alpha, 0) === true) {
        t2 = i + 0;
        t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), 255), alpha));
        t2 = i + 1;
        t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), 255), alpha));
        t2 = i + 2;
        t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), 255), alpha));
      }
    }
  else
    for (t1 = $.getInterceptor$asx(data), i = 0; $.JSNumber_methods.$le(i, $.$sub$n(t1.get$length(data), 4)); i += 4) {
      alpha = t1.$index(data, i + 0);
      if ($.$gt$n(alpha, 0) === true) {
        t2 = i + 1;
        t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), 255), alpha));
        t2 = i + 2;
        t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), 255), alpha));
        t2 = i + 3;
        t1.$indexSet(data, t2, $.$tdiv$n($.$mul$n(t1.$index(data, t2), 255), alpha));
      }
    }
};

$._getBoundsTransformedHelper = function(matrix, width, height, returnRectangle) {
  var x2, y2, x3, y3, x4, y4, left, $top, right, bottom, t1;
  width = $.toDouble$0$n(width);
  height = $.toDouble$0$n(height);
  x2 = width * matrix.get$a();
  y2 = width * matrix.get$b();
  x3 = width * matrix.get$a() + height * matrix.get$c();
  y3 = width * matrix.get$b() + height * matrix.get$d();
  x4 = height * matrix.get$c();
  y4 = height * matrix.get$d();
  left = 0 > x2 ? x2 : 0;
  if (left > x3)
    left = x3;
  if (left > x4)
    left = x4;
  $top = 0 > y2 ? y2 : 0;
  if ($top > y3)
    $top = y3;
  if ($top > y4)
    $top = y4;
  right = 0 < x2 ? x2 : 0;
  if (right < x3)
    right = x3;
  if (right < x4)
    right = x4;
  bottom = 0 < y2 ? y2 : 0;
  if (bottom < y3)
    bottom = y3;
  if (bottom < y4)
    bottom = y4;
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  t1 = $.getInterceptor$x(returnRectangle);
  t1.set$x(returnRectangle, matrix.get$tx() + left);
  t1.set$y(returnRectangle, matrix.get$ty() + $top);
  t1.set$width(returnRectangle, right - left);
  t1.set$height(returnRectangle, bottom - $top);
  return returnRectangle;
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$.Element__determineMouseWheelEventType.call$1 = $.Element__determineMouseWheelEventType;
$.Element__determineMouseWheelEventType.$name = "Element__determineMouseWheelEventType";
$.TransitionFunction_linear.call$1 = $.TransitionFunction_linear;
$.TransitionFunction_linear.$name = "TransitionFunction_linear";
$.TransitionFunction_sine.call$1 = $.TransitionFunction_sine;
$.TransitionFunction_sine.$name = "TransitionFunction_sine";
$.TransitionFunction_cosine.call$1 = $.TransitionFunction_cosine;
$.TransitionFunction_cosine.$name = "TransitionFunction_cosine";
$.TransitionFunction_random.call$1 = $.TransitionFunction_random;
$.TransitionFunction_random.$name = "TransitionFunction_random";
$.TransitionFunction_easeInQuadratic.call$1 = $.TransitionFunction_easeInQuadratic;
$.TransitionFunction_easeInQuadratic.$name = "TransitionFunction_easeInQuadratic";
$.TransitionFunction_easeOutQuadratic.call$1 = $.TransitionFunction_easeOutQuadratic;
$.TransitionFunction_easeOutQuadratic.$name = "TransitionFunction_easeOutQuadratic";
$.TransitionFunction_easeInOutQuadratic.call$1 = $.TransitionFunction_easeInOutQuadratic;
$.TransitionFunction_easeInOutQuadratic.$name = "TransitionFunction_easeInOutQuadratic";
$.TransitionFunction_easeOutInQuadratic.call$1 = $.TransitionFunction_easeOutInQuadratic;
$.TransitionFunction_easeOutInQuadratic.$name = "TransitionFunction_easeOutInQuadratic";
$.TransitionFunction_easeInCubic.call$1 = $.TransitionFunction_easeInCubic;
$.TransitionFunction_easeInCubic.$name = "TransitionFunction_easeInCubic";
$.TransitionFunction_easeOutCubic.call$1 = $.TransitionFunction_easeOutCubic;
$.TransitionFunction_easeOutCubic.$name = "TransitionFunction_easeOutCubic";
$.TransitionFunction_easeInOutCubic.call$1 = $.TransitionFunction_easeInOutCubic;
$.TransitionFunction_easeInOutCubic.$name = "TransitionFunction_easeInOutCubic";
$.TransitionFunction_easeOutInCubic.call$1 = $.TransitionFunction_easeOutInCubic;
$.TransitionFunction_easeOutInCubic.$name = "TransitionFunction_easeOutInCubic";
$.TransitionFunction_easeInQuartic.call$1 = $.TransitionFunction_easeInQuartic;
$.TransitionFunction_easeInQuartic.$name = "TransitionFunction_easeInQuartic";
$.TransitionFunction_easeOutQuartic.call$1 = $.TransitionFunction_easeOutQuartic;
$.TransitionFunction_easeOutQuartic.$name = "TransitionFunction_easeOutQuartic";
$.TransitionFunction_easeInOutQuartic.call$1 = $.TransitionFunction_easeInOutQuartic;
$.TransitionFunction_easeInOutQuartic.$name = "TransitionFunction_easeInOutQuartic";
$.TransitionFunction_easeOutInQuartic.call$1 = $.TransitionFunction_easeOutInQuartic;
$.TransitionFunction_easeOutInQuartic.$name = "TransitionFunction_easeOutInQuartic";
$.TransitionFunction_easeInQuintic.call$1 = $.TransitionFunction_easeInQuintic;
$.TransitionFunction_easeInQuintic.$name = "TransitionFunction_easeInQuintic";
$.TransitionFunction_easeOutQuintic.call$1 = $.TransitionFunction_easeOutQuintic;
$.TransitionFunction_easeOutQuintic.$name = "TransitionFunction_easeOutQuintic";
$.TransitionFunction_easeInOutQuintic.call$1 = $.TransitionFunction_easeInOutQuintic;
$.TransitionFunction_easeInOutQuintic.$name = "TransitionFunction_easeInOutQuintic";
$.TransitionFunction_easeOutInQuintic.call$1 = $.TransitionFunction_easeOutInQuintic;
$.TransitionFunction_easeOutInQuintic.$name = "TransitionFunction_easeOutInQuintic";
$.TransitionFunction_easeInCircular.call$1 = $.TransitionFunction_easeInCircular;
$.TransitionFunction_easeInCircular.$name = "TransitionFunction_easeInCircular";
$.TransitionFunction_easeOutCircular.call$1 = $.TransitionFunction_easeOutCircular;
$.TransitionFunction_easeOutCircular.$name = "TransitionFunction_easeOutCircular";
$.TransitionFunction_easeInOutCircular.call$1 = $.TransitionFunction_easeInOutCircular;
$.TransitionFunction_easeInOutCircular.$name = "TransitionFunction_easeInOutCircular";
$.TransitionFunction_easeOutInCircular.call$1 = $.TransitionFunction_easeOutInCircular;
$.TransitionFunction_easeOutInCircular.$name = "TransitionFunction_easeOutInCircular";
$.TransitionFunction_easeInSine.call$1 = $.TransitionFunction_easeInSine;
$.TransitionFunction_easeInSine.$name = "TransitionFunction_easeInSine";
$.TransitionFunction_easeOutSine.call$1 = $.TransitionFunction_easeOutSine;
$.TransitionFunction_easeOutSine.$name = "TransitionFunction_easeOutSine";
$.TransitionFunction_easeInOutSine.call$1 = $.TransitionFunction_easeInOutSine;
$.TransitionFunction_easeInOutSine.$name = "TransitionFunction_easeInOutSine";
$.TransitionFunction_easeOutInSine.call$1 = $.TransitionFunction_easeOutInSine;
$.TransitionFunction_easeOutInSine.$name = "TransitionFunction_easeOutInSine";
$.TransitionFunction_easeInExponential.call$1 = $.TransitionFunction_easeInExponential;
$.TransitionFunction_easeInExponential.$name = "TransitionFunction_easeInExponential";
$.TransitionFunction_easeOutExponential.call$1 = $.TransitionFunction_easeOutExponential;
$.TransitionFunction_easeOutExponential.$name = "TransitionFunction_easeOutExponential";
$.TransitionFunction_easeInOutExponential.call$1 = $.TransitionFunction_easeInOutExponential;
$.TransitionFunction_easeInOutExponential.$name = "TransitionFunction_easeInOutExponential";
$.TransitionFunction_easeOutInExponential.call$1 = $.TransitionFunction_easeOutInExponential;
$.TransitionFunction_easeOutInExponential.$name = "TransitionFunction_easeOutInExponential";
$.TransitionFunction_easeInBack.call$1 = $.TransitionFunction_easeInBack;
$.TransitionFunction_easeInBack.$name = "TransitionFunction_easeInBack";
$.TransitionFunction_easeOutBack.call$1 = $.TransitionFunction_easeOutBack;
$.TransitionFunction_easeOutBack.$name = "TransitionFunction_easeOutBack";
$.TransitionFunction_easeInOutBack.call$1 = $.TransitionFunction_easeInOutBack;
$.TransitionFunction_easeInOutBack.$name = "TransitionFunction_easeInOutBack";
$.TransitionFunction_easeOutInBack.call$1 = $.TransitionFunction_easeOutInBack;
$.TransitionFunction_easeOutInBack.$name = "TransitionFunction_easeOutInBack";
$.TransitionFunction_easeInElastic.call$1 = $.TransitionFunction_easeInElastic;
$.TransitionFunction_easeInElastic.$name = "TransitionFunction_easeInElastic";
$.TransitionFunction_easeOutElastic.call$1 = $.TransitionFunction_easeOutElastic;
$.TransitionFunction_easeOutElastic.$name = "TransitionFunction_easeOutElastic";
$.TransitionFunction_easeInOutElastic.call$1 = $.TransitionFunction_easeInOutElastic;
$.TransitionFunction_easeInOutElastic.$name = "TransitionFunction_easeInOutElastic";
$.TransitionFunction_easeOutInElastic.call$1 = $.TransitionFunction_easeOutInElastic;
$.TransitionFunction_easeOutInElastic.$name = "TransitionFunction_easeOutInElastic";
$.TransitionFunction_easeInBounce.call$1 = $.TransitionFunction_easeInBounce;
$.TransitionFunction_easeInBounce.$name = "TransitionFunction_easeInBounce";
$.TransitionFunction_easeOutBounce.call$1 = $.TransitionFunction_easeOutBounce;
$.TransitionFunction_easeOutBounce.$name = "TransitionFunction_easeOutBounce";
$.TransitionFunction_easeInOutBounce.call$1 = $.TransitionFunction_easeInOutBounce;
$.TransitionFunction_easeInOutBounce.$name = "TransitionFunction_easeInOutBounce";
$.TransitionFunction_easeOutInBounce.call$1 = $.TransitionFunction_easeOutInBounce;
$.TransitionFunction_easeOutInBounce.$name = "TransitionFunction_easeOutInBounce";
$.num = {builtin$cls: "num"};
$.AudioElement = {builtin$cls: "AudioElement"};
$.Node = {builtin$cls: "Node"};
$.Match = {builtin$cls: "Match"};
$.Element = {builtin$cls: "Element"};
$.String = {builtin$cls: "String"};
$.$int = {builtin$cls: "$int"};
$.ReceivePort = {builtin$cls: "ReceivePort"};
$.TextTrack = {builtin$cls: "TextTrack"};
$.BitmapDrawable = {builtin$cls: "BitmapDrawable"};
$.Touch = {builtin$cls: "Touch"};
$.$double = {builtin$cls: "$double"};
$.Animatable = {builtin$cls: "Animatable"};
$.HttpRequest = {builtin$cls: "HttpRequest"};
$._ManagerStub = {builtin$cls: "_ManagerStub"};
$.List = {builtin$cls: "List"};
$.Stage.$isDisplayObject = true;
$._FlumpMovieLayer.$isDisplayObject = true;
$.DisplayObject.$isDisplayObject = true;
$.PianoKey.$isDisplayObject = true;
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT5 = Isolate.makeConstantList([]);
$.CONSTANT33 = new $.Object();
$.CONSTANT23 = new $.EventStreamProvider("load");
$.CONSTANT12 = new $.EventStreamProvider("touchmove");
$.CONSTANT13 = new $.EventStreamProvider("touchend");
$.CONSTANT24 = new $.EventStreamProvider("progress");
$.CONSTANT7 = new $.EventStreamProvider("keyup");
$.CONSTANT31 = new $.EventStreamProvider0("mouseDown");
$.CONSTANT27 = new $.EventStreamProvider("click");
$.CONSTANT4 = new $._LinkedHashTableHeadMarker();
$.JSNull_methods = $.JSNull.prototype;
$.JSNumber_methods = $.JSNumber.prototype;
$.JSString_methods = $.JSString.prototype;
$.CONSTANT20 = new $.EventStreamProvider("mousedown");
$.CONSTANT9 = new $.EventStreamProvider("touchcancel");
$.CONSTANT11 = new $.EventStreamProvider("touchenter");
$.CONSTANT28 = new $.EventStreamProvider0("mouseOut");
$.CONSTANT8 = new $.EventStreamProvider("keydown");
$.CONSTANT26 = new $.EventStreamProvider("ended");
$.CONSTANT10 = new $.EventStreamProvider("touchleave");
$.CONSTANT3 = new $.Duration(0);
$.CONSTANT22 = new $.EventStreamProvider("error");
$.CONSTANT19 = new $.EventStreamProvider("mouseup");
$.CONSTANT = new $.NullThrownError();
$.JSDouble_methods = $.JSDouble.prototype;
$.CONSTANT30 = new $.EventStreamProvider0("mouseOver");
$.CONSTANT17 = new $.EventStreamProvider("mouseout");
$.CONSTANT29 = new $.EventStreamProvider0("mouseUp");
$.CONSTANT32 = new $.EventStreamProvider0("enterFrame");
$.CONSTANT21 = new $._Random();
$.CONSTANT18 = new $.EventStreamProvider("mousemove");
$.CONSTANT14 = new $.EventStreamProvider("touchstart");
$.CONSTANT6 = new $.CloseToken();
$.CONSTANT2 = new $.EventStreamProvider("keypress");
$.JSInt_methods = $.JSInt.prototype;
$.CONSTANT16 = new $._CustomEventStreamProvider($.Element__determineMouseWheelEventType);
$.CONSTANT15 = new $._DelayedDone();
$.JSArray_methods = $.JSArray.prototype;
$.CONSTANT25 = new $.EventStreamProvider("canplaythrough");
$.CONSTANT0 = new $._DeadEntry();
$.CONSTANT1 = new $._NullKey();
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$._getTypeNameOf = null;
$.Device__isOpera = null;
$.Device__isWebKit = null;
$.stage = null;
$.renderLoop = null;
$.juggler = null;
$.resourceManager = null;
$.TransitionFunction__random = null;
$._Touch__globalTouchPointID = 0;
$.Mouse__customCursor = "auto";
$.Mouse__isCursorHidden = false;
$.Multitouch__initialized = false;
$.Multitouch__supportsTouchEvents = false;
$.Multitouch__maxTouchPoints = 0;
$.Multitouch__inputMode = "none";
$.$$dom_addEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_addEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_createElement$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).$$dom_createElement$1(receiver, a0);
};
$.$$dom_getAttribute$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).$$dom_getAttribute$1(receiver, a0);
};
$.$$dom_hasAttribute$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).$$dom_hasAttribute$1(receiver, a0);
};
$.$$dom_removeChild$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).$$dom_removeChild$1(receiver, a0);
};
$.$$dom_removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_removeEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_replaceChild$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).$$dom_replaceChild$2(receiver, a0, a1);
};
$.$$dom_setAttribute$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).$$dom_setAttribute$2(receiver, a0, a1);
};
$.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return $.getInterceptor$ns(receiver).$add(receiver, a0);
};
$.$and$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver & a0) >>> 0;
  return $.getInterceptor$n(receiver).$and(receiver, a0);
};
$.$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return $.getInterceptor$n(receiver).$div(receiver, a0);
};
$.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (!(typeof receiver == "object"))
    return !(a0 == null) && receiver === a0;
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string")
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$asx(receiver).$index(receiver, a0);
};
$.$indexSet$ax = function(receiver, a0, a1) {
  if (receiver.constructor == Array && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return $.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
$.$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return $.getInterceptor$n(receiver).$le(receiver, a0);
};
$.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return $.getInterceptor$n(receiver).$lt(receiver, a0);
};
$.$mod$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$mod(receiver, a0);
};
$.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return $.getInterceptor$n(receiver).$mul(receiver, a0);
};
$.$or$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver | a0) >>> 0;
  return $.getInterceptor$n(receiver).$or(receiver, a0);
};
$.$shl$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$shl(receiver, a0);
};
$.$shr$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$shr(receiver, a0);
};
$.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.$tdiv$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$tdiv(receiver, a0);
};
$.$xor$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver ^ a0) >>> 0;
  return $.getInterceptor$n(receiver).$xor(receiver, a0);
};
$.abs$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).abs$0(receiver);
};
$.add$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).add$1(receiver, a0);
};
$.addAll$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).addAll$1(receiver, a0);
};
$.allMatches$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).allMatches$1(receiver, a0);
};
$.append$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).append$1(receiver, a0);
};
$.ceil$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).ceil$0(receiver);
};
$.clear$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).clear$0(receiver);
};
$.clearRect$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).clearRect$4(receiver, a0, a1, a2, a3);
};
$.clone$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).clone$1(receiver, a0);
};
$.compareTo$1$ns = function(receiver, a0) {
  return $.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
};
$.connect$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).connect$3(receiver, a0, a1, a2);
};
$.contains$2$asx = function(receiver, a0, a1) {
  return $.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
};
$.createDocumentFragment$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).createDocumentFragment$0(receiver);
};
$.decodeAudioData$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).decodeAudioData$3(receiver, a0, a1, a2);
};
$.dispatchEvent$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).dispatchEvent$1(receiver, a0);
};
$.drawImage$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).drawImage$3(receiver, a0, a1, a2);
};
$.drawImageScaledFromSource$9$x = function(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8) {
  return $.getInterceptor$x(receiver).drawImageScaledFromSource$9(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8);
};
$.elementAt$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
};
$.endsWith$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).endsWith$1(receiver, a0);
};
$.fillRect$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).fillRect$4(receiver, a0, a1, a2, a3);
};
$.fillText$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).fillText$3(receiver, a0, a1, a2);
};
$.focus$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).focus$0(receiver);
};
$.forEach$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
$.get$$$dom_body$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$$$dom_body(receiver);
};
$.get$$$dom_children$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$$$dom_children(receiver);
};
$.get$attributes$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$attributes(receiver);
};
$.get$body$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$body(receiver);
};
$.get$children$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$children(receiver);
};
$.get$context2d$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$context2d(receiver);
};
$.get$data$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$data(receiver);
};
$.get$duration$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$duration(receiver);
};
$.get$ended$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$ended(receiver);
};
$.get$error$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$error(receiver);
};
$.get$hashCode$ = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$height$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$height(receiver);
};
$.get$id$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$id(receiver);
};
$.get$index$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$index(receiver);
};
$.get$isEven$JSInt = function(receiver) {
  return $.getInterceptor$JSInt(receiver).get$isEven(receiver);
};
$.get$isNaN$n = function(receiver) {
  return $.getInterceptor$n(receiver).get$isNaN(receiver);
};
$.get$iterator$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).get$iterator(receiver);
};
$.get$length$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$length(receiver);
};
$.get$location$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$location(receiver);
};
$.get$name$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$name(receiver);
};
$.get$navigator$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$navigator(receiver);
};
$.get$nodes$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$nodes(receiver);
};
$.get$onClick$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onClick(receiver);
};
$.get$onEnded$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onEnded(receiver);
};
$.get$onKeyDown$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onKeyDown(receiver);
};
$.get$onKeyPress$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onKeyPress(receiver);
};
$.get$onKeyUp$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onKeyUp(receiver);
};
$.get$onMouseDown$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onMouseDown(receiver);
};
$.get$onMouseMove$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onMouseMove(receiver);
};
$.get$onMouseOut$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onMouseOut(receiver);
};
$.get$onMouseUp$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onMouseUp(receiver);
};
$.get$onMouseWheel$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onMouseWheel(receiver);
};
$.get$onTouchCancel$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onTouchCancel(receiver);
};
$.get$onTouchEnd$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onTouchEnd(receiver);
};
$.get$onTouchEnter$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onTouchEnter(receiver);
};
$.get$onTouchLeave$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onTouchLeave(receiver);
};
$.get$onTouchMove$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onTouchMove(receiver);
};
$.get$onTouchStart$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onTouchStart(receiver);
};
$.get$pathname$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$pathname(receiver);
};
$.get$response$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$response(receiver);
};
$.get$responseText$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$responseText(receiver);
};
$.get$stream$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$stream(receiver);
};
$.get$target$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$target(receiver);
};
$.get$topLeft$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$topLeft(receiver);
};
$.get$value$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$value(receiver);
};
$.get$width$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$width(receiver);
};
$.get$x$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$x(receiver);
};
$.get$y$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$y(receiver);
};
$.getBoundingClientRect$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).getBoundingClientRect$0(receiver);
};
$.getImageData$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).getImageData$4(receiver, a0, a1, a2, a3);
};
$.indexOf$1$asx = function(receiver, a0) {
  return $.getInterceptor$asx(receiver).indexOf$1(receiver, a0);
};
$.indexOf$2$asx = function(receiver, a0, a1) {
  return $.getInterceptor$asx(receiver).indexOf$2(receiver, a0, a1);
};
$.insertBefore$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).insertBefore$2(receiver, a0, a1);
};
$.load$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).load$0(receiver);
};
$.measureText$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).measureText$1(receiver, a0);
};
$.pause$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).pause$0(receiver);
};
$.play$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).play$0(receiver);
};
$.postMessage$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).postMessage$1(receiver, a0);
};
$.putImageData$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).putImageData$3(receiver, a0, a1, a2);
};
$.query$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).query$1(receiver, a0);
};
$.remove$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).remove$0(receiver);
};
$.remove$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).remove$1(receiver, a0);
};
$.removeAt$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).removeAt$1(receiver, a0);
};
$.replaceAll$2$s = function(receiver, a0, a1) {
  return $.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
};
$.replaceWith$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
};
$.requestAnimationFrame$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).requestAnimationFrame$1(receiver, a0);
};
$.round$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).round$0(receiver);
};
$.send$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).send$1(receiver, a0);
};
$.send$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).send$2(receiver, a0, a1);
};
$.set$cursor$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$cursor(receiver, value);
};
$.set$fillStyle$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$fillStyle(receiver, value);
};
$.set$font$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$font(receiver, value);
};
$.set$height$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$height(receiver, value);
};
$.set$id$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$id(receiver, value);
};
$.set$innerHtml$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$innerHtml(receiver, value);
};
$.set$lineWidth$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$lineWidth(receiver, value);
};
$.set$loop$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$loop(receiver, value);
};
$.set$position$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$position(receiver, value);
};
$.set$src$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$src(receiver, value);
};
$.set$strokeStyle$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$strokeStyle(receiver, value);
};
$.set$textAlign$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$textAlign(receiver, value);
};
$.set$textBaseline$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$textBaseline(receiver, value);
};
$.set$top$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$top(receiver, value);
};
$.set$volume$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$volume(receiver, value);
};
$.set$width$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$width(receiver, value);
};
$.set$zIndex$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$zIndex(receiver, value);
};
$.setTransform$6$x = function(receiver, a0, a1, a2, a3, a4, a5) {
  return $.getInterceptor$x(receiver).setTransform$6(receiver, a0, a1, a2, a3, a4, a5);
};
$.split$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).split$1(receiver, a0);
};
$.start$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).start$1(receiver, a0);
};
$.stop$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).stop$0(receiver);
};
$.stop$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).stop$1(receiver, a0);
};
$.strokeRect$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).strokeRect$4(receiver, a0, a1, a2, a3);
};
$.sublist$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).sublist$1(receiver, a0);
};
$.sublist$2$ax = function(receiver, a0, a1) {
  return $.getInterceptor$ax(receiver).sublist$2(receiver, a0, a1);
};
$.toDouble$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).toDouble$0(receiver);
};
$.toInt$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).toInt$0(receiver);
};
$.toList$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).toList$0(receiver);
};
$.toLowerCase$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).toLowerCase$0(receiver);
};
$.toString$0 = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.trim$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).trim$0(receiver);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return receiver;
};
$.getInterceptor$JSInt = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSNumber.prototype;
  }
  if (receiver == null)
    return void 0;
  return receiver;
};
$.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return receiver;
};
$.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return receiver;
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return receiver;
};
$.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return receiver;
};
$.getInterceptor$nx = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return receiver;
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return receiver;
};
$.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return void 0;
  return receiver;
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "_runCallbacks", "Timer__runCallbacks", "get$Timer__runCallbacks", function() {
  return [];
});
Isolate.$lazy($, "_isLittleEndianSystem", "_isLittleEndianSystem", "get$_isLittleEndianSystem", function() {
  return $._checkLittleEndianSystem();
});
Isolate.$lazy($, "_displayObjectListPool", "_displayObjectListPool", "get$_displayObjectListPool", function() {
  return $.ObjectPool$(new $.anon(), [$.List, $.DisplayObject]);
});
Isolate.$lazy($, "enterFrame", "_EventStreamIndex_enterFrame", "get$_EventStreamIndex_enterFrame", function() {
  return $._EventStreamIndex$();
});
Isolate.$lazy($, "engine", "SoundMixer_engine", "get$SoundMixer_engine", function() {
  return $.SoundMixer__getEngine();
});
Isolate.$lazy($, "_audioContext", "SoundMixer__audioContext", "get$SoundMixer__audioContext", function() {
  return $.SoundMixer__getAudioContext();
});
Isolate.$lazy($, "_supportedTypes", "SoundMixer__supportedTypes", "get$SoundMixer__supportedTypes", function() {
  return $.SoundMixer__getSupportedTypes();
});
Isolate.$lazy($, "_mouseCursorChangedEvent", "Mouse__mouseCursorChangedEvent", "get$Mouse__mouseCursorChangedEvent", function() {
  return $.StreamController$(null, null, $.String);
});
Isolate.$lazy($, "_onMouseCursorChanged", "Mouse__onMouseCursorChanged", "get$Mouse__onMouseCursorChanged", function() {
  return $.get$stream$x($.get$Mouse__mouseCursorChangedEvent()).asBroadcastStream$0();
});
Isolate.$lazy($, "_inputModeChangedEvent", "Multitouch__inputModeChangedEvent", "get$Multitouch__inputModeChangedEvent", function() {
  return $.StreamController$(null, null, $.String);
});
Isolate.$lazy($, "_onInputModeChanged", "Multitouch__onInputModeChanged", "get$Multitouch__onInputModeChanged", function() {
  return $.get$stream$x($.get$Multitouch__inputModeChangedEvent()).asBroadcastStream$0();
});
var $ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
// Native classes
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  },
  $isCollection: function() {
    return false;
  },
  $asCollection: function() {
    return null;
  },
  $isList: function() {
    return false;
  },
  $asList: function() {
    return null;
  },
  $isElement: function() {
    return false;
  },
  $asElement: function() {
    return null;
  },
  $isImageData: function() {
    return false;
  },
  $asImageData: function() {
    return null;
  },
  $isLocation: function() {
    return false;
  },
  $asLocation: function() {
    return null;
  },
  $isNode: function() {
    return false;
  },
  $asNode: function() {
    return null;
  },
  $isRect: function() {
    return false;
  },
  $asRect: function() {
    return null;
  },
  toString$0: function(_) {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function(_) {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(_, a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function(receiver) {
    return receiver.id;
  },
  set$id: function(receiver, i) {
    receiver.id = i;
  },
  set$onmessage: function(receiver, f) {
    receiver.onmessage = f;
  },
  postMessage$1: function(receiver, msg) {
    receiver.postMessage(msg);
  },
  terminate$0: function(receiver) {
    receiver.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "name=,pathname=,target%,type=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("HTMLAreaElement", {"": "pathname=,target%"});

$.$defineNativeClass("HTMLBaseElement", {"": "target%"});

$.$defineNativeClass("Blob", {"": "type="});

$.$defineNativeClass("HTMLBodyElement", {
  get$onError: function(receiver) {
    return $.CONSTANT22.forTarget$1(receiver);
  },
  get$onLoad: function(receiver) {
    return $.CONSTANT23.forTarget$1(receiver);
  }
});

$.$defineNativeClass("HTMLButtonElement", {"": "name=,type=,value="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height%,width%",
  getContext$2: function(receiver, contextId, attrs) {
    var t1 = $ === attrs;
    if (t1)
      attrs = null;
    if (!t1)
      return this._getContext_1$2(receiver, contextId, $.convertDartToNative_Dictionary(attrs));
    return this._getContext_2$1(receiver, contextId);
  },
  getContext$1: function($receiver, contextId) {
    return this.getContext$2($receiver, contextId, $);
  },
  _getContext_1$2: function(receiver, contextId, attrs) {
    return receiver.getContext(contextId,attrs);
  },
  _getContext_2$1: function(receiver, contextId) {
    return receiver.getContext(contextId);
  },
  get$context2d: function(receiver) {
    return this.getContext$1(receiver, "2d");
  }
});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle},font},globalAlpha},lineCap},lineJoin},lineWidth},strokeStyle},textAlign},textBaseline}",
  $$dom_arc$6: function(receiver, x, y, radius, startAngle, endAngle, anticlockwise) {
    return receiver.arc(x,y,radius,startAngle,endAngle,anticlockwise);
  },
  arcTo$5: function(receiver, x1, y1, x2, y2, radius) {
    return receiver.arcTo(x1,y1,x2,y2,radius);
  },
  beginPath$0: function(receiver) {
    return receiver.beginPath();
  },
  bezierCurveTo$6: function(receiver, cp1x, cp1y, cp2x, cp2y, x, y) {
    return receiver.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
  },
  clearRect$4: function(receiver, x, y, width, height) {
    return receiver.clearRect(x,y,width,height);
  },
  clip$1: function(receiver, winding) {
    return receiver.clip(winding);
  },
  clip$0: function($receiver) {
    return $receiver.clip();
  },
  closePath$0: function(receiver) {
    return receiver.closePath();
  },
  createImageData$2: function(receiver, sw, sh) {
    return $._convertNativeToDart_ImageData(this._createImageData_1$2(receiver, sw, sh));
  },
  _createImageData_1$2: function(receiver, sw, sh) {
    return receiver.createImageData(sw,sh);
  },
  fill$1: function(receiver, winding) {
    return receiver.fill(winding);
  },
  fill$0: function($receiver) {
    return $receiver.fill();
  },
  fillRect$4: function(receiver, x, y, width, height) {
    return receiver.fillRect(x,y,width,height);
  },
  fillText$4: function(receiver, text, x, y, maxWidth) {
    return receiver.fillText(text,x,y,maxWidth);
  },
  fillText$3: function($receiver, text, x, y) {
    return $receiver.fillText(text, x, y);
  },
  getImageData$4: function(receiver, sx, sy, sw, sh) {
    return $._convertNativeToDart_ImageData(this._getImageData_1$4(receiver, sx, sy, sw, sh));
  },
  _getImageData_1$4: function(receiver, sx, sy, sw, sh) {
    return receiver.getImageData(sx,sy,sw,sh);
  },
  lineTo$2: function(receiver, x, y) {
    return receiver.lineTo(x,y);
  },
  measureText$1: function(receiver, text) {
    return receiver.measureText(text);
  },
  moveTo$2: function(receiver, x, y) {
    return receiver.moveTo(x,y);
  },
  putImageData$7: function(receiver, imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
    var t1, t2, t3, t4;
    t1 = $ === dirtyX;
    if (t1)
      dirtyX = null;
    t2 = $ === dirtyY;
    if (t2)
      dirtyY = null;
    t3 = $ === dirtyWidth;
    if (t3)
      dirtyWidth = null;
    t4 = $ === dirtyHeight;
    if (t4)
      dirtyHeight = null;
    if (t1 && t2 && t3 && t4) {
      this._putImageData_1$3(receiver, $._convertDartToNative_ImageData(imagedata), dx, dy);
      return;
    }
    this._putImageData_2$7(receiver, $._convertDartToNative_ImageData(imagedata), dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight);
    return;
  },
  putImageData$3: function($receiver, imagedata, dx, dy) {
    return this.putImageData$7($receiver, imagedata, dx, dy, $, $, $, $);
  },
  _putImageData_1$3: function(receiver, imagedata, dx, dy) {
    return receiver.putImageData(imagedata,dx,dy);
  },
  _putImageData_2$7: function(receiver, imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
    return receiver.putImageData(imagedata,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight);
  },
  quadraticCurveTo$4: function(receiver, cpx, cpy, x, y) {
    return receiver.quadraticCurveTo(cpx,cpy,x,y);
  },
  rect$4: function(receiver, x, y, width, height) {
    return receiver.rect(x,y,width,height);
  },
  restore$0: function(receiver) {
    return receiver.restore();
  },
  save$0: function(receiver) {
    return receiver.save();
  },
  setTransform$6: function(receiver, m11, m12, m21, m22, dx, dy) {
    return receiver.setTransform(m11,m12,m21,m22,dx,dy);
  },
  stroke$0: function(receiver) {
    return receiver.stroke();
  },
  strokeRect$5: function(receiver, x, y, width, height, lineWidth) {
    return receiver.strokeRect(x,y,width,height,lineWidth);
  },
  strokeRect$4: function($receiver, x, y, width, height) {
    return $receiver.strokeRect(x, y, width, height);
  },
  transform$6: function(receiver, m11, m12, m21, m22, dx, dy) {
    return receiver.transform(m11,m12,m21,m22,dx,dy);
  },
  arc$6: function(receiver, x, y, radius, startAngle, endAngle, anticlockwise) {
    this.$$dom_arc$6(receiver, x, y, radius, startAngle, endAngle, anticlockwise);
  },
  drawImage$3: function(receiver, source, destX, destY) {
    return receiver.drawImage(source,destX,destY);
  },
  drawImageScaledFromSource$9: function(receiver, source, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight) {
    return receiver.drawImage(source,sourceX,sourceY,sourceWidth,sourceHeight,destX,destY,destWidth,destHeight);
  }
});

$.$defineNativeClass("CharacterData", {"": "data=,length="});

$.$defineNativeClass("CompositionEvent", {"": "data="});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length=",
  _getPropertyValue$1: function(receiver, propertyName) {
    return receiver.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(receiver, propertyName) {
    var propValue = this._getPropertyValue$1(receiver, propertyName);
    return propValue != null ? propValue : "";
  },
  setProperty$3: function(receiver, propertyName, value, priority) {
    var exception;
    try {
      receiver.setProperty(propertyName, value, priority);
      if (!!receiver.setAttribute)
        receiver.setAttribute(propertyName, value);
    } catch (exception) {
      $.unwrapException(exception);
    }

  },
  get$bottom: function(receiver) {
    return this.getPropertyValue$1(receiver, "bottom");
  },
  set$cursor: function(receiver, value) {
    this.setProperty$3(receiver, "cursor", value, "");
  },
  get$height: function(receiver) {
    return this.getPropertyValue$1(receiver, "height");
  },
  set$height: function(receiver, value) {
    this.setProperty$3(receiver, "height", value, "");
  },
  get$left: function(receiver) {
    return this.getPropertyValue$1(receiver, "left");
  },
  set$position: function(receiver, value) {
    this.setProperty$3(receiver, "position", value, "");
  },
  get$right: function(receiver) {
    return this.getPropertyValue$1(receiver, "right");
  },
  set$src: function(receiver, value) {
    this.setProperty$3(receiver, "src", value, "");
  },
  get$top: function(receiver) {
    return this.getPropertyValue$1(receiver, "top");
  },
  set$top: function(receiver, value) {
    this.setProperty$3(receiver, "top", value, "");
  },
  get$width: function(receiver) {
    return this.getPropertyValue$1(receiver, "width");
  },
  set$width: function(receiver, value) {
    this.setProperty$3(receiver, "width", value, "");
  },
  set$zIndex: function(receiver, value) {
    this.setProperty$3(receiver, "z-index", value, "");
  }
});

$.$defineNativeClass("DeviceOrientationEvent", {"": "alpha="});

$.$defineNativeClass("Document", {"": "$$dom_body:body=",
  createDocumentFragment$0: function(receiver) {
    return receiver.createDocumentFragment();
  },
  $$dom_createElement$1: function(receiver, tagName) {
    return receiver.createElement(tagName);
  },
  query$1: function(receiver, selectors) {
    return receiver.querySelector(selectors);
  },
  get$onError: function(receiver) {
    return $.CONSTANT22.forTarget$1(receiver);
  },
  get$onLoad: function(receiver) {
    return $.CONSTANT23.forTarget$1(receiver);
  }
});

$.$defineNativeClass("DocumentFragment", {
  get$children: function(receiver) {
    if (this._children == null)
      this._children = $.FilteredElementList$(receiver);
    return this._children;
  },
  set$innerHtml: function(receiver, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$innerHtml")) {
      var t1, e, nodes, t2;
      t1 = this.get$nodes(receiver);
      t1.clear$0(t1);
      e = $.Element_Element$tag("div");
      t1 = $.getInterceptor$x(e);
      t1.set$innerHtml(e, value);
      nodes = $.List_List$from(t1.get$nodes(e), true, null);
      t2 = this.get$nodes(receiver);
      t2.addAll$1(t2, nodes);
    } else
      return Object.prototype.set$innerHtml.call(this, receiver, value);
  }
});

$.$defineNativeClass("DOMError", {"": "name="});

$.$defineNativeClass("DOMException", {
  get$name: function(receiver) {
    var errorName = receiver.name;
    if ($.Device_isWebKit() === true && errorName === "SECURITY_ERR")
      return "SecurityError";
    if ($.Device_isWebKit() === true && errorName === "SYNTAX_ERR")
      return "SyntaxError";
    return errorName;
  },
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("Element", {"": "$$dom_children:children=,id%,innerHtml:innerHTML},style=",
  get$attributes: function(receiver) {
    return $._ElementAttributeMap$(receiver);
  },
  get$children: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$children")) {
      return $._ChildrenElementList$_wrap(receiver);
    } else
      return Object.prototype.get$children.call(this, receiver);
  },
  get$classes: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$classes")) {
      return $._ElementCssClassSet$(receiver);
    } else
      return Object.prototype.get$classes.call(this, receiver);
  },
  get$client: function(receiver) {
    return $.Rect$(this.clientLeft, this.clientTop, this.clientWidth, this.clientHeight);
  },
  appendHtml$1: function(receiver, text) {
    this.insertAdjacentHtml$2(receiver, "beforeend", text);
  },
  insertAdjacentHtml$2: function(receiver, where, text) {
    if (Object.getPrototypeOf(this).hasOwnProperty("insertAdjacentHtml$2")) {
      if (!!receiver.insertAdjacentHtml)
        receiver._insertAdjacentHtml$2(where, text);
      else
        this._insertAdjacentNode$2(receiver, where, $._DocumentFragmentFactoryProvider_createDocumentFragment_html(text));
    } else
      return Object.prototype.insertAdjacentHtml$2.call(this, receiver, where, text);
  },
  _insertAdjacentNode$2: function(receiver, where, node) {
    var t1, first;
    switch ($.JSString_methods.toLowerCase$0(where)) {
      case "beforebegin":
        $.insertBefore$2$x(this.parentNode, node, receiver);
        break;
      case "afterbegin":
        t1 = this.get$nodes(receiver);
        if ($.$gt$n(t1.get$length(t1), 0) === true) {
          t1 = this.get$nodes(receiver);
          first = t1.$index(t1, 0);
        } else
          first = null;
        this.insertBefore$2(receiver, node, first);
        break;
      case "beforeend":
        this.append$1(receiver, node);
        break;
      case "afterend":
        $.insertBefore$2$x(this.parentNode, node, this.nextSibling);
        break;
      default:
        throw $.$$throw($.ArgumentError$("Invalid position " + where));
    }
  },
  focus$0: function(receiver) {
    return receiver.focus();
  },
  $$dom_getAttribute$1: function(receiver, $name) {
    return receiver.getAttribute($name);
  },
  getBoundingClientRect$0: function(receiver) {
    return receiver.getBoundingClientRect();
  },
  $$dom_hasAttribute$1: function(receiver, $name) {
    return receiver.hasAttribute($name);
  },
  $$dom_removeAttribute$1: function(receiver, $name) {
    return receiver.removeAttribute($name);
  },
  $$dom_setAttribute$2: function(receiver, $name, value) {
    return receiver.setAttribute($name,value);
  },
  get$onClick: function(receiver) {
    return $.CONSTANT27.forTarget$1(receiver);
  },
  get$onError: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$onError")) {
      return $.CONSTANT22.forTarget$1(receiver);
    } else
      return Object.prototype.get$onError.call(this, receiver);
  },
  get$onKeyDown: function(receiver) {
    return $.CONSTANT8.forTarget$1(receiver);
  },
  get$onKeyPress: function(receiver) {
    return $.CONSTANT2.forTarget$1(receiver);
  },
  get$onKeyUp: function(receiver) {
    return $.CONSTANT7.forTarget$1(receiver);
  },
  get$onLoad: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$onLoad")) {
      return $.CONSTANT23.forTarget$1(receiver);
    } else
      return Object.prototype.get$onLoad.call(this, receiver);
  },
  get$onMouseDown: function(receiver) {
    return $.CONSTANT20.forTarget$1(receiver);
  },
  get$onMouseMove: function(receiver) {
    return $.CONSTANT18.forTarget$1(receiver);
  },
  get$onMouseOut: function(receiver) {
    return $.CONSTANT17.forTarget$1(receiver);
  },
  get$onMouseUp: function(receiver) {
    return $.CONSTANT19.forTarget$1(receiver);
  },
  get$onMouseWheel: function(receiver) {
    return $.CONSTANT16.forTarget$1(receiver);
  },
  get$onTouchCancel: function(receiver) {
    return $.CONSTANT9.forTarget$1(receiver);
  },
  get$onTouchEnd: function(receiver) {
    return $.CONSTANT13.forTarget$1(receiver);
  },
  get$onTouchEnter: function(receiver) {
    return $.CONSTANT11.forTarget$1(receiver);
  },
  get$onTouchLeave: function(receiver) {
    return $.CONSTANT10.forTarget$1(receiver);
  },
  get$onTouchMove: function(receiver) {
    return $.CONSTANT12.forTarget$1(receiver);
  },
  get$onTouchStart: function(receiver) {
    return $.CONSTANT14.forTarget$1(receiver);
  },
  $isElement: function() {
    return true;
  },
  $asElement: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height%,name=,src},type=,width%"});

$.$defineNativeClass("Event", {"": "type=",
  get$target: function(receiver) {
    return $._convertNativeToDart_EventTarget(this.target);
  },
  preventDefault$0: function(receiver) {
    return receiver.preventDefault();
  }
});

$.$defineNativeClass("EventException", {"": "name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, receiver, type, listener, useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    if (Object.getPrototypeOf(this).hasOwnProperty("dispatchEvent$1")) {
      return receiver.dispatchEvent($event);
    } else
      return Object.prototype.dispatchEvent$1.call(this, receiver, $event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, receiver, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "name=,type="});

$.$defineNativeClass("File", {"": "name="});

$.$defineNativeClass("FileException", {"": "name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("Float32Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.num);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$double]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$double]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Float64Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.num);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$double]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$double]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length=,name=,target%"});

$.$defineNativeClass("HTMLCollection", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Node);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLDocument", {
  get$body: function(receiver) {
    return $.get$$$dom_body$x($.document());
  }
});

$.$defineNativeClass("XMLHttpRequest", {"": "response=,responseText=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  open$5$async$password$user: function(receiver, method, url, async, password, user) {
    return receiver.open(method,url,async,user,password);
  },
  open$3$async: function($receiver, method, url, async) {
    return $receiver.open(method, url, async);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  send$1: function(receiver, data) {
    return receiver.send(data);
  },
  send$0: function($receiver) {
    return $receiver.send();
  },
  get$onError: function(receiver) {
    return $.CONSTANT22.forTarget$1(receiver);
  },
  get$onLoad: function(receiver) {
    return $.CONSTANT23.forTarget$1(receiver);
  },
  get$onProgress: function(receiver) {
    return $.CONSTANT24.forTarget$1(receiver);
  }
});

$.$defineNativeClass("XMLHttpRequestException", {"": "name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("XMLHttpRequestUpload", {
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onError: function(receiver) {
    return $.CONSTANT22.forTarget$1(receiver);
  },
  get$onLoad: function(receiver) {
    return $.CONSTANT23.forTarget$1(receiver);
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height%,name=,src},width%"});

$.$defineNativeClass("ImageData", {"": "data=,height=,width=",
  $isImageData: function() {
    return true;
  },
  $asImageData: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLImageElement", {"": "height%,naturalHeight=,naturalWidth=,src},width%,x=,y="});

$.$defineNativeClass("HTMLInputElement", {"": "height%,name=,src},type=,value=,width%",
  $isElement: function() {
    return true;
  },
  $asElement: function() {
    return null;
  },
  $isNode: function() {
    return true;
  },
  $asNode: function() {
    return null;
  }
});

$.$defineNativeClass("Int16Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.$int);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int32Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.$int);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int8Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.$int);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("KeyboardEvent", {"": "altKey=,ctrlKey=,keyLocation=,shiftKey=",
  get$keyCode: function(receiver) {
    return this.keyCode;
  },
  get$charCode: function(receiver) {
    return this.charCode;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "name=,type="});

$.$defineNativeClass("HTMLLIElement", {"": "type=,value="});

$.$defineNativeClass("HTMLLinkElement", {"": "type="});

$.$defineNativeClass("LocalMediaStream", {
  stop$0: function(receiver) {
    return receiver.stop();
  }
});

$.$defineNativeClass("Location", {"": "pathname=",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  $isLocation: function() {
    return true;
  },
  $asLocation: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLMapElement", {"": "name="});

$.$defineNativeClass("MediaController", {"": "duration=,volume}",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  pause$0: function(receiver) {
    return receiver.pause();
  },
  play$0: function(receiver) {
    return receiver.play();
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("HTMLMediaElement", {"": "duration=,ended=,error=,loop},src},volume}",
  canPlayType$2: function(receiver, type, keySystem) {
    return receiver.canPlayType(type,keySystem);
  },
  load$0: function(receiver) {
    return receiver.load();
  },
  pause$0: function(receiver) {
    return receiver.pause();
  },
  play$0: function(receiver) {
    return receiver.play();
  },
  get$onCanPlayThrough: function(receiver) {
    return $.CONSTANT25.forTarget$1(receiver);
  },
  get$onEnded: function(receiver) {
    return $.CONSTANT26.forTarget$1(receiver);
  }
});

$.$defineNativeClass("MediaStream", {"": "ended=,id=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("MediaStreamEvent", {"": "stream="});

$.$defineNativeClass("MessageEvent", {
  get$data: function(receiver) {
    return $.convertNativeToDart_SerializedScriptValue(this.data);
  }
});

$.$defineNativeClass("HTMLMetaElement", {"": "name="});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MouseEvent", {"": "altKey=,button=,ctrlKey=,shiftKey=",
  get$offsetX: function(receiver) {
    return this.get$offset(receiver).x;
  },
  get$offsetY: function(receiver) {
    return this.get$offset(receiver).y;
  },
  get$client: function(receiver) {
    return $.Point$0(this.clientX, this.clientY);
  },
  get$offset: function(receiver) {
    var target, t1;
    if (!!receiver.offsetX)
      return $.Point$0(receiver.offsetX, receiver.offsetY);
    else {
      target = this.get$target(receiver);
      if (!(typeof target === "object" && target !== null && target.$isElement()))
        throw $.$$throw($.UnsupportedError$("offsetX is only supported on elements"));
      t1 = this.get$client(receiver);
      t1 = t1.$sub(t1, $.get$topLeft$x($.getBoundingClientRect$0$x(this.get$target(receiver))));
      return t1.toInt$0(t1);
    }
  }
});

$.$defineNativeClass("Node", {
  get$nodes: function(receiver) {
    return $._ChildNodeListLazy$(receiver);
  },
  remove$0: function(receiver) {
    var t1 = this.parentNode;
    if (t1 != null)
      $.$$dom_removeChild$1$x(t1, receiver);
  },
  replaceWith$1: function(receiver, otherNode) {
    var $parent, exception;
    try {
      $parent = this.parentNode;
      $.$$dom_replaceChild$2$x($parent, otherNode, receiver);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return receiver;
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  append$1: function(receiver, newChild) {
    return receiver.appendChild(newChild);
  },
  clone$1: function(receiver, deep) {
    if (Object.getPrototypeOf(this).hasOwnProperty("clone$1")) {
      return receiver.cloneNode(deep);
    } else
      return Object.prototype.clone$1.call(this, receiver, deep);
  },
  dispatchEvent$1: function(receiver, $event) {
    return receiver.dispatchEvent($event);
  },
  insertBefore$2: function(receiver, newChild, refChild) {
    return receiver.insertBefore(newChild,refChild);
  },
  $$dom_removeChild$1: function(receiver, oldChild) {
    return receiver.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(receiver, newChild, oldChild) {
    return receiver.replaceChild(newChild,oldChild);
  },
  $isNode: function() {
    return true;
  },
  $asNode: function() {
    return null;
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Node);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type="});

$.$defineNativeClass("HTMLObjectElement", {"": "data=,height%,name=,type=,width%"});

$.$defineNativeClass("HTMLOptionElement", {"": "index=,value="});

$.$defineNativeClass("HTMLOutputElement", {"": "name=,type=,value="});

$.$defineNativeClass("HTMLParamElement", {"": "name=,value="});

$.$defineNativeClass("ProcessingInstruction", {"": "data=,target="});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RangeException", {"": "name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "src},type="});

$.$defineNativeClass("HTMLSelectElement", {"": "length=,name=,type=,value="});

$.$defineNativeClass("ShadowRoot", {"": "innerHtml:innerHTML}"});

$.$defineNativeClass("HTMLSourceElement", {"": "src},type="});

$.$defineNativeClass("SpeechRecognitionError", {"": "error="});

$.$defineNativeClass("HTMLStyleElement", {"": "type="});

$.$defineNativeClass("HTMLTextAreaElement", {"": "name=,type=,value="});

$.$defineNativeClass("TextEvent", {"": "data="});

$.$defineNativeClass("TextMetrics", {"": "width="});

$.$defineNativeClass("TextTrack", {
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("TextTrackList", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.TextTrack);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.TextTrack]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.TextTrack]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("TimeRanges", {"": "length="});

$.$defineNativeClass("Touch", {"": "identifier=",
  get$target: function(receiver) {
    return $._convertNativeToDart_EventTarget(this.target);
  },
  get$client: function(receiver) {
    return $.Point$0(this.clientX, this.clientY);
  }
});

$.$defineNativeClass("TouchEvent", {"": "altKey=,changedTouches=,ctrlKey=,shiftKey="});

$.$defineNativeClass("TouchList", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Touch);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Touch]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Touch]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLTrackElement", {"": "src}"});

$.$defineNativeClass("Uint16Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.$int);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint32Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.$int);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return receiver.length;
    } else
      return Object.prototype.get$length.call(this, receiver);
  },
  $index: function(receiver, index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return receiver[index];
    } else
      return Object.prototype.$index.call(this, receiver, index);
  },
  $indexSet: function(receiver, index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      receiver[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, receiver, index, value);
  },
  get$iterator: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(receiver);
    } else
      return Object.prototype.get$iterator.call(this, receiver);
  },
  forEach$1: function(receiver, f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$1$growable")) {
      return $.List_List$from(receiver, growable, $.$int);
    } else
      return Object.prototype.toList$1$growable.call(this, receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("elementAt$1")) {
      return this.$index(receiver, index);
    } else
      return Object.prototype.elementAt$1.call(this, receiver, index);
  },
  add$1: function(receiver, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, receiver, value);
  },
  addAll$1: function(receiver, iterable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addAll$1.call(this, receiver, iterable);
  },
  clear$0: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("clear$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
    } else
      return Object.prototype.clear$0.call(this, receiver);
  },
  indexOf$2: function(receiver, element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
    } else
      return Object.prototype.indexOf$2.call(this, receiver, element, start);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this, receiver);
  },
  remove$1: function(receiver, object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, receiver, object);
  },
  sublist$2: function(receiver, start, end) {
    if (Object.getPrototypeOf(this).hasOwnProperty("sublist$2")) {
      if (end == null)
        end = this.get$length(receiver);
      return $.Lists_getRange(receiver, start, end, []);
    } else
      return Object.prototype.sublist$2.call(this, receiver, start, end);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.$int);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height%,width%"});

$.$defineNativeClass("WheelEvent", {
  get$deltaY: function(receiver) {
    var detail;
    if (receiver.deltaY !== undefined)
      return this.get$_liblib2$_deltaY(receiver);
    else if (receiver.wheelDelta !== undefined)
      return this.get$_wheelDelta(receiver);
    else if (receiver.detail !== undefined) {
      if (receiver.axis == MouseScrollEvent.VERTICAL_AXIS) {
        detail = this.get$_detail(receiver);
        if (detail < 100)
          return detail * 40;
        return detail;
      }
      return 0;
    }
    throw $.$$throw($.UnsupportedError$("deltaY is not supported"));
  },
  get$deltaX: function(receiver) {
    var detail;
    if (receiver.deltaX !== undefined)
      return this.get$_liblib2$_deltaX(receiver);
    else if (receiver.wheelDeltaX !== undefined)
      return this.get$_wheelDeltaX(receiver);
    else if (receiver.detail !== undefined) {
      if (receiver.axis !== undefined && receiver.axis == MouseScrollEvent.HORIZONTAL_AXIS) {
        detail = this.get$_detail(receiver);
        if (detail < 100)
          return detail * 40;
        return detail;
      }
      return 0;
    }
    throw $.$$throw($.UnsupportedError$("deltaX is not supported"));
  },
  get$_liblib2$_deltaY: function(receiver) {
    return receiver.deltaY;
  },
  get$_liblib2$_deltaX: function(receiver) {
    return receiver.deltaX;
  },
  get$_wheelDelta: function(receiver) {
    return receiver.wheelDelta;
  },
  get$_wheelDeltaX: function(receiver) {
    return receiver.wheelDeltaX;
  },
  get$_detail: function(receiver) {
    return receiver.detail;
  }
});

$.$defineNativeClass("DOMWindow", {"": "name=,navigator=",
  get$location: function(receiver) {
    var result = this.get$_location(receiver);
    if ($.Window__isDartLocation(result) === true)
      return result;
    if (null == this._location_wrapper)
      this._location_wrapper = $._LocationWrapper$(result);
    return this._location_wrapper;
  },
  get$_location: function(receiver) {
    return receiver.location;
  },
  requestAnimationFrame$1: function(receiver, callback) {
    this._ensureRequestAnimationFrame$0(receiver);
    return this._requestAnimationFrame$1(receiver, callback);
  },
  _requestAnimationFrame$1: function(receiver, callback) {
    return receiver.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function(receiver) {
    if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
  },
  get$top: function(receiver) {
    return $._convertNativeToDart_Window(this.top);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  dispatchEvent$1: function(receiver, evt) {
    return receiver.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  stop$0: function(receiver) {
    return receiver.stop();
  },
  get$onError: function(receiver) {
    return $.CONSTANT22.forTarget$1(receiver);
  },
  get$onLoad: function(receiver) {
    return $.CONSTANT23.forTarget$1(receiver);
  }
});

$.$defineNativeClass("XPathException", {"": "name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("ClientRect", {"": "bottom=,height=,left=,right=,top=,width=",
  toString$0: function(receiver) {
    return "(" + $.S(this.left) + ", " + $.S(this.top) + ", " + $.S(this.width) + ", " + $.S(this.height) + ")";
  },
  $eq: function(receiver, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && other.$isRect()))
      return false;
    t1 = this.left;
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$left(other);
    if (t1 == null ? t3 == null : t1 === t3) {
      t1 = this.top;
      t3 = t2.get$top(other);
      if (t1 == null ? t3 == null : t1 === t3) {
        t1 = this.width;
        t3 = t2.get$width(other);
        if (t1 == null ? t3 == null : t1 === t3) {
          t1 = this.height;
          t2 = t2.get$height(other);
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  ceil$0: function(receiver) {
    return $.Rect$($.ceil$0$nx(this.left), $.ceil$0$nx(this.top), $.ceil$0$nx(this.width), $.ceil$0$nx(this.height));
  },
  round$0: function(receiver) {
    return $.Rect$($.round$0$nx(this.left), $.round$0$nx(this.top), $.round$0$nx(this.width), $.round$0$nx(this.height));
  },
  toInt$0: function(receiver) {
    return $.Rect$($.toInt$0$nx(this.left), $.toInt$0$nx(this.top), $.toInt$0$nx(this.width), $.toInt$0$nx(this.height));
  },
  get$topLeft: function(receiver) {
    return $.Point$0(this.left, this.top);
  },
  $isRect: function() {
    return true;
  },
  $asRect: function() {
    return null;
  }
});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.Node);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  elementAt$1: function(receiver, index) {
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(receiver, element, start) {
    return $.Lists_indexOf(receiver, element, start, this.get$length(receiver));
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(receiver, object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("SVGAElement", {"": "target="});

$.$defineNativeClass("SVGFEBlendElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type=,height=,width=,x=,y="});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFECompositeElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEFloodElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEImageElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEMergeElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x=,y="});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x=,y="});

$.$defineNativeClass("SVGFETileElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type=,height=,width=,x=,y="});

$.$defineNativeClass("SVGFilterElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGImageElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGMaskElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGPatternElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGRectElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGScriptElement", {"": "type="});

$.$defineNativeClass("SVGStyleElement", {"": "type="});

$.$defineNativeClass("SVGElement", {
  get$classes: function(receiver) {
    if (this._cssClassSet == null)
      this._cssClassSet = $._AttributeClassSet$(receiver);
    return this._cssClassSet;
  },
  get$children: function(receiver) {
    return $.FilteredElementList$(receiver);
  },
  set$children: function(receiver, value) {
    var children = this.get$children(receiver);
    children.clear$0(children);
    children.addAll$1(children, value);
  },
  set$innerHtml: function(receiver, svg) {
    var container, t1;
    container = $.Element_Element$tag("div");
    t1 = $.getInterceptor$x(container);
    t1.set$innerHtml(container, "<svg version=\"1.1\">" + $.S(svg) + "</svg>");
    this.set$children(receiver, $.get$children$x($.$index$asx(t1.get$children(container), 0)));
  },
  insertAdjacentHtml$2: function(receiver, where, text) {
    throw $.$$throw($.UnsupportedError$("Cannot invoke insertAdjacentHtml on SVG."));
  },
  get$$$dom_children: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  get$id: function(receiver) {
    return receiver.id;
  },
  set$id: function(receiver, value) {
    receiver.id = value;
  }
});

$.$defineNativeClass("SVGException", {"": "name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x=,y="});

$.$defineNativeClass("SVGUseElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type="});

$.$defineNativeClass("SVGCursorElement", {"": "x=,y="});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x%,y%"});

$.$defineNativeClass("AudioBuffer", {"": "duration=,length="});

$.$defineNativeClass("AudioBufferSourceNode", {"": "loop}",
  start$3: function(receiver, when, grainOffset, grainDuration) {
    var t1, t2;
    t1 = $ === grainOffset;
    if (t1)
      grainOffset = null;
    t1 = !t1;
    t2 = $ === grainDuration;
    if (t2)
      grainDuration = null;
    t2 = !t2;
    if (!!receiver.start)
      if (t2)
        receiver.start(when, grainOffset, grainDuration);
      else if (t1)
        receiver.start(when, grainOffset);
      else
        receiver.start(when);
    else if (t2)
      receiver.noteOn(when, grainOffset, grainDuration);
    else if (t1)
      receiver.noteOn(when, grainOffset);
    else
      receiver.noteOn(when);
  },
  start$1: function($receiver, when) {
    return this.start$3($receiver, when, $, $);
  },
  stop$1: function(receiver, when) {
    if (!!receiver.stop)
      receiver.stop(when);
    else
      receiver.noteOff(when);
  }
});

$.$defineNativeClass("AudioContext", {"": "destination=",
  createBufferSource$0: function(receiver) {
    return receiver.createBufferSource();
  },
  decodeAudioData$3: function(receiver, audioData, successCallback, errorCallback) {
    return receiver.decodeAudioData(audioData,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
  },
  createGain$0: function(receiver) {
    if (receiver.createGain !== undefined)
      return receiver.createGain();
    else
      return receiver.createGainNode();
  }
});

$.$defineNativeClass("AudioNode", {
  connect$3: function(receiver, destination, output, input) {
    return receiver.connect(destination,output,input);
  }
});

$.$defineNativeClass("AudioParam", {"": "name="});

// 132 dynamic classes.
// 269 classes
// 28 !leaf
(function() {
  var v0_TextPositioningElement = "SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement|SVGTextPositioningElement", v1__SVGComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement", v2_MediaElement = "HTMLAudioElement|HTMLMediaElement|HTMLVideoElement", v3_SvgElement = [v0_TextPositioningElement, v1__SVGComponentTransferFunctionElement, "SVGAElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGHKernElement|SVGImageElement|SVGLineElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRadialGradientElement|SVGRectElement|SVGSVGElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStyleElement|SVGStyledElement|SVGSwitchElement|SVGSymbolElement|SVGTextContentElement|SVGTextPathElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement"].join("|"), v4_MouseEvent = "MouseEvent|WheelEvent", v5_Element = [v2_MediaElement, v3_SvgElement, "Element|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement"].join("|"), v6_DocumentFragment = "DocumentFragment|ShadowRoot", v7_CharacterData = "CDATASection|CharacterData|Comment|Text", v8_Document = "Document|HTMLDocument|SVGDocument", v9_Node = [v5_Element, v6_DocumentFragment, v7_CharacterData, v8_Document, "Attr|DocumentType|EntityReference|Node|Notation|ProcessingInstruction"].join("|"), v10_AudioContext = "AudioContext|OfflineAudioContext", v11_MediaStream = "LocalMediaStream|MediaStream";
  $.dynamicSetMetadata([["Blob", "Blob|File"], ["CharacterData", v7_CharacterData], ["Document", v8_Document], ["DocumentFragment", v6_DocumentFragment], ["HTMLMediaElement", v2_MediaElement], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGComponentTransferFunctionElement", v1__SVGComponentTransferFunctionElement], ["SVGElement", v3_SvgElement], ["Element", v5_Element], ["MouseEvent", v4_MouseEvent], ["Event", [v4_MouseEvent, "AudioProcessingEvent|BeforeLoadEvent|CloseEvent|CompositionEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|Event|FocusEvent|HashChangeEvent|IDBVersionChangeEvent|KeyboardEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SVGZoomEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TextEvent|TouchEvent|TrackEvent|TransitionEvent|UIEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent|XMLHttpRequestProgressEvent"].join("|")], ["Node", v9_Node], ["AudioContext", v10_AudioContext], ["MediaStream", v11_MediaStream], ["EventTarget", [v9_Node, v10_AudioContext, v11_MediaStream, "DOMWindow|EventTarget|MediaController|TextTrack|TextTrackList|XMLHttpRequest|XMLHttpRequestUpload"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["NodeList", "NodeList|RadioNodeList"], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["AudioNode", "AudioBufferSourceNode|AudioDestinationNode|AudioNode|AudioSourceNode|GainNode"], ["AudioParam", "AudioGain|AudioParam"]]);
})();

$.main.call$0 = $.main;
// BEGIN invoke [main].
if (typeof document !== "undefined" && document.readyState !== "complete") {
  document.addEventListener("readystatechange", function () {
    if (document.readyState == "complete") {
      if (typeof dartMainRunner === "function") {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        prototype["get$" + accessorName] = new Function(args, body);
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        prototype["set$" + accessorName] = new Function(args, body);
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(cls, fields, prototype) {
    var constructor;
    if (typeof fields == "function") {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = fields[i];
        field = generateAccessor(field, prototype);
        str += field;
        body += "this." + field + " = " + field + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = cls;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass("c", ["f?"], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != "undefined")
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var fields = desc[""], supr;
        if (typeof fields == "string") {
          var s = fields.split(";");
          supr = s[0];
          fields = s[1] == "" ? [] : s[1].split(",");
        } else {
          supr = desc.super;
        }
        isolateProperties[cls] = defineClass(cls, fields, desc);
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if ((!superclass || typeof superclass) != "string")
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var getter = new Function("{ return $." + fieldName + ";}");
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            $.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = getter;
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    isolateProperties.$currentScript = typeof document == "object" ? document.currentScript || document.scripts[document.scripts.length - 1] : null;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = Isolate.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
//@ sourceMappingURL=dartflash_web.dart.js.map
