// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.JSSyntaxRegExp = {"": ["_lib1_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = $.regExpMatchStart(m);
  t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib1_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"": ["pattern?", "str", "start", "end", "_groups"],
 "super": "Object",
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"": ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"": ["_re", "_str", "_lib1_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var next = this._lib1_next;
  this._lib1_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._lib1_next == null))
    return true;
  this._lib1_next = this._re.firstMatch$1(this._str);
  if (this._lib1_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$._DateImpl = {"": ["millisecondsSinceEpoch?", "isUtc"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 get$hashCode: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1, t2, t3, y, m, d, h, min, sec, ms;
  t1 = new $._DateImpl_toString_fourDigits();
  t2 = new $._DateImpl_toString_threeDigits();
  t3 = new $._DateImpl_toString_twoDigits();
  y = t1.call$1(this.get$year());
  m = t3.call$1(this.get$month());
  d = t3.call$1(this.get$day());
  h = t3.call$1(this.get$hour());
  min = t3.call$1(this.get$minute());
  sec = t3.call$1(this.get$second());
  ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms) + 'Z';
  else
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms);
},
 add$1: function(duration) {
  return $.Date_Date$fromMillisecondsSinceEpoch($.add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.abs(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 _DateImpl$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 is$Date: true
};

$$.ArgumentError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.RangeError = {"": ["message"],
 "super": "ArgumentError",
 toString$0: function() {
  return 'RangeError: ' + $.S(this.message);
}
};

$$.NoSuchMethodError = {"": ["_receiver", "_memberName", "_arguments", "_namedArguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var t1, t2, t3, t4, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0))
      $.add$1(t1.sb_1, ', ');
    t3 = t1.sb_1;
    t4 = t1.i_2;
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    $.add$1(t3, $.NoSuchMethodError_safeToString(t2[t4]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  actualParameters = $.toString(t1.sb_1);
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  for (i = 0; i < t2.length; ++i) {
    if (i > 0)
      $.add$1(t1.sb_1, ', ');
    t3 = t1.sb_1;
    if (i >= t2.length)
      throw $.ioore(i);
    $.add$1(t3, t2[i]);
  }
  formalParameters = $.toString(t1.sb_1);
  t2 = this._memberName;
  return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer('');
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0))
            $.add$1(t1.sb_1, ', ');
          $.add$1(t1.sb_1, $.NoSuchMethodError_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return 'NoSuchMethodError : method not found: \'' + $.S(this._memberName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(t1.sb_1) + ']';
      else {
        actualParameters = $.toString(t1.sb_1);
        t1.sb_1 = $.StringBuffer_StringBuffer('');
        for (i = 0; $.ltB(i, $.get$length(t2)); ++i) {
          if (i > 0)
            $.add$1(t1.sb_1, ', ');
          $.add$1(t1.sb_1, $.index(t2, i));
        }
        formalParameters = $.toString(t1.sb_1);
        t2 = this._memberName;
        return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
      }
  }
}
};

$$.UnsupportedError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'Unsupported operation: ' + $.S(this.get$message());
}
};

$$.UnimplementedError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? 'UnimplementedError: ' + $.S(t1) : 'UnimplementedError';
}
};

$$.StateError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'Bad state: ' + this.message;
}
};

$$.StackOverflowError = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
}
};

$$._ExceptionImplementation = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
}
};

$$.FormatException = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + $.S(this.message);
}
};

$$.NullPointerException = {"": ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
}
};

$$.IllegalJSRegExpException = {"": ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
}
};

$$.RuntimeError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'RuntimeError: ' + this.message;
}
};

$$.FutureNotCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
}
};

$$.FutureAlreadyCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
}
};

$$.FutureUnhandledException = {"": ["source", "stackTrace"],
 "super": "Object",
 toString$0: function() {
  return 'FutureUnhandledException: exception while executing Future\n  ' + $.S($.replaceAll($.toString(this.source), '\n', '\n  ')) + '\n' + 'original stack trace:\n  ' + $.S($.replaceAll($.toString(this.stackTrace), '\n', '\n  '));
}
};

$$._FutureImpl = {"": ["_isComplete", "_value", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._value;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
  else if (!this._exceptionHandled)
    throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
},
 _complete$0: function(exception) {
  var t1, handler, listener, listener0;
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (t1 = $.iterator(this._exceptionHandlers); t1.get$hasNext() === true;) {
        handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.get$hasNext() === true;) {
        listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (!this._exceptionHandled && this._successListeners.length > 0)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.get$hasNext() === true;) {
      listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$._CompleterImpl = {"": ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$._HashMapImpl = {"": ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  t1 = $.get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC2 === existingKey)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  hash = $.and(t1, this._keys.length - 1);
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC2 === existingKey)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  hash = $.and($.get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, t1, t2, i, key, value, newIndex, t3;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $._ListImpl_List(newCapacity);
  this._values = $._ListImpl_List(newCapacity);
  for (t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC2)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC2)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 remove$1: function(key) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC2;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CTC2)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $._ListImpl_List(8);
  this._values = $._ListImpl_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"": [],
 "super": "Object"
};

$$._KeyValuePair = {"": ["key?", "value="],
 "super": "Object"
};

$$._LinkedHashMapImpl = {"": ["_list", "_map"],
 "super": "Object",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    this._list.addLast$1($._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 forEach$1: function(f) {
  this._list.forEach$1(new $._LinkedHashMapImpl_forEach__(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  $.clear(this._map);
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"": [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"": ["_previous!", "_next=", "_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"": ["_previous", "_next", "_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"": ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"": ["_sentinel", "_currentEntry"],
 "super": "Object",
 get$hasNext: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._StringBufferImpl = {"": ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.get$isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 clear$0: function() {
  this._buffer = $._ListImpl_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.stringJoinUnchecked($._StringImpl__toJsStringArray(this._buffer), '');
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ListIterator = {"": ["i", "list"],
 "super": "Object",
 get$hasNext: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
}
};

$$.Closure = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.CastErrorImplementation = {"": ["actualType", "expectedType"],
 "super": "Object",
 toString$0: function() {
  return 'CastError: Casting value of type ' + $.S(this.actualType) + ' to' + ' incompatible type ' + $.S(this.expectedType);
}
};

$$.MetaInfo = {"": ["_tag?", "_tags", "_set?"],
 "super": "Object"
};

$$.StringMatch = {"": ["start", "str", "pattern?"],
 "super": "Object",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
}
};

$$.AbstractWorkerEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.AudioContextEvents = {"": ["_ptr"],
 "super": "Events",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$.BatteryManagerEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.BodyElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$load: function() {
  return this.operator$index$1('load');
}
};

$$.DOMApplicationCacheEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.DedicatedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.DocumentEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$touchEnd: function() {
  return this.operator$index$1('touchend');
},
 get$touchMove: function() {
  return this.operator$index$1('touchmove');
},
 get$touchStart: function() {
  return this.operator$index$1('touchstart');
}
};

$$.ElementEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$touchEnd: function() {
  return this.operator$index$1('touchend');
},
 get$touchEnter: function() {
  return this.operator$index$1('touchenter');
},
 get$touchLeave: function() {
  return this.operator$index$1('touchleave');
},
 get$touchMove: function() {
  return this.operator$index$1('touchmove');
},
 get$touchStart: function() {
  return this.operator$index$1('touchstart');
},
 get$mouseWheel: function() {
  var t1 = this._ptr;
  if (t1.onwheel !== undefined)
    return this.operator$index$1('wheel');
  else if (t1.onmousewheel !== undefined)
    return this.operator$index$1('mousewheel');
  else
    return this.operator$index$1('DOMMouseScroll');
}
};

$$.EventSourceEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.Events = {"": ["_ptr"],
 "super": "Object",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"": ["_ptr", "_lib_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._lib_type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._lib_type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
}
};

$$.FileReaderEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
}
};

$$.FileWriterEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.FrameSetElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$load: function() {
  return this.operator$index$1('load');
}
};

$$.HttpRequestEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
}
};

$$.HttpRequestUploadEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
}
};

$$.IDBDatabaseEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.IDBOpenDBRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.IDBRequestEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.IDBTransactionEvents = {"": ["_ptr"],
 "super": "Events",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); },
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.IDBVersionChangeRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.InputElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.LocalWindowEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$touchEnd: function() {
  return this.operator$index$1('touchend');
},
 get$touchMove: function() {
  return this.operator$index$1('touchmove');
},
 get$touchStart: function() {
  return this.operator$index$1('touchstart');
}
};

$$.MediaElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.MediaStreamEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MessagePortEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.NotificationEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.PeerConnection00Events = {"": ["_ptr"],
 "super": "Events"
};

$$.RTCDataChannelEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.RTCPeerConnectionEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.SVGElementInstanceEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$.ScriptProcessorNodeEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.SharedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.SpeechRecognitionEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.TextTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackCueEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.WebSocketEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.WorkerEvents = {"": ["_ptr"],
 "super": "AbstractWorkerEvents"
};

$$.WorkerContextEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._TypedImageData = {"": ["data?", "height?", "width?"],
 "super": "Object",
 is$_TypedImageData: true,
 is$ImageData: function() { return true; }
};

$$._DOMWindowCrossFrame = {"": ["_window"],
 "super": "Object",
 get$parent: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.parent);
},
 get$top: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.top);
},
 focus$0: function() {
  return this._window.focus();
}
};

$$._FixedSizeListIterator = {"": ["_lib_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 get$hasNext: function() {
  return $.gt(this._lib_length, this._pos);
}
};

$$._VariableSizeListIterator = {"": [],
 "super": "Object",
 get$hasNext: function() {
  return $.gt($.get$length(this._array), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
}
};

$$.Juggler = {"": ["_animatables", "_animatablesCount", "_elapsedTime"],
 "super": "Object",
 add$1: function(animatable) {
  var t1, t2, t3;
  if (animatable == null)
    return;
  t1 = this._animatablesCount;
  t2 = this._animatables;
  t3 = t2.length;
  if (t1 >= t3)
    t2.push(animatable);
  else {
    if (t1 < 0)
      throw $.ioore(t1);
    t2[t1] = animatable;
  }
  this._animatablesCount = this._animatablesCount + 1;
},
 remove$1: function(animatable) {
  var i, t1;
  for (i = 0; i < this._animatablesCount; ++i) {
    t1 = this._animatables;
    if (i >= t1.length)
      throw $.ioore(i);
    if ($.eqB(t1[i], animatable)) {
      t1 = this._animatables;
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = null;
    }
  }
},
 advanceTime$1: function(time) {
  var t1, animatablesCount, c, i, animatable, t2, t3, c0;
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time);
  t1 = this._elapsedTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(2, time, t1);
  this._elapsedTime = t1 + time;
  animatablesCount = this._animatablesCount;
  for (c = 0, i = 0; i < animatablesCount; ++i) {
    t1 = this._animatables;
    if (i >= t1.length)
      throw $.ioore(i);
    animatable = t1[i];
    if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
      if (c !== i) {
        t1 = this._animatables;
        if (c >= t1.length)
          throw $.ioore(c);
        t1[c] = animatable;
      }
      ++c;
    }
  }
  for (t1 = this._animatables, t2 = t1.length, i = animatablesCount; t3 = this._animatablesCount, i < t3; ++i, c = c0) {
    c0 = c + 1;
    if (i < 0 || i >= t2)
      throw $.ioore(i);
    t3 = t1[i];
    if (c >= t2)
      throw $.ioore(c);
    t1[c] = t3;
  }
  for (i = c; i < t3; ++i) {
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = null;
  }
  this._animatablesCount = c;
  return true;
},
 advanceTime$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      time = env0;
      break;
    case 2:
      t1 = env1;
      time = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this._elapsedTime;
    case 2:
      var time, t1, animatablesCount, c, i, animatable, t2, t3, c0;
      state0 = 0;
      this._elapsedTime = $.add(t1, time);
      animatablesCount = this._animatablesCount;
      for (c = 0, i = 0; i < animatablesCount; ++i) {
        t1 = this._animatables;
        if (i >= t1.length)
          throw $.ioore(i);
        animatable = t1[i];
        if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
          if (c !== i) {
            t1 = this._animatables;
            if (c >= t1.length)
              throw $.ioore(c);
            t1[c] = animatable;
          }
          ++c;
        }
      }
      for (t1 = this._animatables, t2 = t1.length, i = animatablesCount; t3 = this._animatablesCount, i < t3; ++i, c = c0) {
        c0 = c + 1;
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t3 = t1[i];
        if (c >= t2)
          throw $.ioore(c);
        t1[c] = t3;
      }
      for (i = c; i < t3; ++i) {
        if (i >= t2)
          throw $.ioore(i);
        t1[i] = null;
      }
      this._animatablesCount = c;
      return true;
  }
},
 Juggler$0: function() {
  this._elapsedTime = 0;
  this._animatables = $._ListImpl_List(null);
  this._animatablesCount = 0;
}
};

$$.Point = {"": ["x=", "y="],
 "super": "Object",
 get$length: function() {
  var t1, t2;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  return $.sqrt($.add(t1, $.mul(t2, t2)));
},
 add$1: function(p) {
  return $.Point$($.add(this.x, p.get$x()), $.add(this.y, p.get$y()));
},
 equals$1: function(p) {
  return $.eqB(this.x, p.x) && $.eqB(this.y, p.y);
}
};

$$.Rectangle = {"": ["x=", "y=", "width=", "height="],
 "super": "Object",
 get$left: function() {
  return this.x;
},
 get$top: function() {
  return this.y;
},
 get$right: function() {
  return $.add(this.x, this.width);
},
 get$bottom: function() {
  return $.add(this.y, this.height);
},
 get$size: function() {
  return $.Point$(this.width, this.height);
},
 contains$2: function(px, py) {
  return $.leB(this.x, px) && $.leB(this.y, py) && $.geB(this.get$right(), px) && $.geB(this.get$bottom(), py);
},
 equals$1: function(r) {
  return $.eqB(this.x, r.x) && $.eqB(this.y, r.y) && $.eqB(this.width, r.get$width()) && $.eqB(this.height, r.get$height());
},
 get$isEmpty: function() {
  return $.eqB(this.width, 0) && $.eqB(this.height, 0);
},
 union$1: function(rect) {
  var rLeft, rTop, rRight, rBottom;
  rLeft = $.min(this.get$left(), rect.get$left());
  rTop = $.min(this.get$top(), rect.get$top());
  rRight = $.max(this.get$right(), rect.get$right());
  rBottom = $.max(this.get$bottom(), rect.get$bottom());
  return $.Rectangle$(rLeft, rRight, rRight - rLeft, rBottom - rTop);
}
};

$$.Matrix = {"": ["_a", "_b", "_c", "_d", "_tx", "_ty", "_det"],
 "super": "Object",
 get$a: function() {
  return this._a;
},
 get$b: function() {
  return this._b;
},
 get$c: function() {
  return this._c;
},
 get$d: function() {
  return this._d;
},
 get$tx: function() {
  return this._tx;
},
 get$ty: function() {
  return this._ty;
},
 get$det: function() {
  return this._det;
},
 transformPoint$1: function(p) {
  return $.Point$($.add($.add($.mul(p.x, this._a), $.mul(p.y, this._c)), this._tx), $.add($.add($.mul(p.x, this._b), $.mul(p.y, this._d)), this._ty));
},
 concat$1: function(matrix) {
  var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
  a1 = this._a;
  if (typeof a1 !== 'number')
    return this.concat$1$bailout(1, matrix, a1);
  b1 = this._b;
  if (typeof b1 !== 'number')
    return this.concat$1$bailout(2, matrix, a1, b1);
  c1 = this._c;
  if (typeof c1 !== 'number')
    return this.concat$1$bailout(3, matrix, a1, b1, c1);
  d1 = this._d;
  if (typeof d1 !== 'number')
    return this.concat$1$bailout(4, matrix, a1, b1, c1, d1);
  tx1 = this._tx;
  if (typeof tx1 !== 'number')
    return this.concat$1$bailout(5, matrix, a1, b1, c1, d1, tx1);
  ty1 = this._ty;
  if (typeof ty1 !== 'number')
    return this.concat$1$bailout(6, matrix, a1, b1, c1, d1, tx1, ty1);
  det1 = this._det;
  if (typeof det1 !== 'number')
    return this.concat$1$bailout(7, matrix, a1, b1, c1, d1, tx1, ty1, det1);
  a2 = matrix.get$a();
  if (typeof a2 !== 'number')
    return this.concat$1$bailout(8, matrix, a1, b1, c1, d1, tx1, ty1, a2, det1);
  b2 = matrix.get$b();
  if (typeof b2 !== 'number')
    return this.concat$1$bailout(9, matrix, a1, b1, c1, d1, tx1, ty1, a2, det1, b2);
  c2 = matrix.get$c();
  if (typeof c2 !== 'number')
    return this.concat$1$bailout(10, matrix, a1, b1, c1, d1, tx1, ty1, a2, det1, b2, c2);
  d2 = matrix.get$d();
  if (typeof d2 !== 'number')
    return this.concat$1$bailout(11, matrix, a1, b1, c1, d1, tx1, ty1, a2, det1, b2, c2, d2);
  tx2 = matrix.get$tx();
  if (typeof tx2 !== 'number')
    return this.concat$1$bailout(12, matrix, a1, b1, c1, d1, tx1, ty1, a2, det1, b2, c2, d2, tx2);
  ty2 = matrix.get$ty();
  if (typeof ty2 !== 'number')
    return this.concat$1$bailout(13, matrix, a1, b1, c1, d1, tx1, ty1, a2, det1, b2, c2, d2, ty2, tx2);
  det2 = matrix.get$det();
  if (typeof det2 !== 'number')
    return this.concat$1$bailout(14, a1, b1, c1, d1, tx1, ty1, a2, det1, b2, c2, d2, ty2, det2, tx2);
  this._a = a1 * a2 + b1 * c2;
  this._b = a1 * b2 + b1 * d2;
  this._c = c1 * a2 + d1 * c2;
  this._d = c1 * b2 + d1 * d2;
  this._tx = tx1 * a2 + ty1 * c2 + tx2;
  this._ty = tx1 * b2 + ty1 * d2 + ty2;
  this._det = det1 * det2;
},
 concat$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      a1 = env1;
      matrix = env0;
      break;
    case 2:
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 3:
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 4:
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 5:
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 6:
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 7:
      det1 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 8:
      det1 = env8;
      a2 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 9:
      b2 = env9;
      det1 = env8;
      a2 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 10:
      c2 = env10;
      b2 = env9;
      det1 = env8;
      a2 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 11:
      d2 = env11;
      c2 = env10;
      b2 = env9;
      det1 = env8;
      a2 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 12:
      tx2 = env12;
      d2 = env11;
      c2 = env10;
      b2 = env9;
      det1 = env8;
      a2 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 13:
      tx2 = env13;
      ty2 = env12;
      d2 = env11;
      c2 = env10;
      b2 = env9;
      det1 = env8;
      a2 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      matrix = env0;
      break;
    case 14:
      tx2 = env13;
      det2 = env12;
      ty2 = env11;
      d2 = env10;
      c2 = env9;
      b2 = env8;
      det1 = env7;
      a2 = env6;
      ty1 = env5;
      tx1 = env4;
      d1 = env3;
      c1 = env2;
      b1 = env1;
      a1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      a1 = this._a;
    case 1:
      state0 = 0;
      b1 = this._b;
    case 2:
      state0 = 0;
      c1 = this._c;
    case 3:
      state0 = 0;
      d1 = this._d;
    case 4:
      state0 = 0;
      tx1 = this._tx;
    case 5:
      state0 = 0;
      ty1 = this._ty;
    case 6:
      state0 = 0;
      det1 = this._det;
    case 7:
      state0 = 0;
      a2 = matrix.get$a();
    case 8:
      state0 = 0;
      b2 = matrix.get$b();
    case 9:
      state0 = 0;
      c2 = matrix.get$c();
    case 10:
      state0 = 0;
      d2 = matrix.get$d();
    case 11:
      state0 = 0;
      tx2 = matrix.get$tx();
    case 12:
      state0 = 0;
      ty2 = matrix.get$ty();
    case 13:
      state0 = 0;
      det2 = matrix.get$det();
    case 14:
      var a1, matrix, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
      state0 = 0;
      this._a = $.add($.mul(a1, a2), $.mul(b1, c2));
      this._b = $.add($.mul(a1, b2), $.mul(b1, d2));
      this._c = $.add($.mul(c1, a2), $.mul(d1, c2));
      this._d = $.add($.mul(c1, b2), $.mul(d1, d2));
      this._tx = $.add($.add($.mul(tx1, a2), $.mul(ty1, c2)), tx2);
      this._ty = $.add($.add($.mul(tx1, b2), $.mul(ty1, d2)), ty2);
      this._det = $.mul(det1, det2);
  }
},
 identity$0: function() {
  this._a = 1;
  this._b = 0;
  this._c = 0;
  this._d = 1;
  this._tx = 0;
  this._ty = 0;
  this._det = 1;
},
 invert$0: function() {
  var a, b, c, d, tx, ty, det;
  a = this._a;
  b = this._b;
  c = this._c;
  d = this._d;
  tx = this._tx;
  ty = this._ty;
  det = this._det;
  this._a = $.div(d, det);
  this._b = $.neg($.div(b, det));
  this._c = $.neg($.div(c, det));
  this._d = $.div(a, det);
  this._tx = $.neg($.add($.mul(this._a, tx), $.mul(this._c, ty)));
  this._ty = $.neg($.add($.mul(this._b, tx), $.mul(this._d, ty)));
  if (typeof det !== 'number')
    throw $.iae(det);
  this._det = 1 / det;
},
 setTo$6: function(a, b, c, d, tx, ty) {
  this._a = a;
  this._b = b;
  this._c = c;
  this._d = d;
  this._tx = tx;
  this._ty = ty;
  this._det = $.sub($.mul(a, d), b * c);
},
 copyFromAndConcat$2: function(copyMatrix, concatMatrix) {
  var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
  a1 = copyMatrix.get$a();
  if (typeof a1 !== 'number')
    return this.copyFromAndConcat$2$bailout(1, copyMatrix, concatMatrix, a1);
  b1 = copyMatrix.get$b();
  if (typeof b1 !== 'number')
    return this.copyFromAndConcat$2$bailout(2, copyMatrix, concatMatrix, a1, b1);
  c1 = copyMatrix.get$c();
  if (typeof c1 !== 'number')
    return this.copyFromAndConcat$2$bailout(3, copyMatrix, concatMatrix, a1, b1, c1);
  d1 = copyMatrix.get$d();
  if (typeof d1 !== 'number')
    return this.copyFromAndConcat$2$bailout(4, copyMatrix, concatMatrix, a1, b1, c1, d1);
  tx1 = copyMatrix.get$tx();
  if (typeof tx1 !== 'number')
    return this.copyFromAndConcat$2$bailout(5, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1);
  ty1 = copyMatrix.get$ty();
  if (typeof ty1 !== 'number')
    return this.copyFromAndConcat$2$bailout(6, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, ty1);
  det1 = copyMatrix.get$det();
  if (typeof det1 !== 'number')
    return this.copyFromAndConcat$2$bailout(7, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1);
  a2 = concatMatrix.get$a();
  if (typeof a2 !== 'number')
    return this.copyFromAndConcat$2$bailout(8, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2);
  b2 = concatMatrix.get$b();
  if (typeof b2 !== 'number')
    return this.copyFromAndConcat$2$bailout(9, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2);
  c2 = concatMatrix.get$c();
  if (typeof c2 !== 'number')
    return this.copyFromAndConcat$2$bailout(10, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2);
  d2 = concatMatrix.get$d();
  if (typeof d2 !== 'number')
    return this.copyFromAndConcat$2$bailout(11, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2);
  tx2 = concatMatrix.get$tx();
  if (typeof tx2 !== 'number')
    return this.copyFromAndConcat$2$bailout(12, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2);
  ty2 = concatMatrix.get$ty();
  if (typeof ty2 !== 'number')
    return this.copyFromAndConcat$2$bailout(13, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2);
  det2 = concatMatrix.get$det();
  if (typeof det2 !== 'number')
    return this.copyFromAndConcat$2$bailout(14, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2);
  this._a = a1 * a2 + b1 * c2;
  this._b = a1 * b2 + b1 * d2;
  this._c = c1 * a2 + d1 * c2;
  this._d = c1 * b2 + d1 * d2;
  this._tx = tx1 * a2 + ty1 * c2 + tx2;
  this._ty = tx1 * b2 + ty1 * d2 + ty2;
  this._det = det1 * det2;
},
 copyFromAndConcat$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      a1 = env2;
      concatMatrix = env1;
      copyMatrix = env0;
      break;
    case 2:
      b1 = env3;
      a1 = env2;
      concatMatrix = env1;
      copyMatrix = env0;
      break;
    case 3:
      c1 = env4;
      b1 = env3;
      a1 = env2;
      concatMatrix = env1;
      copyMatrix = env0;
      break;
    case 4:
      d1 = env5;
      c1 = env4;
      b1 = env3;
      a1 = env2;
      concatMatrix = env1;
      copyMatrix = env0;
      break;
    case 5:
      tx1 = env6;
      d1 = env5;
      c1 = env4;
      b1 = env3;
      a1 = env2;
      concatMatrix = env1;
      copyMatrix = env0;
      break;
    case 6:
      ty1 = env7;
      tx1 = env6;
      d1 = env5;
      c1 = env4;
      b1 = env3;
      a1 = env2;
      concatMatrix = env1;
      copyMatrix = env0;
      break;
    case 7:
      det1 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      concatMatrix = env0;
      break;
    case 8:
      a2 = env8;
      det1 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      concatMatrix = env0;
      break;
    case 9:
      b2 = env9;
      a2 = env8;
      det1 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      concatMatrix = env0;
      break;
    case 10:
      c2 = env10;
      b2 = env9;
      a2 = env8;
      det1 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      concatMatrix = env0;
      break;
    case 11:
      d2 = env11;
      c2 = env10;
      b2 = env9;
      a2 = env8;
      det1 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      concatMatrix = env0;
      break;
    case 12:
      tx2 = env12;
      d2 = env11;
      c2 = env10;
      b2 = env9;
      a2 = env8;
      det1 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      concatMatrix = env0;
      break;
    case 13:
      ty2 = env13;
      tx2 = env12;
      d2 = env11;
      c2 = env10;
      b2 = env9;
      a2 = env8;
      det1 = env7;
      ty1 = env6;
      tx1 = env5;
      d1 = env4;
      c1 = env3;
      b1 = env2;
      a1 = env1;
      concatMatrix = env0;
      break;
    case 14:
      det2 = env13;
      ty2 = env12;
      tx2 = env11;
      d2 = env10;
      c2 = env9;
      b2 = env8;
      a2 = env7;
      det1 = env6;
      ty1 = env5;
      tx1 = env4;
      d1 = env3;
      c1 = env2;
      b1 = env1;
      a1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      a1 = copyMatrix.get$a();
    case 1:
      state0 = 0;
      b1 = copyMatrix.get$b();
    case 2:
      state0 = 0;
      c1 = copyMatrix.get$c();
    case 3:
      state0 = 0;
      d1 = copyMatrix.get$d();
    case 4:
      state0 = 0;
      tx1 = copyMatrix.get$tx();
    case 5:
      state0 = 0;
      ty1 = copyMatrix.get$ty();
    case 6:
      state0 = 0;
      det1 = copyMatrix.get$det();
    case 7:
      state0 = 0;
      a2 = concatMatrix.get$a();
    case 8:
      state0 = 0;
      b2 = concatMatrix.get$b();
    case 9:
      state0 = 0;
      c2 = concatMatrix.get$c();
    case 10:
      state0 = 0;
      d2 = concatMatrix.get$d();
    case 11:
      state0 = 0;
      tx2 = concatMatrix.get$tx();
    case 12:
      state0 = 0;
      ty2 = concatMatrix.get$ty();
    case 13:
      state0 = 0;
      det2 = concatMatrix.get$det();
    case 14:
      var a1, concatMatrix, copyMatrix, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
      state0 = 0;
      this._a = $.add($.mul(a1, a2), $.mul(b1, c2));
      this._b = $.add($.mul(a1, b2), $.mul(b1, d2));
      this._c = $.add($.mul(c1, a2), $.mul(d1, c2));
      this._d = $.add($.mul(c1, b2), $.mul(d1, d2));
      this._tx = $.add($.add($.mul(tx1, a2), $.mul(ty1, c2)), tx2);
      this._ty = $.add($.add($.mul(tx1, b2), $.mul(ty1, d2)), ty2);
      this._det = $.mul(det1, det2);
  }
}
};

$$.RenderLoop = {"": ["_juggler", "_stages", "_renderTime", "_enterFrameIndex", "_enterFrameEvent"],
 "super": "Object",
 _onAnimationFrame$1: function(currentTime) {
  var t1, deltaTime, deltaTimeSec, i;
  if (typeof currentTime !== 'number')
    return this._onAnimationFrame$1$bailout(1, currentTime);
  $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
  if ($.get$isNaN(this._renderTime) === true)
    this._renderTime = currentTime;
  t1 = this._renderTime;
  if (typeof t1 !== 'number')
    return this._onAnimationFrame$1$bailout(2, currentTime, t1);
  if (t1 > currentTime)
    this._renderTime = currentTime;
  t1 = this._renderTime;
  if (typeof t1 !== 'number')
    return this._onAnimationFrame$1$bailout(3, currentTime, t1);
  deltaTime = currentTime - t1;
  deltaTimeSec = deltaTime / 1000;
  if (deltaTime >= 1) {
    this._renderTime = currentTime;
    this._enterFrameEvent.set$_passedTime(deltaTimeSec);
    this._enterFrameIndex.dispatchEvent$1(this._enterFrameEvent);
    this._juggler.advanceTime$1(deltaTimeSec);
    i = 0;
    while (true) {
      t1 = $.get$length(this._stages);
      if (typeof t1 !== 'number')
        return this._onAnimationFrame$1$bailout(4, i, t1);
      if (!(i < t1))
        break;
      t1 = this._stages;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this._onAnimationFrame$1$bailout(5, t1, i);
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i].materialize$0();
      ++i;
    }
  }
},
 _onAnimationFrame$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      currentTime = env0;
      break;
    case 2:
      t1 = env1;
      currentTime = env0;
      break;
    case 3:
      t1 = env1;
      currentTime = env0;
      break;
    case 4:
      t1 = env1;
      i = env0;
      break;
    case 5:
      i = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
      if ($.get$isNaN(this._renderTime) === true)
        this._renderTime = currentTime;
      t1 = this._renderTime;
    case 2:
      state0 = 0;
      if ($.gtB(t1, currentTime))
        this._renderTime = currentTime;
      t1 = this._renderTime;
    case 3:
      state0 = 0;
      deltaTime = $.sub(currentTime, t1);
      deltaTimeSec = $.div(deltaTime, 1000);
    default:
      var currentTime, t1, deltaTime, deltaTimeSec, i;
      if (state0 === 5 || state0 === 4 || state0 === 0 && $.geB(deltaTime, 1))
        switch (state0) {
          case 0:
            this._renderTime = currentTime;
            this._enterFrameEvent.set$_passedTime(deltaTimeSec);
            this._enterFrameIndex.dispatchEvent$1(this._enterFrameEvent);
            this._juggler.advanceTime$1(deltaTimeSec);
            i = 0;
          default:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = $.get$length(this._stages);
                  case 4:
                    state0 = 0;
                    if (!$.ltB(i, t1))
                      break L0;
                    t1 = this._stages;
                  case 5:
                    state0 = 0;
                    $.index(t1, i).materialize$0();
                    ++i;
                }
        }
  }
},
 get$_onAnimationFrame: function() { return new $.BoundClosure(this, '_onAnimationFrame$1'); },
 addStage$1: function(stage) {
  $.add$1(this._stages, stage);
},
 RenderLoop$0: function() {
  this._juggler = $.Juggler$();
  this._stages = $._ListImpl_List(null);
  this._renderTime = (0/0);
  this._enterFrameIndex = $.get$_EventListenerListIndex_enterFrame();
  this._enterFrameEvent = $.EnterFrameEvent$(0);
  $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
}
};

$$.RenderState = {"": ["_context", "_matrices", "_alphas", "_depth"],
 "super": "Object",
 get$context: function() {
  return this._context;
},
 reset$0: function() {
  this._context.setTransform$6(1, 0, 0, 1, 0, 0);
  this._context.set$globalAlpha(1);
  var t1 = this._context;
  t1.clearRect$4(0, 0, t1.get$canvas().get$width(), this._context.get$canvas().get$height());
  this._depth = 0;
},
 renderDisplayObject$1: function(displayObject) {
  var t1, t2, matrix, t3, t4, t5, t6, t8;
  this._depth = this._depth + 1;
  t1 = this._matrices;
  t2 = this._depth;
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  matrix = t1[t2];
  t2 = displayObject.get$_transformationMatrix();
  t1 = this._matrices;
  t3 = this._depth - 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  matrix.copyFromAndConcat$2(t2, t1[t3]);
  this._context.setTransform$6(matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
  t2 = this._alphas;
  t4 = this._depth;
  t5 = t4 - 1;
  t6 = t2.length;
  if (t5 < 0 || t5 >= t6)
    throw $.ioore(t5);
  t5 = t2[t5];
  if (typeof t5 !== 'number')
    return this.renderDisplayObject$1$bailout(1, displayObject, t2, t4, t5);
  t8 = displayObject.get$_alpha();
  if (typeof t8 !== 'number')
    return this.renderDisplayObject$1$bailout(2, displayObject, t2, t4, t5, t8);
  t8 = t5 * t8;
  if (t4 < 0 || t4 >= t6)
    throw $.ioore(t4);
  t2[t4] = t8;
  this._context.set$globalAlpha(t8);
  if (displayObject.get$mask() == null)
    displayObject.render$1(this);
  else {
    this._context.save$0();
    displayObject.get$mask().render$1(this);
    displayObject.render$1(this);
    this._context.restore$0();
  }
  this._depth = this._depth - 1;
},
 renderDisplayObject$1$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t5 = env3;
      t4 = env2;
      t2 = env1;
      displayObject = env0;
      break;
    case 2:
      t7 = env4;
      t5 = env3;
      t4 = env2;
      t2 = env1;
      displayObject = env0;
      break;
  }
  switch (state0) {
    case 0:
      this._depth = this._depth + 1;
      t1 = this._matrices;
      t2 = this._depth;
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      matrix = t1[t2];
      t2 = displayObject.get$_transformationMatrix();
      t1 = this._matrices;
      t3 = this._depth - 1;
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      matrix.copyFromAndConcat$2(t2, t1[t3]);
      this._context.setTransform$6(matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
      t2 = this._alphas;
      t4 = this._depth;
      t5 = t4 - 1;
      if (t5 < 0 || t5 >= t2.length)
        throw $.ioore(t5);
      t5 = t2[t5];
    case 1:
      state0 = 0;
      t7 = displayObject.get$_alpha();
    case 2:
      var t1, t2, matrix, t3, t4, t5, displayObject, t7;
      state0 = 0;
      t7 = $.mul(t5, t7);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      t2[t4] = t7;
      this._context.set$globalAlpha(t7);
      if (displayObject.get$mask() == null)
        displayObject.render$1(this);
      else {
        this._context.save$0();
        displayObject.get$mask().render$1(this);
        displayObject.render$1(this);
        this._context.restore$0();
      }
      this._depth = this._depth - 1;
  }
},
 RenderState$fromCanvasRenderingContext2D$1: function(context) {
  var i;
  this._context = context;
  this._matrices = $._ListImpl_List(null);
  this._alphas = $._ListImpl_List(null);
  this._depth = 0;
  for (i = 0; i < 100; ++i) {
    this._matrices.push($.Matrix$fromIdentity());
    this._alphas.push(1);
  }
}
};

$$.Event = {"": ["_type", "_bubbles", "_eventPhase!", "_target=", "_currentTarget!", "_stopsPropagation!", "_stopsImmediatePropagation!"],
 "super": "Object",
 _reset$2: function(type, bubbles) {
  this._type = type;
  this._bubbles = bubbles;
  this._eventPhase = 2;
  this._target = null;
  this._currentTarget = null;
  this._stopsPropagation = false;
  this._stopsImmediatePropagation = false;
},
 get$stopsPropagation: function() {
  return this._stopsPropagation;
},
 get$stopsImmediatePropagation: function() {
  return this._stopsImmediatePropagation;
},
 get$type: function() {
  return this._type;
},
 get$eventPhase: function() {
  return this._eventPhase;
},
 get$bubbles: function() {
  return this._bubbles;
},
 get$captures: function() {
  return true;
},
 get$target: function() {
  return this._target;
},
 Event$2: function(type, bubbles) {
  this._reset$2(type, bubbles);
}
};

$$.Events0 = {"": ["_eventDispatcher"],
 "super": "Object",
 operator$index$1: function(eventType) {
  return this._eventDispatcher._getEventListenerList$1(eventType);
},
 Events$1: function(eventDispatcher) {
  this._eventDispatcher = eventDispatcher;
}
};

$$.EventDispatcher = {"": ["_eventListenerLists"],
 "super": "Object",
 hasEventListener$1: function(type) {
  var t1 = this._eventListenerLists;
  return !(t1 == null) && t1.containsKey$1(type) === true;
},
 addEventListener$3: function(type, eventListener, useCapture) {
  this._getEventListenerList$1(type).add$2(eventListener, useCapture);
},
 addEventListener$2: function(type,eventListener) {
  return this.addEventListener$3(type,eventListener,false)
},
 dispatchEvent$1: function(event$) {
  this._dispatchEventInternal$4(event$, this, this, 2);
},
 get$on: function() {
  return $.Events$0(this);
},
 _dispatchEventInternal$4: function(event$, target, currentTarget, eventPhase) {
  var t1, t2, eventListenerList;
  t1 = this._eventListenerLists;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._dispatchEventInternal$4$bailout(1, event$, target, currentTarget, eventPhase, t1);
  t2 = event$.get$type();
  if (t2 !== (t2 | 0))
    throw $.iae(t2);
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  eventListenerList = t1[t2];
  if (!(eventListenerList == null)) {
    event$.set$_target(target);
    event$.set$_currentTarget(currentTarget);
    event$.set$_eventPhase(eventPhase);
    event$.set$_stopsPropagation(false);
    event$.set$_stopsImmediatePropagation(false);
    eventListenerList.dispatchEvent$1(event$);
  }
},
 _dispatchEventInternal$4$bailout: function(state0, event$, target, currentTarget, eventPhase, t1) {
  var eventListenerList;
  if (!(t1 == null)) {
    eventListenerList = $.index(t1, event$.get$type());
    if (!(eventListenerList == null)) {
      event$.set$_target(target);
      event$.set$_currentTarget(currentTarget);
      event$.set$_eventPhase(eventPhase);
      event$.set$_stopsPropagation(false);
      event$.set$_stopsImmediatePropagation(false);
      eventListenerList.dispatchEvent$1(event$);
    }
  }
},
 _getEventListenerList$1: function(type) {
  var eventListenerList, t1;
  if (this._eventListenerLists == null)
    this._eventListenerLists = $.Map_Map();
  eventListenerList = $.index(this._eventListenerLists, type);
  if (eventListenerList == null) {
    t1 = this._eventListenerLists;
    eventListenerList = $.EventListenerList$0(this, type);
    $.indexSet(t1, type, eventListenerList);
  }
  return eventListenerList;
}
};

$$._EventListenerUseCapture = {"": ["eventListener?", "useCapture?"],
 "super": "Object",
 eventListener$1: function(arg0) { return this.eventListener.call$1(arg0); }
};

$$.EventListenerList0 = {"": ["_eventDispatcher", "_eventType", "_lib0_list"],
 "super": "Object",
 get$eventDispatcher: function() {
  return this._eventDispatcher;
},
 add$2: function(eventListener, useCapture) {
  var i, t1, t2;
  for (i = 0; t1 = this._lib0_list, i < t1.length; ++i) {
    if ($.eqB(t1[i].get$eventListener(), eventListener)) {
      t1 = this._lib0_list;
      if (i >= t1.length)
        throw $.ioore(i);
      t2 = $.eqB(t1[i].get$useCapture(), useCapture);
      t1 = t2;
    } else
      t1 = false;
    if (t1)
      return;
  }
  if ($.eqB(this._eventType, 'enterFrame') && this._lib0_list.length === 0)
    $.add$1($.get$_EventListenerListIndex_enterFrame(), this);
  $.add$1(this._lib0_list, $._EventListenerUseCapture$(eventListener, useCapture));
},
 add$1: function(eventListener) {
  return this.add$2(eventListener,false)
},
 remove$2: function(eventListener, useCapture) {
  var i, t1, t2;
  for (i = 0; t1 = this._lib0_list, i < t1.length; ++i) {
    if ($.eqB(t1[i].get$eventListener(), eventListener)) {
      t1 = this._lib0_list;
      if (i >= t1.length)
        throw $.ioore(i);
      t2 = $.eqB(t1[i].get$useCapture(), useCapture);
      t1 = t2;
    } else
      t1 = false;
    if (t1) {
      this._lib0_list = $._ListImpl_List$from(this._lib0_list);
      $.removeAt$1(this._lib0_list, i);
      if ($.eqB(this._eventType, 'enterFrame') && this._lib0_list.length === 0)
        $.get$_EventListenerListIndex_enterFrame().remove$1(this);
      break;
    }
  }
},
 remove$1: function(eventListener) {
  return this.remove$2(eventListener,false)
},
 operator$add$1: function(eventListener) {
  this.add$2(eventListener, false);
},
 operator$sub$1: function(eventListener) {
  this.remove$2(eventListener, false);
},
 dispatchEvent$1: function(event$) {
  var i, t1, t2;
  for (i = 0; i < this._lib0_list.length; ++i) {
    t1 = event$.get$eventPhase();
    if (typeof t1 !== 'number')
      return this.dispatchEvent$1$bailout(1, event$, t1, i);
    if (t1 === 1) {
      t1 = this._lib0_list;
      if (i >= t1.length)
        throw $.ioore(i);
      t2 = t1[i].get$useCapture() === true;
      t1 = t2;
    } else
      t1 = true;
    if (t1) {
      t1 = event$.get$stopsImmediatePropagation();
      if (typeof t1 !== 'boolean')
        return this.dispatchEvent$1$bailout(2, event$, i, t1);
      if (!t1) {
        t1 = this._lib0_list;
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i].eventListener$1(event$);
      }
    }
  }
},
 dispatchEvent$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      i = env2;
      t1 = env1;
      event$ = env0;
      break;
    case 2:
      t1 = env2;
      i = env1;
      event$ = env0;
      break;
  }
  switch (state0) {
    case 0:
      i = 0;
    default:
      var i, t1, event$, t2;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(i < this._lib0_list.length))
                break L0;
              t1 = event$.get$eventPhase();
            case 1:
              state0 = 0;
              if ($.eqB(t1, 1)) {
                t1 = this._lib0_list;
                if (i >= t1.length)
                  throw $.ioore(i);
                t2 = t1[i].get$useCapture() === true;
                t1 = t2;
              } else
                t1 = true;
            case 2:
              if (state0 === 2 || state0 === 0 && t1)
                switch (state0) {
                  case 0:
                    t1 = event$.get$stopsImmediatePropagation();
                  case 2:
                    state0 = 0;
                    if ($.eqB(t1, false)) {
                      t1 = this._lib0_list;
                      if (i >= t1.length)
                        throw $.ioore(i);
                      t1[i].eventListener$1(event$);
                    }
                }
              ++i;
          }
  }
},
 EventListenerList$2: function(eventDispatcher, eventType) {
  this._eventDispatcher = eventDispatcher;
  this._eventType = eventType;
  this._lib0_list = $._ListImpl_List(null);
}
};

$$._EventListenerListIndex = {"": ["_lists"],
 "super": "Object",
 add$1: function(list) {
  this._lists.push(list);
},
 remove$1: function(list) {
  var index, t1;
  index = $.indexOf$1(this._lists, list);
  if (!$.eqB(index, -1)) {
    t1 = this._lists;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1[index] = null;
  }
},
 dispatchEvent$1: function(event$) {
  var listsLength, c, i, t1, eventListenerList, t2, c0, t3;
  listsLength = this._lists.length;
  for (c = 0, i = 0; i < listsLength; ++i) {
    t1 = this._lists;
    if (i >= t1.length)
      throw $.ioore(i);
    eventListenerList = t1[i];
    if (!(eventListenerList == null)) {
      event$.set$_target(eventListenerList.get$eventDispatcher());
      event$.set$_currentTarget(eventListenerList.get$eventDispatcher());
      event$.set$_eventPhase(2);
      eventListenerList.dispatchEvent$1(event$);
      if (c !== i) {
        t1 = this._lists;
        if (c >= t1.length)
          throw $.ioore(c);
        t1[c] = eventListenerList;
      }
      ++c;
    }
  }
  for (t1 = this._lists, t2 = t1.length, i = listsLength; i < t2; ++i, c = c0) {
    c0 = c + 1;
    t3 = t1[i];
    if (c >= t2)
      throw $.ioore(c);
    t1[c] = t3;
  }
  $.set$length(t1, c);
},
 _EventListenerListIndex$0: function() {
  this._lists = $._ListImpl_List(null);
}
};

$$.EnterFrameEvent = {"": ["_passedTime!", "_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 get$captures: function() {
  return false;
},
 EnterFrameEvent$1: function(passedTime) {
  this._passedTime = passedTime;
}
};

$$.MouseEvent = {"": ["_localX!", "_localY!", "_stageX!", "_stageY!", "_buttonDown!", "_altKey!", "_controlKey", "_ctrlKey!", "_shiftKey!", "_clickCount!", "_deltaX=", "_deltaY=", "_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 _reset$2: function(type, bubbles) {
  $.Event.prototype._reset$2.call(this, type, bubbles);
  this._localY = 0;
  this._localX = 0;
  this._stageY = 0;
  this._stageX = 0;
  this._buttonDown = false;
  this._altKey = false;
  this._controlKey = false;
  this._ctrlKey = false;
  this._shiftKey = false;
  this._clickCount = 0;
  this._deltaX = 0;
  this._deltaY = 0;
},
 get$buttonDown: function() {
  return this._buttonDown;
},
 get$altKey: function() {
  return this._altKey;
},
 get$ctrlKey: function() {
  return this._ctrlKey;
},
 get$shiftKey: function() {
  return this._shiftKey;
},
 get$clickCount: function() {
  return this._clickCount;
},
 get$deltaX: function() {
  return this._deltaX;
},
 get$deltaY: function() {
  return this._deltaY;
},
 MouseEvent$2: function(type, bubbles) {
  this._reset$2(type, bubbles);
}
};

$$.KeyboardEvent = {"": ["_altKey!", "_ctrlKey!", "_shiftKey!", "_commandKey", "_controlKey", "_charCode!", "_keyCode!", "_keyLocation!", "_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 _reset$2: function(type, bubbles) {
  $.Event.prototype._reset$2.call(this, type, bubbles);
  this._altKey = false;
  this._ctrlKey = false;
  this._shiftKey = false;
  this._commandKey = false;
  this._controlKey = false;
  this._charCode = 0;
  this._keyCode = 0;
  this._keyLocation = 0;
},
 get$altKey: function() {
  return this._altKey;
},
 get$ctrlKey: function() {
  return this._ctrlKey;
},
 get$shiftKey: function() {
  return this._shiftKey;
},
 get$charCode: function() {
  return this._charCode;
},
 get$keyCode: function() {
  return this._keyCode;
},
 get$keyLocation: function() {
  return this._keyLocation;
},
 KeyboardEvent$2: function(type, bubbles) {
  this._reset$2(type, bubbles);
}
};

$$.TextEvent = {"": ["_text", "_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event"
};

$$.TouchEvent = {"": ["_touchPointID", "_isPrimaryTouchPoint", "_localX!", "_localY!", "_stageX!", "_stageY!", "_altKey!", "_controlKey", "_ctrlKey!", "_shiftKey!", "_pressure", "_sizeX", "_sizeY", "_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 _reset$2: function(type, bubbles) {
  $.Event.prototype._reset$2.call(this, type, bubbles);
  this._touchPointID = 0;
  this._isPrimaryTouchPoint = false;
  this._localY = 0;
  this._localX = 0;
  this._stageY = 0;
  this._stageX = 0;
  this._altKey = false;
  this._controlKey = false;
  this._ctrlKey = false;
  this._shiftKey = false;
  this._pressure = 1;
  this._sizeX = 0;
  this._sizeY = 0;
},
 get$touchPointID: function() {
  return this._touchPointID;
},
 get$altKey: function() {
  return this._altKey;
},
 get$ctrlKey: function() {
  return this._ctrlKey;
},
 get$shiftKey: function() {
  return this._shiftKey;
},
 TouchEvent$2: function(type, bubbles) {
  this._reset$2(type, bubbles);
}
};

$$.BitmapFilter = {"": [],
 "super": "Object"
};

$$.BlurFilter = {"": ["blurX", "blurY"],
 "super": "BitmapFilter",
 apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
  var sourceImageData, sourceData, sourceWidth, sourceHeight, t4, weightX, t6, weightY, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, destinationContext, destinationImageData, destinationData, buffer, z, x, sum, offsetSource, offsetDestination, t1, t2, dif, y, t3, t5, color;
  sourceImageData = sourceBitmapData._getContext$0().getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
  sourceData = sourceImageData.get$data();
  if (typeof sourceData !== 'string' && (typeof sourceData !== 'object' || sourceData === null || sourceData.constructor !== Array && !sourceData.is$JavaScriptIndexingBehavior()))
    return this.apply$4$bailout(1, destinationBitmapData, destinationPoint, sourceImageData, sourceData);
  sourceWidth = sourceImageData.get$width();
  if (typeof sourceWidth !== 'number')
    return this.apply$4$bailout(2, destinationBitmapData, destinationPoint, sourceImageData, sourceData, sourceWidth);
  sourceHeight = sourceImageData.get$height();
  if (typeof sourceHeight !== 'number')
    return this.apply$4$bailout(3, destinationBitmapData, destinationPoint, sourceData, sourceWidth, sourceHeight);
  t4 = this.blurX;
  if (t4 !== (t4 | 0))
    return this.apply$4$bailout(4, t4, destinationBitmapData, destinationPoint, sourceData, sourceWidth, sourceHeight);
  weightX = t4 * t4;
  t6 = this.blurY;
  if (t6 !== (t6 | 0))
    return this.apply$4$bailout(5, t4, destinationBitmapData, t6, weightX, destinationPoint, sourceData, sourceWidth, sourceHeight);
  weightY = t6 * t6;
  rx2 = t4 * 2;
  ry2 = t6 * 2;
  destinationWidth = sourceWidth + rx2;
  destinationHeight = sourceHeight + ry2;
  sourceWidth4 = sourceWidth * 4;
  destinationWidth4 = destinationWidth * 4;
  destinationContext = destinationBitmapData._getContext$0();
  destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
  destinationData = destinationImageData.get$data();
  if (typeof destinationData !== 'object' || destinationData === null || (destinationData.constructor !== Array || !!destinationData.immutable$list) && !destinationData.is$JavaScriptIndexingBehavior())
    return this.apply$4$bailout(6, destinationWidth, t4, destinationHeight, t6, sourceWidth4, destinationWidth4, destinationPoint, destinationContext, destinationData, sourceData, sourceWidth, sourceHeight, destinationImageData, weightX, weightY, rx2, ry2);
  $._premultiplyAlpha(sourceData);
  buffer = $._ListImpl_List(1024);
  for (z = 0; z < 4; ++z)
    for (x = 0; x < sourceWidth; ++x) {
      sum = $.shr(weightY, 1);
      offsetSource = x * 4 + z;
      offsetDestination = (x + t4) * 4 + z;
      for (t1 = sourceData.length, t2 = destinationData.length, dif = 0, y = 0; y < destinationHeight; ++y) {
        t3 = $.tdiv(sum, weightY);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t2)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t3;
        offsetDestination += destinationWidth4;
        if (y >= ry2) {
          t3 = buffer[y & 1023];
          if (typeof t3 !== 'number')
            throw $.iae(t3);
          t3 = 2 * t3;
          t5 = buffer[y - t6 & 1023];
          if (typeof t5 !== 'number')
            throw $.iae(t5);
          dif -= t3 - t5;
        } else if (y >= t6) {
          t3 = buffer[y & 1023];
          if (typeof t3 !== 'number')
            throw $.iae(t3);
          dif -= 2 * t3;
        }
        if (y < sourceHeight) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t1)
            throw $.ioore(offsetSource);
          color = sourceData[offsetSource];
        } else
          color = 0;
        buffer[y + t6 & 1023] = color;
        if (typeof color !== 'number')
          throw $.iae(color);
        dif += color;
        sum += dif;
        offsetSource += sourceWidth4;
      }
    }
  for (t1 = t4 * 4, z = 0; z < 4; ++z)
    for (y = 0; y < destinationHeight; ++y) {
      sum = $.shr(weightX, 1);
      t2 = y * destinationWidth4;
      offsetSource = t2 + t1 + z;
      offsetDestination = t2 + z;
      for (t2 = destinationData.length, dif = 0, x = 0; x < destinationWidth; ++x) {
        t3 = $.tdiv(sum, weightX);
        if (offsetDestination !== (offsetDestination | 0))
          throw $.iae(offsetDestination);
        if (offsetDestination < 0 || offsetDestination >= t2)
          throw $.ioore(offsetDestination);
        destinationData[offsetDestination] = t3;
        offsetDestination += 4;
        if (x >= rx2) {
          t3 = buffer[x & 1023];
          if (typeof t3 !== 'number')
            throw $.iae(t3);
          t3 = 2 * t3;
          t5 = buffer[x - t4 & 1023];
          if (typeof t5 !== 'number')
            throw $.iae(t5);
          dif -= t3 - t5;
        } else if (x >= t4) {
          t3 = buffer[x & 1023];
          if (typeof t3 !== 'number')
            throw $.iae(t3);
          dif -= 2 * t3;
        }
        if (x < sourceWidth) {
          if (offsetSource !== (offsetSource | 0))
            throw $.iae(offsetSource);
          if (offsetSource < 0 || offsetSource >= t2)
            throw $.ioore(offsetSource);
          color = destinationData[offsetSource];
        } else
          color = 0;
        buffer[x + t4 & 1023] = color;
        if (typeof color !== 'number')
          throw $.iae(color);
        dif += color;
        sum += dif;
        offsetSource += 4;
      }
    }
  $._unpremultiplyAlpha(destinationData);
  destinationContext.putImageData$3(destinationImageData, $.sub(destinationPoint.x, t4), $.sub(destinationPoint.y, t6));
},
 apply$4$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16) {
  switch (state0) {
    case 1:
      sourceData = env3;
      sourceImageData = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 2:
      sourceWidth = env4;
      sourceData = env3;
      sourceImageData = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 3:
      sourceHeight = env4;
      sourceWidth = env3;
      sourceData = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 4:
      sourceHeight = env5;
      sourceWidth = env4;
      sourceData = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      t4 = env0;
      break;
    case 5:
      sourceHeight = env7;
      sourceWidth = env6;
      sourceData = env5;
      destinationPoint = env4;
      weightX = env3;
      t6 = env2;
      destinationBitmapData = env1;
      t4 = env0;
      break;
    case 6:
      ry2 = env16;
      rx2 = env15;
      weightY = env14;
      weightX = env13;
      destinationImageData = env12;
      sourceHeight = env11;
      sourceWidth = env10;
      sourceData = env9;
      destinationData = env8;
      destinationContext = env7;
      destinationPoint = env6;
      destinationWidth4 = env5;
      sourceWidth4 = env4;
      t6 = env3;
      destinationHeight = env2;
      t4 = env1;
      destinationWidth = env0;
      break;
  }
  switch (state0) {
    case 0:
      sourceImageData = sourceBitmapData._getContext$0().getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
      sourceData = sourceImageData.get$data();
    case 1:
      state0 = 0;
      sourceWidth = sourceImageData.get$width();
    case 2:
      state0 = 0;
      sourceHeight = sourceImageData.get$height();
    case 3:
      state0 = 0;
      t4 = this.blurX;
    case 4:
      state0 = 0;
      weightX = $.mul(t4, t4);
      t6 = this.blurY;
    case 5:
      state0 = 0;
      weightY = $.mul(t6, t6);
      rx2 = $.mul(t4, 2);
      ry2 = $.mul(t6, 2);
      destinationWidth = $.add(sourceWidth, rx2);
      destinationHeight = $.add(sourceHeight, ry2);
      sourceWidth4 = $.mul(sourceWidth, 4);
      destinationWidth4 = $.mul(destinationWidth, 4);
      destinationContext = destinationBitmapData._getContext$0();
      destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
      destinationData = destinationImageData.get$data();
    case 6:
      var sourceImageData, sourceData, destinationPoint, destinationBitmapData, sourceWidth, sourceHeight, t4, weightX, t6, weightY, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, destinationContext, destinationImageData, destinationData, buffer, rx1, z, x, sum, offsetSource, offsetDestination, dif, y, t1, t2, color;
      state0 = 0;
      $._premultiplyAlpha(sourceData);
      buffer = $._ListImpl_List(1024);
      for (rx1 = t4, z = 0; z < 4; ++z)
        for (x = 0; $.ltB(x, sourceWidth); ++x) {
          sum = $.shr(weightY, 1);
          offsetSource = x * 4 + z;
          if (typeof rx1 !== 'number')
            throw $.iae(rx1);
          offsetDestination = (x + rx1) * 4 + z;
          for (dif = 0, y = 0; $.ltB(y, destinationHeight); ++y) {
            $.indexSet(destinationData, offsetDestination, $.tdiv(sum, weightY));
            if (typeof destinationWidth4 !== 'number')
              throw $.iae(destinationWidth4);
            offsetDestination += destinationWidth4;
            if ($.geB(y, ry2)) {
              t1 = buffer[y & 1023];
              if (typeof t1 !== 'number')
                throw $.iae(t1);
              t1 = 2 * t1;
              if (typeof t6 !== 'number')
                throw $.iae(t6);
              t2 = buffer[y - t6 & 1023];
              if (typeof t2 !== 'number')
                throw $.iae(t2);
              dif -= t1 - t2;
            } else if ($.geB(y, t6)) {
              t1 = buffer[y & 1023];
              if (typeof t1 !== 'number')
                throw $.iae(t1);
              dif -= 2 * t1;
            }
            color = $.ltB(y, sourceHeight) ? $.index(sourceData, offsetSource) : 0;
            if (typeof t6 !== 'number')
              throw $.iae(t6);
            buffer[y + t6 & 1023] = color;
            if (typeof color !== 'number')
              throw $.iae(color);
            dif += color;
            sum = $.add(sum, dif);
            if (typeof sourceWidth4 !== 'number')
              throw $.iae(sourceWidth4);
            offsetSource += sourceWidth4;
          }
        }
      for (z = 0; z < 4; ++z)
        for (y = 0; $.ltB(y, destinationHeight); ++y) {
          sum = $.shr(weightX, 1);
          if (typeof destinationWidth4 !== 'number')
            throw $.iae(destinationWidth4);
          t1 = y * destinationWidth4;
          t2 = $.mul(rx1, 4);
          if (typeof t2 !== 'number')
            throw $.iae(t2);
          offsetSource = t1 + t2 + z;
          offsetDestination = t1 + z;
          for (dif = 0, x = 0; $.ltB(x, destinationWidth); ++x) {
            $.indexSet(destinationData, offsetDestination, $.tdiv(sum, weightX));
            offsetDestination += 4;
            if ($.geB(x, rx2)) {
              t1 = buffer[x & 1023];
              if (typeof t1 !== 'number')
                throw $.iae(t1);
              t1 = 2 * t1;
              if (typeof rx1 !== 'number')
                throw $.iae(rx1);
              t2 = buffer[x - rx1 & 1023];
              if (typeof t2 !== 'number')
                throw $.iae(t2);
              dif -= t1 - t2;
            } else if ($.geB(x, rx1)) {
              t1 = buffer[x & 1023];
              if (typeof t1 !== 'number')
                throw $.iae(t1);
              dif -= 2 * t1;
            }
            color = $.ltB(x, sourceWidth) ? $.index(destinationData, offsetSource) : 0;
            if (typeof rx1 !== 'number')
              throw $.iae(rx1);
            buffer[x + rx1 & 1023] = color;
            if (typeof color !== 'number')
              throw $.iae(color);
            dif += color;
            sum = $.add(sum, dif);
            offsetSource += 4;
          }
        }
      $._unpremultiplyAlpha(destinationData);
      destinationContext.putImageData$3(destinationImageData, $.sub(destinationPoint.x, rx1), $.sub(destinationPoint.y, t6));
  }
},
 BlurFilter$2: function(blurX, blurY) {
  var t1 = this.blurX;
  if ($.ltB(t1, 1) || $.ltB(this.blurY, 1))
    throw $.$$throw($.ArgumentError$('Error #9004: The minimum blur size is 1.'));
  if ($.gtB(t1, 128) || $.gtB(this.blurY, 128))
    throw $.$$throw($.ArgumentError$('Error #9004: The maximum blur size is 128.'));
}
};

$$.ColorMatrixFilter = {"": ["matrix"],
 "super": "BitmapFilter",
 apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
  var imageData, data, t2, a00, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, t1, index, srcR, t3, srcG, t4, srcB, t5, srcA, t6;
  imageData = sourceBitmapData._getContext$0().getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
  data = imageData.get$data();
  if (typeof data !== 'object' || data === null || (data.constructor !== Array || !!data.immutable$list) && !data.is$JavaScriptIndexingBehavior())
    return this.apply$4$bailout(1, destinationBitmapData, destinationPoint, imageData, data);
  t2 = this.matrix;
  a00 = $.toInt($.mul($.index(t2, 0), 65536));
  if (typeof a00 !== 'number')
    return this.apply$4$bailout(2, destinationBitmapData, destinationPoint, a00, t2, imageData, data);
  a01 = $.toInt($.mul($.index(t2, 1), 65536));
  if (typeof a01 !== 'number')
    return this.apply$4$bailout(3, destinationBitmapData, destinationPoint, a00, t2, imageData, data, a01);
  a02 = $.toInt($.mul($.index(t2, 2), 65536));
  if (typeof a02 !== 'number')
    return this.apply$4$bailout(4, destinationBitmapData, destinationPoint, a00, a02, t2, imageData, data, a01);
  a03 = $.toInt($.mul($.index(t2, 3), 65536));
  if (typeof a03 !== 'number')
    return this.apply$4$bailout(5, destinationBitmapData, destinationPoint, a00, a02, t2, imageData, data, a01, a03);
  a04 = $.toInt($.mul($.index(t2, 4), 65536));
  if (typeof a04 !== 'number')
    return this.apply$4$bailout(6, destinationBitmapData, destinationPoint, a00, a02, a04, t2, imageData, data, a01, a03);
  a05 = $.toInt($.mul($.index(t2, 5), 65536));
  if (typeof a05 !== 'number')
    return this.apply$4$bailout(7, a05, destinationBitmapData, destinationPoint, a00, a02, a04, t2, imageData, data, a01, a03);
  a06 = $.toInt($.mul($.index(t2, 6), 65536));
  if (typeof a06 !== 'number')
    return this.apply$4$bailout(8, destinationBitmapData, destinationPoint, a06, a02, imageData, data, a03, a00, a04, t2, a01, a05);
  a07 = $.toInt($.mul($.index(t2, 7), 65536));
  if (typeof a07 !== 'number')
    return this.apply$4$bailout(9, destinationBitmapData, destinationPoint, a06, a02, imageData, data, a03, a07, a00, a04, t2, a01, a05);
  a08 = $.toInt($.mul($.index(t2, 8), 65536));
  if (typeof a08 !== 'number')
    return this.apply$4$bailout(10, destinationBitmapData, destinationPoint, a06, a02, imageData, data, a03, a07, a08, a00, a04, t2, a01, a05);
  a09 = $.toInt($.mul($.index(t2, 9), 65536));
  if (typeof a09 !== 'number')
    return this.apply$4$bailout(11, a05, destinationBitmapData, destinationPoint, a06, a02, imageData, data, a07, a03, a08, a00, a04, t2, a01, a09);
  a10 = $.toInt($.mul($.index(t2, 10), 65536));
  if (typeof a10 !== 'number')
    return this.apply$4$bailout(12, a05, destinationBitmapData, destinationPoint, a06, a10, a02, imageData, data, a07, a03, a08, a00, a04, t2, a01, a09);
  a11 = $.toInt($.mul($.index(t2, 11), 65536));
  if (typeof a11 !== 'number')
    return this.apply$4$bailout(13, a05, destinationBitmapData, destinationPoint, a06, a10, a02, imageData, data, a07, a11, a03, a08, a00, a04, t2, a01, a09);
  a12 = $.toInt($.mul($.index(t2, 12), 65536));
  if (typeof a12 !== 'number')
    return this.apply$4$bailout(14, a05, destinationBitmapData, destinationPoint, a06, a10, a02, imageData, data, a07, a11, a03, a08, a00, a12, t2, a04, a01, a09);
  a13 = $.toInt($.mul($.index(t2, 13), 65536));
  if (typeof a13 !== 'number')
    return this.apply$4$bailout(15, a13, destinationBitmapData, destinationPoint, a06, a10, a05, a02, imageData, data, a07, a11, a03, a08, a00, a12, t2, a04, a01, a09);
  a14 = $.toInt($.mul($.index(t2, 14), 65536));
  if (typeof a14 !== 'number')
    return this.apply$4$bailout(16, a13, destinationBitmapData, destinationPoint, a14, a06, a05, a10, imageData, data, a07, a11, a02, a03, a08, a00, a12, t2, a04, a01, a09);
  a15 = $.toInt($.mul($.index(t2, 15), 65536));
  if (typeof a15 !== 'number')
    return this.apply$4$bailout(17, a13, destinationBitmapData, destinationPoint, a14, a06, a05, a10, imageData, data, a15, a07, a02, a11, a03, a08, a00, a12, t2, a04, a09, a01);
  a16 = $.toInt($.mul($.index(t2, 16), 65536));
  if (typeof a16 !== 'number')
    return this.apply$4$bailout(18, a13, destinationBitmapData, destinationPoint, a14, a06, a05, a10, imageData, data, a15, a07, a02, a11, a03, a16, a08, a00, t2, a12, a09, a01, a04);
  a17 = $.toInt($.mul($.index(t2, 17), 65536));
  if (typeof a17 !== 'number')
    return this.apply$4$bailout(19, a17, destinationBitmapData, destinationPoint, a14, a06, a13, a10, imageData, data, a15, a07, a02, a11, a05, a03, a16, a08, a00, t2, a12, a09, a01, a04);
  a18 = $.toInt($.mul($.index(t2, 18), 65536));
  if (typeof a18 !== 'number')
    return this.apply$4$bailout(20, destinationBitmapData, destinationPoint, a14, a06, imageData, data, a15, a07, a16, a08, a00, a17, a09, a01, a18, a10, a02, a11, a03, a12, a04, t2, a13, a05);
  a19 = $.toInt($.mul($.index(t2, 19), 65536));
  if (typeof a19 !== 'number')
    return this.apply$4$bailout(21, destinationBitmapData, destinationPoint, a14, a06, imageData, data, a15, a07, a16, a08, a00, a17, a09, a01, a18, a10, a02, a19, a11, a03, a12, a04, a13, a05);
  if ($.get$_isLittleEndianSystem() === true)
    for (t1 = data.length, index = 0; index <= t1 - 4; index += 4) {
      t2 = index + 0;
      srcR = data[t2];
      t3 = index + 1;
      srcG = data[t3];
      t4 = index + 2;
      srcB = data[t4];
      t5 = index + 3;
      srcA = data[t5];
      if (typeof srcR !== 'number')
        throw $.iae(srcR);
      t6 = a00 * srcR;
      if (typeof srcG !== 'number')
        throw $.iae(srcG);
      t6 += a01 * srcG;
      if (typeof srcB !== 'number')
        throw $.iae(srcB);
      t6 += a02 * srcB;
      if (typeof srcA !== 'number')
        throw $.iae(srcA);
      data[t2] = $.tdiv(t6 + a03 * srcA + a04, 65536);
      data[t3] = $.tdiv(a05 * srcR + a06 * srcG + a07 * srcB + a08 * srcA + a09, 65536);
      data[t4] = $.tdiv(a10 * srcR + a11 * srcG + a12 * srcB + a13 * srcA + a14, 65536);
      data[t5] = $.tdiv(a15 * srcR + a16 * srcG + a17 * srcB + a18 * srcA + a19, 65536);
    }
  else
    for (t1 = data.length, index = 0; index <= t1 - 4; index += 4) {
      t2 = index + 0;
      srcA = data[t2];
      t3 = index + 1;
      srcB = data[t3];
      t4 = index + 2;
      srcG = data[t4];
      t5 = index + 3;
      srcR = data[t5];
      if (typeof srcR !== 'number')
        throw $.iae(srcR);
      t6 = a15 * srcR;
      if (typeof srcG !== 'number')
        throw $.iae(srcG);
      t6 += a16 * srcG;
      if (typeof srcB !== 'number')
        throw $.iae(srcB);
      t6 += a17 * srcB;
      if (typeof srcA !== 'number')
        throw $.iae(srcA);
      data[t2] = $.tdiv(t6 + a18 * srcA + a19, 65536);
      data[t3] = $.tdiv(a10 * srcR + a11 * srcG + a12 * srcB + a13 * srcA + a14, 65536);
      data[t4] = $.tdiv(a05 * srcR + a06 * srcG + a07 * srcB + a08 * srcA + a09, 65536);
      data[t5] = $.tdiv(a00 * srcR + a01 * srcG + a02 * srcB + a03 * srcA + a04, 65536);
    }
  destinationBitmapData._getContext$0().putImageData$3(imageData, destinationPoint.x, destinationPoint.y);
},
 apply$4$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22, env23) {
  switch (state0) {
    case 1:
      data = env3;
      imageData = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 2:
      data = env5;
      imageData = env4;
      t2 = env3;
      a00 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 3:
      a01 = env6;
      data = env5;
      imageData = env4;
      t2 = env3;
      a00 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 4:
      a01 = env7;
      data = env6;
      imageData = env5;
      t2 = env4;
      a02 = env3;
      a00 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 5:
      a03 = env8;
      a01 = env7;
      data = env6;
      imageData = env5;
      t2 = env4;
      a02 = env3;
      a00 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 6:
      a03 = env9;
      a01 = env8;
      data = env7;
      imageData = env6;
      t2 = env5;
      a04 = env4;
      a02 = env3;
      a00 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 7:
      a03 = env10;
      a01 = env9;
      data = env8;
      imageData = env7;
      t2 = env6;
      a04 = env5;
      a02 = env4;
      a00 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a05 = env0;
      break;
    case 8:
      a05 = env11;
      a01 = env10;
      t2 = env9;
      a04 = env8;
      a00 = env7;
      a03 = env6;
      data = env5;
      imageData = env4;
      a02 = env3;
      a06 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 9:
      a05 = env12;
      a01 = env11;
      t2 = env10;
      a04 = env9;
      a00 = env8;
      a07 = env7;
      a03 = env6;
      data = env5;
      imageData = env4;
      a02 = env3;
      a06 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 10:
      a05 = env13;
      a01 = env12;
      t2 = env11;
      a04 = env10;
      a00 = env9;
      a08 = env8;
      a07 = env7;
      a03 = env6;
      data = env5;
      imageData = env4;
      a02 = env3;
      a06 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 11:
      a09 = env14;
      a01 = env13;
      t2 = env12;
      a04 = env11;
      a00 = env10;
      a08 = env9;
      a03 = env8;
      a07 = env7;
      data = env6;
      imageData = env5;
      a02 = env4;
      a06 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a05 = env0;
      break;
    case 12:
      a09 = env15;
      a01 = env14;
      t2 = env13;
      a04 = env12;
      a00 = env11;
      a08 = env10;
      a03 = env9;
      a07 = env8;
      data = env7;
      imageData = env6;
      a02 = env5;
      a10 = env4;
      a06 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a05 = env0;
      break;
    case 13:
      a09 = env16;
      a01 = env15;
      t2 = env14;
      a04 = env13;
      a00 = env12;
      a08 = env11;
      a03 = env10;
      a11 = env9;
      a07 = env8;
      data = env7;
      imageData = env6;
      a02 = env5;
      a10 = env4;
      a06 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a05 = env0;
      break;
    case 14:
      a09 = env17;
      a01 = env16;
      a04 = env15;
      t2 = env14;
      a12 = env13;
      a00 = env12;
      a08 = env11;
      a03 = env10;
      a11 = env9;
      a07 = env8;
      data = env7;
      imageData = env6;
      a02 = env5;
      a10 = env4;
      a06 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a05 = env0;
      break;
    case 15:
      a09 = env18;
      a01 = env17;
      a04 = env16;
      t2 = env15;
      a12 = env14;
      a00 = env13;
      a08 = env12;
      a03 = env11;
      a11 = env10;
      a07 = env9;
      data = env8;
      imageData = env7;
      a02 = env6;
      a05 = env5;
      a10 = env4;
      a06 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a13 = env0;
      break;
    case 16:
      a09 = env19;
      a01 = env18;
      a04 = env17;
      t2 = env16;
      a12 = env15;
      a00 = env14;
      a08 = env13;
      a03 = env12;
      a02 = env11;
      a11 = env10;
      a07 = env9;
      data = env8;
      imageData = env7;
      a10 = env6;
      a05 = env5;
      a06 = env4;
      a14 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a13 = env0;
      break;
    case 17:
      a01 = env20;
      a09 = env19;
      a04 = env18;
      t2 = env17;
      a12 = env16;
      a00 = env15;
      a08 = env14;
      a03 = env13;
      a11 = env12;
      a02 = env11;
      a07 = env10;
      a15 = env9;
      data = env8;
      imageData = env7;
      a10 = env6;
      a05 = env5;
      a06 = env4;
      a14 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a13 = env0;
      break;
    case 18:
      a04 = env21;
      a01 = env20;
      a09 = env19;
      a12 = env18;
      t2 = env17;
      a00 = env16;
      a08 = env15;
      a16 = env14;
      a03 = env13;
      a11 = env12;
      a02 = env11;
      a07 = env10;
      a15 = env9;
      data = env8;
      imageData = env7;
      a10 = env6;
      a05 = env5;
      a06 = env4;
      a14 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a13 = env0;
      break;
    case 19:
      a04 = env22;
      a01 = env21;
      a09 = env20;
      a12 = env19;
      t2 = env18;
      a00 = env17;
      a08 = env16;
      a16 = env15;
      a03 = env14;
      a05 = env13;
      a11 = env12;
      a02 = env11;
      a07 = env10;
      a15 = env9;
      data = env8;
      imageData = env7;
      a10 = env6;
      a13 = env5;
      a06 = env4;
      a14 = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      a17 = env0;
      break;
    case 20:
      a05 = env23;
      a13 = env22;
      t2 = env21;
      a04 = env20;
      a12 = env19;
      a03 = env18;
      a11 = env17;
      a02 = env16;
      a10 = env15;
      a18 = env14;
      a01 = env13;
      a09 = env12;
      a17 = env11;
      a00 = env10;
      a08 = env9;
      a16 = env8;
      a07 = env7;
      a15 = env6;
      data = env5;
      imageData = env4;
      a06 = env3;
      a14 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 21:
      a05 = env23;
      a13 = env22;
      a04 = env21;
      a12 = env20;
      a03 = env19;
      a11 = env18;
      a19 = env17;
      a02 = env16;
      a10 = env15;
      a18 = env14;
      a01 = env13;
      a09 = env12;
      a17 = env11;
      a00 = env10;
      a08 = env9;
      a16 = env8;
      a07 = env7;
      a15 = env6;
      data = env5;
      imageData = env4;
      a06 = env3;
      a14 = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
  }
  switch (state0) {
    case 0:
      imageData = sourceBitmapData._getContext$0().getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height);
      data = imageData.get$data();
    case 1:
      state0 = 0;
      t2 = this.matrix;
      a00 = $.toInt($.mul($.index(t2, 0), 65536));
    case 2:
      state0 = 0;
      a01 = $.toInt($.mul($.index(t2, 1), 65536));
    case 3:
      state0 = 0;
      a02 = $.toInt($.mul($.index(t2, 2), 65536));
    case 4:
      state0 = 0;
      a03 = $.toInt($.mul($.index(t2, 3), 65536));
    case 5:
      state0 = 0;
      a04 = $.toInt($.mul($.index(t2, 4), 65536));
    case 6:
      state0 = 0;
      a05 = $.toInt($.mul($.index(t2, 5), 65536));
    case 7:
      state0 = 0;
      a06 = $.toInt($.mul($.index(t2, 6), 65536));
    case 8:
      state0 = 0;
      a07 = $.toInt($.mul($.index(t2, 7), 65536));
    case 9:
      state0 = 0;
      a08 = $.toInt($.mul($.index(t2, 8), 65536));
    case 10:
      state0 = 0;
      a09 = $.toInt($.mul($.index(t2, 9), 65536));
    case 11:
      state0 = 0;
      a10 = $.toInt($.mul($.index(t2, 10), 65536));
    case 12:
      state0 = 0;
      a11 = $.toInt($.mul($.index(t2, 11), 65536));
    case 13:
      state0 = 0;
      a12 = $.toInt($.mul($.index(t2, 12), 65536));
    case 14:
      state0 = 0;
      a13 = $.toInt($.mul($.index(t2, 13), 65536));
    case 15:
      state0 = 0;
      a14 = $.toInt($.mul($.index(t2, 14), 65536));
    case 16:
      state0 = 0;
      a15 = $.toInt($.mul($.index(t2, 15), 65536));
    case 17:
      state0 = 0;
      a16 = $.toInt($.mul($.index(t2, 16), 65536));
    case 18:
      state0 = 0;
      a17 = $.toInt($.mul($.index(t2, 17), 65536));
    case 19:
      state0 = 0;
      a18 = $.toInt($.mul($.index(t2, 18), 65536));
    case 20:
      state0 = 0;
      a19 = $.toInt($.mul($.index(t2, 19), 65536));
    case 21:
      var imageData, data, destinationPoint, destinationBitmapData, t2, a00, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, index, t1, srcR, srcG, t3, srcB, t4, srcA;
      state0 = 0;
      if ($.get$_isLittleEndianSystem() === true)
        for (index = 0; $.leB(index, $.sub($.get$length(data), 4)); index += 4) {
          t1 = index + 0;
          srcR = $.index(data, t1);
          t2 = index + 1;
          srcG = $.index(data, t2);
          t3 = index + 2;
          srcB = $.index(data, t3);
          t4 = index + 3;
          srcA = $.index(data, t4);
          $.indexSet(data, t1, $.tdiv($.add($.add($.add($.add($.mul(a00, srcR), $.mul(a01, srcG)), $.mul(a02, srcB)), $.mul(a03, srcA)), a04), 65536));
          $.indexSet(data, t2, $.tdiv($.add($.add($.add($.add($.mul(a05, srcR), $.mul(a06, srcG)), $.mul(a07, srcB)), $.mul(a08, srcA)), a09), 65536));
          $.indexSet(data, t3, $.tdiv($.add($.add($.add($.add($.mul(a10, srcR), $.mul(a11, srcG)), $.mul(a12, srcB)), $.mul(a13, srcA)), a14), 65536));
          $.indexSet(data, t4, $.tdiv($.add($.add($.add($.add($.mul(a15, srcR), $.mul(a16, srcG)), $.mul(a17, srcB)), $.mul(a18, srcA)), a19), 65536));
        }
      else
        for (index = 0; $.leB(index, $.sub($.get$length(data), 4)); index += 4) {
          t1 = index + 0;
          srcA = $.index(data, t1);
          t2 = index + 1;
          srcB = $.index(data, t2);
          t3 = index + 2;
          srcG = $.index(data, t3);
          t4 = index + 3;
          srcR = $.index(data, t4);
          $.indexSet(data, t1, $.tdiv($.add($.add($.add($.add($.mul(a15, srcR), $.mul(a16, srcG)), $.mul(a17, srcB)), $.mul(a18, srcA)), a19), 65536));
          $.indexSet(data, t2, $.tdiv($.add($.add($.add($.add($.mul(a10, srcR), $.mul(a11, srcG)), $.mul(a12, srcB)), $.mul(a13, srcA)), a14), 65536));
          $.indexSet(data, t3, $.tdiv($.add($.add($.add($.add($.mul(a05, srcR), $.mul(a06, srcG)), $.mul(a07, srcB)), $.mul(a08, srcA)), a09), 65536));
          $.indexSet(data, t4, $.tdiv($.add($.add($.add($.add($.mul(a00, srcR), $.mul(a01, srcG)), $.mul(a02, srcB)), $.mul(a03, srcA)), a04), 65536));
        }
      destinationBitmapData._getContext$0().putImageData$3(imageData, destinationPoint.x, destinationPoint.y);
  }
}
};

$$.DropShadowFilter = {"": ["distance", "angle", "color?", "alpha", "blurX", "blurY", "strength", "inner", "knockout", "hideObject"],
 "super": "BitmapFilter",
 apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
  var sourceContext, sourceData, sourceWidth, sourceHeight, t4, weightX, t6, weightY, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, alphaChannel, destinationContext, destinationImageData, destinationData, buffer, x, sum, offsetSource, offsetDestination, t1, t2, dif, y, t3, t5, alpha, aColor, rColor, gColor, bColor, i, sx, sy, dx, dy, uRect;
  sourceContext = sourceBitmapData._getContext$0();
  sourceData = sourceContext.getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height).get$data();
  if (typeof sourceData !== 'string' && (typeof sourceData !== 'object' || sourceData === null || sourceData.constructor !== Array && !sourceData.is$JavaScriptIndexingBehavior()))
    return this.apply$4$bailout(1, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext);
  sourceWidth = sourceRect.width;
  if (typeof sourceWidth !== 'number')
    return this.apply$4$bailout(2, sourceRect, destinationBitmapData, destinationPoint, sourceContext, sourceData, sourceWidth);
  sourceHeight = sourceRect.height;
  if (typeof sourceHeight !== 'number')
    return this.apply$4$bailout(3, destinationBitmapData, destinationPoint, sourceContext, sourceData, sourceWidth, sourceHeight);
  t4 = this.blurX;
  if (t4 !== (t4 | 0))
    return this.apply$4$bailout(4, destinationBitmapData, destinationPoint, sourceContext, sourceData, sourceWidth, sourceHeight, t4);
  weightX = t4 * t4;
  t6 = this.blurY;
  if (t6 !== (t6 | 0))
    return this.apply$4$bailout(5, t6, destinationBitmapData, destinationPoint, weightX, sourceContext, sourceData, sourceWidth, sourceHeight, t4);
  weightY = t6 * t6;
  rx2 = t4 * 2;
  ry2 = t6 * 2;
  destinationWidth = sourceWidth + rx2;
  destinationHeight = sourceHeight + ry2;
  sourceWidth4 = sourceWidth * 4;
  destinationWidth4 = destinationWidth * 4;
  alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
  destinationContext = destinationBitmapData._getContext$0();
  destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
  destinationData = destinationImageData.get$data();
  if (typeof destinationData !== 'object' || destinationData === null || (destinationData.constructor !== Array || !!destinationData.immutable$list) && !destinationData.is$JavaScriptIndexingBehavior())
    return this.apply$4$bailout(6, destinationWidth, destinationHeight, destinationPoint, sourceWidth4, sourceContext, destinationWidth4, sourceData, sourceWidth, sourceHeight, t4, t6, alphaChannel, weightX, destinationData, destinationContext, weightY, destinationImageData, rx2, ry2);
  buffer = $._ListImpl_List(1024);
  for (x = 0; x < sourceWidth; ++x) {
    sum = $.shr(weightY, 1);
    offsetSource = x * 4 + alphaChannel;
    offsetDestination = (x + t4) * 4 + alphaChannel;
    for (t1 = sourceData.length, t2 = destinationData.length, dif = 0, y = 0; y < destinationHeight; ++y) {
      t3 = $.tdiv(sum, weightY);
      if (offsetDestination !== (offsetDestination | 0))
        throw $.iae(offsetDestination);
      if (offsetDestination < 0 || offsetDestination >= t2)
        throw $.ioore(offsetDestination);
      destinationData[offsetDestination] = t3;
      offsetDestination += destinationWidth4;
      if (y >= ry2) {
        t3 = buffer[y & 1023];
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        t3 = 2 * t3;
        t5 = buffer[y - t6 & 1023];
        if (typeof t5 !== 'number')
          throw $.iae(t5);
        dif -= t3 - t5;
      } else if (y >= t6) {
        t3 = buffer[y & 1023];
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        dif -= 2 * t3;
      }
      if (y < sourceHeight) {
        if (offsetSource !== (offsetSource | 0))
          throw $.iae(offsetSource);
        if (offsetSource < 0 || offsetSource >= t1)
          throw $.ioore(offsetSource);
        alpha = sourceData[offsetSource];
      } else
        alpha = 0;
      buffer[y + t6 & 1023] = alpha;
      if (typeof alpha !== 'number')
        throw $.iae(alpha);
      dif += alpha;
      sum += dif;
      offsetSource += sourceWidth4;
    }
  }
  for (t1 = t4 * 4, y = 0; y < destinationHeight; ++y) {
    sum = $.shr(weightX, 1);
    t2 = y * destinationWidth4;
    offsetSource = t2 + t1 + alphaChannel;
    offsetDestination = t2 + alphaChannel;
    for (t2 = destinationData.length, dif = 0, x = 0; x < destinationWidth; ++x) {
      t3 = $.tdiv(sum, weightX);
      if (offsetDestination !== (offsetDestination | 0))
        throw $.iae(offsetDestination);
      if (offsetDestination < 0 || offsetDestination >= t2)
        throw $.ioore(offsetDestination);
      destinationData[offsetDestination] = t3;
      offsetDestination += 4;
      if (x >= rx2) {
        t3 = buffer[x & 1023];
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        t3 = 2 * t3;
        t5 = buffer[x - t4 & 1023];
        if (typeof t5 !== 'number')
          throw $.iae(t5);
        dif -= t3 - t5;
      } else if (x >= t4) {
        t3 = buffer[x & 1023];
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        dif -= 2 * t3;
      }
      if (x < sourceWidth) {
        if (offsetSource !== (offsetSource | 0))
          throw $.iae(offsetSource);
        if (offsetSource < 0 || offsetSource >= t2)
          throw $.ioore(offsetSource);
        alpha = destinationData[offsetSource];
      } else
        alpha = 0;
      buffer[x + t4 & 1023] = alpha;
      if (typeof alpha !== 'number')
        throw $.iae(alpha);
      dif += alpha;
      sum += dif;
      offsetSource += 4;
    }
  }
  aColor = $.toInt($.mul(this.alpha, 256));
  if (typeof aColor !== 'number')
    return this.apply$4$bailout(7, destinationWidth, destinationHeight, destinationPoint, t4, sourceContext, sourceWidth, sourceHeight, t6, destinationContext, destinationImageData, destinationData, aColor);
  t2 = this.color;
  rColor = $.and($.shr(t2, 16), 255);
  if (rColor !== (rColor | 0))
    return this.apply$4$bailout(8, rColor, destinationWidth, t2, destinationHeight, destinationPoint, t4, sourceContext, sourceWidth, sourceHeight, t6, destinationContext, destinationImageData, destinationData, aColor);
  gColor = $.and($.shr(t2, 8), 255);
  if (gColor !== (gColor | 0))
    return this.apply$4$bailout(9, rColor, destinationWidth, t2, destinationHeight, destinationPoint, t4, gColor, sourceContext, sourceWidth, sourceHeight, t6, destinationContext, destinationImageData, destinationData, aColor);
  bColor = $.and($.shr(t2, 0), 255);
  if (bColor !== (bColor | 0))
    return this.apply$4$bailout(10, rColor, destinationWidth, destinationHeight, destinationPoint, t4, gColor, sourceContext, bColor, sourceWidth, sourceHeight, t6, destinationContext, destinationImageData, destinationData, aColor);
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; i <= destinationData.length - 4; i += 4) {
      t1 = i + 3;
      if ($.gtB(destinationData[t1], 0)) {
        t2 = i + 0;
        t3 = destinationData.length;
        if (t2 >= t3)
          throw $.ioore(t2);
        destinationData[t2] = rColor;
        t2 = i + 1;
        if (t2 >= t3)
          throw $.ioore(t2);
        destinationData[t2] = gColor;
        t2 = i + 2;
        if (t2 >= t3)
          throw $.ioore(t2);
        destinationData[t2] = bColor;
        if (t1 >= t3)
          throw $.ioore(t1);
        t2 = $.tdiv($.mul(destinationData[t1], aColor), 256);
        if (t1 >= destinationData.length)
          throw $.ioore(t1);
        destinationData[t1] = t2;
      }
    }
  else
    for (i = 0; i <= destinationData.length - 4; i += 4) {
      t1 = i + 3;
      if ($.gtB(destinationData[t1], 0)) {
        t2 = i + 0;
        if (t2 >= destinationData.length)
          throw $.ioore(t2);
        t3 = $.tdiv($.mul(destinationData[t2], aColor), 256);
        t5 = destinationData.length;
        if (t2 >= t5)
          throw $.ioore(t2);
        destinationData[t2] = t3;
        t3 = i + 1;
        if (t3 >= t5)
          throw $.ioore(t3);
        destinationData[t3] = bColor;
        t3 = i + 2;
        if (t3 >= t5)
          throw $.ioore(t3);
        destinationData[t3] = gColor;
        if (t1 >= t5)
          throw $.ioore(t1);
        destinationData[t1] = rColor;
      }
    }
  sx = destinationPoint.x;
  sy = destinationPoint.y;
  t1 = $.sub(sx, t4);
  t2 = this.distance;
  t3 = this.angle;
  dx = $.add(t1, $.toInt($.round($.mul(t2, $.cos(t3)))));
  dy = $.add($.sub(destinationPoint.y, t6), $.toInt($.round($.mul(t2, $.sin(t3)))));
  uRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight).union$1($.Rectangle$(dx, dy, destinationWidth, destinationHeight));
  destinationContext.setTransform$6(1, 0, 0, 1, 0, 0);
  destinationContext.clearRect$4(uRect.get$x(), uRect.get$y(), uRect.get$width(), uRect.get$height());
  destinationContext.putImageData$3(destinationImageData, dx, dy);
  if ($.eqB(this.hideObject, false))
    destinationContext.drawImage$3(sourceContext.get$canvas(), sx, sy);
},
 apply$4$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18) {
  switch (state0) {
    case 1:
      sourceContext = env4;
      sourceData = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      sourceRect = env0;
      break;
    case 2:
      sourceWidth = env5;
      sourceData = env4;
      sourceContext = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      sourceRect = env0;
      break;
    case 3:
      sourceHeight = env5;
      sourceWidth = env4;
      sourceData = env3;
      sourceContext = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 4:
      t4 = env6;
      sourceHeight = env5;
      sourceWidth = env4;
      sourceData = env3;
      sourceContext = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 5:
      t4 = env8;
      sourceHeight = env7;
      sourceWidth = env6;
      sourceData = env5;
      sourceContext = env4;
      weightX = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      t6 = env0;
      break;
    case 6:
      ry2 = env18;
      rx2 = env17;
      destinationImageData = env16;
      weightY = env15;
      destinationContext = env14;
      destinationData = env13;
      weightX = env12;
      alphaChannel = env11;
      t6 = env10;
      t4 = env9;
      sourceHeight = env8;
      sourceWidth = env7;
      sourceData = env6;
      destinationWidth4 = env5;
      sourceContext = env4;
      sourceWidth4 = env3;
      destinationPoint = env2;
      destinationHeight = env1;
      destinationWidth = env0;
      break;
    case 7:
      aColor = env11;
      destinationData = env10;
      destinationImageData = env9;
      destinationContext = env8;
      t6 = env7;
      sourceHeight = env6;
      sourceWidth = env5;
      sourceContext = env4;
      rx1 = env3;
      destinationPoint = env2;
      destinationHeight = env1;
      destinationWidth = env0;
      break;
    case 8:
      aColor = env13;
      destinationData = env12;
      destinationImageData = env11;
      destinationContext = env10;
      t6 = env9;
      sourceHeight = env8;
      sourceWidth = env7;
      sourceContext = env6;
      rx1 = env5;
      destinationPoint = env4;
      destinationHeight = env3;
      t2 = env2;
      destinationWidth = env1;
      rColor = env0;
      break;
    case 9:
      aColor = env14;
      destinationData = env13;
      destinationImageData = env12;
      destinationContext = env11;
      t6 = env10;
      sourceHeight = env9;
      sourceWidth = env8;
      sourceContext = env7;
      gColor = env6;
      rx1 = env5;
      destinationPoint = env4;
      destinationHeight = env3;
      t2 = env2;
      destinationWidth = env1;
      rColor = env0;
      break;
    case 10:
      aColor = env14;
      destinationData = env13;
      destinationImageData = env12;
      destinationContext = env11;
      t6 = env10;
      sourceHeight = env9;
      sourceWidth = env8;
      bColor = env7;
      sourceContext = env6;
      gColor = env5;
      rx1 = env4;
      destinationPoint = env3;
      destinationHeight = env2;
      destinationWidth = env1;
      rColor = env0;
      break;
  }
  switch (state0) {
    case 0:
      sourceContext = sourceBitmapData._getContext$0();
      sourceData = sourceContext.getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height).get$data();
    case 1:
      state0 = 0;
      sourceWidth = sourceRect.width;
    case 2:
      state0 = 0;
      sourceHeight = sourceRect.height;
    case 3:
      state0 = 0;
      t4 = this.blurX;
    case 4:
      state0 = 0;
      weightX = $.mul(t4, t4);
      t6 = this.blurY;
    case 5:
      state0 = 0;
      weightY = $.mul(t6, t6);
      rx2 = $.mul(t4, 2);
      ry2 = $.mul(t6, 2);
      destinationWidth = $.add(sourceWidth, rx2);
      destinationHeight = $.add(sourceHeight, ry2);
      sourceWidth4 = $.mul(sourceWidth, 4);
      destinationWidth4 = $.mul(destinationWidth, 4);
      alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
      destinationContext = destinationBitmapData._getContext$0();
      destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
      destinationData = destinationImageData.get$data();
    case 6:
      state0 = 0;
      buffer = $._ListImpl_List(1024);
      for (rx1 = t4, x = 0; $.ltB(x, sourceWidth); ++x) {
        sum = $.shr(weightY, 1);
        offsetSource = x * 4 + alphaChannel;
        if (typeof rx1 !== 'number')
          throw $.iae(rx1);
        offsetDestination = (x + rx1) * 4 + alphaChannel;
        for (dif = 0, y = 0; $.ltB(y, destinationHeight); ++y) {
          $.indexSet(destinationData, offsetDestination, $.tdiv(sum, weightY));
          if (typeof destinationWidth4 !== 'number')
            throw $.iae(destinationWidth4);
          offsetDestination += destinationWidth4;
          if ($.geB(y, ry2)) {
            t1 = buffer[y & 1023];
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 2 * t1;
            if (typeof t6 !== 'number')
              throw $.iae(t6);
            t2 = buffer[y - t6 & 1023];
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            dif -= t1 - t2;
          } else if ($.geB(y, t6)) {
            t1 = buffer[y & 1023];
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            dif -= 2 * t1;
          }
          alpha = $.ltB(y, sourceHeight) ? $.index(sourceData, offsetSource) : 0;
          if (typeof t6 !== 'number')
            throw $.iae(t6);
          buffer[y + t6 & 1023] = alpha;
          if (typeof alpha !== 'number')
            throw $.iae(alpha);
          dif += alpha;
          sum = $.add(sum, dif);
          if (typeof sourceWidth4 !== 'number')
            throw $.iae(sourceWidth4);
          offsetSource += sourceWidth4;
        }
      }
      for (y = 0; $.ltB(y, destinationHeight); ++y) {
        sum = $.shr(weightX, 1);
        if (typeof destinationWidth4 !== 'number')
          throw $.iae(destinationWidth4);
        t1 = y * destinationWidth4;
        t2 = $.mul(rx1, 4);
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        offsetSource = t1 + t2 + alphaChannel;
        offsetDestination = t1 + alphaChannel;
        for (dif = 0, x = 0; $.ltB(x, destinationWidth); ++x) {
          $.indexSet(destinationData, offsetDestination, $.tdiv(sum, weightX));
          offsetDestination += 4;
          if ($.geB(x, rx2)) {
            t1 = buffer[x & 1023];
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 2 * t1;
            if (typeof rx1 !== 'number')
              throw $.iae(rx1);
            t2 = buffer[x - rx1 & 1023];
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            dif -= t1 - t2;
          } else if ($.geB(x, rx1)) {
            t1 = buffer[x & 1023];
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            dif -= 2 * t1;
          }
          alpha = $.ltB(x, sourceWidth) ? $.index(destinationData, offsetSource) : 0;
          if (typeof rx1 !== 'number')
            throw $.iae(rx1);
          buffer[x + rx1 & 1023] = alpha;
          if (typeof alpha !== 'number')
            throw $.iae(alpha);
          dif += alpha;
          sum = $.add(sum, dif);
          offsetSource += 4;
        }
      }
      aColor = $.toInt($.mul(this.alpha, 256));
    case 7:
      state0 = 0;
      t2 = this.color;
      rColor = $.and($.shr(t2, 16), 255);
    case 8:
      state0 = 0;
      gColor = $.and($.shr(t2, 8), 255);
    case 9:
      state0 = 0;
      bColor = $.and($.shr(t2, 0), 255);
    case 10:
      var sourceContext, sourceData, destinationPoint, destinationBitmapData, sourceRect, sourceWidth, sourceHeight, t4, weightX, t6, weightY, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, alphaChannel, destinationContext, destinationImageData, destinationData, buffer, rx1, x, sum, offsetSource, offsetDestination, dif, y, t1, t2, alpha, aColor, rColor, gColor, bColor, i, sx, sy, t3, dx, dy, uRect;
      state0 = 0;
      if ($.get$_isLittleEndianSystem() === true)
        for (i = 0; $.leB(i, $.sub($.get$length(destinationData), 4)); i += 4) {
          t1 = i + 3;
          if ($.gtB($.index(destinationData, t1), 0)) {
            $.indexSet(destinationData, i + 0, rColor);
            $.indexSet(destinationData, i + 1, gColor);
            $.indexSet(destinationData, i + 2, bColor);
            $.indexSet(destinationData, t1, $.tdiv($.mul($.index(destinationData, t1), aColor), 256));
          }
        }
      else
        for (i = 0; $.leB(i, $.sub($.get$length(destinationData), 4)); i += 4) {
          t1 = i + 3;
          if ($.gtB($.index(destinationData, t1), 0)) {
            t2 = i + 0;
            $.indexSet(destinationData, t2, $.tdiv($.mul($.index(destinationData, t2), aColor), 256));
            $.indexSet(destinationData, i + 1, bColor);
            $.indexSet(destinationData, i + 2, gColor);
            $.indexSet(destinationData, t1, rColor);
          }
        }
      sx = destinationPoint.x;
      sy = destinationPoint.y;
      t1 = $.sub(sx, rx1);
      t2 = this.distance;
      t3 = this.angle;
      dx = $.add(t1, $.toInt($.round($.mul(t2, $.cos(t3)))));
      dy = $.add($.sub(destinationPoint.y, t6), $.toInt($.round($.mul(t2, $.sin(t3)))));
      uRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight).union$1($.Rectangle$(dx, dy, destinationWidth, destinationHeight));
      destinationContext.setTransform$6(1, 0, 0, 1, 0, 0);
      destinationContext.clearRect$4(uRect.get$x(), uRect.get$y(), uRect.get$width(), uRect.get$height());
      destinationContext.putImageData$3(destinationImageData, dx, dy);
      if ($.eqB(this.hideObject, false))
        destinationContext.drawImage$3(sourceContext.get$canvas(), sx, sy);
  }
},
 DropShadowFilter$10: function(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
  var t1 = this.blurX;
  if ($.ltB(t1, 1) || $.ltB(this.blurY, 1))
    throw $.$$throw($.ArgumentError$('Error #9004: The minimum blur size is 1.'));
  if ($.gtB(t1, 128) || $.gtB(this.blurY, 128))
    throw $.$$throw($.ArgumentError$('Error #9004: The maximum blur size is 128.'));
}
};

$$.GlowFilter = {"": ["color?", "alpha", "blurX", "blurY", "strength", "inner", "knockout", "hideObject"],
 "super": "BitmapFilter",
 apply$4: function(sourceBitmapData, sourceRect, destinationBitmapData, destinationPoint) {
  var sourceContext, sourceData, sourceWidth, sourceHeight, t4, weightX, t6, weightY, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, alphaChannel, destinationContext, destinationImageData, destinationData, buffer, x, sum, offsetSource, offsetDestination, t1, t2, dif, y, t3, t5, alpha, aColor, rColor, gColor, bColor, i, sx, sy, dx, dy, uRect;
  sourceContext = sourceBitmapData._getContext$0();
  sourceData = sourceContext.getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height).get$data();
  if (typeof sourceData !== 'string' && (typeof sourceData !== 'object' || sourceData === null || sourceData.constructor !== Array && !sourceData.is$JavaScriptIndexingBehavior()))
    return this.apply$4$bailout(1, sourceRect, destinationBitmapData, destinationPoint, sourceData, sourceContext);
  sourceWidth = sourceRect.width;
  if (typeof sourceWidth !== 'number')
    return this.apply$4$bailout(2, sourceRect, destinationBitmapData, destinationPoint, sourceWidth, sourceContext, sourceData);
  sourceHeight = sourceRect.height;
  if (typeof sourceHeight !== 'number')
    return this.apply$4$bailout(3, destinationBitmapData, destinationPoint, sourceWidth, sourceContext, sourceHeight, sourceData);
  t4 = this.blurX;
  if (t4 !== (t4 | 0))
    return this.apply$4$bailout(4, destinationBitmapData, destinationPoint, sourceWidth, sourceContext, sourceHeight, t4, sourceData);
  weightX = t4 * t4;
  t6 = this.blurY;
  if (t6 !== (t6 | 0))
    return this.apply$4$bailout(5, destinationBitmapData, destinationPoint, weightX, sourceContext, sourceHeight, sourceWidth, t6, t4, sourceData);
  weightY = t6 * t6;
  rx2 = t4 * 2;
  ry2 = t6 * 2;
  destinationWidth = sourceWidth + rx2;
  destinationHeight = sourceHeight + ry2;
  sourceWidth4 = sourceWidth * 4;
  destinationWidth4 = destinationWidth * 4;
  alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
  destinationContext = destinationBitmapData._getContext$0();
  destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
  destinationData = destinationImageData.get$data();
  if (typeof destinationData !== 'object' || destinationData === null || (destinationData.constructor !== Array || !!destinationData.immutable$list) && !destinationData.is$JavaScriptIndexingBehavior())
    return this.apply$4$bailout(6, destinationWidth, destinationHeight, destinationPoint, sourceWidth4, sourceContext, destinationWidth4, sourceData, alphaChannel, weightX, destinationImageData, destinationData, destinationContext, weightY, sourceHeight, t4, t6, sourceWidth, rx2, ry2);
  buffer = $._ListImpl_List(1024);
  for (x = 0; x < sourceWidth; ++x) {
    sum = $.shr(weightY, 1);
    offsetSource = x * 4 + alphaChannel;
    offsetDestination = (x + t4) * 4 + alphaChannel;
    for (t1 = sourceData.length, t2 = destinationData.length, dif = 0, y = 0; y < destinationHeight; ++y) {
      t3 = $.tdiv(sum, weightY);
      if (offsetDestination !== (offsetDestination | 0))
        throw $.iae(offsetDestination);
      if (offsetDestination < 0 || offsetDestination >= t2)
        throw $.ioore(offsetDestination);
      destinationData[offsetDestination] = t3;
      offsetDestination += destinationWidth4;
      if (y >= ry2) {
        t3 = buffer[y & 1023];
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        t3 = 2 * t3;
        t5 = buffer[y - t6 & 1023];
        if (typeof t5 !== 'number')
          throw $.iae(t5);
        dif -= t3 - t5;
      } else if (y >= t6) {
        t3 = buffer[y & 1023];
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        dif -= 2 * t3;
      }
      if (y < sourceHeight) {
        if (offsetSource !== (offsetSource | 0))
          throw $.iae(offsetSource);
        if (offsetSource < 0 || offsetSource >= t1)
          throw $.ioore(offsetSource);
        alpha = sourceData[offsetSource];
      } else
        alpha = 0;
      buffer[y + t6 & 1023] = alpha;
      if (typeof alpha !== 'number')
        throw $.iae(alpha);
      dif += alpha;
      sum += dif;
      offsetSource += sourceWidth4;
    }
  }
  for (t1 = t4 * 4, y = 0; y < destinationHeight; ++y) {
    sum = $.shr(weightX, 1);
    t2 = y * destinationWidth4;
    offsetSource = t2 + t1 + alphaChannel;
    offsetDestination = t2 + alphaChannel;
    for (t2 = destinationData.length, dif = 0, x = 0; x < destinationWidth; ++x) {
      t3 = $.tdiv(sum, weightX);
      if (offsetDestination !== (offsetDestination | 0))
        throw $.iae(offsetDestination);
      if (offsetDestination < 0 || offsetDestination >= t2)
        throw $.ioore(offsetDestination);
      destinationData[offsetDestination] = t3;
      offsetDestination += 4;
      if (x >= rx2) {
        t3 = buffer[x & 1023];
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        t3 = 2 * t3;
        t5 = buffer[x - t4 & 1023];
        if (typeof t5 !== 'number')
          throw $.iae(t5);
        dif -= t3 - t5;
      } else if (x >= t4) {
        t3 = buffer[x & 1023];
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        dif -= 2 * t3;
      }
      if (x < sourceWidth) {
        if (offsetSource !== (offsetSource | 0))
          throw $.iae(offsetSource);
        if (offsetSource < 0 || offsetSource >= t2)
          throw $.ioore(offsetSource);
        alpha = destinationData[offsetSource];
      } else
        alpha = 0;
      buffer[x + t4 & 1023] = alpha;
      if (typeof alpha !== 'number')
        throw $.iae(alpha);
      dif += alpha;
      sum += dif;
      offsetSource += 4;
    }
  }
  aColor = $.toInt($.mul(this.alpha, 256));
  if (typeof aColor !== 'number')
    return this.apply$4$bailout(7, destinationWidth, t4, destinationHeight, destinationPoint, sourceContext, destinationContext, destinationImageData, destinationData, sourceWidth, sourceHeight, aColor, t6);
  t2 = this.color;
  rColor = $.and($.shr(t2, 16), 255);
  if (rColor !== (rColor | 0))
    return this.apply$4$bailout(8, rColor, destinationWidth, t4, destinationHeight, destinationPoint, sourceContext, t2, destinationContext, destinationImageData, destinationData, sourceWidth, sourceHeight, aColor, t6);
  gColor = $.and($.shr(t2, 8), 255);
  if (gColor !== (gColor | 0))
    return this.apply$4$bailout(9, rColor, destinationWidth, t4, destinationHeight, destinationPoint, gColor, sourceContext, t2, destinationContext, destinationImageData, destinationData, sourceWidth, sourceHeight, aColor, t6);
  bColor = $.and($.shr(t2, 0), 255);
  if (bColor !== (bColor | 0))
    return this.apply$4$bailout(10, rColor, destinationWidth, t4, destinationHeight, destinationPoint, gColor, sourceContext, bColor, destinationContext, destinationImageData, destinationData, sourceWidth, sourceHeight, aColor, t6);
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; i <= destinationData.length - 4; i += 4) {
      t1 = i + 3;
      if ($.gtB(destinationData[t1], 0)) {
        t2 = i + 0;
        t3 = destinationData.length;
        if (t2 >= t3)
          throw $.ioore(t2);
        destinationData[t2] = rColor;
        t2 = i + 1;
        if (t2 >= t3)
          throw $.ioore(t2);
        destinationData[t2] = gColor;
        t2 = i + 2;
        if (t2 >= t3)
          throw $.ioore(t2);
        destinationData[t2] = bColor;
        if (t1 >= t3)
          throw $.ioore(t1);
        t2 = $.tdiv($.mul(destinationData[t1], aColor), 256);
        if (t1 >= destinationData.length)
          throw $.ioore(t1);
        destinationData[t1] = t2;
      }
    }
  else
    for (i = 0; i <= destinationData.length - 4; i += 4) {
      t1 = i + 3;
      if ($.gtB(destinationData[t1], 0)) {
        t2 = i + 0;
        if (t2 >= destinationData.length)
          throw $.ioore(t2);
        t3 = $.tdiv($.mul(destinationData[t2], aColor), 256);
        t5 = destinationData.length;
        if (t2 >= t5)
          throw $.ioore(t2);
        destinationData[t2] = t3;
        t3 = i + 1;
        if (t3 >= t5)
          throw $.ioore(t3);
        destinationData[t3] = bColor;
        t3 = i + 2;
        if (t3 >= t5)
          throw $.ioore(t3);
        destinationData[t3] = gColor;
        if (t1 >= t5)
          throw $.ioore(t1);
        destinationData[t1] = rColor;
      }
    }
  sx = destinationPoint.x;
  sy = destinationPoint.y;
  dx = $.sub(sx, t4);
  dy = $.sub(destinationPoint.y, t6);
  uRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight).union$1($.Rectangle$(dx, dy, destinationWidth, destinationHeight));
  destinationContext.setTransform$6(1, 0, 0, 1, 0, 0);
  destinationContext.clearRect$4(uRect.get$x(), uRect.get$y(), uRect.get$width(), uRect.get$height());
  destinationContext.putImageData$3(destinationImageData, dx, dy);
  if ($.eqB(this.hideObject, false))
    destinationContext.drawImage$3(sourceContext.get$canvas(), sx, sy);
},
 apply$4$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18) {
  switch (state0) {
    case 1:
      sourceContext = env4;
      sourceData = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      sourceRect = env0;
      break;
    case 2:
      sourceData = env5;
      sourceContext = env4;
      sourceWidth = env3;
      destinationPoint = env2;
      destinationBitmapData = env1;
      sourceRect = env0;
      break;
    case 3:
      sourceData = env5;
      sourceHeight = env4;
      sourceContext = env3;
      sourceWidth = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 4:
      sourceData = env6;
      t4 = env5;
      sourceHeight = env4;
      sourceContext = env3;
      sourceWidth = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 5:
      sourceData = env8;
      t4 = env7;
      t6 = env6;
      sourceWidth = env5;
      sourceHeight = env4;
      sourceContext = env3;
      weightX = env2;
      destinationPoint = env1;
      destinationBitmapData = env0;
      break;
    case 6:
      ry2 = env18;
      rx2 = env17;
      sourceWidth = env16;
      t6 = env15;
      t4 = env14;
      sourceHeight = env13;
      weightY = env12;
      destinationContext = env11;
      destinationData = env10;
      destinationImageData = env9;
      weightX = env8;
      alphaChannel = env7;
      sourceData = env6;
      destinationWidth4 = env5;
      sourceContext = env4;
      sourceWidth4 = env3;
      destinationPoint = env2;
      destinationHeight = env1;
      destinationWidth = env0;
      break;
    case 7:
      t6 = env11;
      aColor = env10;
      sourceHeight = env9;
      sourceWidth = env8;
      destinationData = env7;
      destinationImageData = env6;
      destinationContext = env5;
      sourceContext = env4;
      destinationPoint = env3;
      destinationHeight = env2;
      rx1 = env1;
      destinationWidth = env0;
      break;
    case 8:
      t6 = env13;
      aColor = env12;
      sourceHeight = env11;
      sourceWidth = env10;
      destinationData = env9;
      destinationImageData = env8;
      destinationContext = env7;
      t2 = env6;
      sourceContext = env5;
      destinationPoint = env4;
      destinationHeight = env3;
      rx1 = env2;
      destinationWidth = env1;
      rColor = env0;
      break;
    case 9:
      t6 = env14;
      aColor = env13;
      sourceHeight = env12;
      sourceWidth = env11;
      destinationData = env10;
      destinationImageData = env9;
      destinationContext = env8;
      t2 = env7;
      sourceContext = env6;
      gColor = env5;
      destinationPoint = env4;
      destinationHeight = env3;
      rx1 = env2;
      destinationWidth = env1;
      rColor = env0;
      break;
    case 10:
      t6 = env14;
      aColor = env13;
      sourceHeight = env12;
      sourceWidth = env11;
      destinationData = env10;
      destinationImageData = env9;
      destinationContext = env8;
      bColor = env7;
      sourceContext = env6;
      gColor = env5;
      destinationPoint = env4;
      destinationHeight = env3;
      rx1 = env2;
      destinationWidth = env1;
      rColor = env0;
      break;
  }
  switch (state0) {
    case 0:
      sourceContext = sourceBitmapData._getContext$0();
      sourceData = sourceContext.getImageData$4(sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height).get$data();
    case 1:
      state0 = 0;
      sourceWidth = sourceRect.width;
    case 2:
      state0 = 0;
      sourceHeight = sourceRect.height;
    case 3:
      state0 = 0;
      t4 = this.blurX;
    case 4:
      state0 = 0;
      weightX = $.mul(t4, t4);
      t6 = this.blurY;
    case 5:
      state0 = 0;
      weightY = $.mul(t6, t6);
      rx2 = $.mul(t4, 2);
      ry2 = $.mul(t6, 2);
      destinationWidth = $.add(sourceWidth, rx2);
      destinationHeight = $.add(sourceHeight, ry2);
      sourceWidth4 = $.mul(sourceWidth, 4);
      destinationWidth4 = $.mul(destinationWidth, 4);
      alphaChannel = $.get$_isLittleEndianSystem() === true ? 3 : 0;
      destinationContext = destinationBitmapData._getContext$0();
      destinationImageData = destinationContext.createImageData$2(destinationWidth, destinationHeight);
      destinationData = destinationImageData.get$data();
    case 6:
      state0 = 0;
      buffer = $._ListImpl_List(1024);
      for (rx1 = t4, x = 0; $.ltB(x, sourceWidth); ++x) {
        sum = $.shr(weightY, 1);
        offsetSource = x * 4 + alphaChannel;
        if (typeof rx1 !== 'number')
          throw $.iae(rx1);
        offsetDestination = (x + rx1) * 4 + alphaChannel;
        for (dif = 0, y = 0; $.ltB(y, destinationHeight); ++y) {
          $.indexSet(destinationData, offsetDestination, $.tdiv(sum, weightY));
          if (typeof destinationWidth4 !== 'number')
            throw $.iae(destinationWidth4);
          offsetDestination += destinationWidth4;
          if ($.geB(y, ry2)) {
            t1 = buffer[y & 1023];
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 2 * t1;
            if (typeof t6 !== 'number')
              throw $.iae(t6);
            t2 = buffer[y - t6 & 1023];
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            dif -= t1 - t2;
          } else if ($.geB(y, t6)) {
            t1 = buffer[y & 1023];
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            dif -= 2 * t1;
          }
          alpha = $.ltB(y, sourceHeight) ? $.index(sourceData, offsetSource) : 0;
          if (typeof t6 !== 'number')
            throw $.iae(t6);
          buffer[y + t6 & 1023] = alpha;
          if (typeof alpha !== 'number')
            throw $.iae(alpha);
          dif += alpha;
          sum = $.add(sum, dif);
          if (typeof sourceWidth4 !== 'number')
            throw $.iae(sourceWidth4);
          offsetSource += sourceWidth4;
        }
      }
      for (y = 0; $.ltB(y, destinationHeight); ++y) {
        sum = $.shr(weightX, 1);
        if (typeof destinationWidth4 !== 'number')
          throw $.iae(destinationWidth4);
        t1 = y * destinationWidth4;
        t2 = $.mul(rx1, 4);
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        offsetSource = t1 + t2 + alphaChannel;
        offsetDestination = t1 + alphaChannel;
        for (dif = 0, x = 0; $.ltB(x, destinationWidth); ++x) {
          $.indexSet(destinationData, offsetDestination, $.tdiv(sum, weightX));
          offsetDestination += 4;
          if ($.geB(x, rx2)) {
            t1 = buffer[x & 1023];
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 2 * t1;
            if (typeof rx1 !== 'number')
              throw $.iae(rx1);
            t2 = buffer[x - rx1 & 1023];
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            dif -= t1 - t2;
          } else if ($.geB(x, rx1)) {
            t1 = buffer[x & 1023];
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            dif -= 2 * t1;
          }
          alpha = $.ltB(x, sourceWidth) ? $.index(destinationData, offsetSource) : 0;
          if (typeof rx1 !== 'number')
            throw $.iae(rx1);
          buffer[x + rx1 & 1023] = alpha;
          if (typeof alpha !== 'number')
            throw $.iae(alpha);
          dif += alpha;
          sum = $.add(sum, dif);
          offsetSource += 4;
        }
      }
      aColor = $.toInt($.mul(this.alpha, 256));
    case 7:
      state0 = 0;
      t2 = this.color;
      rColor = $.and($.shr(t2, 16), 255);
    case 8:
      state0 = 0;
      gColor = $.and($.shr(t2, 8), 255);
    case 9:
      state0 = 0;
      bColor = $.and($.shr(t2, 0), 255);
    case 10:
      var sourceContext, sourceData, destinationPoint, destinationBitmapData, sourceRect, sourceWidth, sourceHeight, t4, weightX, t6, weightY, rx2, ry2, destinationWidth, destinationHeight, sourceWidth4, destinationWidth4, alphaChannel, destinationContext, destinationImageData, destinationData, buffer, rx1, x, sum, offsetSource, offsetDestination, dif, y, t1, t2, alpha, aColor, rColor, gColor, bColor, i, sx, sy, dx, dy, uRect;
      state0 = 0;
      if ($.get$_isLittleEndianSystem() === true)
        for (i = 0; $.leB(i, $.sub($.get$length(destinationData), 4)); i += 4) {
          t1 = i + 3;
          if ($.gtB($.index(destinationData, t1), 0)) {
            $.indexSet(destinationData, i + 0, rColor);
            $.indexSet(destinationData, i + 1, gColor);
            $.indexSet(destinationData, i + 2, bColor);
            $.indexSet(destinationData, t1, $.tdiv($.mul($.index(destinationData, t1), aColor), 256));
          }
        }
      else
        for (i = 0; $.leB(i, $.sub($.get$length(destinationData), 4)); i += 4) {
          t1 = i + 3;
          if ($.gtB($.index(destinationData, t1), 0)) {
            t2 = i + 0;
            $.indexSet(destinationData, t2, $.tdiv($.mul($.index(destinationData, t2), aColor), 256));
            $.indexSet(destinationData, i + 1, bColor);
            $.indexSet(destinationData, i + 2, gColor);
            $.indexSet(destinationData, t1, rColor);
          }
        }
      sx = destinationPoint.x;
      sy = destinationPoint.y;
      dx = $.sub(sx, rx1);
      dy = $.sub(destinationPoint.y, t6);
      uRect = $.Rectangle$(sx, sy, sourceWidth, sourceHeight).union$1($.Rectangle$(dx, dy, destinationWidth, destinationHeight));
      destinationContext.setTransform$6(1, 0, 0, 1, 0, 0);
      destinationContext.clearRect$4(uRect.get$x(), uRect.get$y(), uRect.get$width(), uRect.get$height());
      destinationContext.putImageData$3(destinationImageData, dx, dy);
      if ($.eqB(this.hideObject, false))
        destinationContext.drawImage$3(sourceContext.get$canvas(), sx, sy);
  }
},
 GlowFilter$8: function(color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
  var t1 = this.blurX;
  if ($.ltB(t1, 1) || $.ltB(this.blurY, 1))
    throw $.$$throw($.ArgumentError$('Error #9004: The minimum blur size is 1.'));
  if ($.gtB(t1, 128) || $.gtB(this.blurY, 128))
    throw $.$$throw($.ArgumentError$('Error #9004: The maximum blur size is 128.'));
}
};

$$.DisplayObject = {"": ["_alpha?", "_lib0_parent?", "mask?"],
 "super": "EventDispatcher",
 get$x: function() {
  return this._x;
},
 get$y: function() {
  return this._y;
},
 get$visible: function() {
  return this._visible;
},
 get$parent: function() {
  return this._lib0_parent;
},
 get$on: function() {
  return $.DisplayObjectEvents$(this);
},
 get$root: function() {
  for (var currentObject = this; !(currentObject.get$_lib0_parent() == null);)
    var currentObject = currentObject.get$_lib0_parent();
  return currentObject;
},
 get$stage: function() {
  var root = this.get$root();
  if (typeof root === 'object' && root !== null && !!root.is$Stage)
    return root;
  return;
},
 set$x: function(value) {
  this._x = value;
  this._transformationMatrixRefresh = true;
},
 set$y: function(value) {
  this._y = value;
  this._transformationMatrixRefresh = true;
},
 set$scaleX: function(value) {
  this._scaleX = value;
  this._transformationMatrixRefresh = true;
},
 set$scaleY: function(value) {
  this._scaleY = value;
  this._transformationMatrixRefresh = true;
},
 get$width: function() {
  return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$width();
},
 get$height: function() {
  return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$height();
},
 set$width: function(value) {
  var normalWidth;
  this.set$scaleX(1);
  normalWidth = this.get$width();
  this.set$scaleX(!$.eqB(normalWidth, 0) ? $.div(value, normalWidth) : 1);
},
 set$height: function(value) {
  var normalHeight;
  this.set$scaleY(1);
  normalHeight = this.get$height();
  this.set$scaleY(!$.eqB(normalHeight, 0) ? $.div(value, normalHeight) : 1);
},
 removeFromParent$0: function() {
  var t1 = this._lib0_parent;
  if (!(t1 == null))
    t1.removeChild$1(this);
},
 get$_transformationMatrix: function() {
  var t1, t2, t3, t4, t5, t6, t7, t8, cosR, sinR, a, b, c, d, tx, ty;
  if (this._transformationMatrixRefresh) {
    this._transformationMatrixRefresh = false;
    t1 = this._rotation;
    t2 = t1 === 0;
    t3 = this._pivotX;
    t4 = this._pivotY;
    if (t2) {
      t1 = this._transformationMatrixPrivate;
      t2 = this._scaleX;
      t5 = this._scaleY;
      t6 = this._x;
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      t6 = $.sub(t6, t3 * t2);
      t7 = this._y;
      t8 = this._scaleY;
      if (typeof t8 !== 'number')
        throw $.iae(t8);
      t1.setTo$6(t2, 0, 0, t5, t6, $.sub(t7, t4 * t8));
    } else {
      cosR = $.cos(t1);
      sinR = $.sin(t1);
      a = $.mul(this._scaleX, cosR);
      b = $.mul(this._scaleX, sinR);
      c = $.mul($.neg(this._scaleY), sinR);
      d = $.mul(this._scaleY, cosR);
      t1 = this._x;
      if (typeof a !== 'number')
        throw $.iae(a);
      t1 = $.sub(t1, t3 * a);
      if (typeof c !== 'number')
        throw $.iae(c);
      tx = $.sub(t1, t4 * c);
      t1 = this._y;
      if (typeof b !== 'number')
        throw $.iae(b);
      t1 = $.sub(t1, t3 * b);
      if (typeof d !== 'number')
        throw $.iae(d);
      ty = $.sub(t1, t4 * d);
      this._transformationMatrixPrivate.setTo$6(a, b, c, d, tx, ty);
    }
  }
  return this._transformationMatrixPrivate;
},
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  returnRectangle.set$x(matrix.get$tx());
  returnRectangle.set$y(matrix.get$ty());
  returnRectangle.set$width(0);
  returnRectangle.set$height(0);
  return returnRectangle;
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  if ($.contains$2(this.getBoundsTransformed$1(this._tmpMatrixIdentity), localX, localY) === true)
    return this;
  return;
},
 globalToLocal$1: function(globalPoint) {
  var displayObject, t1, t2;
  this._tmpMatrix.identity$0();
  for (displayObject = this; t1 = !(displayObject == null), t2 = this._tmpMatrix, t1; displayObject = displayObject.get$_lib0_parent())
    t2.concat$1(displayObject.get$_transformationMatrix());
  t2.invert$0();
  return this._tmpMatrix.transformPoint$1(globalPoint);
},
 dispatchEvent$1: function(event$) {
  var ancestor, ancestors, t1, i;
  if (event$.get$captures() === true || event$.get$bubbles() === true) {
    for (ancestor = this._lib0_parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_lib0_parent())
      if (ancestor.hasEventListener$1(event$.get$type()) === true) {
        if (ancestors == null)
          ancestors = $._ListImpl_List(null);
        $.add$1(ancestors, ancestor);
      }
  } else
    ancestors = null;
  if (event$.get$captures() === true && !(ancestors == null)) {
    t1 = $.get$length(ancestors);
    if (typeof t1 !== 'number')
      return this.dispatchEvent$1$bailout(1, event$, ancestors, t1);
    i = t1 - 1;
    for (; i >= 0; --i) {
      t1 = event$.get$stopsPropagation();
      if (typeof t1 !== 'boolean')
        return this.dispatchEvent$1$bailout(2, event$, ancestors, t1, i);
      if (!t1)
        $.index(ancestors, i)._dispatchEventInternal$4(event$, this, $.index(ancestors, i), 1);
    }
  }
  t1 = event$.get$stopsPropagation();
  if (typeof t1 !== 'boolean')
    return this.dispatchEvent$1$bailout(3, event$, ancestors, t1);
  if (!t1)
    this._dispatchEventInternal$4(event$, this, this, 2);
  if (event$.get$bubbles() === true && !(ancestors == null)) {
    i = 0;
    while (true) {
      t1 = $.get$length(ancestors);
      if (typeof t1 !== 'number')
        return this.dispatchEvent$1$bailout(4, event$, ancestors, i, t1);
      if (!(i < t1))
        break;
      t1 = event$.get$stopsPropagation();
      if (typeof t1 !== 'boolean')
        return this.dispatchEvent$1$bailout(5, event$, ancestors, i, t1);
      if (!t1)
        $.index(ancestors, i)._dispatchEventInternal$4(event$, this, $.index(ancestors, i), 3);
      ++i;
    }
  }
},
 dispatchEvent$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env2;
      ancestors = env1;
      event$ = env0;
      break;
    case 2:
      i = env3;
      t1 = env2;
      ancestors = env1;
      event$ = env0;
      break;
    case 3:
      t1 = env2;
      ancestors = env1;
      event$ = env0;
      break;
    case 4:
      t1 = env3;
      i = env2;
      ancestors = env1;
      event$ = env0;
      break;
    case 5:
      t1 = env3;
      i = env2;
      ancestors = env1;
      event$ = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (event$.get$captures() === true || event$.get$bubbles() === true) {
        for (ancestor = this._lib0_parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_lib0_parent())
          if (ancestor.hasEventListener$1(event$.get$type()) === true) {
            if (ancestors == null)
              ancestors = $._ListImpl_List(null);
            $.add$1(ancestors, ancestor);
          }
      } else
        ancestors = null;
    default:
      if (state0 === 2 || state0 === 1 || state0 === 0 && event$.get$captures() === true && !(ancestors == null))
        switch (state0) {
          case 0:
            t1 = $.get$length(ancestors);
          case 1:
            state0 = 0;
            i = $.sub(t1, 1);
          case 2:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    if (!$.geB(i, 0))
                      break L0;
                    t1 = event$.get$stopsPropagation();
                  case 2:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      $.index(ancestors, i)._dispatchEventInternal$4(event$, this, $.index(ancestors, i), 1);
                    i = $.sub(i, 1);
                }
        }
      t1 = event$.get$stopsPropagation();
    case 3:
      state0 = 0;
      if ($.eqB(t1, false))
        this._dispatchEventInternal$4(event$, this, this, 2);
    case 4:
    case 5:
      var ancestor, ancestors, t1, event$, i;
      if (state0 === 5 || state0 === 4 || state0 === 0 && event$.get$bubbles() === true && !(ancestors == null))
        switch (state0) {
          case 0:
            i = 0;
          default:
            L1:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = $.get$length(ancestors);
                  case 4:
                    state0 = 0;
                    if (!$.ltB(i, t1))
                      break L1;
                    t1 = event$.get$stopsPropagation();
                  case 5:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      $.index(ancestors, i)._dispatchEventInternal$4(event$, this, $.index(ancestors, i), 3);
                    ++i;
                }
        }
  }
},
 _setParent$1: function(value) {
  var ancestor;
  for (ancestor = value; !(ancestor == null); ancestor = ancestor.get$_lib0_parent())
    if ($.eqB(ancestor, this))
      throw $.$$throw($.ArgumentError$('Error #2150: An object cannot be added as a child to one of it\'s children (or children\'s children, etc.).'));
  this._lib0_parent = value;
},
 DisplayObject$0: function() {
  this._transformationMatrixPrivate = $.Matrix$fromIdentity();
  this._transformationMatrixRefresh = true;
  this._tmpMatrix = $.Matrix$fromIdentity();
  this._tmpMatrixIdentity = $.Matrix$fromIdentity();
}
};

$$.InteractiveObject = {"": ["doubleClickEnabled?"],
 "super": "DisplayObject",
 get$on: function() {
  return $.InteractiveObjectEvents$(this);
},
 is$InteractiveObject: true
};

$$.DisplayObjectContainer = {"": [],
 "super": "InteractiveObject",
 get$on: function() {
  return $.DisplayObjectContainerEvents$(this);
},
 addChild$1: function(child) {
  var t1, t2, index;
  t1 = $.eqB(child.get$parent(), this);
  t2 = this._children;
  if (t1) {
    index = $.indexOf$1(t2, child);
    $.removeAt$1(this._children, index);
    this._children.push(child);
  } else
    this.addChildAt$2(child, t2.length);
},
 addChildAt$2: function(child, index) {
  var t1;
  if (typeof index !== 'number')
    return this.addChildAt$2$bailout(1, child, index);
  if (index < 0 && index > this._children.length)
    throw $.$$throw($.ArgumentError$('Error #2006: The supplied index is out of bounds.'));
  if ($.eqB(child, this))
    throw $.$$throw($.ArgumentError$('Error #2024: An object cannot be added as a child of itself.'));
  if ($.eqB(child.get$parent(), this)) {
    t1 = this._children;
    $.removeAt$1(t1, $.indexOf$1(t1, child));
    t1 = this._children;
    if (index > t1.length)
      --index;
    $.insertRange$3(t1, index, 1, child);
  } else {
    child.removeFromParent$0();
    child._setParent$1(this);
    $.insertRange$3(this._children, index, 1, child);
    child.dispatchEvent$1($.Event$('added', true));
    if (!(this.get$stage() == null))
      this._dispatchEventOnChildren$2(child, $.Event$('addedToStage', false));
  }
},
 addChildAt$2$bailout: function(state0, child, index) {
  var t1;
  if ($.ltB(index, 0) && $.gtB(index, this._children.length))
    throw $.$$throw($.ArgumentError$('Error #2006: The supplied index is out of bounds.'));
  if ($.eqB(child, this))
    throw $.$$throw($.ArgumentError$('Error #2024: An object cannot be added as a child of itself.'));
  if ($.eqB(child.get$parent(), this)) {
    t1 = this._children;
    $.removeAt$1(t1, $.indexOf$1(t1, child));
    if ($.gtB(index, this._children.length))
      index = $.sub(index, 1);
    $.insertRange$3(this._children, index, 1, child);
  } else {
    child.removeFromParent$0();
    child._setParent$1(this);
    $.insertRange$3(this._children, index, 1, child);
    child.dispatchEvent$1($.Event$('added', true));
    if (!(this.get$stage() == null))
      this._dispatchEventOnChildren$2(child, $.Event$('addedToStage', false));
  }
},
 removeChild$1: function(child) {
  var childIndex = $.indexOf$1(this._children, child);
  if ($.eqB(childIndex, -1))
    throw $.$$throw($.ArgumentError$('Error #2025: The supplied DisplayObject must be a child of the caller.'));
  this.removeChildAt$1(childIndex);
},
 removeChildAt$1: function(index) {
  var t1, child;
  if ($.ltB(index, 0) && $.geB(index, this._children.length))
    throw $.$$throw($.ArgumentError$('Error #2006: The supplied index is out of bounds.'));
  t1 = this._children;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  child = t1[index];
  child.dispatchEvent$1($.Event$('removed', true));
  if (!(this.get$stage() == null))
    this._dispatchEventOnChildren$2(child, $.Event$('removedFromStage', false));
  child._setParent$1(null);
  $.removeAt$1(this._children, index);
},
 contains$1: function(child) {
  for (; !(child == null); child = child.get$_lib0_parent())
    if ($.eqB(child, this))
      return true;
  return false;
},
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  var t1, left, top$, right, bottom, i, t2, t3, rectangle;
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  t1 = this._children.length;
  if (t1 === 0)
    return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
  for (left = (1/0), top$ = (1/0), right = (-1/0), bottom = (-1/0), i = 0; i < t1; ++i) {
    t2 = this._tmpMatrix;
    t3 = this._children;
    if (i >= t3.length)
      throw $.ioore(i);
    t2.copyFromAndConcat$2(t3[i].get$_transformationMatrix(), matrix);
    t2 = this._children;
    if (i >= t2.length)
      throw $.ioore(i);
    rectangle = t2[i].getBoundsTransformed$2(this._tmpMatrix, returnRectangle);
    t2 = rectangle.get$left();
    if (typeof t2 !== 'number')
      return this.getBoundsTransformed$2$bailout(1, matrix, t1, left, top$, right, bottom, rectangle, i, t2, returnRectangle);
    if (t2 < left) {
      left = rectangle.get$left();
      if (typeof left !== 'number')
        return this.getBoundsTransformed$2$bailout(2, left, matrix, t1, top$, right, bottom, rectangle, i, returnRectangle);
    }
    t2 = rectangle.get$top();
    if (typeof t2 !== 'number')
      return this.getBoundsTransformed$2$bailout(3, matrix, t1, left, top$, t2, right, bottom, rectangle, i, returnRectangle);
    if (t2 < top$) {
      top$ = rectangle.get$top();
      if (typeof top$ !== 'number')
        return this.getBoundsTransformed$2$bailout(4, matrix, t1, left, right, bottom, rectangle, i, top$, returnRectangle);
    }
    t2 = rectangle.get$right();
    if (typeof t2 !== 'number')
      return this.getBoundsTransformed$2$bailout(5, matrix, t1, left, right, bottom, rectangle, i, top$, returnRectangle, t2);
    if (t2 > right) {
      right = rectangle.get$right();
      if (typeof right !== 'number')
        return this.getBoundsTransformed$2$bailout(6, matrix, t1, left, right, bottom, rectangle, i, top$, returnRectangle);
    }
    t2 = rectangle.get$bottom();
    if (typeof t2 !== 'number')
      return this.getBoundsTransformed$2$bailout(7, matrix, t1, left, bottom, right, rectangle, i, t2, top$, returnRectangle);
    if (t2 > bottom) {
      bottom = rectangle.get$bottom();
      if (typeof bottom !== 'number')
        return this.getBoundsTransformed$2$bailout(8, matrix, t1, left, right, i, top$, bottom, returnRectangle);
    }
  }
  returnRectangle.set$x(left);
  returnRectangle.set$y(top$);
  returnRectangle.set$width(right - left);
  returnRectangle.set$height(bottom - top$);
  return returnRectangle;
},
 getBoundsTransformed$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9) {
  switch (state0) {
    case 1:
      returnRectangle = env9;
      t2 = env8;
      i = env7;
      rectangle = env6;
      bottom = env5;
      right = env4;
      top$ = env3;
      left = env2;
      t1 = env1;
      matrix = env0;
      break;
    case 2:
      returnRectangle = env8;
      i = env7;
      rectangle = env6;
      bottom = env5;
      right = env4;
      top$ = env3;
      t1 = env2;
      matrix = env1;
      left = env0;
      break;
    case 3:
      returnRectangle = env9;
      i = env8;
      rectangle = env7;
      bottom = env6;
      right = env5;
      t2 = env4;
      top$ = env3;
      left = env2;
      t1 = env1;
      matrix = env0;
      break;
    case 4:
      returnRectangle = env8;
      top$ = env7;
      i = env6;
      rectangle = env5;
      bottom = env4;
      right = env3;
      left = env2;
      t1 = env1;
      matrix = env0;
      break;
    case 5:
      t2 = env9;
      returnRectangle = env8;
      top$ = env7;
      i = env6;
      rectangle = env5;
      bottom = env4;
      right = env3;
      left = env2;
      t1 = env1;
      matrix = env0;
      break;
    case 6:
      returnRectangle = env8;
      top$ = env7;
      i = env6;
      rectangle = env5;
      bottom = env4;
      right = env3;
      left = env2;
      t1 = env1;
      matrix = env0;
      break;
    case 7:
      returnRectangle = env9;
      top$ = env8;
      t2 = env7;
      i = env6;
      rectangle = env5;
      right = env4;
      bottom = env3;
      left = env2;
      t1 = env1;
      matrix = env0;
      break;
    case 8:
      returnRectangle = env7;
      bottom = env6;
      top$ = env5;
      i = env4;
      right = env3;
      left = env2;
      t1 = env1;
      matrix = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (returnRectangle == null)
        returnRectangle = $.Rectangle$zero();
      t1 = this._children.length;
      if (t1 === 0)
        return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
      left = (1/0);
      top$ = (1/0);
      right = (-1/0);
      bottom = (-1/0);
      i = 0;
    default:
      var returnRectangle, t1, left, top$, right, bottom, i, t2, t3, rectangle, matrix;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(i < t1))
                break L0;
              t2 = this._tmpMatrix;
              t3 = this._children;
              if (i >= t3.length)
                throw $.ioore(i);
              t2.copyFromAndConcat$2(t3[i].get$_transformationMatrix(), matrix);
              t2 = this._children;
              if (i >= t2.length)
                throw $.ioore(i);
              rectangle = t2[i].getBoundsTransformed$2(this._tmpMatrix, returnRectangle);
              t2 = rectangle.get$left();
            case 1:
              state0 = 0;
            case 2:
              if (state0 === 2 || state0 === 0 && $.ltB(t2, left))
                switch (state0) {
                  case 0:
                    left = rectangle.get$left();
                  case 2:
                    state0 = 0;
                }
              t2 = rectangle.get$top();
            case 3:
              state0 = 0;
            case 4:
              if (state0 === 4 || state0 === 0 && $.ltB(t2, top$))
                switch (state0) {
                  case 0:
                    top$ = rectangle.get$top();
                  case 4:
                    state0 = 0;
                }
              t2 = rectangle.get$right();
            case 5:
              state0 = 0;
            case 6:
              if (state0 === 6 || state0 === 0 && $.gtB(t2, right))
                switch (state0) {
                  case 0:
                    right = rectangle.get$right();
                  case 6:
                    state0 = 0;
                }
              t2 = rectangle.get$bottom();
            case 7:
              state0 = 0;
            case 8:
              if (state0 === 8 || state0 === 0 && $.gtB(t2, bottom))
                switch (state0) {
                  case 0:
                    bottom = rectangle.get$bottom();
                  case 8:
                    state0 = 0;
                }
              ++i;
          }
      returnRectangle.set$x(left);
      returnRectangle.set$y(top$);
      returnRectangle.set$width($.sub(right, left));
      returnRectangle.set$height($.sub(bottom, top$));
      return returnRectangle;
  }
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  var i, hit, t1, child, matrix, deltaX, deltaY, t5, t7, childX, t9, t11, displayObject;
  if (typeof localX !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY);
  if (typeof localY !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY);
  for (i = this._children.length - 1, hit = null; i >= 0; --i) {
    t1 = this._children;
    if (i >= t1.length)
      throw $.ioore(i);
    child = t1[i];
    if (child.get$visible() === true) {
      matrix = child.get$_transformationMatrix();
      t1 = matrix.get$tx();
      if (typeof t1 !== 'number')
        return this.hitTestInput$2$bailout(2, hit, localX, localY, child, matrix, i, t1);
      deltaX = localX - t1;
      t1 = matrix.get$ty();
      if (typeof t1 !== 'number')
        return this.hitTestInput$2$bailout(3, hit, deltaX, localY, localX, t1, child, matrix, i);
      deltaY = localY - t1;
      t1 = matrix.get$d();
      if (typeof t1 !== 'number')
        return this.hitTestInput$2$bailout(4, hit, deltaX, localY, deltaY, t1, localX, child, matrix, i);
      t1 *= deltaX;
      t5 = matrix.get$c();
      if (typeof t5 !== 'number')
        return this.hitTestInput$2$bailout(5, hit, deltaX, localY, deltaY, t1, t5, child, localX, matrix, i);
      t1 -= t5 * deltaY;
      t7 = matrix.get$det();
      if (typeof t7 !== 'number')
        return this.hitTestInput$2$bailout(6, hit, deltaX, localY, deltaY, localX, child, t1, t7, matrix, i);
      childX = t1 / t7;
      t7 = matrix.get$a();
      if (typeof t7 !== 'number')
        return this.hitTestInput$2$bailout(7, hit, deltaX, localY, deltaY, childX, localX, child, matrix, i, t7);
      t7 *= deltaY;
      t9 = matrix.get$b();
      if (typeof t9 !== 'number')
        return this.hitTestInput$2$bailout(8, hit, t7, t9, deltaX, localY, localX, child, matrix, i, childX);
      t7 -= t9 * deltaX;
      t11 = matrix.get$det();
      if (typeof t11 !== 'number')
        return this.hitTestInput$2$bailout(9, hit, localX, localY, t7, t11, child, i, childX);
      displayObject = child.hitTestInput$2(childX, t7 / t11);
      if (!(displayObject == null)) {
        if (typeof displayObject === 'object' && displayObject !== null && !!displayObject.is$InteractiveObject)
          if (displayObject.mouseEnabled)
            return this._mouseChildren ? displayObject : this;
        hit = this;
      }
    }
  }
  return hit;
},
 hitTestInput$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9) {
  switch (state0) {
    case 1:
      localY = env1;
      localX = env0;
      break;
    case 2:
      t1 = env6;
      i = env5;
      matrix = env4;
      child = env3;
      localY = env2;
      localX = env1;
      hit = env0;
      break;
    case 3:
      i = env7;
      matrix = env6;
      child = env5;
      t1 = env4;
      localX = env3;
      localY = env2;
      deltaX = env1;
      hit = env0;
      break;
    case 4:
      i = env8;
      matrix = env7;
      child = env6;
      localX = env5;
      t1 = env4;
      deltaY = env3;
      localY = env2;
      deltaX = env1;
      hit = env0;
      break;
    case 5:
      i = env9;
      matrix = env8;
      localX = env7;
      child = env6;
      t5 = env5;
      t1 = env4;
      deltaY = env3;
      localY = env2;
      deltaX = env1;
      hit = env0;
      break;
    case 6:
      i = env9;
      matrix = env8;
      t7 = env7;
      t1 = env6;
      child = env5;
      localX = env4;
      deltaY = env3;
      localY = env2;
      deltaX = env1;
      hit = env0;
      break;
    case 7:
      t7 = env9;
      i = env8;
      matrix = env7;
      child = env6;
      localX = env5;
      childX = env4;
      deltaY = env3;
      localY = env2;
      deltaX = env1;
      hit = env0;
      break;
    case 8:
      childX = env9;
      i = env8;
      matrix = env7;
      child = env6;
      localX = env5;
      localY = env4;
      deltaX = env3;
      t9 = env2;
      t7 = env1;
      hit = env0;
      break;
    case 9:
      childX = env7;
      i = env6;
      child = env5;
      t11 = env4;
      t7 = env3;
      localY = env2;
      localX = env1;
      hit = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      i = this._children.length - 1;
      hit = null;
    default:
      var localY, localX, i, hit, t1, child, matrix, deltaX, deltaY, t5, t7, childX, t9, t11, displayObject;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(i >= 0))
                break L0;
              t1 = this._children;
              if (i >= t1.length)
                throw $.ioore(i);
              child = t1[i];
            default:
              if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && child.get$visible() === true)
                switch (state0) {
                  case 0:
                    matrix = child.get$_transformationMatrix();
                    t1 = matrix.get$tx();
                  case 2:
                    state0 = 0;
                    deltaX = $.sub(localX, t1);
                    t1 = matrix.get$ty();
                  case 3:
                    state0 = 0;
                    deltaY = $.sub(localY, t1);
                    t1 = matrix.get$d();
                  case 4:
                    state0 = 0;
                    t1 = $.mul(t1, deltaX);
                    t5 = matrix.get$c();
                  case 5:
                    state0 = 0;
                    t1 = $.sub(t1, $.mul(t5, deltaY));
                    t7 = matrix.get$det();
                  case 6:
                    state0 = 0;
                    childX = $.div(t1, t7);
                    t7 = matrix.get$a();
                  case 7:
                    state0 = 0;
                    t7 = $.mul(t7, deltaY);
                    t9 = matrix.get$b();
                  case 8:
                    state0 = 0;
                    t7 = $.sub(t7, $.mul(t9, deltaX));
                    t11 = matrix.get$det();
                  case 9:
                    state0 = 0;
                    displayObject = child.hitTestInput$2(childX, $.div(t7, t11));
                    if (!(displayObject == null)) {
                      if (typeof displayObject === 'object' && displayObject !== null && !!displayObject.is$InteractiveObject)
                        if (displayObject.mouseEnabled)
                          return this._mouseChildren ? displayObject : this;
                      hit = this;
                    }
                }
              --i;
          }
      return hit;
  }
},
 render$1: function(renderState) {
  var i, t1, child;
  for (i = 0; t1 = this._children, i < t1.length; ++i) {
    child = t1[i];
    if (child.get$visible() === true)
      renderState.renderDisplayObject$1(child);
  }
},
 _dispatchEventOnChildren$2: function(displayObject, event$) {
  var children, childrenLength, i;
  displayObject.dispatchEvent$1(event$);
  if (typeof displayObject === 'object' && displayObject !== null && !!displayObject.is$DisplayObjectContainer) {
    children = $._ListImpl_List$from(displayObject._children);
    childrenLength = children.length;
    for (i = 0; i < childrenLength; ++i) {
      if (i >= children.length)
        throw $.ioore(i);
      this._dispatchEventOnChildren$2(children[i], event$);
    }
  }
},
 DisplayObjectContainer$0: function() {
  this._children = $._ListImpl_List(null);
},
 is$DisplayObjectContainer: true
};

$$._MouseButton = {"": ["target=", "buttonDown=", "clickTime=", "clickCount=", "mouseDownEventType?", "mouseUpEventType?", "mouseClickEventType?", "mouseDoubleClickEventType?"],
 "super": "Object"
};

$$._Touch = {"": ["touchPointID?", "target="],
 "super": "Object"
};

$$.Stage = {"": ["_canvas", "_context", "_focus", "_renderState", "_renderMode", "_mouseCursor", "_mousePosition", "_mouseTarget", "_mouseButtons", "_touches", "_mouseEvent", "_keyboardEvent", "_touchEvent", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib0_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenerLists"],
 "super": "DisplayObjectContainer",
 get$focus: function() {
  return this._focus;
},
 focus$0: function() { return this.get$focus().call$0(); },
 _throwStageException$0: function() {
  throw $.$$throw($.UnsupportedError$('Error #2071: The Stage class does not implement this property or method.'));
},
 set$x: function(value) {
  this._throwStageException$0();
},
 set$y: function(value) {
  this._throwStageException$0();
},
 set$scaleX: function(value) {
  this._throwStageException$0();
},
 set$scaleY: function(value) {
  this._throwStageException$0();
},
 set$width: function(value) {
  this._throwStageException$0();
},
 set$height: function(value) {
  this._throwStageException$0();
},
 materialize$0: function() {
  var t1 = this._renderMode;
  if (typeof t1 !== 'string')
    return this.materialize$0$bailout(1, t1);
  if (!(t1 === 'auto'))
    t1 = t1 === 'once';
  else
    t1 = true;
  if (t1) {
    this._renderState.reset$0();
    this.render$1(this._renderState);
    t1 = this._renderMode;
    if (typeof t1 !== 'string')
      return this.materialize$0$bailout(3, t1);
    if (t1 === 'once')
      this._renderMode = 'stop';
  }
},
 materialize$0$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._renderMode;
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && !$.eqB(t1, 'auto'))
        switch (state0) {
          case 0:
            t1 = this._renderMode;
          case 2:
            state0 = 0;
            t1 = $.eqB(t1, 'once');
        }
      else
        t1 = true;
    case 3:
      var t1;
      if (state0 === 3 || state0 === 0 && t1)
        switch (state0) {
          case 0:
            this._renderState.reset$0();
            this.render$1(this._renderState);
            t1 = this._renderMode;
          case 3:
            state0 = 0;
            if ($.eqB(t1, 'once'))
              this._renderMode = 'stop';
        }
  }
},
 _onMouseCursorChanged$1: function(event$) {
  var t1 = $.Mouse__getCssStyle(this._mouseCursor);
  this._canvas.get$style().set$cursor(t1);
},
 get$_onMouseCursorChanged: function() { return new $.BoundClosure(this, '_onMouseCursorChanged$1'); },
 _onMouseEvent$1: function(event$) {
  var clientRect, time, button, stagePoint, mouseButton, target, mouseCursor, t1, localPoint, t2, mouseEventType, isClick, isDoubleClick, i;
  event$.preventDefault$0();
  clientRect = this._canvas.getBoundingClientRect$0();
  time = $.Date_Date$now().get$millisecondsSinceEpoch();
  button = event$.get$button();
  stagePoint = $.Point$($.sub(event$.get$clientX(), clientRect.get$left()), $.sub(event$.get$clientY(), clientRect.get$top()));
  if ($.ltB(button, 0) || $.gtB(button, 2))
    return;
  if ($.eqB(event$.get$type(), 'mousemove') && this._mousePosition.equals$1(stagePoint) === true)
    return;
  mouseButton = $.index(this._mouseButtons, button);
  this._mousePosition = stagePoint;
  target = !$.eqB(event$.get$type(), 'mouseout') ? $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), 'is$InteractiveObject') : null;
  if (typeof target === 'object' && target !== null && !!target.is$Sprite)
    mouseCursor = target.useHandCursor === true ? 'button' : 'arrow';
  else
    mouseCursor = 'arrow';
  if (typeof target === 'object' && target !== null && !!target.is$SimpleButton)
    if (target.useHandCursor === true)
      mouseCursor = 'button';
  if (!$.eqB(this._mouseCursor, mouseCursor)) {
    this._mouseCursor = mouseCursor;
    t1 = $.Mouse__getCssStyle(mouseCursor);
    this._canvas.get$style().set$cursor(t1);
  }
  t1 = this._mouseTarget;
  if (!(t1 == null) && !$.eqB(t1, target)) {
    localPoint = !(this._mouseTarget.get$stage() == null) ? this._mouseTarget.globalToLocal$1(stagePoint) : $.Point$zero();
    this._mouseEvent._reset$2('mouseOut', true);
    t1 = localPoint.get$x();
    this._mouseEvent.set$_localX(t1);
    t1 = localPoint.get$y();
    this._mouseEvent.set$_localY(t1);
    t1 = stagePoint.x;
    this._mouseEvent.set$_stageX(t1);
    t1 = stagePoint.y;
    this._mouseEvent.set$_stageY(t1);
    t1 = mouseButton.get$buttonDown();
    this._mouseEvent.set$_buttonDown(t1);
    this._mouseTarget.dispatchEvent$1(this._mouseEvent);
    this._mouseTarget = null;
  }
  t1 = !(target == null);
  if (t1 && !$.eqB(target, this._mouseTarget)) {
    localPoint = target.globalToLocal$1(stagePoint);
    this._mouseEvent._reset$2('mouseOver', true);
    t2 = localPoint.get$x();
    this._mouseEvent.set$_localX(t2);
    t2 = localPoint.get$y();
    this._mouseEvent.set$_localY(t2);
    t2 = stagePoint.x;
    this._mouseEvent.set$_stageX(t2);
    t2 = stagePoint.y;
    this._mouseEvent.set$_stageY(t2);
    t2 = mouseButton.get$buttonDown();
    this._mouseEvent.set$_buttonDown(t2);
    this._mouseTarget = target;
    this._mouseTarget.dispatchEvent$1(this._mouseEvent);
  }
  if ($.eqB(event$.get$type(), 'mousedown')) {
    mouseEventType = mouseButton.get$mouseDownEventType();
    if (!$.eqB(target, mouseButton.get$target()) || $.gtB(time, $.add(mouseButton.get$clickTime(), 500)))
      mouseButton.set$clickCount(0);
    mouseButton.set$buttonDown(true);
    mouseButton.set$target(target);
    mouseButton.set$clickTime(time);
    mouseButton.set$clickCount($.add(mouseButton.get$clickCount(), 1));
  } else
    mouseEventType = null;
  if ($.eqB(event$.get$type(), 'mouseup')) {
    mouseEventType = mouseButton.get$mouseUpEventType();
    mouseButton.set$buttonDown(false);
    isClick = $.eq(mouseButton.get$target(), target);
    isDoubleClick = isClick === true && $.get$isEven(mouseButton.get$clickCount()) === true && $.ltB(time, $.add(mouseButton.get$clickTime(), 500));
  } else {
    isClick = false;
    isDoubleClick = false;
  }
  if ($.eqB(event$.get$type(), 'mousemove')) {
    for (i = 0; $.ltB(i, $.get$length(this._mouseButtons)); ++i) {
      $.index(this._mouseButtons, i).set$clickCount(0);
      $.index(this._mouseButtons, i).set$target(null);
    }
    mouseEventType = 'mouseMove';
  }
  if (!(mouseEventType == null) && t1) {
    localPoint = target.globalToLocal$1(stagePoint);
    this._mouseEvent._reset$2(mouseEventType, true);
    t1 = localPoint.get$x();
    this._mouseEvent.set$_localX(t1);
    t1 = localPoint.get$y();
    this._mouseEvent.set$_localY(t1);
    t1 = stagePoint.x;
    this._mouseEvent.set$_stageX(t1);
    t1 = stagePoint.y;
    this._mouseEvent.set$_stageY(t1);
    t1 = mouseButton.get$buttonDown();
    this._mouseEvent.set$_buttonDown(t1);
    t1 = mouseButton.get$clickCount();
    this._mouseEvent.set$_clickCount(t1);
    target.dispatchEvent$1(this._mouseEvent);
    if (isClick === true) {
      mouseEventType = mouseButton.get$mouseClickEventType();
      if (isDoubleClick && target.get$doubleClickEnabled() === true)
        mouseEventType = mouseButton.get$mouseDoubleClickEventType();
      this._mouseEvent._reset$2(mouseEventType, true);
      t1 = localPoint.get$x();
      this._mouseEvent.set$_localX(t1);
      t1 = localPoint.get$y();
      this._mouseEvent.set$_localY(t1);
      t1 = stagePoint.x;
      this._mouseEvent.set$_stageX(t1);
      t1 = stagePoint.y;
      this._mouseEvent.set$_stageY(t1);
      t1 = mouseButton.get$buttonDown();
      this._mouseEvent.set$_buttonDown(t1);
      target.dispatchEvent$1(this._mouseEvent);
    }
  }
},
 get$_onMouseEvent: function() { return new $.BoundClosure(this, '_onMouseEvent$1'); },
 _onMouseWheel$1: function(event$) {
  var target, stagePoint, localPoint, t1;
  target = this.hitTestInput$2(event$.get$offsetX(), event$.get$offsetY());
  if (!(target == null)) {
    stagePoint = $.Point$(event$.get$offsetX(), event$.get$offsetY());
    localPoint = target.globalToLocal$1(stagePoint);
    this._mouseEvent._reset$2('mouseWheel', true);
    t1 = localPoint.get$x();
    this._mouseEvent.set$_localX(t1);
    t1 = localPoint.get$y();
    this._mouseEvent.set$_localY(t1);
    t1 = stagePoint.x;
    this._mouseEvent.set$_stageX(t1);
    t1 = stagePoint.y;
    this._mouseEvent.set$_stageY(t1);
    t1 = event$.get$deltaX();
    this._mouseEvent.set$_deltaX(t1);
    t1 = event$.get$deltaY();
    this._mouseEvent.set$_deltaY(t1);
    target.dispatchEvent$1(this._mouseEvent);
  }
},
 get$_onMouseWheel: function() { return new $.BoundClosure(this, '_onMouseWheel$1'); },
 _onTouchEvent$1: function(event$) {
  var clientRect, t1, t2, identifier, stagePoint, touch;
  event$.preventDefault$0();
  $.print('event.type -> ' + $.S(event$.get$type()));
  clientRect = this._canvas.getBoundingClientRect$0();
  for (t1 = $.iterator(event$.get$changedTouches()); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    identifier = t2.get$identifier();
    stagePoint = $.Point$($.sub(t2.get$clientX(), clientRect.get$left()), $.sub(t2.get$clientY(), clientRect.get$top()));
    if ($.eqB(this._touches.containsKey$1(identifier), false))
      $.indexSet(this._touches, identifier, $._Touch$());
    touch = $.index(this._touches, identifier);
    $.print('  identifier:' + $.S(identifier) + ', touchPointID:' + $.S(touch.get$touchPointID()) + ' - x:' + $.S(stagePoint.x) + ', y:' + $.S(stagePoint.y));
  }
},
 get$_onTouchEvent: function() { return new $.BoundClosure(this, '_onTouchEvent$1'); },
 _onKeyEvent$1: function(event$) {
  var keyboardEventType, t1;
  event$.preventDefault$0();
  keyboardEventType = $.eqB(event$.get$type(), 'keyup') ? 'keyUp' : null;
  if ($.eqB(event$.get$type(), 'keydown'))
    keyboardEventType = 'keyDown';
  this._keyboardEvent._reset$2(keyboardEventType, true);
  t1 = event$.get$altKey();
  this._keyboardEvent.set$_altKey(t1);
  t1 = event$.get$ctrlKey();
  this._keyboardEvent.set$_ctrlKey(t1);
  t1 = event$.get$shiftKey();
  this._keyboardEvent.set$_shiftKey(t1);
  t1 = event$.get$charCode();
  this._keyboardEvent.set$_charCode(t1);
  t1 = event$.get$keyCode();
  this._keyboardEvent.set$_keyCode(t1);
  this._keyboardEvent.set$_keyLocation(0);
  if ($.eqB(event$.get$keyLocation(), 1))
    this._keyboardEvent.set$_keyLocation(1);
  if ($.eqB(event$.get$keyLocation(), 2))
    this._keyboardEvent.set$_keyLocation(2);
  if ($.eqB(event$.get$keyLocation(), 3))
    this._keyboardEvent.set$_keyLocation(3);
  if ($.eqB(event$.get$keyLocation(), 5))
    this._keyboardEvent.set$_keyLocation(4);
  if ($.eqB(event$.get$keyLocation(), 4))
    this._keyboardEvent.set$_keyLocation(4);
  t1 = this._focus;
  if (!(t1 == null))
    t1.dispatchEvent$1(this._keyboardEvent);
},
 get$_onKeyEvent: function() { return new $.BoundClosure(this, '_onKeyEvent$1'); },
 _onTextEvent$1: function(event$) {
  var charCode, textEvent, t1;
  charCode = !$.eqB(event$.get$charCode(), 0) ? event$.get$charCode() : event$.get$keyCode();
  textEvent = $.TextEvent$('textInput', true);
  textEvent._text = $._StringImpl_String$fromCharCodes([charCode]);
  t1 = this._focus;
  if (!(t1 == null))
    t1.dispatchEvent$1(textEvent);
},
 get$_onTextEvent: function() { return new $.BoundClosure(this, '_onTextEvent$1'); },
 Stage$2: function(name$, canvas) {
  this._name = name$;
  this._canvas = canvas;
  this._canvas.get$style().set$outline('none');
  this._canvas.focus$0();
  this._context = canvas.get$context2d();
  this._renderState = $.RenderState$fromCanvasRenderingContext2D(this._context);
  this._renderMode = 'auto';
  this._mouseCursor = 'arrow';
  $.get$Mouse__eventDispatcher().addEventListener$2('mouseCursorChanged', this.get$_onMouseCursorChanged());
  this._mouseButtons = [$._MouseButton$('mouseDown', 'mouseUp', 'click', 'doubleClick'), $._MouseButton$('middleMouseDown', 'middleMouseUp', 'middleClick', 'middleClick'), $._MouseButton$('rightMouseDown', 'rightMouseUp', 'rightClick', 'rightClick')];
  this._mouseTarget = null;
  this._mousePosition = $.Point$(0, 0);
  this._mouseEvent = $.MouseEvent$('click', true);
  $.add$1(this._canvas.get$on().get$mouseDown(), this.get$_onMouseEvent());
  $.add$1(this._canvas.get$on().get$mouseUp(), this.get$_onMouseEvent());
  $.add$1(this._canvas.get$on().get$mouseMove(), this.get$_onMouseEvent());
  $.add$1(this._canvas.get$on().get$mouseOut(), this.get$_onMouseEvent());
  $.add$1(this._canvas.get$on().get$mouseWheel(), this.get$_onMouseWheel());
  this._touches = $.Map_Map();
  this._touchEvent = $.TouchEvent$('touchBegin', true);
  if ($.Multitouch_supportsTouchEvents() === true) {
    $.add$1(this._canvas.get$on().get$touchStart(), this.get$_onTouchEvent());
    $.add$1(this._canvas.get$on().get$touchEnd(), this.get$_onTouchEvent());
    $.add$1(this._canvas.get$on().get$touchMove(), this.get$_onTouchEvent());
    $.add$1(this._canvas.get$on().get$touchEnter(), this.get$_onTouchEvent());
    $.add$1(this._canvas.get$on().get$touchLeave(), this.get$_onTouchEvent());
  }
  this._keyboardEvent = $.KeyboardEvent$('keyDown', true);
  $.add$1(this._canvas.get$on().get$keyDown(), this.get$_onKeyEvent());
  $.add$1(this._canvas.get$on().get$keyUp(), this.get$_onKeyEvent());
  $.add$1(this._canvas.get$on().get$keyPress(), this.get$_onTextEvent());
},
 is$Stage: true
};

$$.Bitmap = {"": ["bitmapData", "pixelSnapping", "clipRectangle", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib0_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenerLists"],
 "super": "DisplayObject",
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  var t1, t2, t3, width, height;
  t1 = this.bitmapData;
  t2 = !(t1 == null);
  if (t2) {
    t3 = t1.get$width();
    if (typeof t3 !== 'number')
      return this.getBoundsTransformed$2$bailout(1, matrix, returnRectangle, t2, t1, t3);
    width = t3;
  } else
    width = 0;
  if (t2) {
    t1 = t1.get$height();
    if (typeof t1 !== 'number')
      return this.getBoundsTransformed$2$bailout(2, matrix, returnRectangle, width, t1);
    height = t1;
  } else
    height = 0;
  return $._getBoundsTransformedHelper(matrix, width, height, returnRectangle);
},
 getBoundsTransformed$2$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t3 = env4;
      t1 = env3;
      t2 = env2;
      returnRectangle = env1;
      matrix = env0;
      break;
    case 2:
      t1 = env3;
      width = env2;
      returnRectangle = env1;
      matrix = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.bitmapData;
      t2 = !(t1 == null);
    case 1:
      if (state0 === 1 || state0 === 0 && t2)
        switch (state0) {
          case 0:
            t3 = t1.get$width();
          case 1:
            state0 = 0;
            width = t3;
        }
      else
        width = 0;
    case 2:
      var t1, t2, t3, returnRectangle, matrix, width, height;
      if (state0 === 2 || state0 === 0 && t2)
        switch (state0) {
          case 0:
            t1 = t1.get$height();
          case 2:
            state0 = 0;
            height = t1;
        }
      else
        height = 0;
      return $._getBoundsTransformedHelper(matrix, width, height, returnRectangle);
  }
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  var t1, t2;
  if (typeof localX !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY);
  if (typeof localY !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY);
  t1 = this.bitmapData;
  if (!(t1 == null))
    if (localX >= 0)
      if (localY >= 0) {
        t2 = t1.get$width();
        if (typeof t2 !== 'number')
          return this.hitTestInput$2$bailout(2, localX, localY, t2, t1);
        if (localX < t2) {
          t1 = t1.get$height();
          if (typeof t1 !== 'number')
            return this.hitTestInput$2$bailout(3, localY, t1);
          t1 = localY < t1;
        } else
          t1 = false;
      } else
        t1 = false;
    else
      t1 = false;
  else
    t1 = false;
  if (t1)
    return this;
  return;
},
 hitTestInput$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      localY = env1;
      localX = env0;
      break;
    case 2:
      t1 = env3;
      t2 = env2;
      localY = env1;
      localX = env0;
      break;
    case 3:
      t1 = env1;
      localY = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.bitmapData;
    default:
      var localY, localX, t1, t2;
      if (state0 === 3 || state0 === 2 || state0 === 0 && !(t1 == null))
        switch (state0) {
          case 0:
          default:
            if (state0 === 3 || state0 === 2 || state0 === 0 && $.geB(localX, 0))
              switch (state0) {
                case 0:
                default:
                  if (state0 === 3 || state0 === 2 || state0 === 0 && $.geB(localY, 0))
                    switch (state0) {
                      case 0:
                        t2 = t1.get$width();
                      case 2:
                        state0 = 0;
                      case 3:
                        if (state0 === 3 || state0 === 0 && $.ltB(localX, t2))
                          switch (state0) {
                            case 0:
                              t1 = t1.get$height();
                            case 3:
                              state0 = 0;
                              t1 = $.ltB(localY, t1);
                          }
                        else
                          t1 = false;
                    }
                  else
                    t1 = false;
              }
            else
              t1 = false;
        }
      else
        t1 = false;
      if (t1)
        return this;
      return;
  }
},
 render$1: function(renderState) {
  var t1, t2;
  t1 = this.bitmapData;
  if (!(t1 == null)) {
    t2 = this.clipRectangle;
    if (t2 == null)
      t1.render$1(renderState);
    else
      t1.renderClipped$2(renderState, t2);
  }
},
 Bitmap$2: function(bitmapData, pixelSnapping) {
  this.clipRectangle = null;
}
};

$$.BitmapData = {"": ["_width", "_height", "_transparent", "_htmlElement", "_context", "_frameMode", "_frameOffsetX", "_frameOffsetY", "_frameX", "_frameY", "_frameWidth", "_frameHeight"],
 "super": "Object",
 get$width: function() {
  return this._width;
},
 get$height: function() {
  return this._height;
},
 applyFilter$4: function(sourceBitmapData, sourceRect, destPoint, filter) {
  filter.apply$4(sourceBitmapData, sourceRect, this, destPoint);
},
 render$1: function(renderState) {
  var t1, t2, t3, t4, t5, t6, t7;
  switch (this._frameMode) {
    case 0:
      renderState.get$context().drawImage$3(this._htmlElement, 0, 0);
      break;
    case 1:
      t1 = renderState.get$context();
      t2 = this._htmlElement;
      t3 = this._frameX;
      t4 = this._frameY;
      t5 = this._frameWidth;
      t6 = this._frameHeight;
      t1.drawImage$9(t2, t3, t4, t5, t6, this._frameOffsetX, this._frameOffsetY, t5, t6);
      break;
    case 2:
      t1 = renderState.get$context();
      t2 = this._frameOffsetX;
      t3 = this._frameOffsetY;
      t4 = this._frameHeight;
      t1.transform$6(0, -1, 1, 0, t2, $.add(t3, t4));
      t2 = renderState.get$context();
      t1 = this._htmlElement;
      t5 = this._frameX;
      t6 = this._frameY;
      t7 = this._frameWidth;
      t2.drawImage$9(t1, t5, t6, t4, t7, 0, 0, t4, t7);
      break;
  }
},
 renderClipped$2: function(renderState, clipRectangle) {
  var fLeft, fTop, fRight, fBottom, t1, cLeft, t2, cTop, cRight, cBottom, iLeft, iTop, iRight, iBottom, iOffsetX, iOffsetY, iWidth, iHeight, t3;
  if ($.leB(clipRectangle.get$width(), 0) || $.leB(clipRectangle.get$height(), 0))
    return;
  switch (this._frameMode) {
    case 0:
      renderState.get$context().drawImage$9(this._htmlElement, clipRectangle.get$x(), clipRectangle.get$y(), clipRectangle.get$width(), clipRectangle.get$height(), clipRectangle.get$x(), clipRectangle.get$y(), clipRectangle.get$width(), clipRectangle.get$height());
      break;
    case 1:
      fLeft = this._frameX;
      fTop = this._frameY;
      fRight = $.add(fLeft, this._frameWidth);
      fBottom = $.add(fTop, this._frameHeight);
      t1 = this._frameOffsetX;
      cLeft = $.add($.sub(fLeft, t1), clipRectangle.get$x());
      t2 = this._frameOffsetY;
      cTop = $.add($.sub(fTop, t2), clipRectangle.get$y());
      cRight = $.add(cLeft, clipRectangle.get$width());
      cBottom = $.add(cTop, clipRectangle.get$height());
      iLeft = $.gtB(fLeft, cLeft) ? fLeft : cLeft;
      iTop = $.gtB(fTop, cTop) ? fTop : cTop;
      iRight = $.ltB(fRight, cRight) ? fRight : cRight;
      iBottom = $.ltB(fBottom, cBottom) ? fBottom : cBottom;
      iOffsetX = $.add($.sub(t1, fLeft), iLeft);
      iOffsetY = $.add($.sub(t2, fTop), iTop);
      iWidth = $.sub(iRight, iLeft);
      iHeight = $.sub(iBottom, iTop);
      if ($.gtB(iWidth, 0) && $.gtB(iHeight, 0))
        renderState.get$context().drawImage$9(this._htmlElement, iLeft, iTop, iWidth, iHeight, iOffsetX, iOffsetY, iWidth, iHeight);
      break;
    case 2:
      fLeft = this._frameX;
      fTop = this._frameY;
      t1 = this._frameHeight;
      fRight = $.add(fLeft, t1);
      fBottom = $.add(fTop, this._frameWidth);
      t2 = this._frameOffsetY;
      cLeft = $.sub($.add($.sub($.add(fLeft, t2), clipRectangle.get$y()), t1), clipRectangle.get$height());
      t3 = this._frameOffsetX;
      cTop = $.add($.sub(fTop, t3), clipRectangle.get$x());
      cRight = $.add(cLeft, clipRectangle.get$height());
      cBottom = $.add(cTop, clipRectangle.get$width());
      iLeft = $.gtB(fLeft, cLeft) ? fLeft : cLeft;
      iTop = $.gtB(fTop, cTop) ? fTop : cTop;
      iRight = $.ltB(fRight, cRight) ? fRight : cRight;
      iBottom = $.ltB(fBottom, cBottom) ? fBottom : cBottom;
      iOffsetX = $.add($.sub(t3, fTop), iTop);
      iOffsetY = $.sub($.add(t2, fRight), iRight);
      iWidth = $.sub(iBottom, iTop);
      iHeight = $.sub(iRight, iLeft);
      if ($.gtB(iWidth, 0) && $.gtB(iHeight, 0)) {
        renderState.get$context().transform$6(0, -1, 1, 0, iOffsetX, $.add(iOffsetY, iHeight));
        renderState.get$context().drawImage$9(this._htmlElement, iLeft, iTop, iHeight, iWidth, 0, 0, iHeight, iWidth);
      }
      break;
  }
},
 _getContext$0: function() {
  var t1, canvas, t2, t3, t4, t5, t6, t7;
  if (this._context == null) {
    t1 = this._width;
    canvas = $.CanvasElement_CanvasElement(this._height, t1);
    this._context = canvas.get$context2d();
    switch (this._frameMode) {
      case 0:
        this._context.drawImage$3(this._htmlElement, 0, 0);
        break;
      case 1:
        t1 = this._context;
        t2 = this._htmlElement;
        t3 = this._frameX;
        t4 = this._frameY;
        t5 = this._frameWidth;
        t6 = this._frameHeight;
        t1.drawImage$9(t2, t3, t4, t5, t6, this._frameOffsetX, this._frameOffsetY, t5, t6);
        break;
      case 2:
        t1 = this._context;
        t2 = this._frameOffsetX;
        t3 = this._frameOffsetY;
        t4 = this._frameHeight;
        t1.setTransform$6(0, -1, 1, 0, t2, $.add(t3, t4));
        t2 = this._context;
        t1 = this._htmlElement;
        t5 = this._frameX;
        t6 = this._frameY;
        t7 = this._frameWidth;
        t2.drawImage$9(t1, t5, t6, t4, t7, 0, 0, t4, t7);
        this._context.setTransform$6(1, 0, 0, 1, 0, 0);
        break;
    }
    this._htmlElement = canvas;
    this._frameMode = 0;
  }
  return this._context;
},
 BitmapData$fromImageElement$1: function(imageElement) {
  this._width = imageElement.get$naturalWidth();
  this._height = imageElement.get$naturalHeight();
  this._transparent = true;
  this._htmlElement = imageElement;
  this._frameMode = 0;
},
 BitmapData$4: function(width, height, transparent, fillColor) {
  var t1, canvas;
  this._width = width;
  this._height = height;
  this._transparent = transparent;
  t1 = this._width;
  canvas = $.CanvasElement_CanvasElement(this._height, t1);
  this._context = canvas.get$context2d();
  t1 = this._transparent === true ? $._color2rgba(fillColor) : $._color2rgb(fillColor);
  this._context.set$fillStyle(t1);
  this._context.fillRect$4(0, 0, width, height);
  this._htmlElement = canvas;
  this._frameMode = 0;
}
};

$$.DisplayObjectEvents = {"": ["_eventDispatcher"],
 "super": "Events0"
};

$$.DisplayObjectContainerEvents = {"": ["_eventDispatcher"],
 "super": "InteractiveObjectEvents"
};

$$.InteractiveObjectEvents = {"": ["_eventDispatcher"],
 "super": "DisplayObjectEvents",
 get$mouseOut: function() {
  return this.operator$index$1('mouseOut');
},
 get$mouseMove: function() {
  return this.operator$index$1('mouseMove');
},
 get$mouseDown: function() {
  return this.operator$index$1('mouseDown');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseUp');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mouseWheel');
},
 get$keyUp: function() {
  return this.operator$index$1('keyUp');
},
 get$keyDown: function() {
  return this.operator$index$1('keyDown');
}
};

$$.TextField = {"": ["_text", "_textColor", "_defaultTextFormat", "_autoSize", "_gridFitType", "_type", "_wordWrap", "_background", "_backgroundColor", "_border", "_borderColor", "_textWidth", "_textHeight", "_linesText", "_linesMetrics", "_canvasRefreshPending", "_canvasWidth", "_canvasHeight", "_canvas", "_context", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib0_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenerLists"],
 "super": "InteractiveObject",
 get$type: function() {
  return this._type;
},
 get$width: function() {
  return this._canvasWidth;
},
 get$height: function() {
  return this._canvasHeight;
},
 set$text: function(value) {
  this._text = value;
  this._canvasRefreshPending = true;
},
 set$defaultTextFormat: function(value) {
  this._defaultTextFormat = value;
  this._textColor = this._defaultTextFormat.get$color();
  this._canvasRefreshPending = true;
},
 set$width: function(value) {
  this._canvasWidth = value;
  this._canvasRefreshPending = true;
},
 set$height: function(value) {
  this._canvasHeight = value;
  this._canvasRefreshPending = true;
},
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  return $._getBoundsTransformedHelper(matrix, this._canvasWidth, this._canvasHeight, returnRectangle);
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  var t1;
  if (typeof localX !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY);
  if (typeof localY !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY);
  if (localX >= 0)
    if (localY >= 0) {
      t1 = this._canvasWidth;
      if (typeof t1 !== 'number')
        return this.hitTestInput$2$bailout(2, localX, localY, t1);
      if (localX < t1) {
        t1 = this._canvasHeight;
        if (typeof t1 !== 'number')
          return this.hitTestInput$2$bailout(3, localY, t1);
        t1 = localY < t1;
      } else
        t1 = false;
    } else
      t1 = false;
  else
    t1 = false;
  if (t1)
    return this;
  return;
},
 hitTestInput$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      localY = env1;
      localX = env0;
      break;
    case 2:
      t1 = env2;
      localY = env1;
      localX = env0;
      break;
    case 3:
      t1 = env1;
      localY = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    default:
      var localY, localX, t1;
      if (state0 === 3 || state0 === 2 || state0 === 0 && $.geB(localX, 0))
        switch (state0) {
          case 0:
          default:
            if (state0 === 3 || state0 === 2 || state0 === 0 && $.geB(localY, 0))
              switch (state0) {
                case 0:
                  t1 = this._canvasWidth;
                case 2:
                  state0 = 0;
                case 3:
                  if (state0 === 3 || state0 === 0 && $.ltB(localX, t1))
                    switch (state0) {
                      case 0:
                        t1 = this._canvasHeight;
                      case 3:
                        state0 = 0;
                        t1 = $.ltB(localY, t1);
                    }
                  else
                    t1 = false;
              }
            else
              t1 = false;
        }
      else
        t1 = false;
      if (t1)
        return this;
      return;
  }
},
 render$1: function(renderState) {
  this._canvasRefresh$0();
  renderState._context.drawImage$3(this._canvas, 0, 0);
},
 _processTextLines$0: function() {
  var lineBuffer, t1, word, previousLength, line, t2, metrics, offsetX, textLineMetrics, t3;
  $.clear(this._linesText);
  $.clear(this._linesMetrics);
  if (!this._wordWrap)
    this._linesText.push(this._text);
  else {
    lineBuffer = $.StringBuffer_StringBuffer('');
    for (t1 = $.iterator($.split(this._text, ' ')); t1.get$hasNext() === true;) {
      word = t1.next$0();
      previousLength = $.get$length(lineBuffer);
      $.add$1(lineBuffer, $.gtB(previousLength, 0) ? ' ' + $.S(word) : word);
      line = $.toString(lineBuffer);
      if ($.gtB(this._context.measureText$1(line).get$width(), this._canvasWidth)) {
        if ($.gtB(previousLength, 0))
          line = $.substring$2(line, 0, previousLength);
        else
          word = '';
        this._linesText.push(line);
        $.clear(lineBuffer);
        $.add$1(lineBuffer, word);
      }
    }
    if ($.eqB($.get$isEmpty(lineBuffer), false))
      this._linesText.push($.toString(lineBuffer));
  }
  this._textWidth = 0;
  this._textHeight = 0;
  for (t1 = $.iterator(this._linesText); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    metrics = this._context.measureText$1(t2);
    offsetX = $.eqB(this._defaultTextFormat.get$align(), 'center') || $.eqB(this._defaultTextFormat.get$align(), 'justify') ? $.div($.sub(this._canvasWidth, metrics.get$width()), 2) : 0;
    if ($.eqB(this._defaultTextFormat.get$align(), 'right') || $.eqB(this._defaultTextFormat.get$align(), 'end'))
      offsetX = $.sub(this._canvasWidth, metrics.get$width());
    textLineMetrics = $.TextLineMetrics$(offsetX, metrics.get$width(), this._defaultTextFormat.get$size(), 0, 0, 0);
    this._linesMetrics.push(textLineMetrics);
    this._textWidth = $.max(this._textWidth, textLineMetrics.width);
    t2 = this._textHeight;
    t3 = textLineMetrics.height;
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    this._textHeight = t2 + t3;
  }
},
 _canvasRefresh$0: function() {
  var canvasWidthInt, canvasHeightInt, fontStyle, t1, offsetY, i, metrics, t2;
  if (this._canvasRefreshPending) {
    this._canvasRefreshPending = false;
    canvasWidthInt = $.toInt($.ceil(this._canvasWidth));
    canvasHeightInt = $.toInt($.ceil(this._canvasHeight));
    if (this._canvas == null) {
      this._canvas = $.CanvasElement_CanvasElement(canvasHeightInt, canvasWidthInt);
      this._context = this._canvas.get$context2d();
    }
    if (!$.eqB(this._canvas.get$width(), canvasWidthInt))
      this._canvas.set$width(canvasWidthInt);
    if (!$.eqB(this._canvas.get$height(), canvasHeightInt))
      this._canvas.set$height(canvasHeightInt);
    fontStyle = $.StringBuffer_StringBuffer('');
    $.add$1(fontStyle, this._defaultTextFormat.get$italic() === true ? 'italic ' : 'normal ');
    $.add$1(fontStyle, 'normal ');
    $.add$1(fontStyle, this._defaultTextFormat.get$bold() === true ? 'bold ' : 'normal ');
    $.add$1(fontStyle, $.S(this._defaultTextFormat.get$size()) + 'px ');
    $.add$1(fontStyle, $.S(this._defaultTextFormat.get$font()) + ',sans-serif');
    t1 = $.toString(fontStyle);
    this._context.set$font(t1);
    this._context.set$textAlign('start');
    this._context.set$textBaseline('top');
    t1 = $._color2rgb(this._textColor);
    this._context.set$fillStyle(t1);
    this._processTextLines$0();
    if (this._background) {
      t1 = $._color2rgb(this._backgroundColor);
      this._context.set$fillStyle(t1);
      this._context.fillRect$4(0, 0, this._canvasWidth, this._canvasHeight);
    } else
      this._context.clearRect$4(0, 0, this._canvasWidth, this._canvasHeight);
    for (offsetY = 0, i = 0; i < this._linesText.length; ++i) {
      t1 = this._linesMetrics;
      if (i >= t1.length)
        throw $.ioore(i);
      metrics = t1[i];
      t1 = $._color2rgb(this._textColor);
      this._context.set$fillStyle(t1);
      t1 = this._context;
      t2 = this._linesText;
      if (i >= t2.length)
        throw $.ioore(i);
      t1.fillText$3(t2[i], metrics.get$x(), offsetY);
      t1 = metrics.get$height();
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      offsetY += t1;
    }
    if (this._border) {
      t1 = $._color2rgb(this._borderColor);
      this._context.set$strokeStyle(t1);
      this._context.set$lineWidth(1);
      this._context.strokeRect$4(0, 0, this._canvasWidth, this._canvasHeight);
    }
  }
},
 TextField$0: function() {
  this._defaultTextFormat = $.TextFormat$('Arial', 12, 0, 'left', false, 0, false, 0, 0, 0, false);
  this._linesText = $._ListImpl_List(null);
  this._linesMetrics = $._ListImpl_List(null);
}
};

$$.TextFormat = {"": ["font=", "size?", "color?", "bold?", "italic?", "underline", "align?", "leftMargin", "rightMargin", "indent", "leading", "letterSpacing", "blockIndent", "bullet", "kerning"],
 "super": "Object"
};

$$.TextLineMetrics = {"": ["ascent", "descent", "height=", "leading", "width=", "x="],
 "super": "Object"
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"": [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": ["readSlot_8", "writeSlot_7", "findSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_6.call$1(e);
    t1.copy_1 = this.readSlot_8.call$1(slot);
    t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_7.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    length$ = e.length;
    slot = this.findSlot_6.call$1(e);
    t2 = this.readSlot_8;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_7.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_7;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, elementCopy, length$, i, copy, slot);
          for (t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, copy, e, i, length$);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$('structured clone of other type'));
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env6;
      copy = env5;
      i = env4;
      length$ = env3;
      elementCopy = env2;
      t3 = env1;
      e = env0;
      break;
    case 3:
      length$ = env3;
      i = env2;
      e = env1;
      copy = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_6.call$1(e);
        t1.copy_1 = this.readSlot_8.call$1(slot);
        t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_7.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
        return t1.copy_1;
      }
    default:
      var t1, slot, t2, e, length$, copy, t3, i, element, elementCopy, j;
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            length$ = $.get$length(e);
            slot = this.findSlot_6.call$1(e);
            t2 = this.readSlot_8;
            copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_7.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t3 = this.writeSlot_7;
          case 2:
            if (state0 === 2 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = $.index(e, i);
                          elementCopy = this.call$1(element);
                        case 2:
                          if (state0 === 2 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$('structured clone of other type'));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": ["box_0", "walk_9"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.Maps__emitMap_anon = {"": ["box_0", "visiting_3", "result_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_2, ', ');
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"": ["values_1", "copies_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_1;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_0, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_0, null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"": ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"": ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"": ["mustCopy_7", "writeSlot_6", "readSlot_5", "findSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, copy, slot);
    this.writeSlot_6.call$2(slot, copy);
    for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_7 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, slot);
    this.writeSlot_6.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    case 3:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            length$ = $.get$length(e);
            copy = this.mustCopy_7 === true ? new Array(length$) : e;
          case 3:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.DoubleLinkedQueue_length__ = {"": ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$._LinkedHashMapImpl_forEach__ = {"": ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.BitmapData_loadImage_anon = {"": ["image_1", "completer_0"],
 "super": "Closure",
 call$1: function(event$) {
  return this.completer_0.complete$1($.BitmapData$fromImageElement(this.image_1));
}
};

$$.BitmapData_loadImage_anon0 = {"": ["completer_2"],
 "super": "Closure",
 call$1: function(event$) {
  return this.completer_2.completeException$1('Failed to load image.');
}
};

$$.invokeClosure_anon = {"": ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"": ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"": ["arg2_5", "closure_4", "arg1_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_4.call$2(this.arg1_3, this.arg2_5);
}
};

$$.NoSuchMethodError_toString_anon = {"": ["box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.box_0;
  if ($.gtB(t1.i_2, 0))
    $.add$1(t1.sb_1, ', ');
  $.add$1(t1.sb_1, key);
  $.add$1(t1.sb_1, ': ');
  $.add$1(t1.sb_1, $.NoSuchMethodError_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$._DateImpl_toString_fourDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  var absN, sign;
  absN = $.abs(n);
  sign = $.ltB(n, 0) ? '-' : '';
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + '0' + $.S(absN);
  if ($.geB(absN, 10))
    return sign + '00' + $.S(absN);
  return sign + '000' + $.S(absN);
}
};

$$._DateImpl_toString_threeDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return '0' + $.S(n);
  return '00' + $.S(n);
}
};

$$._DateImpl_toString_twoDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return '0' + $.S(n);
}
};

$$.Closure = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.BoundClosure = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure0 = {'':
['self', 'target'],
'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$.BitmapData$ = function(width, height, transparent, fillColor) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$4(width, height, transparent, fillColor);
  return t1;
};

$.BitmapData$fromImageElement = function(imageElement) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$fromImageElement$1(imageElement);
  return t1;
};

$.BitmapData_loadImage = function(url) {
  var completer, image;
  completer = $.Completer_Completer();
  image = $.ImageElement_ImageElement($, $, $);
  $.add$1(image.get$on().get$load(), new $.BitmapData_loadImage_anon(image, completer));
  $.add$1(image.get$on().get$error(), new $.BitmapData_loadImage_anon0(completer));
  image.set$src(url);
  return completer.get$future();
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$.ScriptProcessorNodeEvents$ = function(_ptr) {
  return new $.ScriptProcessorNodeEvents(_ptr);
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.CanvasElement_CanvasElement = function(height, width) {
  var t1, t2;
  t1 = $ === height;
  if (t1)
    height = null;
  t2 = $ === width;
  if (t2)
    width = null;
  if (t2)
    return $._Elements_createCanvasElement(null, null);
  if (t1)
    return $._Elements_createCanvasElement(width, null);
  return $._Elements_createCanvasElement(width, height);
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC0));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.WorkerEvents$ = function(_ptr) {
  return new $.WorkerEvents(_ptr);
};

$.AbstractWorkerEvents$ = function(_ptr) {
  return new $.AbstractWorkerEvents(_ptr);
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(arg2, closure, arg1).call$0();
  else
    throw $.$$throw($._ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      return $.NullPointerException$(null, $.CTC0);
    else if ($.eqB(type, 'undefined_method'))
      return $.NoSuchMethodError$('', name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC0);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], $.makeLiteralMap([]), null);
      }
    return $._ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowError$();
  return ex;
};

$.listInsertRange = function(receiver, start, length$, initialValue) {
  var receiverLength, t1, t2, t3, i;
  if (typeof receiver !== 'object' || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.is$JavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, length$, initialValue);
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (t3 = receiver.length, i = start; i < t2; ++i) {
      if (i < 0 || i >= t3)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.set$length(receiver, t1);
};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$('Cyclic initialization for static ' + $.S(staticName)));
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.Bitmap$ = function(bitmapData, pixelSnapping) {
  var t1 = new $.Bitmap(bitmapData, pixelSnapping, null, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.Bitmap$2(bitmapData, pixelSnapping);
  return t1;
};

$.FileWriterEvents$ = function(_ptr) {
  return new $.FileWriterEvents(_ptr);
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return 'Null';
  constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.propertyTypeCastError = function(value, property) {
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), $.substring$2(property, 3, $.get$length(property))));
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result === null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global === true)
    $.add$1(sb, 'g');
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, length$, patternLength, startIndex, position, endIndex;
  result = $._ListImpl_List(null);
  length$ = $.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.DropShadowFilter$ = function(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
  var t1 = new $.DropShadowFilter(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  t1.DropShadowFilter$10(distance, angle, color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  return t1;
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.stringSplitUnchecked = function(receiver, pattern) {
  return receiver.split(pattern);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string')
    return !$.eqB($.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).get$hasNext();
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.removeAt$1 = function(receiver, index) {
  if ($.isJsArray(receiver)) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(receiver)))
      throw $.$$throw($.RangeError$value(index));
    $.checkGrowable(receiver, 'removeAt');
    return receiver.splice(index, 1)[0];
  }
  return receiver.removeAt$1(index);
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$.get$isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.get$isEmpty();
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.eqB($.get$length(receiver), 0))
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    return receiver.indexOf(element);
  }
  return receiver.indexOf$1(element);
};

$.insertRange$3 = function(receiver, start, length$, initialValue) {
  if (!$.isJsArray(receiver))
    return receiver.insertRange$3(start, length$, initialValue);
  return $.listInsertRange(receiver, start, length$, initialValue);
};

$.get$last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.get$last();
  return receiver.operator$index$1($.sub($.get$length(receiver), 1));
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.get$isNegative = function(receiver) {
  return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
};

$.get$isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.get$isNaN();
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.toInt = function(receiver) {
  var truncated;
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$.ceil = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.ceil$0();
  return Math.ceil(receiver);
};

$.floor = function(receiver) {
  return Math.floor(receiver);
};

$.round = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.round$0();
  if (receiver < 0)
    return -Math.round(-receiver);
  else
    return Math.round(receiver);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.get$isInfinite = function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
};

$.contains$1 = function(receiver, other) {
  var t1, i;
  if (typeof receiver !== 'string' && (typeof receiver !== 'object' || receiver === null || receiver.constructor !== Array && !receiver.is$JavaScriptIndexingBehavior()))
    return $.contains$1$bailout(1, receiver, other);
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (t1 = receiver.length, i = 0; i < t1; ++i)
      if (other === receiver[i])
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.FileReaderEvents$ = function(_ptr) {
  return new $.FileReaderEvents(_ptr);
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  var length$;
  if (!(typeof receiver === 'string'))
    return receiver.substring$2(startIndex, endIndex);
  $.checkNum(startIndex);
  length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.RangeError$value(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.endsWith = function(receiver, other) {
  var receiverLength, otherLength;
  $.checkString(other);
  receiverLength = receiver.length;
  otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.get$hashCode = function(receiver) {
  var length$, hash, i, hash0, hash1;
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.get$hashCode();
  length$ = receiver.length;
  for (hash = 0, i = 0; i < length$; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, i;
  if (from === '')
    if (receiver === '')
      return to;
    else {
      result = $.StringBuffer_StringBuffer('');
      length$ = receiver.length;
      $.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC3, true), "\\$&"), false, false), true), to);
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.RTCPeerConnectionEvents$ = function(_ptr) {
  return new $.RTCPeerConnectionEvents(_ptr);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string'))
    return receiver.allMatches$1(str);
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.main = function() {
  $.stage = $.Stage$('stage', $.document().query$1('#stage'));
  $.renderLoop = $.RenderLoop$();
  $.renderLoop.addStage$1($.stage);
  $.BitmapData_loadImage('../common/images/king.png').then$1($.drawFilters);
};

$.drawFilters = function(kingBitmapData) {
  var kingRectangle, bitmapData, bitmap, filters, backgroundBitmapData, i, x, y, filter, name$, backgroundBitmap, textField;
  kingRectangle = $.Rectangle$(0, 0, kingBitmapData.get$width(), kingBitmapData.get$height());
  bitmapData = $.BitmapData$(940, 500, true, 0);
  bitmap = $.Bitmap$(bitmapData, 'auto');
  $.stage.addChild$1(bitmap);
  filters = [$.makeLiteralMap(['name', 'DropShadowFilter (black)', 'filter', $.DropShadowFilter$(10, 0.7853981633974483, 4278190080, 0.8, 8, 8, 1, false, false, false)]), $.makeLiteralMap(['name', 'GlowFilter (red)', 'filter', $.GlowFilter$(4294901760, 1, 20, 20, 2, false, false, false)]), $.makeLiteralMap(['name', 'ColorMatrixFilter (grayscale)', 'filter', $.ColorMatrixFilter$grayscale()]), $.makeLiteralMap(['name', 'ColorMatrixFilter (invert)', 'filter', $.ColorMatrixFilter$invert()]), $.makeLiteralMap(['name', 'BlurFilter (radius 1)', 'filter', $.BlurFilter$(1, 1)]), $.makeLiteralMap(['name', 'BlurFilter (radius 5)', 'filter', $.BlurFilter$(5, 5)]), $.makeLiteralMap(['name', 'BlurFilter (radius 10)', 'filter', $.BlurFilter$(10, 10)]), $.makeLiteralMap(['name', 'BlurFilter (radius 20)', 'filter', $.BlurFilter$(20, 20)])];
  backgroundBitmapData = $.BitmapData$(230, 245, true, 4293980400);
  for (i = 0; i < filters.length; ++i) {
    x = 235 * $.mod(i, 4);
    y = 250 * $.tdiv(i, 4);
    filter = $.index(filters[i], 'filter');
    if (i >= filters.length)
      throw $.ioore(i);
    name$ = $.index(filters[i], 'name');
    bitmapData.applyFilter$4(kingBitmapData, kingRectangle, $.Point$(x + 40, y + 45), filter);
    backgroundBitmap = $.Bitmap$(backgroundBitmapData, 'auto');
    backgroundBitmap.set$x(x);
    backgroundBitmap.set$y(y);
    $.stage.addChildAt$2(backgroundBitmap, 0);
    textField = $.TextField$();
    textField.set$defaultTextFormat($.TextFormat$('Helvetica Neue, Helvetica, Arial', 14, 4278190080, 'left', false, 0, false, 0, 0, 0, false));
    textField.set$x(x + 5);
    textField.set$y(y + 5);
    textField.set$width(200);
    textField.set$text(name$);
    $.stage.addChild$1(textField);
  }
};

$.get$isEven = function(receiver) {
  if (!(typeof receiver === 'number' && Math.floor(receiver) === receiver))
    return receiver.get$isEven();
  return (receiver & 1) === 0;
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.get$isNegative(b) === true || $.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.EventSourceEvents$ = function(_ptr) {
  return new $.EventSourceEvents(_ptr);
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$._EventListenerUseCapture$ = function(eventListener, useCapture) {
  return new $._EventListenerUseCapture(eventListener, useCapture);
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf('Chrome') !== -1 || userAgent.indexOf('DumpRenderTree') !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf('Firefox') !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf('MSIE') !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf('Opera') !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf('AppleWebKit') !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.split = function(receiver, pattern) {
  if (!(typeof receiver === 'string'))
    return receiver.split$1(pattern);
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC5)[name$];
  if (!(dartMethod == null))
    methods['Object'] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split('|');
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$.RTCDataChannelEvents$ = function(_ptr) {
  return new $.RTCDataChannelEvents(_ptr);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.GlowFilter$ = function(color, alpha, blurX, blurY, strength, inner, knockout, hideObject) {
  var t1 = new $.GlowFilter(color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  t1.GlowFilter$8(color, alpha, blurX, blurY, strength, inner, knockout, hideObject);
  return t1;
};

$.ColorMatrixFilter$grayscale = function() {
  return new $.ColorMatrixFilter([0.212671, 0.71516, 0.072169, 0, 0, 0.212671, 0.71516, 0.072169, 0, 0, 0.212671, 0.71516, 0.072169, 0, 0, 0, 0, 0, 1, 0]);
};

$.ColorMatrixFilter$invert = function() {
  return new $.ColorMatrixFilter([-1, 0, 0, 0, 255, 0, -1, 0, 0, 255, 0, 0, -1, 0, 255, 0, 0, 0, 1, 0]);
};

$.WebSocketEvents$ = function(_ptr) {
  return new $.WebSocketEvents(_ptr);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.BlurFilter$ = function(blurX, blurY) {
  var t1 = new $.BlurFilter(blurX, blurY);
  t1.BlurFilter$2(blurX, blurY);
  return t1;
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.BatteryManagerEvents$ = function(_ptr) {
  return new $.BatteryManagerEvents(_ptr);
};

$.DedicatedWorkerContextEvents$ = function(_ptr) {
  return new $.DedicatedWorkerContextEvents(_ptr);
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$());
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(false, null, null, null, false, [], [], []);
};

$.TextTrackListEvents$ = function(_ptr) {
  return new $.TextTrackListEvents(_ptr);
};

$.TextField$ = function() {
  var t1 = new $.TextField('', 0, null, 'none', 'pixel', 'dynamic', false, false, 0, false, 0, 0, 0, null, null, true, 100, 100, null, null, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.TextField$0();
  return t1;
};

$.PeerConnection00Events$ = function(_ptr) {
  return new $.PeerConnection00Events(_ptr);
};

$.AudioContextEvents$ = function(_ptr) {
  return new $.AudioContextEvents(_ptr);
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.TextFormat$ = function(font, size, color, align, bold, indent, italic, leading, leftMargin, rightMargin, underline) {
  return new $.TextFormat(font, size, color, bold, italic, underline, align, leftMargin, rightMargin, indent, leading, 0, 0, false, false);
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  return new $.FutureUnhandledException(source, stackTrace);
};

$.TextLineMetrics$ = function(x, width, height, ascent, descent, leading) {
  return new $.TextLineMetrics(ascent, descent, height, leading, width, x);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.TextTrackCueEvents$ = function(_ptr) {
  return new $.TextTrackCueEvents(_ptr);
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.iterator(charCodes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
  }
  return String.fromCharCode.apply(null, charCodes);
};

$.IDBVersionChangeRequestEvents$ = function(_ptr) {
  return new $.IDBVersionChangeRequestEvents(_ptr);
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.IDBRequestEvents$ = function(_ptr) {
  return new $.IDBRequestEvents(_ptr);
};

$.Primitives_printString = function(string) {
  if ('\nThis program is using an experimental feature called "mirrors".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n' === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.TextTrackEvents$ = function(_ptr) {
  return new $.TextTrackEvents(_ptr);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.IDBTransactionEvents$ = function(_ptr) {
  return new $.IDBTransactionEvents(_ptr);
};

$.Stage$ = function(name$, canvas) {
  var t1 = new $.Stage(null, null, null, null, null, null, null, null, null, null, null, null, null, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Stage$2(name$, canvas);
  return t1;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$.IDBOpenDBRequestEvents$ = function(_ptr) {
  return new $.IDBOpenDBRequestEvents(_ptr);
};

$.DOMApplicationCacheEvents$ = function(_ptr) {
  return new $.DOMApplicationCacheEvents(_ptr);
};

$.SVGElementInstanceEvents$ = function(_ptr) {
  return new $.SVGElementInstanceEvents(_ptr);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.NotificationEvents$ = function(_ptr) {
  return new $.NotificationEvents(_ptr);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  $.regExpAttachGlobalNative(re);
  return re;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._convertNativeToDart_ImageData = function(nativeImageData) {
  0;
  if (typeof nativeImageData === 'object' && nativeImageData !== null && nativeImageData.is$ImageData())
    return nativeImageData;
  return $._TypedImageData$(nativeImageData.data, nativeImageData.height, nativeImageData.width);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._convertDartToNative_ImageData = function(imageData) {
  if (typeof imageData === 'object' && imageData !== null && !!imageData.is$_TypedImageData)
    return {data: imageData.data, height: imageData.height, width: imageData.width};
  return imageData;
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$._convertNativeToDart_SerializedScriptValue = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, true);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t2, t3, t1).call$1(value);
  t4.call$0();
  return copy;
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies, t1, t2;
  values = [];
  copies = [];
  t1 = new $._convertNativeToDart_AcceptStructuredClone_findSlot(values, copies);
  t2 = new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies);
  return new $._convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies), t2, t1).call$1(object);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var isList, t1, first, t2;
  $.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (t1 = $.iterator(c), first = true; t1.get$hasNext() === true; first = false) {
    t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$._Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
};

$.RenderState$fromCanvasRenderingContext2D = function(context) {
  var t1 = new $.RenderState(null, null, null, null);
  t1.RenderState$fromCanvasRenderingContext2D$1(context);
  return t1;
};

$.EventDispatcher$ = function() {
  return new $.EventDispatcher(null);
};

$._FixedSizeListIterator$ = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), array, 0);
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._MouseButton$ = function(mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType) {
  return new $._MouseButton(null, false, 0, 0, mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType);
};

$._Touch$ = function() {
  var t1 = $._Touch__globalTouchPointID;
  $._Touch__globalTouchPointID = $.add(t1, 1);
  return new $._Touch(t1, null);
};

$.Point$zero = function() {
  return new $.Point(0, 0);
};

$.RangeError$value = function(value) {
  return new $.RangeError('value ' + $.S(value));
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.MouseEvent$ = function(type, bubbles) {
  var t1 = new $.MouseEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.MouseEvent$2(type, bubbles);
  return t1;
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$.Event$ = function(type, bubbles) {
  var t1 = new $.Event(null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(t1, visiting, result));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.KeyboardEvent$ = function(type, bubbles) {
  var t1 = new $.KeyboardEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.KeyboardEvent$2(type, bubbles);
  return t1;
};

$.IDBDatabaseEvents$ = function(_ptr) {
  return new $.IDBDatabaseEvents(_ptr);
};

$.Mouse__getCssStyle = function(mouseCursor) {
  var cursor, style;
  cursor = !$.eqB($.Mouse__customCursor, 'auto') ? $.Mouse__customCursor : mouseCursor;
  style = 'auto';
  switch (cursor) {
    case 'auto':
      style = 'auto';
      break;
    case 'arrow':
      style = 'default';
      break;
    case 'button':
      style = 'pointer';
      break;
    case 'hand':
      style = 'move';
      break;
    case 'ibeam':
      style = 'text';
      break;
    case 'wait':
      style = 'wait';
      break;
  }
  return $.Mouse__isCursorHidden === true ? 'none' : style;
};

$.Multitouch__initialize = function() {
  if ($.eqB($.Multitouch__initialized, false)) {
    $.Multitouch__initialized = true;
    var ua = $.window().get$navigator().get$userAgent();
    if ($.contains$1(ua, 'iPhone') === true || $.contains$1(ua, 'iPad') === true || $.contains$1(ua, 'iPod') === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if ($.contains$1(ua, 'Android') === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if ($.contains$1(ua, 'IEMobile') === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
  }
  $.Multitouch__supportsTouchEvents = false;
  $.Multitouch__maxTouchPoints = 0;
};

$.Multitouch_supportsTouchEvents = function() {
  $.Multitouch__initialize();
  return $.Multitouch__supportsTouchEvents;
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.SpeechRecognitionEvents$ = function(_ptr) {
  return new $.SpeechRecognitionEvents(_ptr);
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  return new $.HttpRequestUploadEvents(_ptr);
};

$.TouchEvent$ = function(type, bubbles) {
  var t1 = new $.TouchEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.TouchEvent$2(type, bubbles);
  return t1;
};

$.TextEvent$ = function(type, bubbles) {
  var t1 = new $.TextEvent('', null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$.MessagePortEvents$ = function(_ptr) {
  return new $.MessagePortEvents(_ptr);
};

$.DisplayObjectContainerEvents$ = function(target) {
  var t1 = new $.DisplayObjectContainerEvents(null);
  t1.Events$1(target);
  return t1;
};

$.InteractiveObjectEvents$ = function(target) {
  var t1 = new $.InteractiveObjectEvents(null);
  t1.Events$1(target);
  return t1;
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.HttpRequestEvents$ = function(_ptr) {
  return new $.HttpRequestEvents(_ptr);
};

$._color2rgb = function(color) {
  var r, g, b;
  r = $.and($.shr(color, 16), 255);
  g = $.and($.shr(color, 8), 255);
  b = $.and($.shr(color, 0), 255);
  return 'rgb(' + $.S(r) + ',' + $.S(g) + ',' + $.S(b) + ')';
};

$._color2rgba = function(color) {
  var a, r, g, b;
  a = $.and($.shr(color, 24), 255);
  r = $.and($.shr(color, 16), 255);
  g = $.and($.shr(color, 8), 255);
  b = $.and($.shr(color, 0), 255);
  return 'rgba(' + $.S(r) + ',' + $.S(g) + ',' + $.S(b) + ',' + $.S($.div(a, 255)) + ')';
};

$._checkLittleEndianSystem = function() {
  var canvas = $.CanvasElement_CanvasElement(1, 1);
  canvas.get$context2d().set$fillStyle('#000000');
  canvas.get$context2d().fillRect$4(0, 0, 1, 1);
  return $.eq($.index(canvas.get$context2d().getImageData$4(0, 0, 1, 1).get$data(), 0), 0);
};

$._premultiplyAlpha = function(data) {
  var i, value, t1, t2, t3, t4;
  if (typeof data !== 'object' || data === null || (data.constructor !== Array || !!data.immutable$list) && !data.is$JavaScriptIndexingBehavior())
    return $._premultiplyAlpha$bailout(1, data);
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; i <= data.length - 4; i += 4) {
      value = data[i + 3];
      t1 = i + 0;
      t2 = $.tdiv($.mul(data[t1], value), 255);
      t3 = data.length;
      if (t1 >= t3)
        throw $.ioore(t1);
      data[t1] = t2;
      t2 = i + 1;
      if (t2 >= t3)
        throw $.ioore(t2);
      t1 = $.tdiv($.mul(data[t2], value), 255);
      t4 = data.length;
      if (t2 >= t4)
        throw $.ioore(t2);
      data[t2] = t1;
      t1 = i + 2;
      if (t1 >= t4)
        throw $.ioore(t1);
      t2 = $.tdiv($.mul(data[t1], value), 255);
      if (t1 >= data.length)
        throw $.ioore(t1);
      data[t1] = t2;
    }
  else
    for (i = 0; i <= data.length - 4; i += 4) {
      value = data[i + 0];
      t1 = i + 1;
      t2 = $.tdiv($.mul(data[t1], value), 255);
      t3 = data.length;
      if (t1 >= t3)
        throw $.ioore(t1);
      data[t1] = t2;
      t2 = i + 2;
      if (t2 >= t3)
        throw $.ioore(t2);
      t1 = $.tdiv($.mul(data[t2], value), 255);
      t4 = data.length;
      if (t2 >= t4)
        throw $.ioore(t2);
      data[t2] = t1;
      t1 = i + 3;
      if (t1 >= t4)
        throw $.ioore(t1);
      t2 = $.tdiv($.mul(data[t1], value), 255);
      if (t1 >= data.length)
        throw $.ioore(t1);
      data[t1] = t2;
    }
};

$._unpremultiplyAlpha = function(data) {
  var i, alpha, t1, t2, t3, t4;
  if (typeof data !== 'object' || data === null || (data.constructor !== Array || !!data.immutable$list) && !data.is$JavaScriptIndexingBehavior())
    return $._unpremultiplyAlpha$bailout(1, data);
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; i <= data.length - 4; i += 4) {
      alpha = data[i + 3];
      if ($.gtB(alpha, 0)) {
        t1 = i + 0;
        if (t1 >= data.length)
          throw $.ioore(t1);
        t2 = $.tdiv($.mul(data[t1], 255), alpha);
        t3 = data.length;
        if (t1 >= t3)
          throw $.ioore(t1);
        data[t1] = t2;
        t2 = i + 1;
        if (t2 >= t3)
          throw $.ioore(t2);
        t1 = $.tdiv($.mul(data[t2], 255), alpha);
        t4 = data.length;
        if (t2 >= t4)
          throw $.ioore(t2);
        data[t2] = t1;
        t1 = i + 2;
        if (t1 >= t4)
          throw $.ioore(t1);
        t2 = $.tdiv($.mul(data[t1], 255), alpha);
        if (t1 >= data.length)
          throw $.ioore(t1);
        data[t1] = t2;
      }
    }
  else
    for (i = 0; i <= data.length - 4; i += 4) {
      alpha = data[i + 0];
      if ($.gtB(alpha, 0)) {
        t1 = i + 1;
        if (t1 >= data.length)
          throw $.ioore(t1);
        t2 = $.tdiv($.mul(data[t1], 255), alpha);
        t3 = data.length;
        if (t1 >= t3)
          throw $.ioore(t1);
        data[t1] = t2;
        t2 = i + 2;
        if (t2 >= t3)
          throw $.ioore(t2);
        t1 = $.tdiv($.mul(data[t2], 255), alpha);
        t4 = data.length;
        if (t2 >= t4)
          throw $.ioore(t2);
        data[t2] = t1;
        t1 = i + 3;
        if (t1 >= t4)
          throw $.ioore(t1);
        t2 = $.tdiv($.mul(data[t1], 255), alpha);
        if (t1 >= data.length)
          throw $.ioore(t1);
        data[t1] = t2;
      }
    }
};

$._getBoundsTransformedHelper = function(matrix, width, height, returnRectangle) {
  var x2, y2, x3, y3, x4, y4, left, top$, right, bottom;
  x2 = $.mul(width, matrix.get$a());
  y2 = $.mul(width, matrix.get$b());
  x3 = $.add($.mul(width, matrix.get$a()), $.mul(height, matrix.get$c()));
  y3 = $.add($.mul(width, matrix.get$b()), $.mul(height, matrix.get$d()));
  x4 = $.mul(height, matrix.get$c());
  y4 = $.mul(height, matrix.get$d());
  left = $.gtB(0, x2) ? x2 : 0;
  if ($.gtB(left, x3))
    left = x3;
  if ($.gtB(left, x4))
    left = x4;
  top$ = $.gtB(0, y2) ? y2 : 0;
  if ($.gtB(top$, y3))
    top$ = y3;
  if ($.gtB(top$, y4))
    top$ = y4;
  right = $.ltB(0, x2) ? x2 : 0;
  if ($.ltB(right, x3))
    right = x3;
  if ($.ltB(right, x4))
    right = x4;
  bottom = $.ltB(0, y2) ? y2 : 0;
  if ($.ltB(bottom, y3))
    bottom = y3;
  if ($.ltB(bottom, y4))
    bottom = y4;
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  returnRectangle.set$x($.add(matrix.get$tx(), left));
  returnRectangle.set$y($.add(matrix.get$ty(), top$));
  returnRectangle.set$width($.sub(right, left));
  returnRectangle.set$height($.sub(bottom, top$));
  return returnRectangle;
};

$.DisplayObjectEvents$ = function(target) {
  var t1 = new $.DisplayObjectEvents(null);
  t1.Events$1(target);
  return t1;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.MediaStreamTrackListEvents$ = function(_ptr) {
  return new $.MediaStreamTrackListEvents(_ptr);
};

$.Events$0 = function(eventDispatcher) {
  var t1 = new $.Events0(null);
  t1.Events$1(eventDispatcher);
  return t1;
};

$._StringImpl_String$fromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  if (!$.isJsArray(charCodes))
    charCodes = $._ListImpl_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$._StringImpl__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $._StringImpl__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.MediaStreamTrackEvents$ = function(_ptr) {
  return new $.MediaStreamTrackEvents(_ptr);
};

$.Matrix$fromIdentity = function() {
  return new $.Matrix(1, 0, 0, 1, 0, 0, 1);
};

$._ListImpl_List = function(length$) {
  return $.Primitives_newList(length$);
};

$._ListImpl_List$from = function(other) {
  var result, t1;
  result = $._ListImpl_List(null);
  for (t1 = $.iterator(other); t1.get$hasNext() === true;)
    result.push(t1.next$0());
  return result;
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.Rectangle$ = function(x, y, width, height) {
  return new $.Rectangle(x, y, width, height);
};

$.Rectangle$zero = function() {
  return new $.Rectangle(0, 0, 0, 0);
};

$.MediaStreamEvents$ = function(_ptr) {
  return new $.MediaStreamEvents(_ptr);
};

$._TypedImageData$ = function(data, height, width) {
  return new $._TypedImageData(data, height, width);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.SharedWorkerContextEvents$ = function(_ptr) {
  return new $.SharedWorkerContextEvents(_ptr);
};

$._Elements_createCanvasElement = function(width, height) {
  var _e = $.document().$dom_createElement$1('canvas');
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$._Elements_createImageElement = function(src, width, height) {
  var _e = $.document().$dom_createElement$1('img');
  if (!(src == null))
    _e.set$src(src);
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.EventListenerList$0 = function(eventDispatcher, eventType) {
  var t1 = new $.EventListenerList0(null, null, null);
  t1.EventListenerList$2(eventDispatcher, eventType);
  return t1;
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$.RenderLoop$ = function() {
  var t1 = new $.RenderLoop(null, null, null, null, null);
  t1.RenderLoop$0();
  return t1;
};

$.WorkerContextEvents$ = function(_ptr) {
  return new $.WorkerContextEvents(_ptr);
};

$.Juggler$ = function() {
  var t1 = new $.Juggler(null, null, null);
  t1.Juggler$0();
  return t1;
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$._EventListenerListIndex$ = function() {
  var t1 = new $._EventListenerListIndex(null);
  t1._EventListenerListIndex$0();
  return t1;
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.EnterFrameEvent$ = function(passedTime) {
  var t1 = new $.EnterFrameEvent(null, null, null, null, null, null, null, null);
  t1.Event$2('enterFrame', false);
  t1.EnterFrameEvent$1(passedTime);
  return t1;
};

$.ImageElement_ImageElement = function(height, src, width) {
  var t1, t2, t3;
  t1 = $ === height;
  if (t1)
    height = null;
  t2 = $ === src;
  if (t2)
    src = null;
  t3 = $ === width;
  if (t3)
    width = null;
  if (t2)
    return $._Elements_createImageElement(null, null, null);
  if (t3)
    return $._Elements_createImageElement(src, null, null);
  if (t1)
    return $._Elements_createImageElement(src, width, null);
  return $._Elements_createImageElement(src, width, height);
};

$.contains$1$bailout = function(state0, receiver, other) {
  var i;
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (i = 0; $.ltB(i, $.get$length(receiver)); ++i)
      if (other === $.index(receiver, i))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.listInsertRange$bailout = function(state0, receiver, start, length$, initialValue) {
  var receiverLength, t1, t2, i;
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (i = start; i < t2; ++i)
      $.indexSet(receiver, i, initialValue);
  $.set$length(receiver, t1);
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._StringImpl__toJsStringArray$bailout = function(state0, strings) {
  var length$, i, string, array;
  $.checkNull(strings);
  length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._premultiplyAlpha$bailout = function(state0, data) {
  var i, value, t1;
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; $.leB(i, $.sub($.get$length(data), 4)); i += 4) {
      value = $.index(data, i + 3);
      t1 = i + 0;
      $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), value), 255));
      t1 = i + 1;
      $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), value), 255));
      t1 = i + 2;
      $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), value), 255));
    }
  else
    for (i = 0; $.leB(i, $.sub($.get$length(data), 4)); i += 4) {
      value = $.index(data, i + 0);
      t1 = i + 1;
      $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), value), 255));
      t1 = i + 2;
      $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), value), 255));
      t1 = i + 3;
      $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), value), 255));
    }
};

$._unpremultiplyAlpha$bailout = function(state0, data) {
  var i, alpha, t1;
  if ($.get$_isLittleEndianSystem() === true)
    for (i = 0; $.leB(i, $.sub($.get$length(data), 4)); i += 4) {
      alpha = $.index(data, i + 3);
      if ($.gtB(alpha, 0)) {
        t1 = i + 0;
        $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), 255), alpha));
        t1 = i + 1;
        $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), 255), alpha));
        t1 = i + 2;
        $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), 255), alpha));
      }
    }
  else
    for (i = 0; $.leB(i, $.sub($.get$length(data), 4)); i += 4) {
      alpha = $.index(data, i + 0);
      if ($.gtB(alpha, 0)) {
        t1 = i + 1;
        $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), 255), alpha));
        t1 = i + 2;
        $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), 255), alpha));
        t1 = i + 3;
        $.indexSet(data, t1, $.tdiv($.mul($.index(data, t1), 255), alpha));
      }
    }
};

$.drawFilters.call$1 = $.drawFilters;
$.drawFilters.$name = "drawFilters";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC0 = Isolate.makeConstantList([]);
$.CTC = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC0);
$.CTC4 = new Isolate.$isolateProperties.JSSyntaxRegExp('^#[_a-zA-Z]\\w*$', false, false);
$.CTC3 = new Isolate.$isolateProperties.JSSyntaxRegExp('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
$.CTC1 = new Isolate.$isolateProperties._ExceptionImplementation('Incorrect number or type of arguments');
$.CTC2 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC5 = new Isolate.$isolateProperties.Object();
$.GridFitType_PIXEL = 'pixel';
$.MouseCursor_ARROW = 'arrow';
$.MouseCursor_BUTTON = 'button';
$.MouseCursor_HAND = 'hand';
$.TextFieldAutoSize_NONE = 'none';
$.KeyboardEvent_KEY_DOWN = 'keyDown';
$.Mouse__customCursor = 'auto';
$.KeyboardEvent_KEY_UP = 'keyUp';
$.Primitives_hashCodeSeed = 0;
$.MouseCursor_IBEAM = 'ibeam';
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.Mouse__isCursorHidden = false;
$.double_INFINITY = (1/0);
$.double_NAN = (0/0);
$.Color_Red = 4294901760;
$.double_NEGATIVE_INFINITY = (-1/0);
$.TouchEvent_TOUCH_BEGIN = 'touchBegin';
$.Multitouch__supportsTouchEvents = false;
$.Multitouch__maxTouchPoints = 0;
$.Multitouch__initialized = false;
$.MouseCursor_WAIT = 'wait';
$.Primitives_mirrorsEnabled = false;
$.TextEvent_TEXT_INPUT = 'textInput';
$._cachedBrowserPrefix = null;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.KeyLocation_LEFT = 1;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC2;
$.KeyLocation_LEFT0 = 1;
$.KeyLocation_RIGHT = 2;
$.KeyLocation_RIGHT0 = 2;
$.StageRenderMode_AUTO = 'auto';
$.KeyLocation_STANDARD = 0;
$.StageRenderMode_ONCE = 'once';
$.KeyLocation_NUMPAD = 3;
$.StageRenderMode_STOP = 'stop';
$.KeyLocation_D_PAD = 4;
$.KeyLocation_NUM_PAD = 3;
$.KeyLocation_JOYSTICK = 5;
$.KeyLocation_MOBILE = 4;
$._getTypeNameOf = null;
$.MIRROR_OPT_IN_MESSAGE = '\nThis program is using an experimental feature called "mirrors".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n';
$.Color_Black = 4278190080;
$.EventPhase_CAPTURING_PHASE = 1;
$.EventPhase_AT_TARGET = 2;
$.EventPhase_BUBBLING_PHASE = 3;
$._Touch__globalTouchPointID = 0;
$.MouseEvent_CLICK = 'click';
$.MouseEvent_DOUBLE_CLICK = 'doubleClick';
$.MouseEvent_MOUSE_DOWN = 'mouseDown';
$.MouseEvent_MOUSE_UP = 'mouseUp';
$.MouseEvent_MOUSE_OUT = 'mouseOut';
$.MouseEvent_MOUSE_MOVE = 'mouseMove';
$.MouseEvent_MOUSE_OVER = 'mouseOver';
$.MouseEvent_MOUSE_WHEEL = 'mouseWheel';
$.MouseEvent_MIDDLE_CLICK = 'middleClick';
$.MouseEvent_MIDDLE_MOUSE_DOWN = 'middleMouseDown';
$.MouseEvent_MIDDLE_MOUSE_UP = 'middleMouseUp';
$.MouseEvent_RIGHT_CLICK = 'rightClick';
$.MouseEvent_RIGHT_MOUSE_UP = 'rightMouseUp';
$.MouseEvent_RIGHT_MOUSE_DOWN = 'rightMouseDown';
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.TextFormatAlign_CENTER = 'center';
$.TextFormatAlign_END = 'end';
$.Event_ADDED = 'added';
$.Event_ADDED_TO_STAGE = 'addedToStage';
$.TextFormatAlign_JUSTIFY = 'justify';
$.Event_ENTER_FRAME = 'enterFrame';
$.TextFormatAlign_RIGHT = 'right';
$.Event_REMOVED = 'removed';
$.Event_REMOVED_FROM_STAGE = 'removedFromStage';
$.stage = null;
$.renderLoop = null;
$.TextFieldType_DYNAMIC = 'dynamic';
$.PI = 3.141592653589793;
$.MouseCursor_AUTO = 'auto';
Isolate.$lazy($, 'enterFrame', '_EventListenerListIndex_enterFrame', 'get$_EventListenerListIndex_enterFrame', function() {
  return $._EventListenerListIndex$();
});
Isolate.$lazy($, '_isLittleEndianSystem', '_isLittleEndianSystem', 'get$_isLittleEndianSystem', function() {
  return $._checkLittleEndianSystem();
});
Isolate.$lazy($, '_eventDispatcher', 'Mouse__eventDispatcher', 'get$Mouse__eventDispatcher', function() {
  return $.EventDispatcher$();
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''] || [];
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method !== '') {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$Element: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Collection: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$ImageData: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$List: function() { return false; },
 is$Map: function() { return false; },
 is$File: function() { return false; },
 is$_FileList: function() { return false; },
 is$Blob: function() { return false; }
});

$.$defineNativeClass('HTMLElement', {"": []
});

$.$defineNativeClass('AbstractWorker', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.AbstractWorkerEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('AnalyserNode', {"": []
});

$.$defineNativeClass('HTMLAnchorElement', {"": ["target=", "type?"],
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimation', {"": []
});

$.$defineNativeClass('WebKitAnimationEvent', {"": []
});

$.$defineNativeClass('HTMLAppletElement', {"": ["align?", "height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', {"": ["target="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', {"": [],
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {"": [],
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"": ["value="]
});

$.$defineNativeClass('AudioBuffer', {"": ["length?"]
});

$.$defineNativeClass('AudioBufferSourceNode', {"": []
});

$.$defineNativeClass('AudioContext', {"": [],
 get$on: function() {
  return $.AudioContextEvents$(this);
}
});

$.$defineNativeClass('AudioDestinationNode', {"": []
});

$.$defineNativeClass('HTMLAudioElement', {"": []
});

$.$defineNativeClass('AudioGain', {"": []
});

$.$defineNativeClass('AudioListener', {"": []
});

$.$defineNativeClass('AudioNode', {"": []
});

$.$defineNativeClass('AudioParam', {"": ["value="]
});

$.$defineNativeClass('AudioProcessingEvent', {"": []
});

$.$defineNativeClass('AudioSourceNode', {"": []
});

$.$defineNativeClass('HTMLBRElement', {"": [],
 clear$0: function() { return this.clear.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('BarInfo', {"": ["visible?"]
});

$.$defineNativeClass('HTMLBaseElement', {"": ["target="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', {"": ["color?", "size?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', {"": [],
 get$on: function() {
  return $.BatteryManagerEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BeforeLoadEvent', {"": []
});

$.$defineNativeClass('BiquadFilterNode', {"": ["type?"]
});

$.$defineNativeClass('Blob', {"": ["size?", "type?"],
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {"": [],
 get$on: function() {
  return $.BodyElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', {"": ["type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('CDATASection', {"": []
});

$.$defineNativeClass('CSSCharsetRule', {"": []
});

$.$defineNativeClass('CSSFontFaceRule', {"": ["style?"]
});

$.$defineNativeClass('CSSImportRule', {"": []
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"": ["style?"]
});

$.$defineNativeClass('WebKitCSSKeyframesRule', {"": []
});

$.$defineNativeClass('WebKitCSSMatrix', {"": ["a?", "b?", "c?", "d?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSMediaRule', {"": []
});

$.$defineNativeClass('CSSPageRule', {"": ["style?"]
});

$.$defineNativeClass('CSSPrimitiveValue', {"": []
});

$.$defineNativeClass('CSSRule', {"": ["type?"]
});

$.$defineNativeClass('CSSStyleDeclaration', {"": ["length?"],
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 get$bottom: function() {
  return this.getPropertyValue$1('bottom');
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 get$color: function() {
  return this.getPropertyValue$1('color');
},
 set$cursor: function(value) {
  this.setProperty$3('cursor', value, '');
},
 get$font: function() {
  return this.getPropertyValue$1('font');
},
 set$font: function(value) {
  this.setProperty$3('font', value, '');
},
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 get$left: function() {
  return this.getPropertyValue$1('left');
},
 get$mask: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'mask');
},
 set$outline: function(value) {
  this.setProperty$3('outline', value, '');
},
 get$right: function() {
  return this.getPropertyValue$1('right');
},
 get$size: function() {
  return this.getPropertyValue$1('size');
},
 set$src: function(value) {
  this.setProperty$3('src', value, '');
},
 set$textAlign: function(value) {
  this.setProperty$3('text-align', value, '');
},
 get$top: function() {
  return this.getPropertyValue$1('top');
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'transform');
},
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', {"": ["style?"]
});

$.$defineNativeClass('CSSStyleSheet', {"": []
});

$.$defineNativeClass('WebKitCSSTransformValue', {"": []
});

$.$defineNativeClass('CSSUnknownRule', {"": []
});

$.$defineNativeClass('CSSValue', {"": []
});

$.$defineNativeClass('HTMLCanvasElement', {"": ["height=", "width="],
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1('2d');
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasGradient', {"": []
});

$.$defineNativeClass('CanvasPattern', {"": []
});

$.$defineNativeClass('CanvasRenderingContext', {"": ["canvas?"]
});

$.$defineNativeClass('CanvasRenderingContext2D', {"": ["fillStyle!", "font=", "globalAlpha!", "lineWidth!", "strokeStyle!", "textAlign!", "textBaseline!"],
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 createImageData$2: function(imagedata_OR_sw, sh) {
  var t1 = $ === sh;
  if (t1)
    sh = null;
  if ((typeof imagedata_OR_sw === 'object' && imagedata_OR_sw !== null && imagedata_OR_sw.is$ImageData() || imagedata_OR_sw == null) && t1)
    return $._convertNativeToDart_ImageData(this._createImageData_1$1($._convertDartToNative_ImageData(imagedata_OR_sw)));
  if (typeof imagedata_OR_sw === 'number' || imagedata_OR_sw == null)
    t1 = typeof sh === 'number' || sh == null;
  else
    t1 = false;
  if (t1)
    return $._convertNativeToDart_ImageData(this._createImageData_2$2(imagedata_OR_sw, sh));
  throw $.$$throw($.CTC1);
},
 _createImageData_1$1: function(imagedata) {
  return this.createImageData(imagedata);
},
 _createImageData_2$2: function(sw, sh) {
  return this.createImageData(sw,sh);
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y);
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 fillText$4: function(text, x, y, maxWidth) {
  return this.fillText(text,x,y,maxWidth);
},
 fillText$3: function(text,x,y) {
  return this.fillText(text,x,y);
},
 getImageData$4: function(sx, sy, sw, sh) {
  return $._convertNativeToDart_ImageData(this._getImageData_1$4(sx, sy, sw, sh));
},
 _getImageData_1$4: function(sx, sy, sw, sh) {
  return this.getImageData(sx,sy,sw,sh);
},
 measureText$1: function(text) {
  return this.measureText(text);
},
 putImageData$7: function(imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
  var t1, t2, t3, t4;
  t1 = $ === dirtyX;
  if (t1)
    dirtyX = null;
  t2 = $ === dirtyY;
  if (t2)
    dirtyY = null;
  t3 = $ === dirtyWidth;
  if (t3)
    dirtyWidth = null;
  t4 = $ === dirtyHeight;
  if (t4)
    dirtyHeight = null;
  if (t1 && t2 && t3 && t4) {
    this._putImageData_1$3($._convertDartToNative_ImageData(imagedata), dx, dy);
    return;
  }
  if (typeof dirtyX === 'number' || dirtyX == null)
    if (typeof dirtyY === 'number' || dirtyY == null)
      if (typeof dirtyWidth === 'number' || dirtyWidth == null)
        t1 = typeof dirtyHeight === 'number' || dirtyHeight == null;
      else
        t1 = false;
    else
      t1 = false;
  else
    t1 = false;
  if (t1) {
    this._putImageData_2$7($._convertDartToNative_ImageData(imagedata), dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight);
    return;
  }
  throw $.$$throw($.CTC1);
},
 putImageData$3: function(imagedata,dx,dy) {
  return this.putImageData$7(imagedata,dx,dy,$,$,$,$)
},
 _putImageData_1$3: function(imagedata, dx, dy) {
  return this.putImageData(imagedata,dx,dy);
},
 _putImageData_2$7: function(imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
  return this.putImageData(imagedata,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight);
},
 restore$0: function() {
  return this.restore();
},
 save$0: function() {
  return this.save();
},
 setTransform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.setTransform(m11,m12,m21,m22,dx,dy);
},
 strokeRect$5: function(x, y, width, height, lineWidth) {
  return this.strokeRect(x,y,width,height,lineWidth);
},
 strokeRect$4: function(x,y,width,height) {
  return this.strokeRect(x,y,width,height);
},
 transform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.transform(m11,m12,m21,m22,dx,dy);
}
});

$.$defineNativeClass('ChannelMergerNode', {"": []
});

$.$defineNativeClass('ChannelSplitterNode', {"": []
});

$.$defineNativeClass('CharacterData', {"": ["data?", "length?"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"": ["bottom?", "height?", "left?", "right?", "top?", "width?"]
});

$.$defineNativeClass('Clipboard', {"": []
});

$.$defineNativeClass('CloseEvent', {"": []
});

$.$defineNativeClass('Comment', {"": []
});

$.$defineNativeClass('CompositionEvent', {"": ["data?"]
});

Console = (typeof console == 'undefined' ? {} : console);
Console.error$1 = function(arg) {
  return this.error(arg);
};
Console.get$error = function() { return new $.BoundClosure(this, 'error$1'); };
$.$defineNativeClass('HTMLContentElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', {"": []
});

$.$defineNativeClass('Coordinates', {"": []
});

$.$defineNativeClass('Counter', {"": ["identifier?"]
});

$.$defineNativeClass('Crypto', {"": []
});

$.$defineNativeClass('CustomEvent', {"": []
});

$.$defineNativeClass('HTMLDListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', {"": [],
 get$on: function() {
  return $.DOMApplicationCacheEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMError', {"": []
});

$.$defineNativeClass('DOMException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', {"": []
});

$.$defineNativeClass('DOMFileSystemSync', {"": []
});

$.$defineNativeClass('DOMImplementation', {"": []
});

$.$defineNativeClass('MimeType', {"": ["type?"]
});

$.$defineNativeClass('MimeTypeArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMParser', {"": []
});

$.$defineNativeClass('Plugin', {"": ["length?"]
});

$.$defineNativeClass('PluginArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Selection', {"": ["type?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', {"": ["value="]
});

$.$defineNativeClass('DOMTokenList', {"": ["length?"],
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItem', {"": ["type?"]
});

$.$defineNativeClass('DataTransferItemList', {"": ["length?"],
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', {"": []
});

$.$defineNativeClass('Database', {"": []
});

$.$defineNativeClass('DatabaseSync', {"": []
});

$.$defineNativeClass('DedicatedWorkerContext', {"": [],
 get$on: function() {
  return $.DedicatedWorkerContextEvents$(this);
}
});

$.$defineNativeClass('DelayNode', {"": []
});

$.$defineNativeClass('HTMLDetailsElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DeviceMotionEvent', {"": []
});

$.$defineNativeClass('DeviceOrientationEvent', {"": []
});

$.$defineNativeClass('HTMLDirectoryElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DirectoryEntry', {"": []
});

$.$defineNativeClass('DirectoryEntrySync', {"": []
});

$.$defineNativeClass('DirectoryReader', {"": []
});

$.$defineNativeClass('DirectoryReaderSync', {"": []
});

$.$defineNativeClass('HTMLDivElement', {"": ["align?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {"": [],
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.CTC4.hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
}
});

$.$defineNativeClass('DocumentFragment', {"": [],
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$parent: function() {
  return;
},
 get$style: function() {
  return $.Element_Element$tag('div').get$style();
},
 focus$0: function() {
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {"": [],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DynamicsCompressorNode', {"": []
});

$.$defineNativeClass('EXTTextureFilterAnisotropic', {"": []
});

$.$defineNativeClass('Element', {"": ["style?"],
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.ElementEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 focus$0: function() {
  return this.focus();
},
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"": ["align?", "height=", "src!", "type?", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('EntityReference', {"": []
});

$.$defineNativeClass('Entry', {"": [],
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', {"": [],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', {"": []
});

$.$defineNativeClass('Event', {"": ["bubbles?", "eventPhase?", "type?"],
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_lib_target());
},
 get$_lib_target: function() {
  return this.target;
},
 preventDefault$0: function() {
  return this.preventDefault();
}
});

$.$defineNativeClass('EventException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventSource', {"": [],
 get$on: function() {
  return $.EventSourceEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.Events$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('File', {"": [],
 is$File: function() { return true; }
});

$.$defineNativeClass('FileEntry', {"": []
});

$.$defineNativeClass('FileEntrySync', {"": []
});

$.$defineNativeClass('FileError', {"": []
});

$.$defineNativeClass('FileException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileReader', {"": ["error?"],
 get$on: function() {
  return $.FileReaderEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileReaderSync', {"": []
});

$.$defineNativeClass('FileWriter', {"": ["error?", "length?"],
 get$on: function() {
  return $.FileWriterEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', {"": ["length?"]
});

$.$defineNativeClass('Float32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"": ["color?", "size?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('FormData', {"": []
});

$.$defineNativeClass('HTMLFormElement', {"": ["length?", "target="],
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', {"": ["height?", "src!", "width?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', {"": [],
 get$on: function() {
  return $.FrameSetElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('GainNode', {"": []
});

$.$defineNativeClass('Gamepad', {"": []
});

$.$defineNativeClass('Geolocation', {"": []
});

$.$defineNativeClass('Geoposition', {"": []
});

$.$defineNativeClass('HTMLHRElement', {"": ["align?", "size?", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {"": [],
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('HashChangeEvent', {"": []
});

$.$defineNativeClass('HTMLHeadElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', {"": ["align?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHtmlElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequest', {"": [],
 get$on: function() {
  return $.HttpRequestEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('XMLHttpRequestException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"": []
});

$.$defineNativeClass('XMLHttpRequestUpload', {"": [],
 get$on: function() {
  return $.HttpRequestUploadEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBAny', {"": []
});

$.$defineNativeClass('IDBCursor', {"": ["key?"]
});

$.$defineNativeClass('IDBCursorWithValue', {"": ["value?"]
});

$.$defineNativeClass('IDBDatabase', {"": [],
 get$on: function() {
  return $.IDBDatabaseEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBDatabaseException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBFactory', {"": []
});

$.$defineNativeClass('IDBIndex', {"": []
});

$.$defineNativeClass('IDBKey', {"": []
});

$.$defineNativeClass('IDBKeyRange', {"": []
});

$.$defineNativeClass('IDBObjectStore', {"": [],
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_PrepareForStructuredClone(value), key);
  return this._add_2$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('IDBOpenDBRequest', {"": [],
 get$on: function() {
  return $.IDBOpenDBRequestEvents$(this);
}
});

$.$defineNativeClass('IDBRequest', {"": ["error?"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.IDBRequestEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBTransaction', {"": ["error?"],
 get$on: function() {
  return $.IDBTransactionEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeRequest', {"": [],
 get$on: function() {
  return $.IDBVersionChangeRequestEvents$(this);
}
});

$.$defineNativeClass('HTMLIFrameElement', {"": ["align?", "height=", "src!", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('IceCandidate', {"": []
});

$.$defineNativeClass('ImageData', {"": ["data?", "height?", "width?"],
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"": ["align?", "height=", "naturalHeight?", "naturalWidth?", "src!", "width=", "x?", "y?"],
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', {"": ["align?", "height=", "pattern?", "size?", "src!", "type?", "value=", "width="],
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('JavaScriptCallFrame', {"": ["type?"]
});

$.$defineNativeClass('KeyboardEvent', {"": ["altKey?", "ctrlKey?", "keyLocation?", "shiftKey?"]
});

$.$defineNativeClass('HTMLKeygenElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"": ["type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', {"": ["align?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', {"": ["target=", "type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', {"": ["length?"]
});

$.$defineNativeClass('Location', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('LocalMediaStream', {"": []
});

$.$defineNativeClass('DOMWindow', {"": ["navigator?"],
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
  if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
    return;
    (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.get$_parent());
},
 get$_parent: function() {
  return this.parent;
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.get$_top());
},
 get$_top: function() {
  return this.top;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 focus$0: function() {
  return this.focus();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMapElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', {"": ["height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', {"": [],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', {"": ["error?", "src!"],
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 load$0: function() {
  return this.load();
},
 get$load: function() { return new $.BoundClosure0(this, 'load$0'); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaElementAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaError', {"": []
});

$.$defineNativeClass('MediaKeyError', {"": []
});

$.$defineNativeClass('MediaKeyEvent', {"": []
});

$.$defineNativeClass('MediaList', {"": ["length?"]
});

$.$defineNativeClass('MediaQueryList', {"": []
});

$.$defineNativeClass('MediaSource', {"": [],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', {"": [],
 get$on: function() {
  return $.MediaStreamEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaStreamEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrack', {"": [],
 get$on: function() {
  return $.MediaStreamTrackEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrackList', {"": ["length?"],
 get$on: function() {
  return $.MediaStreamTrackListEvents$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MemoryInfo', {"": []
});

$.$defineNativeClass('HTMLMenuElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageChannel', {"": []
});

$.$defineNativeClass('MessageEvent', {"": [],
 get$data: function() {
  return $._convertNativeToDart_SerializedScriptValue(this.get$_data());
},
 get$_data: function() {
  return this.data;
}
});

$.$defineNativeClass('MessagePort', {"": [],
 get$on: function() {
  return $.MessagePortEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMetaElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Metadata', {"": ["size?"]
});

$.$defineNativeClass('HTMLMeterElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', {"": ["altKey?", "button?", "clientX?", "clientY?", "ctrlKey?", "shiftKey?", "x?", "y?"],
 get$offsetX: function() {
  if (!!this.offsetX)
    return this.offsetX;
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.UnsupportedError$('offsetX is only supported on elements'));
    return $.sub(this.clientX, this.get$target().getBoundingClientRect$0().get$left());
  }
},
 get$offsetY: function() {
  if (!!this.offsetY)
    return this.offsetY;
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.UnsupportedError$('offsetY is only supported on elements'));
    return $.sub(this.clientY, this.get$target().getBoundingClientRect$0().get$top());
  }
}
});

$.$defineNativeClass('MutationEvent', {"": []
});

$.$defineNativeClass('MutationObserver', {"": []
});

$.$defineNativeClass('MutationRecord', {"": ["target?", "type?"]
});

$.$defineNativeClass('NamedNodeMap', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"": ["userAgent?"]
});

$.$defineNativeClass('NavigatorUserMediaError', {"": []
});

$.$defineNativeClass('Node', {"": [],
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
  return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
  this.textContent = value;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeFilter', {"": []
});

$.$defineNativeClass('NodeIterator', {"": []
});

$.$defineNativeClass('NodeList', {"": ["_parent?", "length?"],
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._parent.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._parent.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 operator$index$1: function(index) {
  return this[index];
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Notation', {"": []
});

$.$defineNativeClass('Notification', {"": [],
 get$on: function() {
  return $.NotificationEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('NotificationCenter', {"": []
});

$.$defineNativeClass('OESElementIndexUint', {"": []
});

$.$defineNativeClass('OESStandardDerivatives', {"": []
});

$.$defineNativeClass('OESTextureFloat', {"": []
});

$.$defineNativeClass('OESVertexArrayObject', {"": []
});

$.$defineNativeClass('HTMLOListElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"": ["align?", "data?", "height=", "type?", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OfflineAudioCompletionEvent', {"": []
});

$.$defineNativeClass('HTMLOptGroupElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OscillatorNode', {"": ["type?"]
});

$.$defineNativeClass('HTMLOutputElement', {"": ["type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OverflowEvent', {"": []
});

$.$defineNativeClass('PagePopupController', {"": []
});

$.$defineNativeClass('PageTransitionEvent', {"": []
});

$.$defineNativeClass('PannerNode', {"": []
});

$.$defineNativeClass('HTMLParagraphElement', {"": ["align?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', {"": ["type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', {"": [],
 get$on: function() {
  return $.PeerConnection00Events$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Performance', {"": []
});

$.$defineNativeClass('PerformanceNavigation', {"": ["type?"]
});

$.$defineNativeClass('PerformanceTiming', {"": []
});

$.$defineNativeClass('WebKitPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('PopStateEvent', {"": []
});

$.$defineNativeClass('PositionError', {"": []
});

$.$defineNativeClass('HTMLPreElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProcessingInstruction', {"": ["data?", "target?"]
});

$.$defineNativeClass('HTMLProgressElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProgressEvent', {"": []
});

$.$defineNativeClass('HTMLQuoteElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('RGBColor', {"": []
});

$.$defineNativeClass('RTCDataChannel', {"": [],
 get$on: function() {
  return $.RTCDataChannelEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCDataChannelEvent', {"": []
});

$.$defineNativeClass('RTCIceCandidate', {"": []
});

$.$defineNativeClass('RTCIceCandidateEvent', {"": []
});

$.$defineNativeClass('RTCPeerConnection', {"": [],
 get$on: function() {
  return $.RTCPeerConnectionEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', {"": ["type?"]
});

$.$defineNativeClass('RTCStatsElement', {"": []
});

$.$defineNativeClass('RTCStatsReport', {"": []
});

$.$defineNativeClass('RTCStatsResponse', {"": []
});

$.$defineNativeClass('RadioNodeList', {"": ["value="]
});

$.$defineNativeClass('Range', {"": [],
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RangeException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', {"": ["bottom?", "left?", "right?", "top?"]
});

$.$defineNativeClass('SQLError', {"": []
});

$.$defineNativeClass('SQLException', {"": []
});

$.$defineNativeClass('SQLResultSet', {"": []
});

$.$defineNativeClass('SQLResultSetRowList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SQLTransaction', {"": []
});

$.$defineNativeClass('SQLTransactionSync', {"": []
});

$.$defineNativeClass('SVGAElement', {"": ["target?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGAltGlyphDefElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphItemElement', {"": []
});

$.$defineNativeClass('SVGAngle', {"": ["value="]
});

$.$defineNativeClass('SVGAnimateColorElement', {"": []
});

$.$defineNativeClass('SVGAnimateElement', {"": []
});

$.$defineNativeClass('SVGAnimateMotionElement', {"": []
});

$.$defineNativeClass('SVGAnimateTransformElement', {"": []
});

$.$defineNativeClass('SVGAnimatedAngle', {"": []
});

$.$defineNativeClass('SVGAnimatedBoolean', {"": []
});

$.$defineNativeClass('SVGAnimatedEnumeration', {"": []
});

$.$defineNativeClass('SVGAnimatedInteger', {"": []
});

$.$defineNativeClass('SVGAnimatedLength', {"": []
});

$.$defineNativeClass('SVGAnimatedLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumber', {"": []
});

$.$defineNativeClass('SVGAnimatedNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGAnimatedRect', {"": []
});

$.$defineNativeClass('SVGAnimatedString', {"": []
});

$.$defineNativeClass('SVGAnimatedTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', {"": []
});

$.$defineNativeClass('SVGCircleElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGClipPathElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGColor', {"": []
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"": ["type?"]
});

$.$defineNativeClass('SVGCursorElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGDefsElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGDescElement', {"": []
});

$.$defineNativeClass('SVGDocument', {"": []
});

$.$defineNativeClass('SVGElement', {"": []
});

$.$defineNativeClass('SVGElementInstance', {"": [],
 get$on: function() {
  return $.SVGElementInstanceEvents$(this);
}
});

$.$defineNativeClass('SVGEllipseElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"": ["type?", "height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFECompositeElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEDistantLightElement', {"": []
});

$.$defineNativeClass('SVGFEDropShadowElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEFloodElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEFuncAElement', {"": []
});

$.$defineNativeClass('SVGFEFuncBElement', {"": []
});

$.$defineNativeClass('SVGFEFuncGElement', {"": []
});

$.$defineNativeClass('SVGFEFuncRElement', {"": []
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEImageElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEMergeElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEMergeNodeElement', {"": []
});

$.$defineNativeClass('SVGFEMorphologyElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEOffsetElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEPointLightElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFESpotLightElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFETileElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFETurbulenceElement', {"": ["type?", "height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFilterElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFontElement', {"": []
});

$.$defineNativeClass('SVGFontFaceElement', {"": []
});

$.$defineNativeClass('SVGFontFaceFormatElement', {"": []
});

$.$defineNativeClass('SVGFontFaceNameElement', {"": []
});

$.$defineNativeClass('SVGFontFaceSrcElement', {"": []
});

$.$defineNativeClass('SVGFontFaceUriElement', {"": []
});

$.$defineNativeClass('SVGForeignObjectElement', {"": ["height?", "width?", "x?", "y?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGGElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGGlyphElement', {"": []
});

$.$defineNativeClass('SVGGlyphRefElement', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGGradientElement', {"": []
});

$.$defineNativeClass('SVGHKernElement', {"": []
});

$.$defineNativeClass('SVGImageElement', {"": ["height?", "width?", "x?", "y?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGLength', {"": ["value="]
});

$.$defineNativeClass('SVGLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGLinearGradientElement', {"": []
});

$.$defineNativeClass('SVGMPathElement', {"": []
});

$.$defineNativeClass('SVGMarkerElement', {"": []
});

$.$defineNativeClass('SVGMaskElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGMatrix', {"": ["a?", "b?", "c?", "d?"]
});

$.$defineNativeClass('SVGMetadataElement', {"": []
});

$.$defineNativeClass('SVGMissingGlyphElement', {"": []
});

$.$defineNativeClass('SVGNumber', {"": ["value="]
});

$.$defineNativeClass('SVGNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPaint', {"": []
});

$.$defineNativeClass('SVGPathElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGPathSeg', {"": []
});

$.$defineNativeClass('SVGPathSegArcAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegArcRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegClosePath', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegMovetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPatternElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPointList', {"": [],
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGPolylineElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGPreserveAspectRatio', {"": ["align?"]
});

$.$defineNativeClass('SVGRadialGradientElement', {"": []
});

$.$defineNativeClass('SVGRect', {"": ["height=", "width=", "x=", "y="]
});

$.$defineNativeClass('SVGRectElement', {"": ["height?", "width?", "x?", "y?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGRenderingIntent', {"": []
});

$.$defineNativeClass('SVGSVGElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGScriptElement', {"": ["type?"]
});

$.$defineNativeClass('SVGSetElement', {"": []
});

$.$defineNativeClass('SVGStopElement', {"": []
});

$.$defineNativeClass('SVGStringList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', {"": ["type?"]
});

$.$defineNativeClass('SVGSwitchElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGSymbolElement', {"": []
});

$.$defineNativeClass('SVGTRefElement', {"": []
});

$.$defineNativeClass('SVGTSpanElement', {"": []
});

$.$defineNativeClass('SVGTextContentElement', {"": []
});

$.$defineNativeClass('SVGTextElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGTextPathElement', {"": []
});

$.$defineNativeClass('SVGTextPositioningElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGTitleElement', {"": []
});

$.$defineNativeClass('SVGTransform', {"": ["type?"]
});

$.$defineNativeClass('SVGTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGUnitTypes', {"": []
});

$.$defineNativeClass('SVGUseElement', {"": ["height?", "width?", "x?", "y?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGVKernElement', {"": []
});

$.$defineNativeClass('SVGViewElement', {"": []
});

$.$defineNativeClass('SVGViewSpec', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGZoomEvent', {"": []
});

$.$defineNativeClass('Screen', {"": ["height?", "width?"]
});

$.$defineNativeClass('HTMLScriptElement', {"": ["src!", "type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ScriptProcessorNode', {"": [],
 get$on: function() {
  return $.ScriptProcessorNodeEvents$(this);
}
});

$.$defineNativeClass('ScriptProfile', {"": []
});

$.$defineNativeClass('ScriptProfileNode', {"": ["visible?"]
});

$.$defineNativeClass('HTMLSelectElement', {"": ["length=", "size?", "type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SessionDescription', {"": []
});

$.$defineNativeClass('HTMLShadowElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', {"": []
});

$.$defineNativeClass('SharedWorker', {"": []
});

$.$defineNativeClass('SharedWorkerContext', {"": [],
 get$on: function() {
  return $.SharedWorkerContextEvents$(this);
}
});

$.$defineNativeClass('SourceBuffer', {"": []
});

$.$defineNativeClass('SourceBufferList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', {"": ["src!", "type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', {"": ["src!"]
});

$.$defineNativeClass('SpeechGrammarList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputEvent', {"": []
});

$.$defineNativeClass('SpeechInputResult', {"": []
});

$.$defineNativeClass('SpeechRecognition', {"": [],
 get$on: function() {
  return $.SpeechRecognitionEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('SpeechRecognitionAlternative', {"": []
});

$.$defineNativeClass('SpeechRecognitionError', {"": []
});

$.$defineNativeClass('SpeechRecognitionEvent', {"": []
});

$.$defineNativeClass('SpeechRecognitionResult', {"": ["length?"]
});

$.$defineNativeClass('Storage', {"": [],
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$length: function() {
  return this.get$$$dom_length();
},
 get$isEmpty: function() {
  return this.$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
  return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"": ["key?"]
});

$.$defineNativeClass('StorageInfo', {"": []
});

$.$defineNativeClass('HTMLStyleElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleMedia', {"": ["type?"]
});

$.$defineNativeClass('StyleSheet', {"": ["type?"]
});

$.$defineNativeClass('HTMLTableCaptionElement', {"": ["align?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', {"": ["align?", "height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', {"": ["align?", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', {"": ["align?", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', {"": ["align?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', {"": ["align?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Text', {"": []
});

$.$defineNativeClass('HTMLTextAreaElement', {"": ["type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextEvent', {"": ["data?"]
});

$.$defineNativeClass('TextMetrics', {"": ["width?"]
});

$.$defineNativeClass('TextTrack', {"": [],
 get$on: function() {
  return $.TextTrackEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCue', {"": ["align?", "size?", "text!"],
 get$on: function() {
  return $.TextTrackCueEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrackList', {"": ["length?"],
 get$on: function() {
  return $.TextTrackListEvents$(this);
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('TimeRanges', {"": ["length?"]
});

$.$defineNativeClass('HTMLTitleElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Touch', {"": ["clientX?", "clientY?", "identifier?"],
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_lib_target());
},
 get$_lib_target: function() {
  return this.target;
}
});

$.$defineNativeClass('TouchEvent', {"": ["altKey?", "changedTouches?", "ctrlKey?", "shiftKey?"]
});

$.$defineNativeClass('TouchList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {"": ["src!"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TrackEvent', {"": []
});

$.$defineNativeClass('WebKitTransitionEvent', {"": []
});

$.$defineNativeClass('TreeWalker', {"": []
});

$.$defineNativeClass('UIEvent', {"": ["charCode?", "keyCode?"]
});

$.$defineNativeClass('HTMLUListElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', {"": []
});

$.$defineNativeClass('HTMLUnknownElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('URL', {"": []
});

$.$defineNativeClass('ValidityState', {"": []
});

$.$defineNativeClass('HTMLVideoElement', {"": ["height=", "width="]
});

$.$defineNativeClass('WaveShaperNode', {"": []
});

$.$defineNativeClass('WaveTable', {"": []
});

$.$defineNativeClass('WebGLActiveInfo', {"": ["size?", "type?"]
});

$.$defineNativeClass('WebGLBuffer', {"": []
});

$.$defineNativeClass('WebGLCompressedTextureS3TC', {"": []
});

$.$defineNativeClass('WebGLContextAttributes', {"": []
});

$.$defineNativeClass('WebGLContextEvent', {"": []
});

$.$defineNativeClass('WebGLDebugRendererInfo', {"": []
});

$.$defineNativeClass('WebGLDebugShaders', {"": []
});

$.$defineNativeClass('WebGLDepthTexture', {"": []
});

$.$defineNativeClass('WebGLFramebuffer', {"": []
});

$.$defineNativeClass('WebGLLoseContext', {"": []
});

$.$defineNativeClass('WebGLProgram', {"": []
});

$.$defineNativeClass('WebGLRenderbuffer', {"": []
});

$.$defineNativeClass('WebGLRenderingContext', {"": [],
 lineWidth$1: function(width) {
  return this.lineWidth(width);
}
});

$.$defineNativeClass('WebGLShader', {"": []
});

$.$defineNativeClass('WebGLShaderPrecisionFormat', {"": []
});

$.$defineNativeClass('WebGLTexture', {"": []
});

$.$defineNativeClass('WebGLUniformLocation', {"": []
});

$.$defineNativeClass('WebGLVertexArrayObjectOES', {"": []
});

$.$defineNativeClass('WebKitCSSFilterValue', {"": []
});

$.$defineNativeClass('WebKitNamedFlow', {"": [],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', {"": [],
 get$on: function() {
  return $.WebSocketEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WheelEvent', {"": [],
 get$deltaY: function() {
  if (this.deltaY !== undefined)
    return this.get$_lib_deltaY();
  else if (this.wheelDelta !== undefined)
    return this.get$_wheelDelta();
  else if (this.detail !== undefined) {
    if (this.axis == MouseScrollEvent.VERTICAL_AXIS) {
      var detail = this.get$_detail();
      if ($.ltB(detail, 100))
        return $.mul(detail, 40);
      return detail;
    }
    return 0;
  }
  throw $.$$throw($.UnsupportedError$('deltaY is not supported'));
},
 get$deltaX: function() {
  if (this.deltaX !== undefined)
    return this.get$_lib_deltaX();
  else if (this.wheelDeltaX !== undefined)
    return this.get$_wheelDeltaX();
  else if (this.detail !== undefined) {
    if (this.axis !== undefined && this.axis == MouseScrollEvent.HORIZONTAL_AXIS) {
      var detail = this.get$_detail();
      if ($.ltB(detail, 100))
        return $.mul(detail, 40);
      return detail;
    }
    return 0;
  }
  throw $.$$throw($.UnsupportedError$('deltaX is not supported'));
},
 get$_lib_deltaY: function() {
  return this.deltaY;
},
 get$_lib_deltaX: function() {
  return this.deltaX;
},
 get$_wheelDelta: function() {
  return this.wheelDelta;
},
 get$_wheelDeltaX: function() {
  return this.wheelDeltaX;
},
 get$_detail: function() {
  return this.detail;
}
});

$.$defineNativeClass('Worker', {"": [],
 get$on: function() {
  return $.WorkerEvents$(this);
}
});

$.$defineNativeClass('WorkerContext', {"": ["navigator?"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.WorkerContextEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WorkerLocation', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', {"": ["userAgent?"]
});

$.$defineNativeClass('XMLSerializer', {"": []
});

$.$defineNativeClass('XPathEvaluator', {"": []
});

$.$defineNativeClass('XPathException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XPathExpression', {"": []
});

$.$defineNativeClass('XPathNSResolver', {"": []
});

$.$defineNativeClass('XPathResult', {"": []
});

$.$defineNativeClass('XSLTProcessor', {"": [],
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('CSSRuleList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('CSSValueList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('ClientRectList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMStringList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('FileList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$_FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('GamepadList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('MediaStreamList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGElementInstanceList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionResultList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('StyleSheetList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$('Cannot insertRange on immutable List.'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Worker', {"": []
});

$.$defineNativeClass('DOMWindow', {"": []
});

// 527 dynamic classes.
// 527 classes
// 41 !leaf
(function(){
  var v0/*class(Uint8Array)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v1/*class(AudioSourceNode)*/ = 'AudioSourceNode|OscillatorNode|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|OscillatorNode|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode';
  var v2/*class(_CSSValueList)*/ = 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue';
  var v3/*class(SVGColor)*/ = 'SVGColor|SVGPaint|SVGPaint';
  var v4/*class(Text)*/ = 'Text|CDATASection|CDATASection';
  var v5/*class(SVGTextPositioningElement)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v6/*class(SVGTextContentElement)*/ = [v5/*class(SVGTextPositioningElement)*/,v5/*class(SVGTextPositioningElement)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v7/*class(SVGGradientElement)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v8/*class(SVGComponentTransferFunctionElement)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v9/*class(SVGAnimationElement)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v10/*class(SVGElement)*/ = [v6/*class(SVGTextContentElement)*/,v7/*class(SVGGradientElement)*/,v8/*class(SVGComponentTransferFunctionElement)*/,v9/*class(SVGAnimationElement)*/,v6/*class(SVGTextContentElement)*/,v7/*class(SVGGradientElement)*/,v8/*class(SVGComponentTransferFunctionElement)*/,v9/*class(SVGAnimationElement)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v11/*class(MediaElement)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v12/*class(MouseEvent)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v13/*class(UIEvent)*/ = [v12/*class(MouseEvent)*/,v12/*class(MouseEvent)*/,'UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent'].join('|');
  var v14/*class(ProgressEvent)*/ = 'ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent';
  var v15/*class(Element)*/ = [v10/*class(SVGElement)*/,v11/*class(MediaElement)*/,v10/*class(SVGElement)*/,v11/*class(MediaElement)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v16/*class(DocumentFragment)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v17/*class(Document)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v18/*class(CharacterData)*/ = [v4/*class(Text)*/,v4/*class(Text)*/,'CharacterData|Comment|Comment'].join('|');
  var v19/*class(WorkerContext)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v20/*class(Node)*/ = [v15/*class(Element)*/,v16/*class(DocumentFragment)*/,v17/*class(Document)*/,v18/*class(CharacterData)*/,v15/*class(Element)*/,v16/*class(DocumentFragment)*/,v17/*class(Document)*/,v18/*class(CharacterData)*/,'Node|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr'].join('|');
  var v21/*class(MediaStream)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v22/*class(IDBRequest)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v23/*class(AbstractWorker)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['AbstractWorker', v23/*class(AbstractWorker)*/],
    ['Uint8Array', v0/*class(Uint8Array)*/],
    ['ArrayBufferView', [v0/*class(Uint8Array)*/,v0/*class(Uint8Array)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['AudioSourceNode', v1/*class(AudioSourceNode)*/],
    ['AudioNode', [v1/*class(AudioSourceNode)*/,v1/*class(AudioSourceNode)*/,'AudioNode|WaveShaperNode|ScriptProcessorNode|PannerNode|GainNode|DynamicsCompressorNode|DelayNode|ConvolverNode|ChannelSplitterNode|ChannelMergerNode|BiquadFilterNode|AudioDestinationNode|AnalyserNode|WaveShaperNode|ScriptProcessorNode|PannerNode|GainNode|DynamicsCompressorNode|DelayNode|ConvolverNode|ChannelSplitterNode|ChannelMergerNode|BiquadFilterNode|AudioDestinationNode|AnalyserNode'].join('|')],
    ['AudioParam', 'AudioParam|AudioGain|AudioGain'],
    ['Blob', 'Blob|File|File'],
    ['CSSRule', 'CSSRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule'],
    ['CSSValueList', v2/*class(_CSSValueList)*/],
    ['SVGColor', v3/*class(SVGColor)*/],
    ['CSSValue', [v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,'CSSValue|CSSPrimitiveValue|CSSPrimitiveValue'].join('|')],
    ['CanvasRenderingContext', 'CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext|CanvasRenderingContext2D'],
    ['Text', v4/*class(Text)*/],
    ['CharacterData', v18/*class(CharacterData)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['HTMLDocument', v17/*class(Document)*/],
    ['DocumentFragment', v16/*class(DocumentFragment)*/],
    ['SVGTextPositioningElement', v5/*class(SVGTextPositioningElement)*/],
    ['SVGTextContentElement', v6/*class(SVGTextContentElement)*/],
    ['SVGGradientElement', v7/*class(SVGGradientElement)*/],
    ['SVGComponentTransferFunctionElement', v8/*class(SVGComponentTransferFunctionElement)*/],
    ['SVGAnimationElement', v9/*class(SVGAnimationElement)*/],
    ['SVGElement', v10/*class(SVGElement)*/],
    ['HTMLMediaElement', v11/*class(MediaElement)*/],
    ['Element', v15/*class(Element)*/],
    ['Entry', 'Entry|FileEntry|DirectoryEntry|FileEntry|DirectoryEntry'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync|FileEntrySync|DirectoryEntrySync'],
    ['MouseEvent', v12/*class(MouseEvent)*/],
    ['UIEvent', v13/*class(UIEvent)*/],
    ['ProgressEvent', v14/*class(ProgressEvent)*/],
    ['Event', [v13/*class(UIEvent)*/,v14/*class(ProgressEvent)*/,v13/*class(UIEvent)*/,v14/*class(ProgressEvent)*/,'Event|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['WorkerContext', v19/*class(WorkerContext)*/],
    ['Node', v20/*class(Node)*/],
    ['MediaStream', v21/*class(MediaStream)*/],
    ['IDBRequest', v22/*class(IDBRequest)*/],
    ['EventTarget', [v19/*class(WorkerContext)*/,v20/*class(Node)*/,v21/*class(MediaStream)*/,v22/*class(IDBRequest)*/,v23/*class(AbstractWorker)*/,v19/*class(WorkerContext)*/,v20/*class(Node)*/,v21/*class(MediaStream)*/,v22/*class(IDBRequest)*/,v23/*class(AbstractWorker)*/,'EventTarget|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue|IDBCursorWithValue'],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList'],
    ['SVGPathSeg', 'SVGPathSeg|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs'],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet|CSSStyleSheet']];
$.dynamicSetMetadata(table);
})();


//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  var getter = new Function("{ return $." + fieldName + ";}");
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=filter.dart.js.map