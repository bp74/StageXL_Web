// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DateImplementation = {"":
 ["millisecondsSinceEpoch?", "isUtc"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 hashCode$0: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1 = new $.DateImplementation_toString_fourDigits();
  var t2 = new $.DateImplementation_toString_threeDigits();
  var t3 = new $.DateImplementation_toString_twoDigits();
  var y = t1.call$1(this.get$year());
  var m = t3.call$1(this.get$month());
  var d = t3.call$1(this.get$day());
  var h = t3.call$1(this.get$hour());
  var min = t3.call$1(this.get$minute());
  var sec = t3.call$1(this.get$second());
  var ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms) + 'Z';
  else
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms);
},
 add$1: function(duration) {
  return $.Date_Date$fromMillisecondsSinceEpoch($.add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 DateImplementation$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.abs(t1), 8640000000000000))
    throw $.$$throw($.IllegalArgumentException$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.IllegalArgumentException$(t1));
},
 DateImplementation$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 is$Date: true
};

$$.ExceptionImplementation = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
}
};

$$.HashMapImplementation = {"":
 ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  var t1 = $.hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1, 0, 0, 0);
  var t3 = $.get$length(this._keys);
  if (t3 !== (t3 | 0))
    return this._probeForAdding$1$bailout(2, key, t1, t3, 0, 0);
  var hash = (t1 & t3 - 1) >>> 0;
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this._probeForAdding$1$bailout(3, key, hash, numberOfProbes, insertionIndex, t1);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC16 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(4, numberOfProbes0, key, insertionIndex, hash, 0);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForAdding$1$bailout: function(state, env0, env1, env2, env3, env4) {
  switch (state) {
    case 1:
      var key = env0;
      t1 = env1;
      break;
    case 2:
      key = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 3:
      key = env0;
      hash = env1;
      numberOfProbes = env2;
      insertionIndex = env3;
      t1 = env4;
      break;
    case 4:
      numberOfProbes0 = env0;
      key = env1;
      insertionIndex = env2;
      hash = env3;
      break;
  }
  switch (state) {
    case 0:
      var t1 = $.hashCode(key);
    case 1:
      state = 0;
      var t3 = $.get$length(this._keys);
    case 2:
      state = 0;
      var hash = $.and(t1, $.sub(t3, 1));
      var numberOfProbes = 1;
      var insertionIndex = -1;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
            case 3:
              state = 0;
              var existingKey = $.index(t1, hash);
              if (existingKey == null) {
                if ($.ltB(insertionIndex, 0))
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if ($.ltB(insertionIndex, 0) && $.CTC16 === existingKey)
                insertionIndex = hash;
              var numberOfProbes0 = numberOfProbes + 1;
              hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
            case 4:
              state = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var hash = $.and($.hashCode(key), $.sub($.get$length(this._keys), 1));
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (var numberOfProbes = 1; true;) {
    var existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1$bailout: function(state, key, hash) {
  for (var numberOfProbes = 1; true;) {
    var existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
    numberOfProbes = numberOfProbes0;
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1($.mul($.get$length(this._keys), 2));
    return;
  }
  var numberOfFree = $.sub($.sub($.get$length(this._keys), newNumberOfEntries), this._numberOfDeleted);
  if ($.gtB(this._numberOfDeleted, numberOfFree))
    this._grow$1($.get$length(this._keys));
},
 _grow$1: function(newCapacity) {
  var capacity = $.get$length(this._keys);
  if (typeof capacity !== 'number')
    return this._grow$1$bailout(1, newCapacity, capacity, 0, 0);
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  var oldKeys = this._keys;
  if (typeof oldKeys !== 'string' && (typeof oldKeys !== 'object' || oldKeys === null || oldKeys.constructor !== Array && !oldKeys.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(2, newCapacity, oldKeys, capacity, 0);
  var oldValues = this._values;
  if (typeof oldValues !== 'string' && (typeof oldValues !== 'object' || oldValues === null || oldValues.constructor !== Array && !oldValues.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(3, newCapacity, oldKeys, oldValues, capacity);
  this._keys = $.ListImplementation_List(newCapacity);
  this._values = $.ListImplementation_List(newCapacity);
  for (var i = 0; i < capacity; ++i) {
    if (i < 0 || i >= oldKeys.length)
      throw $.ioore(i);
    var key = oldKeys[i];
    if (key == null || key === $.CTC16)
      continue;
    if (i < 0 || i >= oldValues.length)
      throw $.ioore(i);
    var value = oldValues[i];
    var newIndex = this._probeForAdding$1(key);
    $.indexSet(this._keys, newIndex, key);
    $.indexSet(this._values, newIndex, value);
  }
  this._numberOfDeleted = 0;
},
 _grow$1$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var newCapacity = env0;
      capacity = env1;
      break;
    case 2:
      newCapacity = env0;
      oldKeys = env1;
      capacity = env2;
      break;
    case 3:
      newCapacity = env0;
      oldKeys = env1;
      oldValues = env2;
      capacity = env3;
      break;
  }
  switch (state) {
    case 0:
      var capacity = $.get$length(this._keys);
    case 1:
      state = 0;
      this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
      var oldKeys = this._keys;
    case 2:
      state = 0;
      var oldValues = this._values;
    case 3:
      state = 0;
      this._keys = $.ListImplementation_List(newCapacity);
      this._values = $.ListImplementation_List(newCapacity);
      for (var i = 0; $.ltB(i, capacity); ++i) {
        var key = $.index(oldKeys, i);
        if (key == null || key === $.CTC16)
          continue;
        var value = $.index(oldValues, i);
        var newIndex = this._probeForAdding$1(key);
        $.indexSet(this._keys, newIndex, key);
        $.indexSet(this._values, newIndex, value);
      }
      this._numberOfDeleted = 0;
  }
},
 clear$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  var length$ = $.get$length(this._keys);
  if (typeof length$ !== 'number')
    return this.clear$0$bailout(1, length$);
  for (var i = 0; i < length$; ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 clear$0$bailout: function(state, length$) {
  for (var i = 0; $.ltB(i, length$); ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 operator$indexSet$2: function(key, value) {
  this._ensureCapacity$0();
  var index = this._probeForAdding$1(key);
  if ($.index(this._keys, index) == null || $.index(this._keys, index) === $.CTC16)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  $.indexSet(this._keys, index, key);
  $.indexSet(this._values, index, value);
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  return $.index(this._values, index);
},
 isEmpty$0: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$ = $.get$length(this._keys);
  if (typeof length$ !== 'number')
    return this.forEach$1$bailout(1, f, length$);
  for (var i = 0; i < length$; ++i) {
    var key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC16))
      f.call$2(key, $.index(this._values, i));
  }
},
 forEach$1$bailout: function(state, f, length$) {
  for (var i = 0; $.ltB(i, length$); ++i) {
    var key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC16))
      f.call$2(key, $.index(this._values, i));
  }
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 HashMapImplementation$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $.HashMapImplementation__computeLoadLimit(8);
  this._keys = $.ListImplementation_List(8);
  this._values = $.ListImplementation_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":
 [],
 "super": "Object"
};

$$.JSSyntaxRegExp = {"":
 ["_ignoreCase", "_multiLine", "_lib0_pattern"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  var matchStart = $.regExpMatchStart(m);
  var t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$.StringBufferImpl = {"":
 ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 isEmpty$0: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 clear$0: function() {
  this._buffer = $.ListImplementation_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.stringJoinUnchecked($.StringImplementation__toJsStringArray(this._buffer), '');
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$._MatchImplementation = {"":
 ["pattern?", "str", "_start", "_end", "_groups"],
 "super": "Object",
 group$1: function(index) {
  return $.index(this._groups, index);
},
 operator$index$1: function(index) {
  return this.group$1(index);
}
};

$$._AllMatchesIterable = {"":
 ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":
 ["_re", "_str", "_next", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC10);
  var next = this._next;
  this._next = null;
  return next;
},
 hasNext$0: function() {
  if (this._done === true)
    return false;
  else if (!(this._next == null))
    return true;
  this._next = this._re.firstMatch$1(this._str);
  if (this._next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.NoSuchMethodError = {"":
 ["_receiver", "_functionName", "_arguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var sb = $.StringBuffer_StringBuffer('');
  for (var t1 = this._arguments, i = 0; i < t1.length; ++i) {
    if (i > 0)
      $.add$1(sb, ', ');
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    $.add$1(sb, $.NoSuchMethodError_safeToString(t1[i]));
  }
  t1 = this._existingArgumentNames;
  if (t1 == null)
    return 'NoSuchMethodError : method not found: \'' + $.S(this._functionName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(sb) + ']';
  else {
    var actualParameters = $.toString(sb);
    sb = $.StringBuffer_StringBuffer('');
    for (i = 0; $.ltB(i, $.get$length(t1)); ++i) {
      if (i > 0)
        $.add$1(sb, ', ');
      $.add$1(sb, $.index(t1, i));
    }
    var formalParameters = $.toString(sb);
    t1 = this._functionName;
    return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t1) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t1) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t1) + '(' + $.S(formalParameters) + ')';
  }
}
};

$$.IndexOutOfRangeException = {"":
 ["_value"],
 "super": "Object",
 toString$0: function() {
  return 'IndexOutOfRangeException: ' + $.S(this._value);
}
};

$$.ObjectNotClosureException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Object is not closure';
}
};

$$.IllegalArgumentException = {"":
 ["_arg"],
 "super": "Object",
 toString$0: function() {
  return 'Illegal argument(s): ' + $.S(this._arg);
}
};

$$.StackOverflowException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
}
};

$$.FormatException = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + this.message;
}
};

$$.NullPointerException = {"":
 ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
}
};

$$.NoMoreElementsException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'NoMoreElementsException';
}
};

$$.UnsupportedOperationException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  return 'UnsupportedOperationException: ' + this._message;
}
};

$$.NotImplementedException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this._message;
  return !(t1 == null) ? 'NotImplementedException: ' + $.S(t1) : 'NotImplementedException';
}
};

$$.IllegalJSRegExpException = {"":
 ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
}
};

$$.Object = {"":
 [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 hashCode$0: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.ListIterator = {"":
 ["i", "list"],
 "super": "Object",
 hasNext$0: function() {
  var t1 = this.i;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 < this.list.length;
},
 hasNext$0$bailout: function(state, t1) {
  return $.lt(t1, this.list.length);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.NoMoreElementsException$());
  var value = this.list[this.i];
  var t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout: function(state, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.Closure = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.CastExceptionImplementation = {"":
 ["actualType", "expectedType"],
 "super": "Object",
 toString$0: function() {
  return 'CastException: Casting value of type ' + $.S(this.actualType) + ' to' + ' incompatible type ' + $.S(this.expectedType);
}
};

$$.MetaInfo = {"":
 ["_tag?", "_tags", "_set?"],
 "super": "Object"
};

$$.StringMatch = {"":
 ["_lib1_start", "str", "pattern?"],
 "super": "Object",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.IndexOutOfRangeException$(group_));
  return this.pattern;
}
};

$$._AbstractWorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._AudioContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._BatteryManagerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._BodyElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); }
};

$$._DOMApplicationCacheEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._DedicatedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl"
};

$$._DocumentEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._ElementEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._EventSourceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._EventsImpl = {"":
 ["_ptr"],
 "super": "Object",
 operator$index$1: function(type) {
  return $._EventListenerListImpl$(this._ptr, type);
}
};

$$._EventListenerListImpl = {"":
 ["_ptr", "_lib_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._add$2(listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 _add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._lib_type, listener, useCapture);
}
};

$$._FileReaderEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._FileWriterEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._FrameSetElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); }
};

$$._HttpRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._HttpRequestUploadEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBDatabaseEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBOpenDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._IDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBTransactionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBVersionChangeRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._InputElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._JavaScriptAudioNodeEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._MediaStreamEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MessagePortEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._NotificationEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._PeerConnection00EventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._RTCPeerConnectionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._SVGElementInstanceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._SharedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl"
};

$$._SpeechRecognitionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackCueEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._WebSocketEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._WindowEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._WorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._WorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_AbstractWorkerEventsImpl"
};

$$._DOMWindowCrossFrameImpl = {"":
 ["_window"],
 "super": "Object",
 get$top: function() {
  return $._DOMWindowCrossFrameImpl__createSafe($._DOMWindowCrossFrameImpl__top(this._window));
},
 focus$0: function() {
  return $._DOMWindowCrossFrameImpl__focus(this._window);
}
};

$$._FixedSizeListIterator = {"":
 ["_lib_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 hasNext$0: function() {
  var t1 = this._lib_length;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1, 0);
  var t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.hasNext$0$bailout(2, t1, t3);
  return t1 > t3;
},
 hasNext$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._lib_length;
    case 1:
      state = 0;
      var t3 = this._pos;
    case 2:
      state = 0;
      return $.gt(t1, t3);
  }
}
};

$$._VariableSizeListIterator = {"":
 [],
 "super": "Object",
 hasNext$0: function() {
  var t1 = $.get$length(this._array);
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1, 0);
  var t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.hasNext$0$bailout(2, t3, t1);
  return t1 > t3;
},
 hasNext$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env0;
      t1 = env1;
      break;
  }
  switch (state) {
    case 0:
      var t1 = $.get$length(this._array);
    case 1:
      state = 0;
      var t3 = this._pos;
    case 2:
      state = 0;
      return $.gt(t1, t3);
  }
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC10);
  var t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1, 0);
  var t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t1, t3);
  this._pos = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      if (this.hasNext$0() !== true)
        throw $.$$throw($.CTC10);
      var t1 = this._array;
    case 1:
      state = 0;
      var t3 = this._pos;
    case 2:
      state = 0;
      this._pos = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$.Juggler = {"":
 ["_animatables", "_animatablesCount", "_elapsedTime"],
 "super": "Object",
 add$1: function(animatable) {
  if (animatable == null)
    return;
  var t1 = this._animatablesCount;
  var t2 = this._animatables;
  if ($.geB(t1, t2.length))
    t2.push(animatable);
  else {
    t1 = this._animatablesCount;
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= t2.length)
      throw $.ioore(t1);
    t2[t1] = animatable;
  }
  this._animatablesCount = $.add(this._animatablesCount, 1);
},
 advanceTime$1: function(time) {
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time, 0, 0, 0);
  var t1 = this._elapsedTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(2, time, t1, 0, 0);
  this._elapsedTime = t1 + time;
  var animatablesCount = this._animatablesCount;
  if (typeof animatablesCount !== 'number')
    return this.advanceTime$1$bailout(3, time, animatablesCount, 0, 0);
  for (var t1 = this._animatables, i = 0, c = 0; i < animatablesCount; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var animatable = t1[i];
    if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
      if (!(c === i)) {
        if (c < 0 || c >= t1.length)
          throw $.ioore(c);
        t1[c] = animatable;
      }
      ++c;
    }
  }
  i = animatablesCount;
  while (true) {
    var t2 = this._animatablesCount;
    if (typeof t2 !== 'number')
      return this.advanceTime$1$bailout(4, t2, c, t1, i);
    if (!(i < t2))
      break;
    var c0 = c + 1;
    if (i !== (i | 0))
      throw $.iae(i);
    t2 = t1.length;
    if (i < 0 || i >= t2)
      throw $.ioore(i);
    var t3 = t1[i];
    if (c < 0 || c >= t2)
      throw $.ioore(c);
    t1[c] = t3;
    c = c0;
    ++i;
  }
  i = c;
  while (true) {
    t2 = this._animatablesCount;
    if (typeof t2 !== 'number')
      return this.advanceTime$1$bailout(5, c, t1, t2, i);
    if (!(i < t2))
      break;
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    t1[i] = null;
    ++i;
  }
  this._animatablesCount = c;
  return true;
},
 advanceTime$1$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
    case 3:
      time = env0;
      animatablesCount = env1;
      break;
    case 4:
      t2 = env0;
      c = env1;
      t1 = env2;
      i = env3;
      break;
    case 5:
      c = env0;
      t1 = env1;
      t2 = env2;
      i = env3;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._elapsedTime;
    case 2:
      state = 0;
      this._elapsedTime = $.add(t1, time);
      var animatablesCount = this._animatablesCount;
    case 3:
      state = 0;
      for (var t1 = this._animatables, i = 0, c = 0; $.ltB(i, animatablesCount); ++i) {
        if (i < 0 || i >= t1.length)
          throw $.ioore(i);
        var animatable = t1[i];
        if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
          if (!(c === i)) {
            if (c < 0 || c >= t1.length)
              throw $.ioore(c);
            t1[c] = animatable;
          }
          ++c;
        }
      }
      i = animatablesCount;
    case 4:
      L0:
        while (true)
          switch (state) {
            case 0:
              var t2 = this._animatablesCount;
            case 4:
              state = 0;
              if (!$.ltB(i, t2))
                break L0;
              var c0 = c + 1;
              if (i !== (i | 0))
                throw $.iae(i);
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              t2 = t1[i];
              if (c < 0 || c >= t1.length)
                throw $.ioore(c);
              t1[c] = t2;
              c = c0;
              i = $.add(i, 1);
          }
      i = c;
    case 5:
      L1:
        while (true)
          switch (state) {
            case 0:
              t2 = this._animatablesCount;
            case 5:
              state = 0;
              if (!$.ltB(i, t2))
                break L1;
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              t1[i] = null;
              ++i;
          }
      this._animatablesCount = c;
      return true;
  }
},
 Juggler$0: function() {
  this._elapsedTime = 0;
  this._animatables = $.ListImplementation_List(null);
  this._animatablesCount = 0;
}
};

$$.Point = {"":
 ["x?", "y?"],
 "super": "Object",
 get$length: function() {
  var t1 = this.x;
  t1 = $.mul(t1, t1);
  var t2 = this.y;
  return $.sqrt($.add(t1, $.mul(t2, t2)));
},
 add$1: function(p) {
  return $.Point$($.add(this.x, p.get$x()), $.add(this.y, p.get$y()));
}
};

$$.Rectangle = {"":
 ["x=", "y=", "width=", "height="],
 "super": "Object",
 get$left: function() {
  return this.x;
},
 get$top: function() {
  return this.y;
},
 get$right: function() {
  return $.add(this.x, this.width);
},
 get$bottom: function() {
  return $.add(this.y, this.height);
},
 get$size: function() {
  return $.Point$(this.width, this.height);
},
 contains$2: function(px, py) {
  return $.leB(this.x, px) && $.leB(this.y, py) && $.geB(this.get$right(), px) && $.geB(this.get$bottom(), py);
},
 get$isEmpty: function() {
  return $.eqB(this.width, 0) && $.eqB(this.height, 0);
},
 isEmpty$0: function() { return this.get$isEmpty().call$0(); }
};

$$.Matrix = {"":
 ["_a", "_b", "_c", "_d", "_tx", "_ty", "_det"],
 "super": "Object",
 get$a: function() {
  return this._a;
},
 get$b: function() {
  return this._b;
},
 get$c: function() {
  return this._c;
},
 get$d: function() {
  return this._d;
},
 get$tx: function() {
  return this._tx;
},
 get$ty: function() {
  return this._ty;
},
 get$det: function() {
  return this._det;
},
 transformPoint$1: function(p) {
  var t1 = p.x;
  var t2 = $.mul(t1, this._a);
  var t3 = p.y;
  return $.Point$($.add($.add(t2, $.mul(t3, this._c)), this._tx), $.add($.add($.mul(t1, this._b), $.mul(t3, this._d)), this._ty));
},
 concat$1: function(matrix) {
  var a1 = this._a;
  var b1 = this._b;
  var c1 = this._c;
  var d1 = this._d;
  var tx1 = this._tx;
  var ty1 = this._ty;
  var det1 = this._det;
  var a2 = matrix.get$a();
  var b2 = matrix.get$b();
  var c2 = matrix.get$c();
  var d2 = matrix.get$d();
  var tx2 = matrix.get$tx();
  var ty2 = matrix.get$ty();
  var det2 = matrix.get$det();
  this._a = $.add($.mul(a1, a2), $.mul(b1, c2));
  this._b = $.add($.mul(a1, b2), $.mul(b1, d2));
  this._c = $.add($.mul(c1, a2), $.mul(d1, c2));
  this._d = $.add($.mul(c1, b2), $.mul(d1, d2));
  this._tx = $.add($.add($.mul(tx1, a2), $.mul(ty1, c2)), tx2);
  this._ty = $.add($.add($.mul(tx1, b2), $.mul(ty1, d2)), ty2);
  this._det = $.mul(det1, det2);
},
 identity$0: function() {
  this._a = 1;
  this._b = 0;
  this._c = 0;
  this._d = 1;
  this._tx = 0;
  this._ty = 0;
  this._det = 1;
},
 invert$0: function() {
  var a = this._a;
  var b = this._b;
  var c = this._c;
  var d = this._d;
  var tx = this._tx;
  var ty = this._ty;
  var det = this._det;
  this._a = $.div(d, det);
  this._b = $.neg($.div(b, det));
  this._c = $.neg($.div(c, det));
  this._d = $.div(a, det);
  this._tx = $.neg($.add($.mul(this._a, tx), $.mul(this._c, ty)));
  this._ty = $.neg($.add($.mul(this._b, tx), $.mul(this._d, ty)));
  if (typeof det !== 'number')
    throw $.iae(det);
  this._det = 1 / det;
},
 setTo$6: function(a, b, c, d, tx, ty) {
  this._a = a;
  this._b = b;
  this._c = c;
  this._d = d;
  this._tx = tx;
  this._ty = ty;
  this._det = $.sub($.mul(a, d), $.mul(b, c));
},
 copyFromAndConcat$2: function(copyMatrix, concatMatrix) {
  var a1 = copyMatrix.get$a();
  if (typeof a1 !== 'number')
    return this.copyFromAndConcat$2$bailout(1, copyMatrix, concatMatrix, a1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var b1 = copyMatrix.get$b();
  if (typeof b1 !== 'number')
    return this.copyFromAndConcat$2$bailout(2, copyMatrix, concatMatrix, a1, b1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var c1 = copyMatrix.get$c();
  if (typeof c1 !== 'number')
    return this.copyFromAndConcat$2$bailout(3, copyMatrix, concatMatrix, a1, b1, c1, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var d1 = copyMatrix.get$d();
  if (typeof d1 !== 'number')
    return this.copyFromAndConcat$2$bailout(4, copyMatrix, concatMatrix, a1, b1, c1, d1, 0, 0, 0, 0, 0, 0, 0, 0);
  var tx1 = copyMatrix.get$tx();
  if (typeof tx1 !== 'number')
    return this.copyFromAndConcat$2$bailout(5, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, 0, 0, 0, 0, 0, 0, 0);
  var ty1 = copyMatrix.get$ty();
  if (typeof ty1 !== 'number')
    return this.copyFromAndConcat$2$bailout(6, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, ty1, 0, 0, 0, 0, 0, 0);
  var det1 = copyMatrix.get$det();
  if (typeof det1 !== 'number')
    return this.copyFromAndConcat$2$bailout(7, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, 0, 0, 0, 0, 0, 0);
  var a2 = concatMatrix.get$a();
  if (typeof a2 !== 'number')
    return this.copyFromAndConcat$2$bailout(8, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, 0, 0, 0, 0, 0);
  var b2 = concatMatrix.get$b();
  if (typeof b2 !== 'number')
    return this.copyFromAndConcat$2$bailout(9, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, 0, 0, 0, 0);
  var c2 = concatMatrix.get$c();
  if (typeof c2 !== 'number')
    return this.copyFromAndConcat$2$bailout(10, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, 0, 0, 0);
  var d2 = concatMatrix.get$d();
  if (typeof d2 !== 'number')
    return this.copyFromAndConcat$2$bailout(11, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, 0, 0);
  var tx2 = concatMatrix.get$tx();
  if (typeof tx2 !== 'number')
    return this.copyFromAndConcat$2$bailout(12, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, 0);
  var ty2 = concatMatrix.get$ty();
  if (typeof ty2 !== 'number')
    return this.copyFromAndConcat$2$bailout(13, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2);
  var det2 = concatMatrix.get$det();
  if (typeof det2 !== 'number')
    return this.copyFromAndConcat$2$bailout(14, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2);
  this._a = a1 * a2 + b1 * c2;
  this._b = a1 * b2 + b1 * d2;
  this._c = c1 * a2 + d1 * c2;
  this._d = c1 * b2 + d1 * d2;
  this._tx = tx1 * a2 + ty1 * c2 + tx2;
  this._ty = tx1 * b2 + ty1 * d2 + ty2;
  this._det = det1 * det2;
},
 copyFromAndConcat$2$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state) {
    case 1:
      var copyMatrix = env0;
      var concatMatrix = env1;
      a1 = env2;
      break;
    case 2:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      break;
    case 3:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      c1 = env4;
      break;
    case 4:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      c1 = env4;
      d1 = env5;
      break;
    case 5:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      c1 = env4;
      d1 = env5;
      tx1 = env6;
      break;
    case 6:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      c1 = env4;
      d1 = env5;
      tx1 = env6;
      ty1 = env7;
      break;
    case 7:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      break;
    case 8:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      break;
    case 9:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      break;
    case 10:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      c2 = env10;
      break;
    case 11:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      c2 = env10;
      d2 = env11;
      break;
    case 12:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      c2 = env10;
      d2 = env11;
      tx2 = env12;
      break;
    case 13:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      c2 = env10;
      d2 = env11;
      tx2 = env12;
      ty2 = env13;
      break;
    case 14:
      a1 = env0;
      b1 = env1;
      c1 = env2;
      d1 = env3;
      tx1 = env4;
      ty1 = env5;
      det1 = env6;
      a2 = env7;
      b2 = env8;
      c2 = env9;
      d2 = env10;
      tx2 = env11;
      ty2 = env12;
      det2 = env13;
      break;
  }
  switch (state) {
    case 0:
      var a1 = copyMatrix.get$a();
    case 1:
      state = 0;
      var b1 = copyMatrix.get$b();
    case 2:
      state = 0;
      var c1 = copyMatrix.get$c();
    case 3:
      state = 0;
      var d1 = copyMatrix.get$d();
    case 4:
      state = 0;
      var tx1 = copyMatrix.get$tx();
    case 5:
      state = 0;
      var ty1 = copyMatrix.get$ty();
    case 6:
      state = 0;
      var det1 = copyMatrix.get$det();
    case 7:
      state = 0;
      var a2 = concatMatrix.get$a();
    case 8:
      state = 0;
      var b2 = concatMatrix.get$b();
    case 9:
      state = 0;
      var c2 = concatMatrix.get$c();
    case 10:
      state = 0;
      var d2 = concatMatrix.get$d();
    case 11:
      state = 0;
      var tx2 = concatMatrix.get$tx();
    case 12:
      state = 0;
      var ty2 = concatMatrix.get$ty();
    case 13:
      state = 0;
      var det2 = concatMatrix.get$det();
    case 14:
      state = 0;
      this._a = $.add($.mul(a1, a2), $.mul(b1, c2));
      this._b = $.add($.mul(a1, b2), $.mul(b1, d2));
      this._c = $.add($.mul(c1, a2), $.mul(d1, c2));
      this._d = $.add($.mul(c1, b2), $.mul(d1, d2));
      this._tx = $.add($.add($.mul(tx1, a2), $.mul(ty1, c2)), tx2);
      this._ty = $.add($.add($.mul(tx1, b2), $.mul(ty1, d2)), ty2);
      this._det = $.mul(det1, det2);
  }
}
};

$$.RenderLoop = {"":
 ["_juggler", "_stages", "_renderTime"],
 "super": "Object",
 _onAnimationFrame$1: function(currentTime) {
  if (typeof currentTime !== 'number')
    return this._onAnimationFrame$1$bailout(1, currentTime, 0);
  $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
  if ($.isNaN(this._renderTime) === true)
    this._renderTime = currentTime;
  var t1 = this._renderTime;
  if (typeof t1 !== 'number')
    return this._onAnimationFrame$1$bailout(3, currentTime, t1);
  if (t1 > currentTime)
    this._renderTime = currentTime;
  t1 = this._renderTime;
  if (typeof t1 !== 'number')
    return this._onAnimationFrame$1$bailout(4, t1, currentTime);
  var deltaTime = currentTime - t1;
  var deltaTimeSec = deltaTime / 1000;
  if (deltaTime >= 1) {
    this._renderTime = currentTime;
    $._EventDispatcherCatalog_dispatchEvent($.EnterFrameEvent$(deltaTimeSec));
    this._juggler.advanceTime$1(deltaTimeSec);
    for (var t1 = this._stages, i = 0; t2 = t1.length, i < t2; ++i) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t1[i].materialize$0();
    }
  }
  return true;
  var t2;
},
 _onAnimationFrame$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      var currentTime = env0;
      break;
    case 2:
      currentTime = env0;
      break;
    case 3:
      currentTime = env0;
      t1 = env1;
      break;
    case 4:
      t1 = env0;
      currentTime = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
    case 2:
      if (state === 2 || state === 0 && currentTime == null)
        switch (state) {
          case 0:
            currentTime = $.Date_Date$now().get$millisecondsSinceEpoch();
          case 2:
            state = 0;
        }
      if ($.isNaN(this._renderTime) === true)
        this._renderTime = currentTime;
      var t1 = this._renderTime;
    case 3:
      state = 0;
      if ($.gtB(t1, currentTime))
        this._renderTime = currentTime;
      t1 = this._renderTime;
    case 4:
      state = 0;
      var deltaTime = $.sub(currentTime, t1);
      var deltaTimeSec = $.div(deltaTime, 1000);
      if ($.geB(deltaTime, 1)) {
        this._renderTime = currentTime;
        $._EventDispatcherCatalog_dispatchEvent($.EnterFrameEvent$(deltaTimeSec));
        this._juggler.advanceTime$1(deltaTimeSec);
        for (var t1 = this._stages, i = 0; i < t1.length; ++i) {
          if (i < 0 || i >= t1.length)
            throw $.ioore(i);
          t1[i].materialize$0();
        }
      }
      return true;
  }
},
 get$_onAnimationFrame: function() { return new $.BoundClosure(this, '_onAnimationFrame$1'); },
 addStage$1: function(stage) {
  this._stages.push(stage);
},
 RenderLoop$0: function() {
  this._juggler = $.Juggler_instance();
  this._stages = $.ListImplementation_List(null);
  $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
}
};

$$.RenderState = {"":
 ["_context", "_matrices", "_alphas", "_depth"],
 "super": "Object",
 reset$0: function() {
  var t1 = this._context;
  t1.setTransform$6(1, 0, 0, 1, 0, 0);
  t1.set$globalAlpha(1);
  t1.clearRect$4(0, 0, t1.get$canvas().get$width(), t1.get$canvas().get$height());
  this._depth = 0;
},
 renderDisplayObject$1: function(displayObject) {
  var t1 = this._depth;
  if (typeof t1 !== 'number')
    return this.renderDisplayObject$1$bailout(1, displayObject, t1, 0, 0, 0, 0);
  this._depth = t1 + 1;
  var t3 = this._matrices;
  var t4 = this._depth;
  if (t4 !== (t4 | 0))
    throw $.iae(t4);
  if (t4 < 0 || t4 >= t3.length)
    throw $.ioore(t4);
  var matrix = t3[t4];
  t4 = displayObject.get$_transformationMatrix();
  var t5 = this._depth;
  if (typeof t5 !== 'number')
    return this.renderDisplayObject$1$bailout(2, displayObject, matrix, t3, t4, t5, 0);
  --t5;
  if (t5 !== (t5 | 0))
    throw $.iae(t5);
  if (t5 < 0 || t5 >= t3.length)
    throw $.ioore(t5);
  matrix.copyFromAndConcat$2(t4, t3[t5]);
  t4 = this._context;
  t4.setTransform$6(matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
  var t7 = this._alphas;
  var t8 = this._depth;
  if (typeof t8 !== 'number')
    return this.renderDisplayObject$1$bailout(3, displayObject, t4, t7, t8, 0, 0);
  var t10 = t8 - 1;
  if (t10 !== (t10 | 0))
    throw $.iae(t10);
  var t11 = t7.length;
  if (t10 < 0 || t10 >= t11)
    throw $.ioore(t10);
  t10 = t7[t10];
  if (typeof t10 !== 'number')
    return this.renderDisplayObject$1$bailout(4, displayObject, t4, t7, t8, t10, 0);
  var t13 = displayObject.get$_alpha();
  if (typeof t13 !== 'number')
    return this.renderDisplayObject$1$bailout(5, displayObject, t10, t13, t4, t7, t8);
  t13 = t10 * t13;
  if (t8 !== (t8 | 0))
    throw $.iae(t8);
  if (t8 < 0 || t8 >= t11)
    throw $.ioore(t8);
  t7[t8] = t13;
  t4.set$globalAlpha(t13);
  if (displayObject.get$mask() == null)
    displayObject.render$1(this);
  else {
    t4.save$0();
    displayObject.get$mask().render$1(this);
    displayObject.render$1(this);
    t4.restore$0();
  }
  t1 = this._depth;
  if (typeof t1 !== 'number')
    return this.renderDisplayObject$1$bailout(6, t1, 0, 0, 0, 0, 0);
  this._depth = t1 - 1;
},
 renderDisplayObject$1$bailout: function(state, env0, env1, env2, env3, env4, env5) {
  switch (state) {
    case 1:
      var displayObject = env0;
      t1 = env1;
      break;
    case 2:
      displayObject = env0;
      matrix = env1;
      t3 = env2;
      t4 = env3;
      t5 = env4;
      break;
    case 3:
      displayObject = env0;
      t4 = env1;
      t7 = env2;
      t8 = env3;
      break;
    case 4:
      displayObject = env0;
      t4 = env1;
      t7 = env2;
      t8 = env3;
      t10 = env4;
      break;
    case 5:
      displayObject = env0;
      t10 = env1;
      t12 = env2;
      t4 = env3;
      t7 = env4;
      t8 = env5;
      break;
    case 6:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._depth;
    case 1:
      state = 0;
      this._depth = $.add(t1, 1);
      var t3 = this._matrices;
      var t4 = this._depth;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t3.length)
        throw $.ioore(t4);
      var matrix = t3[t4];
      t4 = displayObject.get$_transformationMatrix();
      var t5 = this._depth;
    case 2:
      state = 0;
      t5 = $.sub(t5, 1);
      if (t5 !== (t5 | 0))
        throw $.iae(t5);
      if (t5 < 0 || t5 >= t3.length)
        throw $.ioore(t5);
      matrix.copyFromAndConcat$2(t4, t3[t5]);
      t4 = this._context;
      t4.setTransform$6(matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
      var t7 = this._alphas;
      var t8 = this._depth;
    case 3:
      state = 0;
      var t10 = $.sub(t8, 1);
      if (t10 !== (t10 | 0))
        throw $.iae(t10);
      if (t10 < 0 || t10 >= t7.length)
        throw $.ioore(t10);
      t10 = t7[t10];
    case 4:
      state = 0;
      var t12 = displayObject.get$_alpha();
    case 5:
      state = 0;
      t12 = $.mul(t10, t12);
      if (t8 !== (t8 | 0))
        throw $.iae(t8);
      if (t8 < 0 || t8 >= t7.length)
        throw $.ioore(t8);
      t7[t8] = t12;
      t4.set$globalAlpha(t12);
      if (displayObject.get$mask() == null)
        displayObject.render$1(this);
      else {
        t4.save$0();
        displayObject.get$mask().render$1(this);
        displayObject.render$1(this);
        t4.restore$0();
      }
      t1 = this._depth;
    case 6:
      state = 0;
      this._depth = $.sub(t1, 1);
  }
},
 RenderState$fromCanvasRenderingContext2D$1: function(context) {
  this._context = context;
  this._matrices = $.ListImplementation_List(null);
  this._alphas = $.ListImplementation_List(null);
  this._depth = 0;
  for (var t1 = this._matrices, t2 = this._alphas, i = 0; i < 100; ++i) {
    t1.push($.Matrix$fromIdentity());
    t2.push(1);
  }
}
};

$$.Event = {"":
 ["_type", "_bubbles", "_eventPhase!", "_target!", "_currentTarget!", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Object",
 get$stopsPropagation: function() {
  return this._stopsPropagation;
},
 get$stopsImmediatePropagation: function() {
  return this._stopsImmediatePropagation;
},
 get$type: function() {
  return this._type;
},
 get$bubbles: function() {
  return this._bubbles;
},
 get$captures: function() {
  return true;
},
 Event$2: function(type, bubbles) {
  this._type = type;
  this._bubbles = bubbles;
  this._eventPhase = 2;
}
};

$$.EventDispatcher = {"":
 ["_eventListenersMap"],
 "super": "Object",
 hasEventListener$1: function(type) {
  var t1 = this._eventListenersMap;
  return !(t1 == null) && t1.containsKey$1(type) === true;
},
 addEventListener$3: function(type, listener, useCapture) {
  var eventListener = $._EventListener$(listener, useCapture);
  if (this._eventListenersMap == null)
    this._eventListenersMap = $.HashMapImplementation$();
  var eventListeners = $.index(this._eventListenersMap, type);
  eventListeners = eventListeners == null ? $.ListImplementation_List(null) : $.ListImplementation_List$from(eventListeners);
  $.add$1(eventListeners, eventListener);
  $.indexSet(this._eventListenersMap, type, eventListeners);
  $._EventDispatcherCatalog_addEventDispatcher(type, this);
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 dispatchEvent$1: function(event$) {
  this._invokeEventListeners$4(event$, this, this, 2);
},
 _invokeEventListeners$4: function(event$, target, currentTarget, eventPhase) {
  var t1 = this._eventListenersMap;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._invokeEventListeners$4$bailout(1, event$, target, currentTarget, eventPhase, t1, 0, 0, 0);
  var t2 = event$.get$type();
  if (t2 !== (t2 | 0))
    throw $.iae(t2);
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  var eventListeners = t1[t2];
  if (!(eventListeners == null))
    for (t1 = $.iterator(eventListeners), t2 = eventPhase === 1; t1.hasNext$0() === true;) {
      var t3 = t1.next$0();
      if (t2) {
        var t4 = t3.get$useCapture();
        if (typeof t4 !== 'boolean')
          return this._invokeEventListeners$4$bailout(2, event$, target, currentTarget, eventPhase, t4, t3, t1, t2);
        t4 = !t4;
      } else
        t4 = false;
      if (t4)
        continue;
      event$.set$_target(target);
      event$.set$_currentTarget(currentTarget);
      event$.set$_eventPhase(eventPhase);
      t3.listener$1(event$);
      if (event$.get$stopsImmediatePropagation() === true)
        break;
    }
},
 _invokeEventListeners$4$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state) {
    case 1:
      var event$ = env0;
      var target = env1;
      var currentTarget = env2;
      var eventPhase = env3;
      t1 = env4;
      break;
    case 2:
      event$ = env0;
      target = env1;
      currentTarget = env2;
      eventPhase = env3;
      t4 = env4;
      t3 = env5;
      t1 = env6;
      t2 = env7;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._eventListenersMap;
    case 1:
      state = 0;
    case 2:
      if (state === 2 || state === 0 && !(t1 == null))
        switch (state) {
          case 0:
            var eventListeners = $.index(t1, event$.get$type());
          case 2:
            if (state === 2 || state === 0 && !(eventListeners == null))
              switch (state) {
                case 0:
                  t1 = $.iterator(eventListeners);
                  var t2 = eventPhase === 1;
                case 2:
                  L0:
                    while (true)
                      switch (state) {
                        case 0:
                          if (!(t1.hasNext$0() === true))
                            break L0;
                        case 2:
                          c$0: {
                            switch (state) {
                              case 0:
                                var t3 = t1.next$0();
                              case 2:
                                if (state === 2 || state === 0 && t2)
                                  switch (state) {
                                    case 0:
                                      var t4 = t3.get$useCapture();
                                    case 2:
                                      state = 0;
                                      t4 = $.eqB(t4, false);
                                  }
                                else
                                  t4 = false;
                                if (t4)
                                  break c$0;
                                event$.set$_target(target);
                                event$.set$_currentTarget(currentTarget);
                                event$.set$_eventPhase(eventPhase);
                                t3.listener$1(event$);
                                if (event$.get$stopsImmediatePropagation() === true)
                                  break L0;
                            }
                          }
                      }
              }
        }
  }
}
};

$$._EventListener = {"":
 ["listener", "useCapture?"],
 "super": "Object",
 listener$1: function(arg0) { return this.listener.call$1(arg0); }
};

$$.EnterFrameEvent = {"":
 ["_passedTime", "_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 get$captures: function() {
  return false;
},
 EnterFrameEvent$1: function(passedTime) {
  this._passedTime = passedTime;
}
};

$$.MouseEvent = {"":
 ["_localX", "_localY", "_stageX", "_stageY", "_buttonDown", "_altKey", "_controlKey", "_ctrlKey", "_shiftKey", "_clickCount", "_delta", "_isRelatedObjectInaccessible", "_relatedObject", "_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 get$altKey: function() {
  return this._altKey;
},
 get$ctrlKey: function() {
  return this._ctrlKey;
},
 get$shiftKey: function() {
  return this._shiftKey;
}
};

$$.KeyboardEvent = {"":
 ["_altKey", "_ctrlKey", "_shiftKey", "_commandKey", "_controlKey", "_charCode", "_keyCode", "_keyLocation", "_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 get$altKey: function() {
  return this._altKey;
},
 get$ctrlKey: function() {
  return this._ctrlKey;
},
 get$shiftKey: function() {
  return this._shiftKey;
},
 get$charCode: function() {
  return this._charCode;
},
 get$keyCode: function() {
  return this._keyCode;
},
 get$keyLocation: function() {
  return this._keyLocation;
}
};

$$.TextEvent = {"":
 ["_text", "_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event"
};

$$.DisplayObject = {"":
 ["_alpha?", "_parent?", "mask?"],
 "super": "EventDispatcher",
 get$x: function() {
  return this._x;
},
 get$y: function() {
  return this._y;
},
 get$visible: function() {
  return this._visible;
},
 get$parent: function() {
  return this._parent;
},
 get$root: function() {
  for (var currentObject = this; currentObject0 = currentObject.get$_parent(), !(currentObject0 == null);)
    currentObject = currentObject0;
  return currentObject;
  var currentObject0;
},
 get$stage: function() {
  var root = this.get$root();
  if (typeof root === 'object' && root !== null && !!root.is$Stage)
    return root;
  return;
},
 set$x: function(value) {
  this._x = value;
  this._transformationMatrixRefresh = true;
},
 set$y: function(value) {
  this._y = value;
  this._transformationMatrixRefresh = true;
},
 set$scaleX: function(value) {
  this._scaleX = value;
  this._transformationMatrixRefresh = true;
},
 set$scaleY: function(value) {
  this._scaleY = value;
  this._transformationMatrixRefresh = true;
},
 get$width: function() {
  return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$width();
},
 get$height: function() {
  return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$height();
},
 set$width: function(value) {
  this.set$scaleX(1);
  var normalWidth = this.get$width();
  this.set$scaleX(!$.eqB(normalWidth, 0) ? $.div(value, normalWidth) : 1);
},
 set$height: function(value) {
  this.set$scaleY(1);
  var normalHeight = this.get$height();
  this.set$scaleY(!$.eqB(normalHeight, 0) ? $.div(value, normalHeight) : 1);
},
 removeFromParent$0: function() {
  var t1 = this._parent;
  if (!(t1 == null))
    t1.removeChild$1(this);
},
 get$_transformationMatrix: function() {
  if (this._transformationMatrixRefresh === true) {
    this._transformationMatrixRefresh = false;
    var t1 = this._rotation;
    var t2 = t1 === 0;
    var t3 = this._transformationMatrixPrivate;
    var t4 = this._pivotX;
    var t5 = this._pivotY;
    if (t2) {
      t1 = this._scaleX;
      t2 = this._scaleY;
      var t6 = this._x;
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      t6 = $.sub(t6, t4 * t1);
      var t7 = this._y;
      var t8 = this._scaleY;
      if (typeof t8 !== 'number')
        throw $.iae(t8);
      t3.setTo$6(t1, 0, 0, t2, t6, $.sub(t7, t5 * t8));
    } else {
      var cosR = $.cos(t1);
      var sinR = $.sin(t1);
      var a = $.mul(this._scaleX, cosR);
      var b = $.mul(this._scaleX, sinR);
      var c = $.mul($.neg(this._scaleY), sinR);
      var d = $.mul(this._scaleY, cosR);
      t1 = this._x;
      if (typeof a !== 'number')
        throw $.iae(a);
      t1 = $.sub(t1, t4 * a);
      if (typeof c !== 'number')
        throw $.iae(c);
      var tx = $.sub(t1, t5 * c);
      t1 = this._y;
      if (typeof b !== 'number')
        throw $.iae(b);
      t1 = $.sub(t1, t4 * b);
      if (typeof d !== 'number')
        throw $.iae(d);
      t3.setTo$6(a, b, c, d, tx, $.sub(t1, t5 * d));
    }
  }
  return this._transformationMatrixPrivate;
},
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  returnRectangle.set$x(matrix.get$tx());
  returnRectangle.set$y(matrix.get$ty());
  returnRectangle.set$width(0);
  returnRectangle.set$height(0);
  return returnRectangle;
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  if ($.contains$2(this.getBoundsTransformed$1(this._tmpMatrixIdentity), localX, localY) === true)
    return this;
  return;
},
 globalToLocal$1: function(globalPoint) {
  var t1 = this._tmpMatrix;
  t1.identity$0();
  for (var displayObject = this; !(displayObject == null); displayObject = displayObject.get$_parent())
    $.concat(t1, displayObject.get$_transformationMatrix());
  t1.invert$0();
  return t1.transformPoint$1(globalPoint);
},
 dispatchEvent$1: function(event$) {
  if (event$.get$captures() === true || event$.get$bubbles() === true) {
    for (var ancestor = this._parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_parent())
      if (ancestor.hasEventListener$1(event$.get$type()) === true) {
        if (ancestors == null)
          ancestors = $.ListImplementation_List(null);
        $.add$1(ancestors, ancestor);
      }
  } else
    ancestors = null;
  if (event$.get$captures() === true && !(ancestors == null)) {
    var t1 = $.get$length(ancestors);
    if (typeof t1 !== 'number')
      return this.dispatchEvent$1$bailout(1, event$, t1, ancestors, 0);
    var i = t1 - 1;
    for (; i >= 0; --i) {
      t1 = event$.get$stopsPropagation();
      if (typeof t1 !== 'boolean')
        return this.dispatchEvent$1$bailout(2, event$, i, t1, ancestors);
      if (!t1)
        $.index(ancestors, i)._invokeEventListeners$4(event$, this, $.index(ancestors, i), 1);
    }
  }
  t1 = event$.get$stopsPropagation();
  if (typeof t1 !== 'boolean')
    return this.dispatchEvent$1$bailout(3, event$, t1, ancestors, 0);
  if (!t1)
    this._invokeEventListeners$4(event$, this, this, 2);
  if (event$.get$bubbles() === true && !(ancestors == null)) {
    i = 0;
    while (true) {
      t1 = $.get$length(ancestors);
      if (typeof t1 !== 'number')
        return this.dispatchEvent$1$bailout(4, i, event$, t1, ancestors);
      if (!(i < t1))
        break;
      t1 = event$.get$stopsPropagation();
      if (typeof t1 !== 'boolean')
        return this.dispatchEvent$1$bailout(5, i, event$, t1, ancestors);
      if (!t1)
        $.index(ancestors, i)._invokeEventListeners$4(event$, this, $.index(ancestors, i), 3);
      ++i;
    }
  }
},
 dispatchEvent$1$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var event$ = env0;
      t1 = env1;
      ancestors = env2;
      break;
    case 2:
      event$ = env0;
      i = env1;
      t1 = env2;
      ancestors = env3;
      break;
    case 3:
      event$ = env0;
      t1 = env1;
      ancestors = env2;
      break;
    case 4:
      i = env0;
      event$ = env1;
      t1 = env2;
      ancestors = env3;
      break;
    case 5:
      i = env0;
      event$ = env1;
      t1 = env2;
      ancestors = env3;
      break;
  }
  switch (state) {
    case 0:
      if (event$.get$captures() === true || event$.get$bubbles() === true) {
        for (var ancestor = this._parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_parent())
          if (ancestor.hasEventListener$1(event$.get$type()) === true) {
            if (ancestors == null)
              ancestors = $.ListImplementation_List(null);
            $.add$1(ancestors, ancestor);
          }
      } else
        ancestors = null;
    default:
      if (state === 2 || state === 1 || state === 0 && event$.get$captures() === true && !(ancestors == null))
        switch (state) {
          case 0:
            var t1 = $.get$length(ancestors);
          case 1:
            state = 0;
            var i = $.sub(t1, 1);
          case 2:
            L0:
              while (true)
                switch (state) {
                  case 0:
                    if (!$.geB(i, 0))
                      break L0;
                    t1 = event$.get$stopsPropagation();
                  case 2:
                    state = 0;
                    if ($.eqB(t1, false))
                      $.index(ancestors, i)._invokeEventListeners$4(event$, this, $.index(ancestors, i), 1);
                    i = $.sub(i, 1);
                }
        }
      t1 = event$.get$stopsPropagation();
    case 3:
      state = 0;
      if ($.eqB(t1, false))
        this._invokeEventListeners$4(event$, this, this, 2);
    case 4:
    case 5:
      if (state === 5 || state === 4 || state === 0 && event$.get$bubbles() === true && !(ancestors == null))
        switch (state) {
          case 0:
            i = 0;
          default:
            L1:
              while (true)
                switch (state) {
                  case 0:
                    t1 = $.get$length(ancestors);
                  case 4:
                    state = 0;
                    if (!$.ltB(i, t1))
                      break L1;
                    t1 = event$.get$stopsPropagation();
                  case 5:
                    state = 0;
                    if ($.eqB(t1, false))
                      $.index(ancestors, i)._invokeEventListeners$4(event$, this, $.index(ancestors, i), 3);
                    ++i;
                }
        }
  }
},
 _setParent$1: function(value) {
  for (var ancestor = value; !(ancestor == null); ancestor = ancestor.get$_parent())
    if ($.eqB(ancestor, this))
      throw $.$$throw($.IllegalArgumentException$('Error #2150: An object cannot be added as a child to one of it\'s children (or children\'s children, etc.).'));
  this._parent = value;
},
 DisplayObject$0: function() {
  this._transformationMatrixPrivate = $.Matrix$fromIdentity();
  this._transformationMatrixRefresh = true;
  this._tmpMatrix = $.Matrix$fromIdentity();
  this._tmpMatrixIdentity = $.Matrix$fromIdentity();
}
};

$$.InteractiveObject = {"":
 ["doubleClickEnabled?"],
 "super": "DisplayObject",
 is$InteractiveObject: true
};

$$.DisplayObjectContainer = {"":
 [],
 "super": "InteractiveObject",
 addChild$1: function(child) {
  var t1 = $.eqB(child.get$parent(), this);
  var t2 = this._children;
  if (t1) {
    $.removeRange(t2, $.indexOf$1(t2, child), 1);
    t2.push(child);
  } else
    this.addChildAt$2(child, t2.length);
  return child;
},
 addChildAt$2: function(child, index) {
  if ($.ltB(index, 0) && $.gtB(index, this._children.length))
    throw $.$$throw($.IllegalArgumentException$('Error #2006: The supplied index is out of bounds.'));
  if ($.eqB(child, this))
    throw $.$$throw($.IllegalArgumentException$('Error #2024: An object cannot be added as a child of itself.'));
  var t1 = $.eqB(child.get$parent(), this);
  var t2 = this._children;
  if (t1) {
    $.removeRange(t2, $.indexOf$1(t2, child), 1);
    if ($.gtB(index, t2.length))
      index = $.sub(index, 1);
    $.insertRange$3(t2, index, 1, child);
  } else {
    child.removeFromParent$0();
    child._setParent$1(this);
    $.insertRange$3(t2, index, 1, child);
    child.dispatchEvent$1($.Event$('added', true));
    if (!(this.get$stage() == null))
      this._dispatchEventOnChildren$2(child, $.Event$('addedToStage', false));
  }
  return child;
},
 removeChild$1: function(child) {
  var childIndex = $.indexOf$1(this._children, child);
  if ($.eqB(childIndex, -1))
    throw $.$$throw($.IllegalArgumentException$('Error #2025: The supplied DisplayObject must be a child of the caller.'));
  return this.removeChildAt$1(childIndex);
},
 removeChildAt$1: function(index) {
  if ($.ltB(index, 0) && $.geB(index, this._children.length))
    throw $.$$throw($.IllegalArgumentException$('Error #2006: The supplied index is out of bounds.'));
  var t1 = this._children;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  var child = t1[index];
  child.dispatchEvent$1($.Event$('removed', true));
  if (!(this.get$stage() == null))
    this._dispatchEventOnChildren$2(child, $.Event$('removedFromStage', false));
  child._setParent$1(null);
  $.removeRange(t1, index, 1);
  return child;
},
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  var t1 = this._children;
  var t2 = t1.length;
  if (t2 === 0)
    return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
  for (var t3 = this._tmpMatrix, left = (1/0), bottom = (-1/0), right = (-1/0), top$ = (1/0), i = 0; i < t2; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    t3.copyFromAndConcat$2(t1[i].get$_transformationMatrix(), matrix);
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var rectangle = t1[i].getBoundsTransformed$2(t3, returnRectangle);
    var t4 = rectangle.get$left();
    if (typeof t4 !== 'number')
      return this.getBoundsTransformed$2$bailout(1, matrix, t3, left, bottom, right, top$, i, returnRectangle, t2, rectangle, t1, t4);
    if (t4 < left) {
      left = rectangle.get$left();
      if (typeof left !== 'number')
        return this.getBoundsTransformed$2$bailout(2, matrix, t3, t2, left, bottom, right, top$, i, rectangle, t1, returnRectangle, 0);
    }
    t4 = rectangle.get$top();
    if (typeof t4 !== 'number')
      return this.getBoundsTransformed$2$bailout(3, matrix, t3, t2, bottom, right, left, top$, t4, i, returnRectangle, rectangle, t1);
    if (t4 < top$) {
      top$ = rectangle.get$top();
      if (typeof top$ !== 'number')
        return this.getBoundsTransformed$2$bailout(4, matrix, t3, t1, bottom, right, left, i, t2, rectangle, top$, returnRectangle, 0);
    }
    t4 = rectangle.get$right();
    if (typeof t4 !== 'number')
      return this.getBoundsTransformed$2$bailout(5, matrix, t3, t2, bottom, right, left, i, returnRectangle, top$, t4, rectangle, t1);
    if (t4 > right) {
      right = rectangle.get$right();
      if (typeof right !== 'number')
        return this.getBoundsTransformed$2$bailout(6, matrix, top$, t3, t2, bottom, left, right, i, rectangle, t1, returnRectangle, 0);
    }
    t4 = rectangle.get$bottom();
    if (typeof t4 !== 'number')
      return this.getBoundsTransformed$2$bailout(7, matrix, t3, t4, bottom, t2, left, i, returnRectangle, top$, right, t1, rectangle);
    if (t4 > bottom) {
      bottom = rectangle.get$bottom();
      if (typeof bottom !== 'number')
        return this.getBoundsTransformed$2$bailout(8, matrix, top$, bottom, t2, t3, left, i, right, t1, returnRectangle, 0, 0);
    }
  }
  returnRectangle.set$x(left);
  returnRectangle.set$y(top$);
  returnRectangle.set$width(right - left);
  returnRectangle.set$height(bottom - top$);
  return returnRectangle;
},
 getBoundsTransformed$2$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
  switch (state) {
    case 1:
      var matrix = env0;
      t2 = env1;
      left = env2;
      bottom = env3;
      right = env4;
      top$ = env5;
      i = env6;
      returnRectangle = env7;
      childrenLength = env8;
      rectangle = env9;
      t1 = env10;
      t3 = env11;
      break;
    case 2:
      matrix = env0;
      t2 = env1;
      childrenLength = env2;
      left = env3;
      bottom = env4;
      right = env5;
      top$ = env6;
      i = env7;
      rectangle = env8;
      t1 = env9;
      returnRectangle = env10;
      break;
    case 3:
      matrix = env0;
      t2 = env1;
      childrenLength = env2;
      bottom = env3;
      right = env4;
      left = env5;
      top$ = env6;
      t3 = env7;
      i = env8;
      returnRectangle = env9;
      rectangle = env10;
      t1 = env11;
      break;
    case 4:
      matrix = env0;
      t2 = env1;
      t1 = env2;
      bottom = env3;
      right = env4;
      left = env5;
      i = env6;
      childrenLength = env7;
      rectangle = env8;
      top$ = env9;
      returnRectangle = env10;
      break;
    case 5:
      matrix = env0;
      t2 = env1;
      childrenLength = env2;
      bottom = env3;
      right = env4;
      left = env5;
      i = env6;
      returnRectangle = env7;
      top$ = env8;
      t3 = env9;
      rectangle = env10;
      t1 = env11;
      break;
    case 6:
      matrix = env0;
      top$ = env1;
      t2 = env2;
      childrenLength = env3;
      bottom = env4;
      left = env5;
      right = env6;
      i = env7;
      rectangle = env8;
      t1 = env9;
      returnRectangle = env10;
      break;
    case 7:
      matrix = env0;
      t2 = env1;
      t3 = env2;
      bottom = env3;
      childrenLength = env4;
      left = env5;
      i = env6;
      returnRectangle = env7;
      top$ = env8;
      right = env9;
      t1 = env10;
      rectangle = env11;
      break;
    case 8:
      matrix = env0;
      top$ = env1;
      bottom = env2;
      childrenLength = env3;
      t2 = env4;
      left = env5;
      i = env6;
      right = env7;
      t1 = env8;
      returnRectangle = env9;
      break;
  }
  switch (state) {
    case 0:
      if (returnRectangle == null)
        var returnRectangle = $.Rectangle$zero();
      var t1 = this._children;
      if (t1.length === 0)
        return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
      var childrenLength = t1.length;
      var t2 = this._tmpMatrix;
      var left = (1/0);
      var bottom = (-1/0);
      var right = (-1/0);
      var top$ = (1/0);
      var i = 0;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(i < childrenLength))
                break L0;
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              t2.copyFromAndConcat$2(t1[i].get$_transformationMatrix(), matrix);
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              var rectangle = t1[i].getBoundsTransformed$2(t2, returnRectangle);
              var t3 = rectangle.get$left();
            case 1:
              state = 0;
            case 2:
              if (state === 2 || state === 0 && $.ltB(t3, left))
                switch (state) {
                  case 0:
                    left = rectangle.get$left();
                  case 2:
                    state = 0;
                }
              t3 = rectangle.get$top();
            case 3:
              state = 0;
            case 4:
              if (state === 4 || state === 0 && $.ltB(t3, top$))
                switch (state) {
                  case 0:
                    top$ = rectangle.get$top();
                  case 4:
                    state = 0;
                }
              t3 = rectangle.get$right();
            case 5:
              state = 0;
            case 6:
              if (state === 6 || state === 0 && $.gtB(t3, right))
                switch (state) {
                  case 0:
                    right = rectangle.get$right();
                  case 6:
                    state = 0;
                }
              t3 = rectangle.get$bottom();
            case 7:
              state = 0;
            case 8:
              if (state === 8 || state === 0 && $.gtB(t3, bottom))
                switch (state) {
                  case 0:
                    bottom = rectangle.get$bottom();
                  case 8:
                    state = 0;
                }
              ++i;
          }
      returnRectangle.set$x(left);
      returnRectangle.set$y(top$);
      returnRectangle.set$width($.sub(right, left));
      returnRectangle.set$height($.sub(bottom, top$));
      return returnRectangle;
  }
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  if (typeof localX !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  if (typeof localY !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  for (var t1 = this._children, i = t1.length - 1, t2 = this._mouseChildren, hit = null; i >= 0; --i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var child = t1[i];
    if (child.get$visible() === true) {
      var matrix = child.get$_transformationMatrix();
      var t3 = matrix.get$tx();
      if (typeof t3 !== 'number')
        return this.hitTestInput$2$bailout(2, t2, i, matrix, localX, localY, t3, t1, child, hit, 0, 0, 0);
      var deltaX = localX - t3;
      t3 = matrix.get$ty();
      if (typeof t3 !== 'number')
        return this.hitTestInput$2$bailout(3, t2, i, matrix, localX, deltaX, t3, localY, t1, child, hit, 0, 0);
      var deltaY = localY - t3;
      t3 = matrix.get$d();
      if (typeof t3 !== 'number')
        return this.hitTestInput$2$bailout(4, t2, i, matrix, localX, deltaX, deltaY, t3, t1, localY, child, hit, 0);
      t3 *= deltaX;
      var t7 = matrix.get$c();
      if (typeof t7 !== 'number')
        return this.hitTestInput$2$bailout(5, localX, matrix, localY, deltaX, deltaY, t1, t3, t7, hit, t2, i, child);
      t3 -= t7 * deltaY;
      var t9 = matrix.get$det();
      if (typeof t9 !== 'number')
        return this.hitTestInput$2$bailout(6, localX, matrix, localY, deltaX, deltaY, t1, hit, t2, i, t3, t9, child);
      var childX = t3 / t9;
      t9 = matrix.get$a();
      if (typeof t9 !== 'number')
        return this.hitTestInput$2$bailout(7, localX, matrix, localY, deltaX, deltaY, t1, hit, t2, i, childX, t9, child);
      t9 *= deltaY;
      var t11 = matrix.get$b();
      if (typeof t11 !== 'number')
        return this.hitTestInput$2$bailout(8, localX, matrix, localY, deltaX, t1, hit, t2, i, childX, t9, t11, child);
      t9 -= t11 * deltaX;
      var t13 = matrix.get$det();
      if (typeof t13 !== 'number')
        return this.hitTestInput$2$bailout(9, t2, i, childX, localX, localY, t1, t9, t13, child, hit, 0, 0);
      var displayObject = child.hitTestInput$2(childX, t9 / t13);
      if (!(displayObject == null)) {
        if (typeof displayObject === 'object' && displayObject !== null && !!displayObject.is$InteractiveObject)
          if (displayObject.mouseEnabled)
            return t2 ? displayObject : this;
        hit = this;
      }
    }
  }
  return hit;
},
 hitTestInput$2$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
  switch (state) {
    case 1:
      var localX = env0;
      var localY = env1;
      break;
    case 2:
      t2 = env0;
      i = env1;
      matrix = env2;
      localX = env3;
      localY = env4;
      t3 = env5;
      t1 = env6;
      child = env7;
      hit = env8;
      break;
    case 3:
      t2 = env0;
      i = env1;
      matrix = env2;
      localX = env3;
      deltaX = env4;
      t3 = env5;
      localY = env6;
      t1 = env7;
      child = env8;
      hit = env9;
      break;
    case 4:
      t2 = env0;
      i = env1;
      matrix = env2;
      localX = env3;
      deltaX = env4;
      deltaY = env5;
      t3 = env6;
      t1 = env7;
      localY = env8;
      child = env9;
      hit = env10;
      break;
    case 5:
      localX = env0;
      matrix = env1;
      localY = env2;
      deltaX = env3;
      deltaY = env4;
      t1 = env5;
      t3 = env6;
      t7 = env7;
      hit = env8;
      t2 = env9;
      i = env10;
      child = env11;
      break;
    case 6:
      localX = env0;
      matrix = env1;
      localY = env2;
      deltaX = env3;
      deltaY = env4;
      t1 = env5;
      hit = env6;
      t2 = env7;
      i = env8;
      t3 = env9;
      t9 = env10;
      child = env11;
      break;
    case 7:
      localX = env0;
      matrix = env1;
      localY = env2;
      deltaX = env3;
      deltaY = env4;
      t1 = env5;
      hit = env6;
      t2 = env7;
      i = env8;
      childX = env9;
      t9 = env10;
      child = env11;
      break;
    case 8:
      localX = env0;
      matrix = env1;
      localY = env2;
      deltaX = env3;
      t1 = env4;
      hit = env5;
      t2 = env6;
      i = env7;
      childX = env8;
      t9 = env9;
      t11 = env10;
      child = env11;
      break;
    case 9:
      t2 = env0;
      i = env1;
      childX = env2;
      localX = env3;
      localY = env4;
      t1 = env5;
      t9 = env6;
      t13 = env7;
      child = env8;
      hit = env9;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._children;
      var i = t1.length - 1;
      var t2 = this._mouseChildren === true;
      var hit = null;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(i >= 0))
                break L0;
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              var child = t1[i];
            default:
              if (state === 9 || state === 8 || state === 7 || state === 6 || state === 5 || state === 4 || state === 3 || state === 2 || state === 0 && child.get$visible() === true)
                switch (state) {
                  case 0:
                    var matrix = child.get$_transformationMatrix();
                    var t3 = matrix.get$tx();
                  case 2:
                    state = 0;
                    var deltaX = $.sub(localX, t3);
                    t3 = matrix.get$ty();
                  case 3:
                    state = 0;
                    var deltaY = $.sub(localY, t3);
                    t3 = matrix.get$d();
                  case 4:
                    state = 0;
                    t3 = $.mul(t3, deltaX);
                    var t7 = matrix.get$c();
                  case 5:
                    state = 0;
                    t3 = $.sub(t3, $.mul(t7, deltaY));
                    var t9 = matrix.get$det();
                  case 6:
                    state = 0;
                    var childX = $.div(t3, t9);
                    t9 = matrix.get$a();
                  case 7:
                    state = 0;
                    t9 = $.mul(t9, deltaY);
                    var t11 = matrix.get$b();
                  case 8:
                    state = 0;
                    t9 = $.sub(t9, $.mul(t11, deltaX));
                    var t13 = matrix.get$det();
                  case 9:
                    state = 0;
                    var displayObject = child.hitTestInput$2(childX, $.div(t9, t13));
                    if (!(displayObject == null)) {
                      if (typeof displayObject === 'object' && displayObject !== null && !!displayObject.is$InteractiveObject)
                        if (displayObject.mouseEnabled === true)
                          return t2 ? displayObject : this;
                      hit = this;
                    }
                }
              --i;
          }
      return hit;
  }
},
 render$1: function(renderState) {
  var t1 = this._children;
  var childrenLength = t1.length;
  for (var i = 0; i < childrenLength; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var child = t1[i];
    if (child.get$visible() === true)
      renderState.renderDisplayObject$1(child);
  }
},
 _dispatchEventOnChildren$2: function(displayObject, event$) {
  displayObject.dispatchEvent$1(event$);
  if (typeof displayObject === 'object' && displayObject !== null && !!displayObject.is$DisplayObjectContainer) {
    var children = $.ListImplementation_List$from(displayObject._children);
    var childrenLength = children.length;
    for (var i = 0; i < childrenLength; ++i) {
      if (i < 0 || i >= children.length)
        throw $.ioore(i);
      this._dispatchEventOnChildren$2(children[i], event$);
    }
  }
},
 DisplayObjectContainer$0: function() {
  this._children = $.ListImplementation_List(null);
},
 is$DisplayObjectContainer: true
};

$$.Stage = {"":
 ["_canvas", "_context", "_focus", "_renderState", "_renderMode", "_mouseCursor", "_buttonState", "_clickTarget", "_clickTime", "_clickCount", "_mouseDownEventTypes", "_mouseUpEventTypes", "_mouseClickEventTypes", "_mouseDoubleClickEventTypes", "_mouseOverTarget", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "DisplayObjectContainer",
 get$focus: function() {
  return this._focus;
},
 focus$0: function() { return this.get$focus().call$0(); },
 _throwStageException$0: function() {
  throw $.$$throw($.ExceptionImplementation$('Error #2071: The Stage class does not implement this property or method.'));
},
 set$scaleX: function(value) {
  this._throwStageException$0();
},
 set$scaleY: function(value) {
  this._throwStageException$0();
},
 set$width: function(value) {
  this._throwStageException$0();
},
 set$height: function(value) {
  this._throwStageException$0();
},
 materialize$0: function() {
  if (this._renderMode === 'auto' || this._renderMode === 'once') {
    var t1 = this._renderState;
    t1.reset$0();
    this.render$1(t1);
    if (this._renderMode === 'once')
      this._renderMode = 'stop';
  }
},
 _onMouseCursorChanged$1: function(event$) {
  var t1 = $.Mouse__getCssStyle(this._mouseCursor);
  this._canvas.get$style().set$cursor(t1);
},
 get$_onMouseCursorChanged: function() { return new $.BoundClosure(this, '_onMouseCursorChanged$1'); },
 _onMouseEvent$1: function(event$) {
  event$.preventDefault$0();
  var time = $.Date_Date$now().get$millisecondsSinceEpoch();
  var button = event$.get$button();
  if ($.ltB(button, 0) || $.gtB(button, 2))
    return;
  var stagePoint = $.Point$(event$.get$offsetX(), event$.get$offsetY());
  var target = !$.eqB(event$.get$type(), 'mouseout') ? $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), 'is$InteractiveObject') : null;
  if (typeof target === 'object' && target !== null && !!target.is$Sprite)
    var mouseCursor = target.useHandCursor === true ? 'button' : 'arrow';
  else
    mouseCursor = 'arrow';
  if (typeof target === 'object' && target !== null && !!target.is$SimpleButton)
    if (target.useHandCursor === true)
      mouseCursor = 'button';
  if (!(this._mouseCursor === mouseCursor)) {
    this._mouseCursor = mouseCursor;
    var t1 = $.Mouse__getCssStyle(mouseCursor);
    this._canvas.get$style().set$cursor(t1);
  }
  t1 = this._mouseOverTarget;
  if (!(t1 == null) && !$.eqB(t1, target)) {
    var localPoint = !(this._mouseOverTarget.get$stage() == null) ? this._mouseOverTarget.globalToLocal$1(stagePoint) : $.Point$zero();
    var mouseEvent = $.MouseEvent$('mouseOut', true);
    mouseEvent._localX = localPoint.get$x();
    mouseEvent._localY = localPoint.get$y();
    mouseEvent._stageX = stagePoint.x;
    mouseEvent._stageY = stagePoint.y;
    t1 = this._buttonState;
    if (button !== (button | 0))
      throw $.iae(button);
    if (button < 0 || button >= t1.length)
      throw $.ioore(button);
    mouseEvent._buttonDown = t1[button];
    this._mouseOverTarget.dispatchEvent$1(mouseEvent);
    this._mouseOverTarget = null;
  }
  t1 = !(target == null);
  if (t1 && !$.eqB(target, this._mouseOverTarget)) {
    localPoint = target.globalToLocal$1(stagePoint);
    mouseEvent = $.MouseEvent$('mouseOver', true);
    mouseEvent._localX = localPoint.get$x();
    mouseEvent._localY = localPoint.get$y();
    mouseEvent._stageX = stagePoint.x;
    mouseEvent._stageY = stagePoint.y;
    var t2 = this._buttonState;
    if (button !== (button | 0))
      throw $.iae(button);
    if (button < 0 || button >= t2.length)
      throw $.ioore(button);
    mouseEvent._buttonDown = t2[button];
    this._mouseOverTarget = target;
    this._mouseOverTarget.dispatchEvent$1(mouseEvent);
  }
  t2 = this._clickCount;
  if (button !== (button | 0))
    throw $.iae(button);
  if (button < 0 || button >= t2.length)
    throw $.ioore(button);
  var clickCount = t2[button];
  if ($.eqB(event$.get$type(), 'mousedown')) {
    var t3 = this._mouseDownEventTypes;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    var mouseEventType = t3[button];
    t3 = this._buttonState;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    t3[button] = true;
    t3 = this._clickTarget;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    if ($.eqB(target, t3[button])) {
      var t4 = this._clickTime;
      if (button < 0 || button >= t4.length)
        throw $.ioore(button);
      var t5 = $.gtB(time, $.add(t4[button], 500));
      t4 = t5;
    } else
      t4 = true;
    if (t4)
      clickCount = 0;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    t3[button] = target;
    t3 = this._clickTime;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    t3[button] = time;
    clickCount = $.add(clickCount, 1);
    if (button < 0 || button >= t2.length)
      throw $.ioore(button);
    t2[button] = clickCount;
  } else
    mouseEventType = null;
  if ($.eqB(event$.get$type(), 'mouseup')) {
    t3 = this._mouseUpEventTypes;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    mouseEventType = t3[button];
    t3 = this._buttonState;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    t3[button] = false;
    t3 = this._clickTarget;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    var isClick = $.eq(t3[button], target);
    if (isClick === true) {
      if (button < 0 || button >= t2.length)
        throw $.ioore(button);
      if ($.isEven(t2[button]) === true) {
        t2 = this._clickTime;
        if (button < 0 || button >= t2.length)
          throw $.ioore(button);
        t3 = $.ltB(time, $.add(t2[button], 500));
        var isDoubleClick = t3;
      } else
        isDoubleClick = false;
    } else
      isDoubleClick = false;
  } else {
    isDoubleClick = false;
    isClick = false;
  }
  if ($.eqB(event$.get$type(), 'mousemove')) {
    mouseEventType = 'mouseMove';
    clickCount = 0;
  }
  if (!(mouseEventType == null) && t1) {
    localPoint = target.globalToLocal$1(stagePoint);
    mouseEvent = $.MouseEvent$(mouseEventType, true);
    mouseEvent._localX = localPoint.get$x();
    mouseEvent._localY = localPoint.get$y();
    t1 = stagePoint.x;
    mouseEvent._stageX = t1;
    t2 = stagePoint.y;
    mouseEvent._stageY = t2;
    t3 = this._buttonState;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    mouseEvent._buttonDown = t3[button];
    mouseEvent._clickCount = clickCount;
    target.dispatchEvent$1(mouseEvent);
    if (isClick === true) {
      isDoubleClick = isDoubleClick && target.get$doubleClickEnabled() === true;
      if (isDoubleClick) {
        t4 = this._mouseDoubleClickEventTypes;
        if (button < 0 || button >= t4.length)
          throw $.ioore(button);
        mouseEventType = t4[button];
      } else {
        t4 = this._mouseClickEventTypes;
        if (button < 0 || button >= t4.length)
          throw $.ioore(button);
        mouseEventType = t4[button];
      }
      mouseEvent = $.MouseEvent$(mouseEventType, true);
      mouseEvent._localX = localPoint.get$x();
      mouseEvent._localY = localPoint.get$y();
      mouseEvent._stageX = t1;
      mouseEvent._stageY = t2;
      if (button < 0 || button >= t3.length)
        throw $.ioore(button);
      mouseEvent._buttonDown = t3[button];
      target.dispatchEvent$1(mouseEvent);
    }
  }
},
 get$_onMouseEvent: function() { return new $.BoundClosure(this, '_onMouseEvent$1'); },
 _onMouseWheel$1: function(event$) {
  var target = this.hitTestInput$2(event$.get$offsetX(), event$.get$offsetY());
  if (!(target == null)) {
    var stagePoint = $.Point$(event$.get$offsetX(), event$.get$offsetY());
    var localPoint = target.globalToLocal$1(stagePoint);
    var mouseEvent = $.MouseEvent$('mouseWheel', true);
    mouseEvent._localX = localPoint.get$x();
    mouseEvent._localY = localPoint.get$y();
    mouseEvent._stageX = stagePoint.x;
    mouseEvent._stageY = stagePoint.y;
    mouseEvent._delta = event$.get$wheelDelta();
    target.dispatchEvent$1(mouseEvent);
  }
},
 get$_onMouseWheel: function() { return new $.BoundClosure(this, '_onMouseWheel$1'); },
 _onKeyEvent$1: function(event$) {
  event$.preventDefault$0();
  var keyboardEventType = $.eqB(event$.get$type(), 'keyup') ? 'keyUp' : null;
  if ($.eqB(event$.get$type(), 'keydown'))
    keyboardEventType = 'keyDown';
  var keyboardEvent = $.KeyboardEvent$(keyboardEventType, true);
  keyboardEvent._altKey = event$.get$altKey();
  keyboardEvent._ctrlKey = event$.get$ctrlKey();
  keyboardEvent._shiftKey = event$.get$shiftKey();
  keyboardEvent._charCode = event$.get$charCode();
  keyboardEvent._keyCode = event$.get$keyCode();
  keyboardEvent._keyLocation = 0;
  if ($.eqB(event$.get$keyLocation(), 1))
    keyboardEvent._keyLocation = 1;
  if ($.eqB(event$.get$keyLocation(), 2))
    keyboardEvent._keyLocation = 2;
  if ($.eqB(event$.get$keyLocation(), 3))
    keyboardEvent._keyLocation = 3;
  if ($.eqB(event$.get$keyLocation(), 5))
    keyboardEvent._keyLocation = 4;
  if ($.eqB(event$.get$keyLocation(), 4))
    keyboardEvent._keyLocation = 4;
  var t1 = this._focus;
  if (!(t1 == null))
    t1.dispatchEvent$1(keyboardEvent);
},
 get$_onKeyEvent: function() { return new $.BoundClosure(this, '_onKeyEvent$1'); },
 _onTextEvent$1: function(event$) {
  var charCode = !$.eqB(event$.get$charCode(), 0) ? event$.get$charCode() : event$.get$keyCode();
  var textEvent = $.TextEvent$('textInput', true);
  textEvent._text = $.StringImplementation_String$fromCharCodes([charCode]);
  var t1 = this._focus;
  if (!(t1 == null))
    t1.dispatchEvent$1(textEvent);
},
 get$_onTextEvent: function() { return new $.BoundClosure(this, '_onTextEvent$1'); },
 Stage$2: function(name$, canvas) {
  this._name = name$;
  this._canvas = canvas;
  var t1 = this._canvas;
  t1.get$style().set$outline('none');
  t1.focus$0();
  this._context = canvas.get$context2d();
  this._renderState = $.RenderState$fromCanvasRenderingContext2D(this._context);
  this._renderMode = 'auto';
  this._mouseCursor = 'arrow';
  this._buttonState = [false, false, false];
  this._clickTarget = [null, null, null];
  this._clickTime = [0, 0, 0];
  this._clickCount = [0, 0, 0];
  this._mouseDownEventTypes = ['mouseDown', 'middleMouseDown', 'rightMouseDown'];
  this._mouseUpEventTypes = ['mouseUp', 'middleMouseUp', 'rightMouseUp'];
  this._mouseClickEventTypes = ['click', 'middleClick', 'rightClick'];
  this._mouseDoubleClickEventTypes = ['doubleClick', 'middleClick', 'rightClick'];
  this._mouseOverTarget = null;
  $.add$1(t1.get$on().get$mouseDown(), this.get$_onMouseEvent());
  $.add$1(t1.get$on().get$mouseUp(), this.get$_onMouseEvent());
  $.add$1(t1.get$on().get$mouseMove(), this.get$_onMouseEvent());
  $.add$1(t1.get$on().get$mouseOut(), this.get$_onMouseEvent());
  $.add$1(t1.get$on().get$mouseWheel(), this.get$_onMouseWheel());
  $.add$1(t1.get$on().get$keyDown(), this.get$_onKeyEvent());
  $.add$1(t1.get$on().get$keyUp(), this.get$_onKeyEvent());
  $.add$1(t1.get$on().get$keyPress(), this.get$_onTextEvent());
  $.Mouse__eventDispatcher().addEventListener$2('mouseCursorChanged', this.get$_onMouseCursorChanged());
},
 is$Stage: true
};

$$.TextField = {"":
 ["_text", "_textColor", "_defaultTextFormat", "_autoSize", "_gridFitType", "_type", "_wordWrap", "_background", "_backgroundColor", "_border", "_borderColor", "_textWidth", "_textHeight", "_linesText", "_linesMetrics", "_canvasRefreshPending", "_canvasWidth", "_canvasHeight", "_canvas", "_context", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "InteractiveObject",
 get$type: function() {
  return this._type;
},
 get$width: function() {
  return this._canvasWidth;
},
 get$height: function() {
  return this._canvasHeight;
},
 set$text: function(value) {
  this._text = value;
  this._canvasRefreshPending = true;
},
 set$defaultTextFormat: function(value) {
  this._defaultTextFormat = value;
  this._textColor = this._defaultTextFormat.get$color();
  this._canvasRefreshPending = true;
},
 set$width: function(value) {
  this._canvasWidth = value;
  this._canvasRefreshPending = true;
},
 set$height: function(value) {
  this._canvasHeight = value;
  this._canvasRefreshPending = true;
},
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  return $._getBoundsTransformedHelper(matrix, this._canvasWidth, this._canvasHeight, returnRectangle);
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  if (typeof localX !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0);
  if (typeof localY !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0);
  if (localX >= 0)
    if (localY >= 0) {
      var t1 = this._canvasWidth;
      if (typeof t1 !== 'number')
        return this.hitTestInput$2$bailout(2, localX, localY, t1);
      if (localX < t1) {
        t1 = this._canvasHeight;
        if (typeof t1 !== 'number')
          return this.hitTestInput$2$bailout(3, localY, t1, 0);
        t1 = localY < t1;
      } else
        t1 = false;
    } else
      t1 = false;
  else
    t1 = false;
  if (t1)
    return this;
  return;
},
 hitTestInput$2$bailout: function(state, env0, env1, env2) {
  switch (state) {
    case 1:
      var localX = env0;
      var localY = env1;
      break;
    case 2:
      localX = env0;
      localY = env1;
      t1 = env2;
      break;
    case 3:
      localY = env0;
      t1 = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    default:
      if (state === 3 || state === 2 || state === 0 && $.geB(localX, 0))
        switch (state) {
          case 0:
          default:
            if (state === 3 || state === 2 || state === 0 && $.geB(localY, 0))
              switch (state) {
                case 0:
                  var t1 = this._canvasWidth;
                case 2:
                  state = 0;
                case 3:
                  if (state === 3 || state === 0 && $.ltB(localX, t1))
                    switch (state) {
                      case 0:
                        t1 = this._canvasHeight;
                      case 3:
                        state = 0;
                        t1 = $.ltB(localY, t1);
                    }
                  else
                    t1 = false;
              }
            else
              t1 = false;
        }
      else
        t1 = false;
      if (t1)
        return this;
      return;
  }
},
 render$1: function(renderState) {
  this._canvasRefresh$0();
  renderState._context.drawImage$3(this._canvas, 0, 0);
},
 _processTextLines$0: function() {
  var t1 = this._linesText;
  $.clear(t1);
  var t2 = this._linesMetrics;
  $.clear(t2);
  if (this._wordWrap === false)
    t1.push(this._text);
  else {
    var lineBuffer = $.StringBuffer_StringBuffer('');
    for (var t3 = $.iterator($.split(this._text, ' ')), line = null, previousLength = null; t3.hasNext$0() === true;) {
      var word = t3.next$0();
      previousLength = $.get$length(lineBuffer);
      $.add$1(lineBuffer, $.gtB(previousLength, 0) ? ' ' + $.S(word) : word);
      line = $.toString(lineBuffer);
      if ($.gtB(this._context.measureText$1(line).get$width(), this._canvasWidth)) {
        if ($.gtB(previousLength, 0))
          line = $.substring$2(line, 0, previousLength);
        else
          word = '';
        t1.push(line);
        $.clear(lineBuffer);
        $.add$1(lineBuffer, word);
      }
    }
    if ($.eqB($.isEmpty(lineBuffer), false))
      t1.push($.toString(lineBuffer));
  }
  this._textWidth = 0;
  this._textHeight = 0;
  for (t1 = $.iterator(t1); t1.hasNext$0() === true;) {
    t3 = t1.next$0();
    var metrics = this._context.measureText$1(t3);
    var offsetX = $.eqB(this._defaultTextFormat.get$align(), 'center') || $.eqB(this._defaultTextFormat.get$align(), 'justify') ? $.div($.sub(this._canvasWidth, metrics.get$width()), 2) : 0;
    if ($.eqB(this._defaultTextFormat.get$align(), 'right') || $.eqB(this._defaultTextFormat.get$align(), 'end'))
      offsetX = $.sub(this._canvasWidth, metrics.get$width());
    var textLineMetrics = $.TextLineMetrics$(offsetX, metrics.get$width(), this._defaultTextFormat.get$size(), 0, 0, 0);
    t2.push(textLineMetrics);
    this._textWidth = $.max(this._textWidth, textLineMetrics.width);
    this._textHeight = $.add(this._textHeight, textLineMetrics.height);
  }
},
 _canvasRefresh$0: function() {
  if (this._canvasRefreshPending === true) {
    this._canvasRefreshPending = false;
    var canvasWidthInt = $.toInt($.ceil(this._canvasWidth));
    var canvasHeightInt = $.toInt($.ceil(this._canvasHeight));
    if (this._canvas == null) {
      this._canvas = $.CanvasElement_CanvasElement(canvasWidthInt, canvasHeightInt);
      this._context = this._canvas.get$context2d();
    }
    if (!$.eqB(this._canvas.get$width(), canvasWidthInt))
      this._canvas.set$width(canvasWidthInt);
    if (!$.eqB(this._canvas.get$height(), canvasHeightInt))
      this._canvas.set$height(canvasHeightInt);
    var fontStyle = $.StringBuffer_StringBuffer('');
    $.add$1(fontStyle, this._defaultTextFormat.get$italic() === true ? 'italic ' : 'normal ');
    $.add$1(fontStyle, 'normal ');
    $.add$1(fontStyle, this._defaultTextFormat.get$bold() === true ? 'bold ' : 'normal ');
    $.add$1(fontStyle, $.S(this._defaultTextFormat.get$size()) + 'px ');
    $.add$1(fontStyle, $.S(this._defaultTextFormat.get$font()) + ',sans-serif');
    var t1 = $.toString(fontStyle);
    this._context.set$font(t1);
    this._context.set$textAlign('start');
    this._context.set$textBaseline('top');
    t1 = $._color2rgb(this._textColor);
    this._context.set$fillStyle(t1);
    this._processTextLines$0();
    if (this._background === true) {
      t1 = $._color2rgb(this._backgroundColor);
      this._context.set$fillStyle(t1);
      this._context.fillRect$4(0, 0, this._canvasWidth, this._canvasHeight);
    } else
      this._context.clearRect$4(0, 0, this._canvasWidth, this._canvasHeight);
    for (var t1 = this._linesText, t2 = this._linesMetrics, offsetY = 0, i = 0; i < t1.length; ++i) {
      if (i < 0 || i >= t2.length)
        throw $.ioore(i);
      var metrics = t2[i];
      var t3 = $._color2rgb(this._textColor);
      this._context.set$fillStyle(t3);
      t3 = this._context;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      t3.fillText$3(t1[i], metrics.get$x(), offsetY);
      t3 = metrics.get$height();
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      offsetY += t3;
    }
    if (this._border === true) {
      t1 = $._color2rgb(this._borderColor);
      this._context.set$strokeStyle(t1);
      this._context.set$lineWidth(1);
      this._context.strokeRect$4(0, 0, this._canvasWidth, this._canvasHeight);
    }
  }
},
 TextField$0: function() {
  this._defaultTextFormat = $.TextFormat$('Arial', 12, 0, false, false, false, 'left', 0, 0, 0, 0);
  this._linesText = $.ListImplementation_List(null);
  this._linesMetrics = $.ListImplementation_List(null);
}
};

$$.TextFormat = {"":
 ["font=", "size?", "color?", "bold?", "italic?", "underline", "align?", "leftMargin", "rightMargin", "indent", "leading", "letterSpacing", "blockIndent", "bullet", "kerning"],
 "super": "Object"
};

$$.TextLineMetrics = {"":
 ["ascent", "descent", "height=", "leading", "width=", "x?"],
 "super": "Object"
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"":
 ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t1.push(value);
  this.copies_3.push(null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"":
 ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  var t1 = this.copies_4;
  if (i !== (i | 0))
    throw $.iae(i);
  if (i < 0 || i >= t1.length)
    throw $.ioore(i);
  return t1[i];
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"":
 ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  var t1 = this.copies_5;
  if (i !== (i | 0))
    throw $.iae(i);
  if (i < 0 || i >= t1.length)
    throw $.ioore(i);
  t1[i] = x;
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"":
 [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"":
 ["findSlot_8", "readSlot_7", "writeSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.CTC2);
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.CTC3);
  if (typeof e === 'object' && e !== null && e.is$_FileImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$File())
    throw $.$$throw($.CTC4);
  if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    throw $.$$throw($.CTC5);
  if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$FileList())
    throw $.$$throw($.CTC6);
  if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    throw $.$$throw($.CTC6);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    throw $.$$throw($.CTC7);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    throw $.$$throw($.CTC8);
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    var slot = this.findSlot_8.call$1(e);
    t1.copy_1 = this.readSlot_7.call$1(slot);
    var t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_6.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e, 0, 0, 0, 0, 0, 0);
    var length$ = e.length;
    slot = this.findSlot_8.call$1(e);
    t2 = this.readSlot_7;
    var copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_6.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    var t3 = this.writeSlot_6;
    if (t1) {
      t3.call$2(slot, true);
      for (var i = 0; i < length$; ++i) {
        if (i < 0 || i >= e.length)
          throw $.ioore(i);
        var element = e[i];
        var elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, copy, elementCopy, t3, e, length$, i, slot);
          for (var j = 0; j < i; ++j) {
            if (j < 0 || j >= e.length)
              throw $.ioore(j);
            t1 = e[j];
            if (j < 0 || j >= copy.length)
              throw $.ioore(j);
            copy[j] = t1;
          }
          if (i < 0 || i >= copy.length)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, i, copy, e, length$, 0, 0, 0);
    for (; i < length$; ++i) {
      if (i < 0 || i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i < 0 || i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.CTC9);
},
 call$1$bailout: function(state, env0, env1, env2, env3, env4, env5, env6) {
  switch (state) {
    case 1:
      var e = env0;
      break;
    case 2:
      copy = env0;
      elementCopy = env1;
      t3 = env2;
      e = env3;
      length$ = env4;
      i = env5;
      slot = env6;
      break;
    case 3:
      i = env0;
      copy = env1;
      e = env2;
      length$ = env3;
      break;
  }
  switch (state) {
    case 0:
      var t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.CTC2);
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.CTC3);
      if (typeof e === 'object' && e !== null && e.is$_FileImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$File())
        throw $.$$throw($.CTC4);
      if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        throw $.$$throw($.CTC5);
      if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$FileList())
        throw $.$$throw($.CTC6);
      if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        throw $.$$throw($.CTC6);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        throw $.$$throw($.CTC7);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        throw $.$$throw($.CTC8);
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        var slot = this.findSlot_8.call$1(e);
        t1.copy_1 = this.readSlot_7.call$1(slot);
        var t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_6.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      if (state === 3 || state === 2 || state === 1 || state === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state) {
          case 0:
          case 1:
            state = 0;
            var length$ = $.get$length(e);
            slot = this.findSlot_8.call$1(e);
            t2 = this.readSlot_7;
            var copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_6.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            var t3 = this.writeSlot_6;
          case 2:
            if (state === 2 || state === 0 && t1)
              switch (state) {
                case 0:
                  t3.call$2(slot, true);
                  var i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          var element = $.index(e, i);
                          var elementCopy = this.call$1(element);
                        case 2:
                          if (state === 2 || state === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state = 0;
                                for (var j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.CTC9);
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"":
 ["walk_9", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.Maps__emitMap_anon = {"":
 ["result_3", "box_0", "visiting_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_3, ', ');
  t1.first_1 = false;
  t1 = this.result_3;
  var t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$.invokeClosure_anon = {"":
 ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":
 ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":
 ["closure_5", "arg1_4", "arg2_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_5.call$2(this.arg1_4, this.arg2_3);
}
};

$$.DateImplementation_toString_fourDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  var absN = $.abs(n);
  var sign = $.ltB(n, 0) ? '-' : '';
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + '0' + $.S(absN);
  if ($.geB(absN, 10))
    return sign + '00' + $.S(absN);
  return sign + '000' + $.S(absN);
}
};

$$.DateImplementation_toString_threeDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return '0' + $.S(n);
  return '00' + $.S(n);
}
};

$$.DateImplementation_toString_twoDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return '0' + $.S(n);
}
};

$$.Closure = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.BoundClosure = {'':
 ['self', 'target'],
 'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$._AudioContextEventsImpl$ = function(_ptr) {
  return new $._AudioContextEventsImpl(_ptr);
};

$.floor = function(receiver) {
  return Math.floor(receiver);
};

$.isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.isEmpty$0();
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.Collections__containsRef = function(c, ref) {
  for (var t1 = $.iterator(c); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.Rectangle$zero = function() {
  return new $.Rectangle(0, 0, 0, 0);
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.indexSet$slow = function(a, index, value) {
  if ($.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.IllegalArgumentException$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.HashMapImplementation__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string'))
    return receiver.allMatches$1(str);
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.CanvasElement_CanvasElement = function(width, height) {
  var t1 = $ === width;
  if (t1)
    width = null;
  var t2 = $ === height;
  if (t2)
    height = null;
  if (t1)
    return $._Elements_createCanvasElement(null, null);
  if (t2)
    return $._Elements_createCanvasElement(width, null);
  return $._Elements_createCanvasElement(width, height);
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.TextLineMetrics$ = function(x, width, height, ascent, descent, leading) {
  return new $.TextLineMetrics(ascent, descent, height, leading, width, x);
};

$.DateImplementation$now = function() {
  var t1 = new $.DateImplementation($.Primitives_dateNow(), false);
  t1.DateImplementation$now$0();
  return t1;
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.CastExceptionImplementation$ = function(actualType, expectedType) {
  return new $.CastExceptionImplementation(actualType, expectedType);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$._EventListener$ = function(listener, useCapture) {
  return new $._EventListener(listener, useCapture);
};

$.Point$zero = function() {
  return new $.Point(0, 0);
};

$.TextFormat$ = function(font, size, color, bold, italic, underline, align, leftMargin, rightMargin, indent, leading) {
  return new $.TextFormat(font, size, color, bold, italic, underline, align, leftMargin, rightMargin, indent, leading, 0, 0, false, false);
};

$.constructorNameFallback = function(object) {
  if (object == null)
    return 'Null';
  var constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    var name$ = constructor$.name;
    if (typeof name$ === 'string')
      var t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  var string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.IllegalArgumentException$(b));
  }
  throw $.$$throw($.IllegalArgumentException$(a));
};

$.Mouse__eventDispatcher = function() {
  if ($.Mouse___eventDispatcher == null)
    $.Mouse___eventDispatcher = $.EventDispatcher$();
  return $.Mouse___eventDispatcher;
};

$.JSSyntaxRegExp$ = function(pattern, multiLine, ignoreCase) {
  return new $.JSSyntaxRegExp(ignoreCase, multiLine, pattern);
};

$._IDBOpenDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBOpenDBRequestEventsImpl(_ptr);
};

$.removeRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.removeRange$2(start, length$);
  $.checkGrowable(receiver, 'removeRange');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.IllegalArgumentException$(start));
  if (length$ < 0)
    throw $.$$throw($.IllegalArgumentException$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  var t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.set$length(receiver, t2);
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.MouseEvent$ = function(type, bubbles) {
  var t1 = new $.MouseEvent(0, 0, 0, 0, false, false, false, false, false, 0, 0, false, null, null, null, null, null, null, false, false);
  t1.Event$2(type, bubbles);
  return t1;
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.IllegalArgumentException$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  if (from === '')
    if (receiver === '')
      return to;
    else {
      var result = $.StringBuffer_StringBuffer('');
      var length$ = receiver.length;
      $.add$1(result, to);
      for (var i = 0; i < length$; ++i) {
        if (i < 0 || i >= length$)
          throw $.ioore(i);
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC15, true), "\\$&"), false, false), true), to);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$2(startIndex, endIndex);
  $.checkNum(startIndex);
  var length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.IndexOutOfRangeException$(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.indexSet = function(a, index, value) {
  if (a.constructor === Array && !a.immutable$list) {
    var key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$.ExceptionImplementation$ = function(message) {
  return new $.ExceptionImplementation(message);
};

$.StringMatch$ = function(_start, str, pattern) {
  return new $.StringMatch(_start, str, pattern);
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(closure, arg1, arg2).call$0();
  else
    throw $.$$throw($.ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.StringImplementation_String$fromCharCodes = function(charCodes) {
  return $.StringImplementation__fromCharCodes(charCodes);
};

$._DOMApplicationCacheEventsImpl$ = function(_ptr) {
  return new $._DOMApplicationCacheEventsImpl(_ptr);
};

$.buildDynamicMetadata = function(inputTable) {
  var result = [];
  for (var i = 0; i < inputTable.length; ++i) {
    var tag = inputTable[i][0];
    var array = inputTable[i];
    var tags = array[1];
    var set = {};
    var tagNames = tags.split('|');
    for (var j = 0, index = 1; j < tagNames.length; ++j) {
      $.propertySet(set, tagNames[j], true);
      index = j;
      array = tagNames;
    }
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$._getBoundsTransformedHelper = function(matrix, width, height, returnRectangle) {
  var x2 = $.mul(width, matrix.get$a());
  var y2 = $.mul(width, matrix.get$b());
  var x3 = $.add($.mul(width, matrix.get$a()), $.mul(height, matrix.get$c()));
  var y3 = $.add($.mul(width, matrix.get$b()), $.mul(height, matrix.get$d()));
  var x4 = $.mul(height, matrix.get$c());
  var y4 = $.mul(height, matrix.get$d());
  var left = $.gtB(0, x2) ? x2 : 0;
  if ($.gtB(left, x3))
    left = x3;
  if ($.gtB(left, x4))
    left = x4;
  var top$ = $.gtB(0, y2) ? y2 : 0;
  if ($.gtB(top$, y3))
    top$ = y3;
  if ($.gtB(top$, y4))
    top$ = y4;
  var right = $.ltB(0, x2) ? x2 : 0;
  if ($.ltB(right, x3))
    right = x3;
  if ($.ltB(right, x4))
    right = x4;
  var bottom = $.ltB(0, y2) ? y2 : 0;
  if ($.ltB(bottom, y3))
    bottom = y3;
  if ($.ltB(bottom, y4))
    bottom = y4;
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  returnRectangle.set$x($.add(matrix.get$tx(), left));
  returnRectangle.set$y($.add(matrix.get$ty(), top$));
  returnRectangle.set$width($.sub(right, left));
  returnRectangle.set$height($.sub(bottom, top$));
  return returnRectangle;
};

$._EventSourceEventsImpl$ = function(_ptr) {
  return new $._EventSourceEventsImpl(_ptr);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.contains$1 = function(receiver, other) {
  return $.contains$2(receiver, other, 0);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$._NotificationEventsImpl$ = function(_ptr) {
  return new $._NotificationEventsImpl(_ptr);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$.propertySet = function(object, property, value) {
  object[property] = value;
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.Collections__emitCollection = function(c, result, visiting) {
  $.add$1(visiting, c);
  var isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (var t1 = $.iterator(c), first = true; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
    first = false;
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$._EventDispatcherCatalog_addEventDispatcher = function(eventType, eventDispatcher) {
  if (!(eventType === 'enterFrame'))
    return;
  if ($._EventDispatcherCatalog__eventDispatcherMap == null)
    $._EventDispatcherCatalog__eventDispatcherMap = $.HashMapImplementation$();
  var eventDispatchers = $.index($._EventDispatcherCatalog__eventDispatcherMap, eventType);
  if (eventDispatchers == null) {
    var t1 = $._EventDispatcherCatalog__eventDispatcherMap;
    eventDispatchers = $.ListImplementation_List(null);
    $.indexSet(t1, eventType, eventDispatchers);
  }
  $.add$1(eventDispatchers, eventDispatcher);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$._PeerConnection00EventsImpl$ = function(_ptr) {
  return new $._PeerConnection00EventsImpl(_ptr);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var re = $.JSSyntaxRegExp$(other.get$pattern(), other.get$multiLine(), other.get$ignoreCase());
  $.regExpAttachGlobalNative(re);
  return re;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$._WorkerContextEventsImpl$ = function(_ptr) {
  return new $._WorkerContextEventsImpl(_ptr);
};

$.$$throw = function(ex) {
  if (ex == null)
    ex = $.CTC;
  var jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$._DocumentEventsImpl$ = function(_ptr) {
  return new $._DocumentEventsImpl(_ptr);
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCDate() : $.Primitives_lazyAsJsDate(receiver).getDate();
};

$._EventsImpl$ = function(_ptr) {
  return new $._EventsImpl(_ptr);
};

$._IDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBRequestEventsImpl(_ptr);
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$.stringSplitUnchecked = function(receiver, pattern) {
  return receiver.split(pattern);
};

$._SpeechRecognitionEventsImpl$ = function(_ptr) {
  return new $._SpeechRecognitionEventsImpl(_ptr);
};

$._MediaStreamTrackEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackEventsImpl(_ptr);
};

$._SVGElementInstanceEventsImpl$ = function(_ptr) {
  return new $._SVGElementInstanceEventsImpl(_ptr);
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result === null)
    return;
  return result;
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMinutes() : $.Primitives_lazyAsJsDate(receiver).getMinutes();
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string')
    return !($.indexOf$2(receiver, other, startIndex) === -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).hasNext$0();
};

$.ObjectNotClosureException$ = function() {
  return new $.ObjectNotClosureException();
};

$.window = function() {
return window;
};

$.Mouse__getCssStyle = function(mouseCursor) {
  var cursor = !$.eqB($.Mouse__customCursor, 'auto') ? $.Mouse__customCursor : mouseCursor;
  var style = 'auto';
  switch (cursor) {
    case 'auto':
      style = 'auto';
      break;
    case 'arrow':
      style = 'default';
      break;
    case 'button':
      style = 'pointer';
      break;
    case 'hand':
      style = 'move';
      break;
    case 'ibeam':
      style = 'text';
      break;
    case 'wait':
      style = 'wait';
      break;
  }
  return $.Mouse__isCursorHidden === true ? 'none' : style;
};

$._MatchImplementation$ = function(pattern, str, _start, _end, _groups) {
  return new $._MatchImplementation(pattern, str, _start, _end, _groups);
};

$.contains = function(userAgent, name$) {
  return !(userAgent.indexOf(name$) === -1);
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.Primitives_objectTypeName = function(object) {
  var name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    var decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.isNegative = function(receiver) {
  return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
};

$._DOMWindowCrossFrameImpl$ = function(_window) {
  return new $._DOMWindowCrossFrameImpl(_window);
};

$.regExpMakeNative = function(regExp, global) {
  var pattern = regExp.get$pattern();
  var multiLine = regExp.get$multiLine();
  var ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  var sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global)
    $.add$1(sb, 'g');
  try {
    return new RegExp(pattern, $.toString(sb));
  } catch (exception) {
    var t1 = $.unwrapException(exception);
    var e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$._JavaScriptAudioNodeEventsImpl$ = function(_ptr) {
  return new $._JavaScriptAudioNodeEventsImpl(_ptr);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(result, t1, visiting));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$._IDBDatabaseEventsImpl$ = function(_ptr) {
  return new $._IDBDatabaseEventsImpl(_ptr);
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$.EnterFrameEvent$ = function(passedTime) {
  var t1 = new $.EnterFrameEvent(null, null, null, null, null, null, false, false);
  t1.Event$2('enterFrame', false);
  t1.EnterFrameEvent$1(passedTime);
  return t1;
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$._TextTrackCueEventsImpl$ = function(_ptr) {
  return new $._TextTrackCueEventsImpl(_ptr);
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.UnsupportedOperationException$ = function(_message) {
  return new $.UnsupportedOperationException(_message);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.IllegalArgumentException$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.IllegalArgumentException$(start));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$._DedicatedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._DedicatedWorkerContextEventsImpl(_ptr);
};

$._FileReaderEventsImpl$ = function(_ptr) {
  return new $._FileReaderEventsImpl(_ptr);
};

$.concat = function(receiver, other) {
  if (!(typeof receiver === 'string'))
    return receiver.concat$1(other);
  if (!(typeof other === 'string'))
    throw $.$$throw($.IllegalArgumentException$(other));
  return receiver + other;
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.NoMoreElementsException$ = function() {
  return new $.NoMoreElementsException();
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCFullYear() : $.Primitives_lazyAsJsDate(receiver).getFullYear();
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.ListImplementation_List$from = function(other) {
  var result = $.ListImplementation_List(null);
  for (var t1 = $.iterator(other); t1.hasNext$0() === true;)
    result.push(t1.next$0());
  return result;
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $.DateImplementation$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.Element_Element$tag = function(tag) {
  return $._ElementFactoryProvider_createElement_tag(tag);
};

$.main = function() {
  var stage = $.Stage$('myStage', $.document().query$1('#stage'));
  $.RenderLoop$().addStage$1(stage);
  var textField1 = $.TextField$();
  textField1.set$defaultTextFormat($.TextFormat$('Helvetica,Arial', 14, 4278190080, true, false, false, 'left', 0, 0, 0, 0));
  textField1.set$text('Work in progress, stay tuned ...');
  textField1.set$x(10);
  textField1.set$y(10);
  textField1.set$width(920);
  textField1.set$height(20);
  stage.addChild$1(textField1);
};

$.Primitives_newList = function(length$) {
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.IllegalArgumentException$(length$));
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$._RTCPeerConnectionEventsImpl$ = function(_ptr) {
  return new $._RTCPeerConnectionEventsImpl(_ptr);
};

$.HashMapImplementation__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._FrameSetElementEventsImpl$ = function(_ptr) {
  return new $._FrameSetElementEventsImpl(_ptr);
};

$.TextEvent$ = function(type, bubbles) {
  var t1 = new $.TextEvent('', null, null, null, null, null, false, false);
  t1.Event$2(type, bubbles);
  return t1;
};

$._convertDartToNative_SerializedScriptValue = function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
};

$.IllegalArgumentException$ = function(arg) {
  return new $.IllegalArgumentException(arg);
};

$._MediaElementEventsImpl$ = function(_ptr) {
  return new $._MediaElementEventsImpl(_ptr);
};

$._IDBTransactionEventsImpl$ = function(_ptr) {
  return new $._IDBTransactionEventsImpl(_ptr);
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.propertyTypeCastError = function(value, property) {
  throw $.$$throw($.CastExceptionImplementation$($.Primitives_objectTypeName(value), $.substring$2(property, 3, $.get$length(property))));
};

$._BodyElementEventsImpl$ = function(_ptr) {
  return new $._BodyElementEventsImpl(_ptr);
};

$.iae = function(argument) {
  throw $.$$throw($.IllegalArgumentException$(argument));
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$._AbstractWorkerEventsImpl$ = function(_ptr) {
  return new $._AbstractWorkerEventsImpl(_ptr);
};

$.isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.isNaN$0();
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.isInfinite = function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result = $.ListImplementation_List(null);
  var length$ = $.get$length(haystack);
  var patternLength = needle.length;
  for (var startIndex = 0; true;) {
    var position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    var endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      var t1 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= dst.length)
        throw $.ioore(j);
      dst[j] = t1;
    }
  else
    for (t1 = srcStart + count, i = srcStart, j = dstStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      var t2 = src[i];
      if (j < 0 || j >= dst.length)
        throw $.ioore(j);
      dst[j] = t2;
    }
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values = [];
  var copies = [];
  var t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  var t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  var t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  var t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  var copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t1, t2, t3).call$1(value);
  t4.call$0();
  return copy;
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() : $.Primitives_lazyAsJsDate(receiver).getMilliseconds();
};

$.endsWith = function(receiver, other) {
  $.checkString(other);
  var receiverLength = receiver.length;
  var otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$._DOMWindowCrossFrameImpl__top = function(win) {
return win.top;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.IllegalArgumentException$(value));
  }
  return value;
};

$._WorkerEventsImpl$ = function(_ptr) {
  return new $._WorkerEventsImpl(_ptr);
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.EventDispatcher$ = function() {
  return new $.EventDispatcher(null);
};

$.convertDartClosureToJS = function(closure, arity) {
  if (closure == null)
    return;
  var function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$._FixedSizeListIterator$ = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), array, 0);
};

$.split = function(receiver, pattern) {
  if (!(typeof receiver === 'string'))
    return receiver.split$1(pattern);
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $.StringBufferImpl$(content$);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._InputElementEventsImpl$ = function(_ptr) {
  return new $._InputElementEventsImpl(_ptr);
};

$._ElementFactoryProvider_createElement_tag = function(tag) {
return document.createElement(tag)
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.IllegalArgumentException$(value));
  return res;
};

$._TextTrackListEventsImpl$ = function(_ptr) {
  return new $._TextTrackListEventsImpl(_ptr);
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC0));
  return object;
};

$._EventListenerListImpl$ = function(_ptr, _type) {
  return new $._EventListenerListImpl(_ptr, _type);
};

$._DOMWindowCrossFrameImpl__focus = function(win) {
win.focus()
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCSeconds() : $.Primitives_lazyAsJsDate(receiver).getSeconds();
};

$._EventDispatcherCatalog_dispatchEvent = function(event$) {
  if (!($._EventDispatcherCatalog__eventDispatcherMap == null)) {
    var eventDispatchers = $.index($._EventDispatcherCatalog__eventDispatcherMap, event$.get$type());
    if (typeof eventDispatchers !== 'object' || eventDispatchers === null || (eventDispatchers.constructor !== Array || !!eventDispatchers.immutable$list) && !eventDispatchers.is$JavaScriptIndexingBehavior())
      return $._EventDispatcherCatalog_dispatchEvent$bailout(1, event$, eventDispatchers);
    var eventDispatchersLength = eventDispatchers.length;
    for (var c = 0, i = 0; i < eventDispatchersLength; ++i) {
      if (i < 0 || i >= eventDispatchers.length)
        throw $.ioore(i);
      var eventDispatcher = eventDispatchers[i];
      if (!(eventDispatcher == null)) {
        eventDispatcher.dispatchEvent$1(event$);
        if (!(c === i)) {
          if (c < 0 || c >= eventDispatchers.length)
            throw $.ioore(c);
          eventDispatchers[c] = eventDispatcher;
        }
        ++c;
      }
    }
    for (i = eventDispatchersLength; t1 = eventDispatchers.length, i < t1; ++i) {
      var c0 = c + 1;
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      var t2 = eventDispatchers[i];
      if (c < 0 || c >= t1)
        throw $.ioore(c);
      eventDispatchers[c] = t2;
      c = c0;
    }
    $.set$length(eventDispatchers, c);
  }
  var t1;
};

$._WindowEventsImpl$ = function(_ptr) {
  return new $._WindowEventsImpl(_ptr);
};

$.Juggler$ = function() {
  var t1 = new $.Juggler(null, null, null);
  t1.Juggler$0();
  return t1;
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.IllegalArgumentException$(b));
    }
  return false;
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCHours() : $.Primitives_lazyAsJsDate(receiver).getHours();
};

$.Stage$ = function(name$, canvas) {
  var t1 = new $.Stage(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Stage$2(name$, canvas);
  return t1;
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.Matrix$fromIdentity = function() {
  return new $.Matrix(1, 0, 0, 1, 0, 0, 1);
};

$.index$slow = function(a, index) {
  if (typeof a === 'string' || $.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.IllegalArgumentException$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.IllegalArgumentException$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.RenderState$fromCanvasRenderingContext2D = function(context) {
  var t1 = new $.RenderState(null, null, null, null);
  t1.RenderState$fromCanvasRenderingContext2D$1(context);
  return t1;
};

$.isEven = function(receiver) {
  if (!(typeof receiver === 'number' && Math.floor(receiver) === receiver))
    return receiver.isEven$0();
  return (receiver & 1) === 0;
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$._HttpRequestEventsImpl$ = function(_ptr) {
  return new $._HttpRequestEventsImpl(_ptr);
};

$.listInsertRange = function(receiver, start, length$, initialValue) {
  if (typeof receiver !== 'object' || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.is$JavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, length$, initialValue);
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (length$ < 0)
    throw $.$$throw($.IllegalArgumentException$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.IllegalArgumentException$(start));
  var receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  var t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  for (var i = start; i < t2; ++i) {
    if (i < 0 || i >= receiver.length)
      throw $.ioore(i);
    receiver[i] = initialValue;
  }
  $.set$length(receiver, t1);
};

$.StringImplementation__toJsStringArray = function(strings) {
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.StringImplementation__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  var length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (var i = 0; i < length$; ++i) {
      if (i < 0 || i >= strings.length)
        throw $.ioore(i);
      var string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.IllegalArgumentException$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i < 0 || i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.IllegalArgumentException$(string));
      if (i < 0 || i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.get$length(receiver) === 0)
      throw $.$$throw($.IndexOutOfRangeException$(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.IndexOutOfRangeException$ = function(_value) {
  return new $.IndexOutOfRangeException(_value);
};

$._TextTrackEventsImpl$ = function(_ptr) {
  return new $._TextTrackEventsImpl(_ptr);
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (index < 0)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    if (index >= receiver.length)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$._BatteryManagerEventsImpl$ = function(_ptr) {
  return new $._BatteryManagerEventsImpl(_ptr);
};

$._MediaStreamTrackListEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackListEventsImpl(_ptr);
};

$.toInt = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  var truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$._WebSocketEventsImpl$ = function(_ptr) {
  return new $._WebSocketEventsImpl(_ptr);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._MediaStreamEventsImpl$ = function(_ptr) {
  return new $._MediaStreamEventsImpl(_ptr);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.IllegalArgumentException$(value));
  }
  return value;
};

$.dynamicFunction = function(name$) {
  var f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  var methods = {};
  var dartMethod = Object.getPrototypeOf($.CTC18)[name$];
  if (!(dartMethod == null))
    $.propertySet(methods, 'Object', dartMethod);
  var bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$._Elements_createCanvasElement = function(width, height) {
  var _e = $._document().$dom_createElement$1('canvas');
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  for (var t1 = $.iterator(charCodes); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.IllegalArgumentException$(t2));
  }
  return String.fromCharCode.apply(null, charCodes);
};

$.DateImplementation$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateImplementation(millisecondsSinceEpoch, isUtc);
  t1.DateImplementation$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.StringImplementation__fromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  if (!$.isJsArray(charCodes))
    charCodes = $.ListImplementation_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.IllegalArgumentException$(newLength));
    if (newLength < 0)
      throw $.$$throw($.IndexOutOfRangeException$(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.ioore = function(index) {
  throw $.$$throw($.IndexOutOfRangeException$(index));
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$._color2rgb = function(color) {
  var r = $.and($.shr(color, 16), 255);
  var g = $.and($.shr(color, 8), 255);
  var b = $.and($.shr(color, 0), 255);
  return 'rgb(' + $.S(r) + ',' + $.S(g) + ',' + $.S(b) + ')';
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.hashCode = function(receiver) {
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (!(typeof receiver === 'string'))
    return receiver.hashCode$0();
  var length$ = receiver.length;
  for (var hash = 0, i = 0; i < length$; ++i) {
    var hash0 = 536870911 & hash + receiver.charCodeAt(i);
    var hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
    hash = hash1;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.startsWith = function(receiver, other) {
  $.checkString(other);
  var length$ = other.length;
  if (length$ > receiver.length)
    return false;
  return other == receiver.substring(0, length$);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$._Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag = $.getTypeNameOf(obj);
  var method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (var i = 0; i < $._dynamicMetadata0().length; ++i) {
      var entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  var proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$._MessagePortEventsImpl$ = function(_ptr) {
  return new $._MessagePortEventsImpl(_ptr);
};

$._document = function() {
return document;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if ($.contains(userAgent, 'Chrome') || $.contains(userAgent, 'DumpRenderTree'))
    return $.typeNameInChrome;
  else if ($.contains(userAgent, 'Firefox'))
    return $.typeNameInFirefox;
  else if ($.contains(userAgent, 'MSIE'))
    return $.typeNameInIE;
  else if ($.contains(userAgent, 'Opera'))
    return $.typeNameInOpera;
  else if ($.contains(userAgent, 'Safari'))
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.index = function(a, index) {
  if (typeof a == "string" || a.constructor === Array) {
    var key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$._ElementEventsImpl$ = function(_ptr) {
  return new $._ElementEventsImpl(_ptr);
};

$.Juggler_instance = function() {
  if ($.Juggler__instance == null)
    $.Juggler__instance = $.Juggler$();
  return $.Juggler__instance;
};

$.TextField$ = function() {
  var t1 = new $.TextField('', 0, null, 'none', 'pixel', 'dynamic', false, false, 0, false, 0, 0, 0, null, null, true, 100, 100, null, null, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.TextField$0();
  return t1;
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.ListImplementation_List = function(length$) {
  return $.Primitives_newList(length$);
};

$._DOMWindowCrossFrameImpl__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrameImpl$(w);
};

$.insertRange$3 = function(receiver, start, length$, initialValue) {
  if (!$.isJsArray(receiver))
    return receiver.insertRange$3(start, length$, initialValue);
  return $.listInsertRange(receiver, start, length$, initialValue);
};

$.Event$ = function(type, bubbles) {
  var t1 = new $.Event(null, null, null, null, null, false, false);
  t1.Event$2(type, bubbles);
  return t1;
};

$.Date_Date$now = function() {
  return $.DateImplementation$now();
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.IllegalArgumentException$(element));
    return receiver.indexOf(element);
  }
  return receiver.indexOf$1(element);
};

$.RenderLoop$ = function() {
  var t1 = new $.RenderLoop(null, null, (0/0));
  t1.RenderLoop$0();
  return t1;
};

$.StackOverflowException$ = function() {
  return new $.StackOverflowException();
};

$.StringBufferImpl$ = function(content$) {
  var t1 = new $.StringBufferImpl(null, null);
  t1.StringBufferImpl$1(content$);
  return t1;
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.HashMapImplementation$ = function() {
  var t1 = new $.HashMapImplementation(null, null, null, null, null);
  t1.HashMapImplementation$0();
  return t1;
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.NoSuchMethodError$ = function(_receiver, _functionName, _arguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _functionName, _arguments, existingArgumentNames);
};

$.KeyboardEvent$ = function(type, bubbles) {
  var t1 = new $.KeyboardEvent(false, false, false, false, false, 0, 0, 0, null, null, null, null, null, false, false);
  t1.Event$2(type, bubbles);
  return t1;
};

$._SharedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._SharedWorkerContextEventsImpl(_ptr);
};

$._IDBVersionChangeRequestEventsImpl$ = function(_ptr) {
  return new $._IDBVersionChangeRequestEventsImpl(_ptr);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.document = function() {
return document;
};

$._FileWriterEventsImpl$ = function(_ptr) {
  return new $._FileWriterEventsImpl(_ptr);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.unwrapException = function(ex) {
  if ("dartException" in ex)
    return ex.dartException;
  var message = ex.message;
  if (ex instanceof TypeError) {
    var type = ex.type;
    var name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NullPointerException$(null, $.CTC0);
    else if ($.eqB(type, 'undefined_method'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NoSuchMethodError$('', name$, [], null);
    var ieErrorCode = ex.number & 0xffff;
    var ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC0);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          var t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], null);
      }
    return $.ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowException$();
    return $.IllegalArgumentException$('');
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowException$();
  return ex;
};

$.ceil = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.ceil$0();
  return Math.ceil(receiver);
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$._HttpRequestUploadEventsImpl$ = function(_ptr) {
  return new $._HttpRequestUploadEventsImpl(_ptr);
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.Arrays_copy$bailout = function(state, src, srcStart, dst, dstStart, count) {
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (var t1 = srcStart + count, i = srcStart, j = dstStart; i < t1; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$._EventDispatcherCatalog_dispatchEvent$bailout = function(state, env0, env1) {
  switch (state) {
    case 1:
      var event$ = env0;
      eventDispatchers = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      if (state === 1 || state === 0 && !($._EventDispatcherCatalog__eventDispatcherMap == null))
        switch (state) {
          case 0:
            var eventDispatchers = $.index($._EventDispatcherCatalog__eventDispatcherMap, event$.get$type());
          case 1:
            state = 0;
            if (!(eventDispatchers == null)) {
              var eventDispatchersLength = $.get$length(eventDispatchers);
              for (var c = 0, i = 0; $.ltB(i, eventDispatchersLength); ++i) {
                var eventDispatcher = $.index(eventDispatchers, i);
                if (!(eventDispatcher == null)) {
                  eventDispatcher.dispatchEvent$1(event$);
                  if (!(c === i))
                    $.indexSet(eventDispatchers, c, eventDispatcher);
                  ++c;
                }
              }
              for (i = eventDispatchersLength; $.ltB(i, $.get$length(eventDispatchers)); i = $.add(i, 1)) {
                var c0 = c + 1;
                $.indexSet(eventDispatchers, c, $.index(eventDispatchers, i));
                c = c0;
              }
              $.set$length(eventDispatchers, c);
            }
        }
  }
};

$._Lists_indexOf$bailout = function(state, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (var i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Arrays_indexOf$bailout = function(state, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.listInsertRange$bailout = function(state, receiver, start, length$, initialValue) {
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (length$ < 0)
    throw $.$$throw($.IllegalArgumentException$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.IllegalArgumentException$(start));
  var receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  var t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  for (var i = start; i < t2; ++i)
    $.indexSet(receiver, i, initialValue);
  $.set$length(receiver, t1);
};

$.StringImplementation__toJsStringArray$bailout = function(state, strings) {
  $.checkNull(strings);
  var length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (var i = 0; $.ltB(i, length$); ++i) {
      var string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.IllegalArgumentException$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.IllegalArgumentException$(string));
      if (i < 0 || i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC0 = Isolate.makeConstantList([]);
$.CTC19 = 'structured clone of RegExp';
$.CTC3 = new Isolate.$isolateProperties.NotImplementedException('structured clone of RegExp');
$.CTC20 = 'structured clone of File';
$.CTC4 = new Isolate.$isolateProperties.NotImplementedException('structured clone of File');
$.CTC21 = 'Cannot insertRange on immutable List.';
$.CTC12 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot insertRange on immutable List.');
$.CTC22 = 'Cannot removeLast on immutable List.';
$.CTC11 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeLast on immutable List.');
$.CTC23 = 'structured clone of ArrayBufferView';
$.CTC8 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBufferView');
$.CTC24 = 'structured clone of Date';
$.CTC2 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Date');
$.CTC25 = 'structured clone of ArrayBuffer';
$.CTC7 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBuffer');
$.CTC26 = 'Cannot removeRange on immutable List.';
$.CTC13 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeRange on immutable List.');
$.CTC16 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC27 = 'structured clone of FileList';
$.CTC6 = new Isolate.$isolateProperties.NotImplementedException('structured clone of FileList');
$.CTC28 = 'structured clone of other type';
$.CTC9 = new Isolate.$isolateProperties.NotImplementedException('structured clone of other type');
$.CTC18 = new Isolate.$isolateProperties.Object();
$.CTC29 = 'structured clone of Blob';
$.CTC5 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Blob');
$.CTC30 = false;
$.CTC31 = '^#[_a-zA-Z]\\w*$';
$.CTC14 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '^#[_a-zA-Z]\\w*$');
$.CTC32 = null;
$.CTC = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC0);
$.CTC10 = new Isolate.$isolateProperties.NoMoreElementsException();
$.CTC33 = 'Cannot add to immutable List.';
$.CTC1 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot add to immutable List.');
$.CTC34 = 'offsetX is only supported on elements';
$.CTC17 = new Isolate.$isolateProperties.UnsupportedOperationException('offsetX is only supported on elements');
$.CTC35 = '[-[\\]{}()*+?.,\\\\^$|#\\s]';
$.CTC15 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '[-[\\]{}()*+?.,\\\\^$|#\\s]');
$.Event_REMOVED_FROM_STAGE = 'removedFromStage';
$.TextFieldType_DYNAMIC = 'dynamic';
$.Event_REMOVED = 'removed';
$.Color_Black = 4278190080;
$.EventPhase_CAPTURING_PHASE = 1;
$.double_NAN = (0/0);
$.HashMapImplementation__INITIAL_CAPACITY = 8;
$.KeyLocation_NUM_PAD = 3;
$.Mouse___eventDispatcher = null;
$.StageRenderMode_AUTO = 'auto';
$.MouseCursor_AUTO = 'auto';
$.MouseEvent_MOUSE_UP = 'mouseUp';
$.double_NEGATIVE_INFINITY = (-1/0);
$.MouseEvent_MIDDLE_MOUSE_UP = 'middleMouseUp';
$.TextEvent_TEXT_INPUT = 'textInput';
$.Event_ADDED = 'added';
$.KeyLocation_MOBILE = 4;
$.KeyboardEvent_KEY_UP = 'keyUp';
$.MouseCursor_IBEAM = 'ibeam';
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.EventPhase_BUBBLING_PHASE = 3;
$.KeyLocation_STANDARD = 0;
$.HashMapImplementation__DELETED_KEY = Isolate.$isolateProperties.CTC16;
$.Mouse__isCursorHidden = false;
$.GridFitType_PIXEL = 'pixel';
$._getTypeNameOf = null;
$.MouseEvent_MOUSE_WHEEL = 'mouseWheel';
$.MouseEvent_MIDDLE_CLICK = 'middleClick';
$.KeyLocation_D_PAD = 4;
$.MouseEvent_MIDDLE_MOUSE_DOWN = 'middleMouseDown';
$.Primitives_hashCodeSeed = 0;
$.TextFormatAlign_CENTER = 'center';
$.StageRenderMode_ONCE = 'once';
$.MouseEvent_RIGHT_CLICK = 'rightClick';
$.MouseEvent_DOUBLE_CLICK = 'doubleClick';
$.KeyLocation_NUMPAD = 3;
$.MouseEvent_MOUSE_DOWN = 'mouseDown';
$.Mouse__customCursor = 'auto';
$.MouseEvent_RIGHT_MOUSE_UP = 'rightMouseUp';
$.TextFormatAlign_JUSTIFY = 'justify';
$._cachedBrowserPrefix = null;
$.StageRenderMode_STOP = 'stop';
$.KeyLocation_LEFT = 1;
$.KeyLocation_LEFT0 = 1;
$.double_INFINITY = (1/0);
$.KeyboardEvent_KEY_DOWN = 'keyDown';
$.MouseCursor_ARROW = 'arrow';
$.MouseCursor_HAND = 'hand';
$.Event_ADDED_TO_STAGE = 'addedToStage';
$.TextFormatAlign_END = 'end';
$._EventDispatcherCatalog__eventDispatcherMap = null;
$.KeyLocation_RIGHT = 2;
$.KeyLocation_RIGHT0 = 2;
$.TextFormatAlign_RIGHT = 'right';
$.TextFieldAutoSize_NONE = 'none';
$.MouseCursor_WAIT = 'wait';
$.Juggler__instance = null;
$.DateImplementation__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.MouseEvent_CLICK = 'click';
$.EventPhase_AT_TARGET = 2;
$.MouseEvent_RIGHT_MOUSE_DOWN = 'rightMouseDown';
$.MouseEvent_MOUSE_OVER = 'mouseOver';
$.KeyLocation_JOYSTICK = 5;
$.MouseEvent_MOUSE_MOVE = 'mouseMove';
$.Event_ENTER_FRAME = 'enterFrame';
$.MouseEvent_MOUSE_OUT = 'mouseOut';
$.MouseCursor_BUTTON = 'button';
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, fields, methods) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], methods);
  }
  for (var method in methods) {
    $.dynamicFunction(method)[cls] = methods[method];
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$FileList: function() { return false; },
 is$_FileImpl: function() { return false; },
 is$Element: function() { return false; },
 is$_ImageDataImpl: function() { return false; },
 is$_BlobImpl: function() { return false; },
 is$_ArrayBufferViewImpl: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$Collection: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$_FileListImpl: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$ImageData: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 hashCode$0: function() { return $.hashCodeForNativeObject(this); },
 is$List: function() { return false; },
 is$_ArrayBufferImpl: function() { return false; },
 is$Map: function() { return false; },
 is$File: function() { return false; },
 is$Blob: function() { return false; }
});

$.$defineNativeClass('AbstractWorker', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._AbstractWorkerEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLAnchorElement', ["type?"], {
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationList', ["length?"], {
});

$.$defineNativeClass('HTMLAppletElement', ["align?", "height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', [], {
 is$_ArrayBufferImpl: function() { return true; },
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', [], {
 is$_ArrayBufferViewImpl: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('AudioBuffer', ["length?"], {
});

$.$defineNativeClass('AudioContext', [], {
 get$on: function() {
  return $._AudioContextEventsImpl$(this);
},
 listener$1: function(arg0) { return this.listener.call$1(arg0); }
});

$.$defineNativeClass('HTMLAudioElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBRElement', [], {
 clear$0: function() { return this.clear.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('BarInfo', ["visible?"], {
});

$.$defineNativeClass('HTMLBaseElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', ["color?", "size?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', [], {
 get$on: function() {
  return $._BatteryManagerEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BiquadFilterNode', ["type?"], {
});

$.$defineNativeClass('Blob', ["size?", "type?"], {
 is$_BlobImpl: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', [], {
 get$on: function() {
  return $._BodyElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('CSSFontFaceRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSKeyframeRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSMatrix', ["a?", "b?", "c?", "d?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSPageRule', ["style?"], {
});

$.$defineNativeClass('CSSRule', ["type?"], {
});

$.$defineNativeClass('CSSRuleList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSStyleDeclaration', ["length?"], {
 getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    // Bug #2772, IE9 requires a poke to actually apply the value.
    if (this.setAttribute) {
      this.setAttribute(propertyName, value);
    }
  
},
 get$bottom: function() {
  return this.getPropertyValue$1('bottom');
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 get$color: function() {
  return this.getPropertyValue$1('color');
},
 set$cursor: function(value) {
  this.setProperty$3('cursor', value, '');
},
 get$font: function() {
  return this.getPropertyValue$1('font');
},
 set$font: function(value) {
  this.setProperty$3('font', value, '');
},
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 get$left: function() {
  return this.getPropertyValue$1('left');
},
 get$mask: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'mask');
},
 set$outline: function(value) {
  this.setProperty$3('outline', value, '');
},
 get$right: function() {
  return this.getPropertyValue$1('right');
},
 get$size: function() {
  return this.getPropertyValue$1('size');
},
 set$textAlign: function(value) {
  this.setProperty$3('text-align', value, '');
},
 get$top: function() {
  return this.getPropertyValue$1('top');
},
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSTransformValue', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSValueList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCanvasElement', ["height=", "width="], {
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1('2d');
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasRenderingContext2D', ["fillStyle!", "font=", "globalAlpha!", "lineWidth!", "strokeStyle!", "textAlign!", "textBaseline!"], {
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y);
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 fillText$4: function(text, x, y, maxWidth) {
  return this.fillText(text,x,y,maxWidth);
},
 fillText$3: function(text,x,y) {
  return this.fillText(text,x,y);
},
 measureText$1: function(text) {
  return this.measureText(text);
},
 restore$0: function() {
  return this.restore();
},
 save$0: function() {
  return this.save();
},
 setTransform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.setTransform(m11,m12,m21,m22,dx,dy);
},
 strokeRect$5: function(x, y, width, height, lineWidth) {
  return this.strokeRect(x,y,width,height,lineWidth);
},
 strokeRect$4: function(x,y,width,height) {
  return this.strokeRect(x,y,width,height);
}
});

$.$defineNativeClass('CanvasRenderingContext', ["canvas?"], {
});

$.$defineNativeClass('CharacterData', ["length?"], {
});

$.$defineNativeClass('ClientRect', ["bottom?", "height?", "left?", "right?", "top?", "width?"], {
});

$.$defineNativeClass('ClientRectList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

_ConsoleImpl = (typeof console == 'undefined' ? {} : console);
$.$defineNativeClass('HTMLContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', [], {
 get$on: function() {
  return $._DOMApplicationCacheEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMException', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMMimeTypeArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('DOMMimeType', ["type?"], {
});

$.$defineNativeClass('DOMPluginArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('DOMPlugin', ["length?"], {
});

$.$defineNativeClass('DOMSelection', ["type?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMStringList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('DOMTokenList', ["length?"], {
 add$1: function(token) {
  return this.add(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItem', ["type?"], {
});

$.$defineNativeClass('DataTransferItemList', ["length?"], {
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', [], {
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('DedicatedWorkerContext', [], {
 get$on: function() {
  return $._DedicatedWorkerContextEventsImpl$(this);
}
});

$.$defineNativeClass('HTMLDetailsElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDirectoryElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDivElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentFragment', [], {
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$style: function() {
  return $.Element_Element$tag('div').get$style();
},
 focus$0: function() {
},
 get$on: function() {
  return $._ElementEventsImpl$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', [], {
 get$on: function() {
  return $._DocumentEventsImpl$(this);
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.CTC14.hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Element', ["style?"], {
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._ElementEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 focus$0: function() {
  return this.focus();
},
 $dom_getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', ["align?", "height=", "type?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('EntryArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('EventException', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Event', ["bubbles?", "type?"], {
 preventDefault$0: function() {
  return this.preventDefault();
}
});

$.$defineNativeClass('EventSource', [], {
 get$on: function() {
  return $._EventSourceEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._EventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('FileException', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('File', [], {
 is$_FileImpl: function() { return true; },
 is$File: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('FileList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$_FileListImpl: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('FileReader', [], {
 get$on: function() {
  return $._FileReaderEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriter', ["length?"], {
 get$on: function() {
  return $._FileWriterEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', ["length?"], {
});

$.$defineNativeClass('Float32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Float64Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', ["color?", "size?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', ["length?"], {
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', ["height?", "width?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', [], {
 get$on: function() {
  return $._FrameSetElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('GamepadList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLHRElement', ["align?", "size?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', [], {
 get$length: function() {
return this.length;
},
 set$length: function(value) {
this.length = value;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLHeadElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', ["length?"], {
});

$.$defineNativeClass('HTMLHtmlElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequestException', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequest', [], {
 get$on: function() {
  return $._HttpRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('XMLHttpRequestUpload', [], {
 get$on: function() {
  return $._HttpRequestUploadEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBDatabaseException', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabase', [], {
 get$on: function() {
  return $._IDBDatabaseEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBObjectStore', [], {
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_SerializedScriptValue(value), key);
  return this._add_2$1($._convertDartToNative_SerializedScriptValue(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('IDBOpenDBRequest', [], {
 get$on: function() {
  return $._IDBOpenDBRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBRequest', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._IDBRequestEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('IDBTransaction', [], {
 get$on: function() {
  return $._IDBTransactionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeRequest', [], {
 get$on: function() {
  return $._IDBVersionChangeRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLIFrameElement', ["align?", "height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ImageData', ["height?", "width?"], {
 is$_ImageDataImpl: function() { return true; },
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', ["align?", "height=", "width=", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', ["align?", "height=", "pattern?", "size?", "type?", "width="], {
 get$on: function() {
  return $._InputElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('JavaScriptAudioNode', [], {
 get$on: function() {
  return $._JavaScriptAudioNodeEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('JavaScriptCallFrame', ["type?"], {
});

$.$defineNativeClass('KeyboardEvent', ["altKey?", "ctrlKey?", "keyLocation?", "shiftKey?"], {
});

$.$defineNativeClass('HTMLKeygenElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('LocalMediaStream', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Location', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLMapElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', [], {
 get$on: function() {
  return $._MediaElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('MediaSource', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', [], {
 get$on: function() {
  return $._MediaStreamEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('MediaStreamList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('MediaStreamTrack', [], {
 get$on: function() {
  return $._MediaStreamTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackList', ["length?"], {
 get$on: function() {
  return $._MediaStreamTrackListEventsImpl$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMenuElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessagePort', [], {
 get$on: function() {
  return $._MessagePortEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMetaElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Metadata', ["size?"], {
});

$.$defineNativeClass('HTMLMeterElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', ["altKey?", "button?", "ctrlKey?", "shiftKey?", "x?", "y?"], {
 get$offsetX: function() {
  if (!!this.offsetX)
    return this.get$_offsetX();
  else {
    var target = this.target;
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.CTC17);
    return $.sub(this.clientX, target.$dom_getBoundingClientRect$0().get$left());
  }
},
 get$offsetY: function() {
  if (!!this.offsetY)
    return this.get$_offsetY();
  else {
    var target = this.target;
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.CTC17);
    return $.sub(this.clientY, target.$dom_getBoundingClientRect$0().get$top());
  }
},
 get$_offsetX: function() {
return this.offsetX
},
 get$_offsetY: function() {
return this.offsetY
}
});

$.$defineNativeClass('MutationRecord', ["type?"], {
});

$.$defineNativeClass('NamedNodeMap', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Navigator', ["userAgent?"], {
});

$.$defineNativeClass('Node', [], {
 set$text: function(value) {
this.textContent = value;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeList', ["_lib_parent?", "length?"], {
 iterator$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('iterator$0')) {
  {
  return $._FixedSizeListIterator$(this);
}
  } else {
    return Object.prototype.iterator$0.call(this);
  }

},
 add$1: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('add$1')) {
  {
  this._lib_parent.$dom_appendChild$1(value);
}
  } else {
    return Object.prototype.add$1.call(this, value);
  }

},
 removeLast$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('removeLast$0')) {
  {
  var result = this.last$0();
  if (!(result == null))
    this._lib_parent.$dom_removeChild$1(result);
  return result;
}
  } else {
    return Object.prototype.removeLast$0.call(this);
  }

},
 clear$0: function() {
  this._lib_parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('operator$indexSet$2')) {
  {
  this._lib_parent.$dom_replaceChild$2(value, this.operator$index$1(index));
}
  } else {
    return Object.prototype.operator$indexSet$2.call(this, index, value);
  }

},
 forEach$1: function(f) {
  if (Object.getPrototypeOf(this).hasOwnProperty('forEach$1')) {
  {
  return $._Collections_forEach(this, f);
}
  } else {
    return Object.prototype.forEach$1.call(this, f);
  }

},
 isEmpty$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('isEmpty$0')) {
  {
  return $.eq($.get$length(this), 0);
}
  } else {
    return Object.prototype.isEmpty$0.call(this);
  }

},
 indexOf$2: function(element, start) {
  if (Object.getPrototypeOf(this).hasOwnProperty('indexOf$2')) {
  {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
}
  } else {
    return Object.prototype.indexOf$2.call(this, element, start);
  }

},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('last$0')) {
  {
  return this.operator$index$1($.sub($.get$length(this), 1));
}
  } else {
    return Object.prototype.last$0.call(this);
  }

},
 removeRange$2: function(start, rangeLength) {
  if (Object.getPrototypeOf(this).hasOwnProperty('removeRange$2')) {
  {
  throw $.$$throw($.UnsupportedOperationException$('Cannot removeRange on immutable List.'));
}
  } else {
    return Object.prototype.removeRange$2.call(this, start, rangeLength);
  }

},
 insertRange$3: function(start, rangeLength, initialValue) {
  if (Object.getPrototypeOf(this).hasOwnProperty('insertRange$3')) {
  {
  throw $.$$throw($.UnsupportedOperationException$('Cannot insertRange on immutable List.'));
}
  } else {
    return Object.prototype.insertRange$3.call(this, start, rangeLength, initialValue);
  }

},
 operator$index$1: function(index) {
  if (Object.getPrototypeOf(this).hasOwnProperty('operator$index$1')) {
  {
return this[index];
}
  } else {
    return Object.prototype.operator$index$1.call(this, index);
  }

},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Notification', [], {
 get$on: function() {
  return $._NotificationEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLOListElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', ["align?", "height=", "type?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptGroupElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Oscillator', ["type?"], {
});

$.$defineNativeClass('HTMLOutputElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParagraphElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', [], {
 get$on: function() {
  return $._PeerConnection00EventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('PerformanceNavigation', ["type?"], {
});

$.$defineNativeClass('WebKitPoint', ["x?", "y?"], {
});

$.$defineNativeClass('HTMLPreElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLProgressElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLQuoteElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('RTCPeerConnection', [], {
 get$on: function() {
  return $._RTCPeerConnectionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', ["type?"], {
});

$.$defineNativeClass('RadioNodeList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('RangeException', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Range', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', ["bottom?", "left?", "right?", "top?"], {
});

$.$defineNativeClass('SQLResultSetRowList', ["length?"], {
});

$.$defineNativeClass('SVGAElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphDefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphItemElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateColorElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateMotionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateTransformElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedLengthList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumberList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedTransformList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCircleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGClipPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCursorElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDefsElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDescElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDocument', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElementInstance', [], {
 get$on: function() {
  return $._SVGElementInstanceEventsImpl$(this);
}
});

$.$defineNativeClass('SVGElementInstanceList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGEllipseElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGException', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEColorMatrixElement', ["type?", "height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEComponentTransferElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFECompositeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDisplacementMapElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDistantLightElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDropShadowElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFloodElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncAElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncBElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncGElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncRElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEGaussianBlurElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEImageElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeNodeElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMorphologyElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEOffsetElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEPointLightElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpecularLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpotLightElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETileElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETurbulenceElement', ["type?", "height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFilterElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceFormatElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceNameElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceSrcElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceUriElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGForeignObjectElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphRefElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGHKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGImageElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLengthList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLinearGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMarkerElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMaskElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMatrix', ["a?", "b?", "c?", "d?"], {
});

$.$defineNativeClass('SVGMetadataElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMissingGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGNumberList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPathSegArcAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegArcRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', ["x?"], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', ["x?"], {
});

$.$defineNativeClass('SVGPathSegLinetoRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', ["y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', ["y?"], {
});

$.$defineNativeClass('SVGPathSegList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegMovetoRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPatternElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPoint', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPointList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPolylineElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPreserveAspectRatio', ["align?"], {
});

$.$defineNativeClass('SVGRadialGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRectElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRect', ["height=", "width=", "x?", "y?"], {
});

$.$defineNativeClass('SVGSVGElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGScriptElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSetElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStopElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStringList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSwitchElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSymbolElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTRefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPositioningElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTransform', ["type?"], {
});

$.$defineNativeClass('SVGTransformList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGUseElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGVKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Screen', ["height?", "width?"], {
});

$.$defineNativeClass('HTMLScriptElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ScriptProfileNode', ["visible?"], {
});

$.$defineNativeClass('HTMLSelectElement', ["length=", "size?", "type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLShadowElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SharedWorkerContext', [], {
 get$on: function() {
  return $._SharedWorkerContextEventsImpl$(this);
}
});

$.$defineNativeClass('SourceBufferList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammarList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechRecognition', [], {
 get$on: function() {
  return $._SpeechRecognitionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('SpeechRecognitionResult', ["length?"], {
});

$.$defineNativeClass('SpeechRecognitionResultList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Storage', [], {
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  for (var i = 0; true; ++i) {
    var key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$length: function() {
  return this.get$$$dom_length();
},
 isEmpty$0: function() {
  return this.$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('HTMLStyleElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleMedia', ["type?"], {
});

$.$defineNativeClass('StyleSheet', ["type?"], {
});

$.$defineNativeClass('StyleSheetList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTableCaptionElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', ["align?", "height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', ["align?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', ["align?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextMetrics', ["width?"], {
});

$.$defineNativeClass('TextTrackCue', ["align?", "size?", "text!"], {
 get$on: function() {
  return $._TextTrackCueEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrack', [], {
 get$on: function() {
  return $._TextTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackList', ["length?"], {
 get$on: function() {
  return $._TextTrackListEventsImpl$(this);
},
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TimeRanges', ["length?"], {
});

$.$defineNativeClass('HTMLTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TouchEvent', ["altKey?", "ctrlKey?", "shiftKey?"], {
});

$.$defineNativeClass('TouchList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('UIEvent', ["charCode?", "keyCode?"], {
});

$.$defineNativeClass('HTMLUListElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC1);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeLast$0: function() {
  throw $.$$throw($.CTC11);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC13);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC12);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebGLActiveInfo', ["size?", "type?"], {
});

$.$defineNativeClass('WebGLRenderingContext', [], {
 lineWidth$1: function(width) {
  return this.lineWidth(width);
}
});

$.$defineNativeClass('WebKitCSSFilterValue', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('WebKitNamedFlow', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', [], {
 get$on: function() {
  return $._WebSocketEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WheelEvent', ["wheelDelta?"], {
});

$.$defineNativeClass('DOMWindow', ["length?", "navigator?"], {
 get$_top: function() {
return this.top;
},
 get$top: function() {
  return $._DOMWindowCrossFrameImpl__createSafe(this.get$_top());
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !this.requestAnimationFrame; ++i) {
     this.requestAnimationFrame = this[vendors[i] + 'RequestAnimationFrame'];
     this.cancelAnimationFrame =
         this[vendors[i]+'CancelAnimationFrame'] ||
         this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   this.requestAnimationFrame = function(callback) {
       return window.setTimeout(callback, 16 /* 16ms ~= 60fps */);
   };
   this.cancelAnimationFrame = function(id) { clearTimeout(id); }

},
 get$on: function() {
  return $._WindowEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 focus$0: function() {
  return this.focus();
}
});

$.$defineNativeClass('WorkerContext', ["navigator?"], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._WorkerContextEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Worker', [], {
 get$on: function() {
  return $._WorkerEventsImpl$(this);
}
});

$.$defineNativeClass('WorkerLocation', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', ["userAgent?"], {
});

$.$defineNativeClass('XPathException', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XSLTProcessor', [], {
 reset$0: function() {
  return this.reset();
}
});

// 337 dynamic classes.
// 389 classes
// 32 !leaf
(function(){
  var v0/*class(_SVGTextPositioningElementImpl)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v1/*class(_Uint8ArrayImpl)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v2/*class(_SVGTextContentElementImpl)*/ = [v0/*class(_SVGTextPositioningElementImpl)*/,v0/*class(_SVGTextPositioningElementImpl)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v3/*class(_SVGGradientElementImpl)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v4/*class(_SVGComponentTransferFunctionElementImpl)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v5/*class(_SVGAnimationElementImpl)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v6/*class(_SVGElementImpl)*/ = [v2/*class(_SVGTextContentElementImpl)*/,v3/*class(_SVGGradientElementImpl)*/,v4/*class(_SVGComponentTransferFunctionElementImpl)*/,v5/*class(_SVGAnimationElementImpl)*/,v2/*class(_SVGTextContentElementImpl)*/,v3/*class(_SVGGradientElementImpl)*/,v4/*class(_SVGComponentTransferFunctionElementImpl)*/,v5/*class(_SVGAnimationElementImpl)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v7/*class(_MediaElementImpl)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v8/*class(_ElementImpl)*/ = [v6/*class(_SVGElementImpl)*/,v7/*class(_MediaElementImpl)*/,v6/*class(_SVGElementImpl)*/,v7/*class(_MediaElementImpl)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v9/*class(_DocumentImpl)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v10/*class(_DocumentFragmentImpl)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v11/*class(_CharacterDataImpl)*/ = 'CharacterData|Text|CDATASection|CDATASection|Comment|Text|CDATASection|CDATASection|Comment';
  var v12/*class(_MouseEventImpl)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v13/*class(_UIEventImpl)*/ = [v12/*class(_MouseEventImpl)*/,v12/*class(_MouseEventImpl)*/,'UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent'].join('|');
  var v14/*class(_WorkerContextImpl)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v15/*class(_NodeImpl)*/ = [v8/*class(_ElementImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_DocumentFragmentImpl)*/,v11/*class(_CharacterDataImpl)*/,v8/*class(_ElementImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_DocumentFragmentImpl)*/,v11/*class(_CharacterDataImpl)*/,'Node|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr'].join('|');
  var v16/*class(_MediaStreamImpl)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v17/*class(_IDBRequestImpl)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v18/*class(_AbstractWorkerImpl)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['SVGTextPositioningElement', v0/*class(_SVGTextPositioningElementImpl)*/],
    ['SVGTextContentElement', v2/*class(_SVGTextContentElementImpl)*/],
    ['IDBRequest', v17/*class(_IDBRequestImpl)*/],
    ['HTMLMediaElement', v7/*class(_MediaElementImpl)*/],
    ['MediaStream', v16/*class(_MediaStreamImpl)*/],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet|CSSStyleSheet'],
    ['AbstractWorker', v18/*class(_AbstractWorkerImpl)*/],
    ['MouseEvent', v12/*class(_MouseEventImpl)*/],
    ['Uint8Array', v1/*class(_Uint8ArrayImpl)*/],
    ['ArrayBufferView', [v1/*class(_Uint8ArrayImpl)*/,v1/*class(_Uint8ArrayImpl)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['SVGGradientElement', v3/*class(_SVGGradientElementImpl)*/],
    ['SVGComponentTransferFunctionElement', v4/*class(_SVGComponentTransferFunctionElementImpl)*/],
    ['SVGAnimationElement', v5/*class(_SVGAnimationElementImpl)*/],
    ['SVGElement', v6/*class(_SVGElementImpl)*/],
    ['Element', v8/*class(_ElementImpl)*/],
    ['HTMLDocument', v9/*class(_DocumentImpl)*/],
    ['DocumentFragment', v10/*class(_DocumentFragmentImpl)*/],
    ['CharacterData', v11/*class(_CharacterDataImpl)*/],
    ['Node', v15/*class(_NodeImpl)*/],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList'],
    ['UIEvent', v13/*class(_UIEventImpl)*/],
    ['Blob', 'Blob|File|File'],
    ['CSSRule', 'CSSRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule'],
    ['WorkerContext', v14/*class(_WorkerContextImpl)*/],
    ['CSSValueList', 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue'],
    ['CanvasRenderingContext', 'CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext|CanvasRenderingContext2D'],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['Event', [v13/*class(_UIEventImpl)*/,v13/*class(_UIEventImpl)*/,'Event|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBUpgradeNeededEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBUpgradeNeededEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['EventTarget', [v14/*class(_WorkerContextImpl)*/,v15/*class(_NodeImpl)*/,v16/*class(_MediaStreamImpl)*/,v17/*class(_IDBRequestImpl)*/,v18/*class(_AbstractWorkerImpl)*/,v14/*class(_WorkerContextImpl)*/,v15/*class(_NodeImpl)*/,v16/*class(_MediaStreamImpl)*/,v17/*class(_IDBRequestImpl)*/,v18/*class(_AbstractWorkerImpl)*/,'EventTarget|DOMWindow|WebSocket|WebKitNamedFlow|TextTrack|TextTrackCue|SpeechRecognition|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|DOMWindow|WebSocket|WebKitNamedFlow|TextTrack|TextTrackCue|SpeechRecognition|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection']];
$.dynamicSetMetadata(table);
})();


//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  for (var cls in collectedClasses) {
    if (Object.prototype.hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    if (finishedClasses[cls]) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=sound.dart.js.map