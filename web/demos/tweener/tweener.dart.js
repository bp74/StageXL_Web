// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    return !(t1 == null) ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Dynamic_ = {"": "Object;"};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;actualType,expectedType",
  toString$0: function() {
    return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.length($.$$index(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  $index: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib3$_current",
  get$current: function() {
    return this._liblib3$_current;
  },
  moveNext$0: function() {
    this._liblib3$_current = this._re.firstMatch$1(this._str);
    return !(this._liblib3$_current == null);
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  $index: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if ($.$$eq(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  }
};

$$.JsStringBuffer = {"": "Object;_contents",
  get$length: function() {
    return this._contents.length;
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(obj) {
    var t1, t2;
    if (typeof obj !== "string")
      return this.add$1$bailout(1, obj);
    t1 = this._contents;
    t2 = obj;
    this._contents = t1 + t2;
  },
  add$1$bailout: function(state0, obj) {
    var t1, t2;
    t1 = this._contents;
    t2 = typeof obj === "string" ? obj : $.S(obj);
    this._contents = t1 + t2;
  },
  clear$0: function() {
    this._contents = "";
  },
  toString$0: function() {
    return this._contents;
  }
};

$$.Collection = {"": "Iterable;",
  $isCollection: function() {
    return true;
  }
};

$$.DateTime = {"": "Object;millisecondsSinceEpoch>,isUtc",
  $eq: function(other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDateTime))
      return false;
    return $.$$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch);
  },
  $lt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$lt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$lt$bailout(2, 0, t1, t3);
    return t1 < t3;
  },
  $$lt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$lt(t1, t3);
    }
  },
  $le: function(other) {
    return $.$$le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $gt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$gt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$gt$bailout(2, 0, t1, t3);
    return t1 > t3;
  },
  $$gt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$gt(t1, t3);
    }
  },
  $ge: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$ge$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$ge$bailout(2, 0, t1, t3);
    return t1 >= t3;
  },
  $$ge$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$ge(t1, t3);
    }
  },
  get$hashCode: function() {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function() {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_fourDigits();
    t2 = new $.DateTime_toString_threeDigits();
    t3 = new $.DateTime_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(duration) {
    var ms, t2;
    ms = this.millisecondsSinceEpoch;
    t2 = duration.get$inMilliseconds();
    if (typeof ms !== "number")
      return this.add$1$bailout(1, duration, ms);
    if (typeof t2 !== "number")
      return this.add$1$bailout(2, 0, ms, t2);
    return $.DateTime$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
  },
  add$1$bailout: function(state0, duration, ms, t2) {
    switch (state0) {
      case 0:
        ms = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t2 = duration.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.DateTime$fromMillisecondsSinceEpoch($.$$add(ms, t2), this.isUtc);
    }
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.$$gt($.abs(millisecondsSinceEpoch), 8640000000000000) === true)
      throw $.$$throw($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.$$throw($.ArgumentError$(isUtc));
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  $isDateTime: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (!(t1 == null))
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.JsStringBuffer$("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(1, t1, t2);
    for (; $.$$lt(t1.i_1, t2.length) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
      if ($.$$gt(t1.i_1, 0) === true)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      $.add(t3, $.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    if (!(t2 == null))
      $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(2, t1, t2);
    actualParameters = $.toString(t1.sb_0);
    t1.sb_0 = $.JsStringBuffer$("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      $.add(t3, t2[i]);
    }
    formalParameters = $.toString(t1.sb_0);
    t2 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
  },
  toString$0$bailout1: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.JsStringBuffer$("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSArrayJSString(t2); $.$$lt(t1.i_1, t3.get$length(t2)) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
            if ($.$$gt(t1.i_1, 0) === true)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, $.Error_safeToString(t3.$index(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (!(t2 == null))
          $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t3, actualParameters, i, formalParameters;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          actualParameters = $.toString(t1.sb_0);
          t1.sb_0 = $.JsStringBuffer$("");
          for (t3 = $.getInterceptor$JSArrayJSString(t2), i = 0; $.CONSTANT.$lt(i, t3.get$length(t2)); ++i) {
            if (i > 0)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, t3.$index(t2, i));
          }
          formalParameters = $.toString(t1.sb_0);
          t2 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message>",
  toString$0: function() {
    return "Unsupported operation: " + $.S(this.get$message());
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function() {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.FormatException = {"": "Object;",
  toString$0: function() {
    return "FormatException: " + this.message;
  },
  $isException: true
};

$$.IllegalJSRegExpException = {"": "FormatException;message"};

$$.Iterable = {"": "Object;",
  contains$1: function(element) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$length: function() {
    var it, count;
    it = this.get$iterator();
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function() {
    return this.get$iterator().moveNext$0() !== true;
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(other) {
    if (other == null)
      return false;
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.ObjectInterceptor = {"": "Object;",
  $and: function(receiver, a0) {
    return receiver.$and(a0);
  },
  $mul: function(receiver, a0) {
    return receiver.$mul(a0);
  },
  $add: function(receiver, a0) {
    return receiver.$add(a0);
  },
  $sub: function(receiver, a0) {
    return receiver.$sub(a0);
  },
  $div: function(receiver, a0) {
    return receiver.$div(a0);
  },
  $lt: function(receiver, a0) {
    return receiver.$lt(a0);
  },
  $shl: function(receiver, a0) {
    return receiver.$shl(a0);
  },
  $le: function(receiver, a0) {
    return receiver.$le(a0);
  },
  $eq: function(receiver, a0) {
    return receiver.$eq(a0);
  },
  $gt: function(receiver, a0) {
    return receiver.$gt(a0);
  },
  $ge: function(receiver, a0) {
    return receiver.$ge(a0);
  },
  $shr: function(receiver, a0) {
    return receiver.$shr(a0);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  clear$0: function(receiver) {
    return receiver.clear$0();
  },
  codeUnitAt$1: function(receiver, a0) {
    return receiver.codeUnitAt$1(a0);
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  },
  contains$2: function(receiver, a0, a1) {
    return receiver.contains$2(a0, a1);
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  indexOf$1: function(receiver, a0) {
    return receiver.indexOf$1(a0);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  insertRange$3: function(receiver, a0, a1, a2) {
    return receiver.insertRange$3(a0, a1, a2);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  get$isEven: function(receiver) {
    return receiver.get$isEven();
  },
  get$isInfinite: function(receiver) {
    return receiver.get$isInfinite();
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  removeAt$1: function(receiver, a0) {
    return receiver.removeAt$1(a0);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  split$1: function(receiver, a0) {
    return receiver.split$1(a0);
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  toInt$0: function(receiver) {
    return receiver.toInt$0();
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  $index: function(receiver, a0) {
    return receiver.$index(a0);
  },
  $indexSet: function(receiver, a0, a1) {
    return receiver.$indexSet(a0, a1);
  },
  $xor: function(receiver, a0) {
    return receiver.$xor(a0);
  },
  $negate: function(receiver) {
    return receiver.$negate();
  },
  $or: function(receiver, a0) {
    return receiver.$or(a0);
  },
  $tdiv: function(receiver, a0) {
    return receiver.$tdiv(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  $eq: function(receiver, a) {
    return receiver == a;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeAt$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    $.checkGrowable(receiver, "removeAt");
    return receiver.splice(index, 1)[0];
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$$eq(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  insertRange$3: function(receiver, start, $length, initialValue) {
    return $.listInsertRange(receiver, start, $length, initialValue);
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = $.getInterceptor(other), i = 0; i < receiver.length; ++i)
      if (t1.$eq(other, receiver[i]) === true)
        return true;
    return false;
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.ToString_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    return $.List_List$from(receiver);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNumber = {"": "Object;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver) === true)
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver) === true)
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = this.truncate$0(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $isJSNumber: true,
  $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSInt = {"": "JSNumber;",
  get$isEven: function(receiver) {
    return (receiver & 1) === 0;
  },
  $is$int: true,
  $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSDouble = {"": "JSNumber;", $is$double: true, $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    return this.codeUnitAt$1(receiver, index);
  },
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$JSNumber(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$$gt(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$._HashMapImpl = {"": "Object;_keys>,_values>,_loadLimit,_numberOfEntries,_numberOfDeleted",
  _probeForAdding$1: function(key) {
    var t1, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.hashCode(key);
    t3 = this._keys.length;
    if (t1 !== (t1 | 0))
      return this._probeForAdding$1$bailout(1, key, t1);
    hash = (t1 & t3 - 1) >>> 0;
    for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null) {
        if (insertionIndex < 0)
          return hash;
        return insertionIndex;
      } else if ($.$$eq(existingKey, key) === true)
        return hash;
      else if (insertionIndex < 0 && existingKey === $.CONSTANT4)
        insertionIndex = hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
      if (hash !== (hash | 0))
        return this._probeForAdding$1$bailout(2, key, 0, hash, numberOfProbes0, insertionIndex);
    }
  },
  _probeForAdding$1$bailout: function(state0, key, t1, hash, numberOfProbes0, insertionIndex) {
    switch (state0) {
      case 0:
        if (key == null)
          throw $.$$throw($.ArgumentError$(null));
        t1 = $.hashCode(key);
      case 1:
        state0 = 0;
        hash = $.$$and(t1, this._keys.length - 1);
        numberOfProbes = 1;
        insertionIndex = -1;
      case 2:
        var numberOfProbes, existingKey;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
                t1 = this._keys;
                if (hash !== (hash | 0))
                  throw $.iae(hash);
                if (hash < 0 || hash >= t1.length)
                  throw $.ioore(hash);
                existingKey = t1[hash];
                if (existingKey == null) {
                  if (insertionIndex < 0)
                    return hash;
                  return insertionIndex;
                } else if ($.$$eq(existingKey, key) === true)
                  return hash;
                else if (insertionIndex < 0 && existingKey === $.CONSTANT4)
                  insertionIndex = hash;
                numberOfProbes0 = numberOfProbes + 1;
                hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
              case 2:
                state0 = 0;
                numberOfProbes = numberOfProbes0;
            }
    }
  },
  _probeForLookup$1: function(key) {
    var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    hash = $.$$and($.hashCode(key), this._keys.length - 1);
    if (hash !== (hash | 0))
      return this._probeForLookup$1$bailout(1, key, hash);
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _probeForLookup$1$bailout: function(state0, key, hash) {
    var numberOfProbes, t1, existingKey, numberOfProbes0;
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _ensureCapacity$0: function() {
    var newNumberOfEntries, capacity, t1;
    newNumberOfEntries = $.$$add(this._numberOfEntries, 1);
    if ($.$$ge(newNumberOfEntries, this._loadLimit) === true) {
      this._grow$1(this._keys.length * 2);
      return;
    }
    capacity = this._keys.length;
    if (typeof newNumberOfEntries !== "number")
      throw $.iae(newNumberOfEntries);
    t1 = this._numberOfDeleted;
    if (t1 > capacity - newNumberOfEntries - t1)
      this._grow$1(capacity);
  },
  _grow$1: function(newCapacity) {
    var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
    capacity = this._keys.length;
    this._loadLimit = $.$$tdiv($.$$mul(newCapacity, 3), 4);
    oldKeys = this._keys;
    oldValues = this._values;
    this._keys = $.List_List$fixedLength(newCapacity, null);
    this._values = $.List_List$fixedLength(newCapacity, null);
    for (i = 0; i < capacity; ++i) {
      if (i >= oldKeys.length)
        throw $.ioore(i);
      key = oldKeys[i];
      if (key == null || key === $.CONSTANT4)
        continue;
      if (i >= oldValues.length)
        throw $.ioore(i);
      value = oldValues[i];
      newIndex = this._probeForAdding$1(key);
      t1 = this._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = key;
      t1 = this._values;
      if (newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = value;
    }
    this._numberOfDeleted = 0;
  },
  $indexSet: function(key, value) {
    var index, t1;
    this._ensureCapacity$0();
    index = this._probeForAdding$1(key);
    t1 = this._keys;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1 = t1[index];
    if (t1 == null || t1 === $.CONSTANT4) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.$$indexSet$bailout(1, key, value, t1, index);
      this._numberOfEntries = t1 + 1;
    }
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = key;
    t1 = this._values;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  $$indexSet$bailout: function(state0, key, value, t1, index) {
    switch (state0) {
      case 0:
        this._ensureCapacity$0();
        index = this._probeForAdding$1(key);
        t1 = this._keys;
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t1.length)
          throw $.ioore(index);
        t1 = t1[index];
      case 1:
        if (state0 === 1 || state0 === 0 && (t1 == null || t1 === $.CONSTANT4))
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 1:
              state0 = 0;
              this._numberOfEntries = $.$$add(t1, 1);
          }
        t1 = this._keys;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = key;
        t1 = this._values;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = value;
    }
  },
  $index: function(key) {
    var index, t1;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.$$index$bailout(1, index);
    if (index < 0)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index) {
    var t1;
    if ($.$$lt(index, 0) === true)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  remove$1: function(key) {
    var index, t1, t3, value;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.remove$1$bailout(1, index);
    if (index >= 0) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.remove$1$bailout(2, index, t1);
      this._numberOfEntries = t1 - 1;
      t3 = this._values;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t3.length)
        throw $.ioore(index);
      value = t3[index];
      t3[index] = null;
      t3 = this._keys;
      if (index >= t3.length)
        throw $.ioore(index);
      t3[index] = $.CONSTANT4;
      this._numberOfDeleted = this._numberOfDeleted + 1;
      return value;
    }
    return;
  },
  remove$1$bailout: function(state0, index, t1) {
    switch (state0) {
      case 0:
        index = this._probeForLookup$1(key);
      case 1:
        state0 = 0;
      case 2:
        var t3, value;
        if (state0 === 2 || state0 === 0 && $.$$ge(index, 0) === true)
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 2:
              state0 = 0;
              this._numberOfEntries = $.$$sub(t1, 1);
              t3 = this._values;
              if (index !== (index | 0))
                throw $.iae(index);
              if (index < 0 || index >= t3.length)
                throw $.ioore(index);
              value = t3[index];
              t3[index] = null;
              t3 = this._keys;
              if (index >= t3.length)
                throw $.ioore(index);
              t3[index] = $.CONSTANT4;
              this._numberOfDeleted = this._numberOfDeleted + 1;
              return value;
          }
        return;
    }
  },
  get$isEmpty: function() {
    var t1 = this._numberOfEntries;
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  get$length: function() {
    return this._numberOfEntries;
  },
  forEach$1: function(f) {
    var it, t1, t2, t3;
    it = $._HashMapImplIndexIterator$(this);
    for (; it.moveNext$0() === true;) {
      t1 = this._keys;
      t2 = it.get$current();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t2 = t1[t2];
      t1 = this._values;
      t3 = it.get$current();
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      f.call$2(t2, t1[t3]);
    }
  },
  get$keys: function() {
    return $._HashMapImplKeyIterable$(this);
  },
  get$values: function() {
    return $._HashMapImplValueIterable$(this);
  },
  containsKey$1: function(key) {
    return $.$$eq(this._probeForLookup$1(key), -1) !== true;
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  _HashMapImpl$0: function() {
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
    this._keys = $.List_List$fixedLength(8, null);
    this._values = $.List_List$fixedLength(8, null);
  },
  $isMap: function() {
    return true;
  }
};

$$._HashMapImplKeyIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplKeyIterator$(this._map);
  }
};

$$._HashMapImplValueIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplValueIterator$(this._map);
  }
};

$$._HashMapImplIterator = {"": "Object;",
  moveNext$0: function() {
    var t1, $length, t3, newIndex, t2, key;
    t1 = this._map;
    $length = $.length(t1.get$_keys());
    if (typeof $length !== "number")
      return this.moveNext$0$bailout(1, $length, t1);
    t3 = this._index;
    if (typeof t3 !== "number")
      return this.moveNext$0$bailout(2, $length, t1, t3);
    newIndex = t3 + 1;
    for (t2 = t1.get$_keys(); newIndex < $length;) {
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, $length, t1, t2, newIndex, $.CONSTANT5);
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t2.length)
        throw $.ioore(newIndex);
      key = t2[newIndex];
      if (!(key == null) && !(key === $.CONSTANT4)) {
        this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t2, t1.get$_values());
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = $length;
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, $length, t1, t3, newIndex, t2) {
    switch (state0) {
      case 0:
        t1 = this._map;
        $length = $.length(t1.get$_keys());
      case 1:
        state0 = 0;
        t3 = this._index;
      case 2:
        state0 = 0;
        newIndex = $.$$add(t3, 1);
      case 3:
        var key;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t2 = $.getInterceptor$JSNumber(newIndex);
                if (!(t2.$lt(newIndex, $length) === true))
                  break L0;
                t3 = t1.get$_keys();
              case 3:
                state0 = 0;
                key = $.$$index(t3, newIndex);
                if (!(key == null) && !(key === $.CONSTANT4)) {
                  this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t1.get$_keys(), t1.get$_values());
                  this._index = newIndex;
                  return true;
                }
                newIndex = t2.$add(newIndex, 1);
            }
        this._index = $length;
        this._liblib0$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$._HashMapImplKeyIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(keys, index);
  }
};

$$._HashMapImplValueIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(values, index);
  }
};

$$._HashMapImplIndexIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return index;
  }
};

$$._DeletedKeySentinel = {"": "Object;"};

$$._KeyValuePair = {"": "Object;key>,value="};

$$._LinkedHashMapImpl = {"": "Object;_liblib0$_list,_map",
  $indexSet: function(key, value) {
    var t1, t3;
    if (this._map.containsKey$1(key) === true) {
      t1 = this._map;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.$$indexSet$bailout(1, key, value, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key].get$element().set$value(value);
    } else {
      this._liblib0$_list.addLast$1($._KeyValuePair$(key, value));
      t1 = this._map;
      t3 = this._liblib0$_list.lastEntry$0();
      if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
        return this.$$indexSet$bailout(2, key, 0, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key] = t3;
    }
  },
  $$indexSet$bailout: function(state0, key, value, t1) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && this._map.containsKey$1(key) === true)
          switch (state0) {
            case 0:
              t1 = this._map;
            case 1:
              state0 = 0;
              $.$$index(t1, key).get$element().set$value(value);
          }
        else
          switch (state0) {
            case 0:
              this._liblib0$_list.addLast$1($._KeyValuePair$(key, value));
              t1 = this._map;
            case 2:
              state0 = 0;
              $.$$indexSet(t1, key, this._liblib0$_list.lastEntry$0());
          }
    }
  },
  $index: function(key) {
    var t1, entry;
    t1 = this._map;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    entry = t1[key];
    if (entry == null)
      return;
    return entry.get$element().get$value();
  },
  $$index$bailout: function(state0, key, t1) {
    var entry = $.$$index(t1, key);
    if (entry == null)
      return;
    return entry.get$element().get$value();
  },
  remove$1: function(key) {
    var entry = $.remove(this._map, key);
    if (entry == null)
      return;
    entry.remove$0();
    return entry.get$element().get$value();
  },
  get$keys: function() {
    return $.MappedIterable$(this._liblib0$_list, new $._LinkedHashMapImpl_keys_anon());
  },
  get$values: function() {
    return $.MappedIterable$(this._liblib0$_list, new $._LinkedHashMapImpl_values_anon());
  },
  forEach$1: function(f) {
    this._liblib0$_list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
  },
  containsKey$1: function(key) {
    return this._map.containsKey$1(key);
  },
  get$length: function() {
    return $.length(this._map);
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  _LinkedHashMapImpl$0: function() {
    this._map = $.HashMap_HashMap();
    this._liblib0$_list = $.DoubleLinkedQueue$();
  },
  $isMap: function() {
    return true;
  }
};

$$.DoubleLinkedQueueEntry = {"": "Object;_previous=,_next=,_element",
  _link$2: function(p, n) {
    this._next = n;
    this._previous = p;
    p.set$_next(this);
    n.set$_previous(this);
  },
  prepend$1: function(e) {
    $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
  },
  remove$0: function() {
    var t1 = this._next;
    this._previous.set$_next(t1);
    t1 = this._previous;
    this._next.set$_previous(t1);
    this._next = null;
    this._previous = null;
    return this._element;
  },
  _asNonSentinelEntry$0: function() {
    return this;
  },
  previousEntry$0: function() {
    return this._previous._asNonSentinelEntry$0();
  },
  nextEntry$0: function() {
    return this._next._asNonSentinelEntry$0();
  },
  get$element: function() {
    return this._element;
  },
  DoubleLinkedQueueEntry$1: function(e) {
    this._element = e;
  }
};

$$._DoubleLinkedQueueEntrySentinel = {"": "DoubleLinkedQueueEntry;_previous,_next,_element",
  remove$0: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _asNonSentinelEntry$0: function() {
    return;
  },
  get$element: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _DoubleLinkedQueueEntrySentinel$0: function() {
    this._link$2(this, this);
  }
};

$$.DoubleLinkedQueue = {"": "Collection;_sentinel",
  addLast$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  add$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  removeLast$0: function() {
    return this._sentinel._previous.remove$0();
  },
  removeFirst$0: function() {
    return this._sentinel._next.remove$0();
  },
  remove$1: function(o) {
    var entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel);) {
      if ($.$$eq(entry.get$element(), o) === true) {
        entry.remove$0();
        return;
      }
      entry = entry.get$_next();
    }
  },
  lastEntry$0: function() {
    return this._sentinel.previousEntry$0();
  },
  get$isEmpty: function() {
    var t1 = this._sentinel;
    return t1._next === t1;
  },
  get$iterator: function() {
    return $._DoubleLinkedQueueIterator$(this._sentinel);
  },
  toString$0: function() {
    return $.ToString_collectionToString(this);
  },
  DoubleLinkedQueue$0: function() {
    this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
  },
  $isCollection: function() {
    return true;
  }
};

$$._DoubleLinkedQueueIterator = {"": "Object;_sentinel,_currentEntry,_liblib0$_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._currentEntry;
    if (t1 == null)
      return false;
    this._currentEntry = t1.get$_next();
    t1 = this._currentEntry;
    t2 = this._sentinel;
    if (t1 == null ? t2 == null : t1 === t2) {
      this._currentEntry = null;
      this._liblib0$_current = null;
      this._sentinel = null;
      return false;
    }
    this._liblib0$_current = t1.get$element();
    return true;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$.MappedIterable = {"": "Iterable;_iterable,_f",
  get$iterator: function() {
    return $.MappedIterator$(this._iterable.get$iterator(), this._f);
  },
  get$length: function() {
    return this._iterable.get$length();
  },
  get$isEmpty: function() {
    return this._iterable.get$isEmpty();
  }
};

$$.MappedIterator = {"": "Iterator;_liblib$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib$_current = this._f$1(t1.get$current());
      return true;
    } else {
      this._liblib$_current = null;
      return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.ListIterator = {"": "Object;_list,_liblib$_length,_liblib$_position,_liblib$_current",
  moveNext$0: function() {
    var t1, t2, t3, nextPosition;
    t1 = this._list;
    t2 = t1.length;
    t3 = this._liblib$_length;
    if (t2 !== t3)
      throw $.$$throw($.ConcurrentModificationError$(t1));
    t2 = this._liblib$_position;
    if (t2 !== (t2 | 0))
      return this.moveNext$0$bailout(1, t2, t1, t3);
    nextPosition = t2 + 1;
    if (nextPosition < t3) {
      this._liblib$_position = nextPosition;
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      return true;
    }
    this._liblib$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, t2, t1, t3) {
    var nextPosition = $.$$add(t2, 1);
    if ($.$$lt(nextPosition, t3) === true) {
      this._liblib$_position = nextPosition;
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      return true;
    }
    this._liblib$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId,nextManagerId,currentContext>,rootContext,topEventLoop>,fromCommandLine,isWorker>,supportsWorkers,isolates,mainManager,managers",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = !($.get$globalWorker() == null) && !($.get$IsolateNatives_thisScript() == null);
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true && $.isEmpty(this.isolates) === true && $.$$eq(this.topEventLoop.get$activeTimerCount(), 0) === true)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id>,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (!(old == null))
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    return $.$$index(this.ports, portId);
  },
  register$2: function(portId, port) {
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($._ExceptionImplementation$("Registry: ports must be registered only once."));
    $.$$indexSet(this.ports, portId, port);
    $.$$indexSet($globalState.isolates, this.id, this);
  },
  unregister$1: function(portId) {
    $.remove(this.ports, portId);
    if ($.isEmpty(this.ports) === true)
      $.remove($globalState.isolates, this.id);
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.$$add(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount=",
  enqueue$3: function(isolate, fn, msg) {
    $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if ($.isEmpty(t1) === true)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if (!($globalState.rootContext == null) && $globalState.isolates.containsKey$1($globalState.rootContext.get$id()) === true && $globalState.fromCommandLine === true && $.isEmpty($globalState.rootContext.get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if (!($.get$globalWindow() == null))
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0() === true;)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (!(replyTo == null) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_BufferingSendPort))
      throw $.$$throw($._ExceptionImplementation$("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $._CompleterImpl$();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.future;
  },
  $isSendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$$eq(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function() {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$$eq(this._workerId, other._workerId) === true && $.$$eq(this._isolateId, other._isolateId) === true && $.$$eq(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    return $.$$xor($.$$xor($.$$shl(this._workerId, 16), $.$$shl(this._isolateId, 8)), this._receivePortId);
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_callback>",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function() {
    this._callback = null;
    $globalState.currentContext.unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $globalState.currentContext.get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    if (!($.$$index(this._visited, list) == null))
      return;
    $.$$indexSet(this._visited, list, true);
    $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    if (!($.$$index(this._visited, map) == null))
      return;
    $.$$indexSet(this._visited, map, true);
    $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (!!port.$is_BufferingSendPort && port._port == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.currentManagerId, port._isolateId, port._receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$JSArrayJSString(x);
    managerId = t1.$index(x, 1);
    isolateId = t1.$index(x, 2);
    receivePortId = t1.$index(x, 3);
    if ($.$$eq(managerId, $globalState.currentManagerId) === true) {
      isolate = $.$$index($globalState.isolates, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(object, info) {
    $.add(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    this.tagged = $.List_List(0);
  },
  cleanup$0: function() {
    var $length, i;
    $length = $.length(this.tagged);
    if (typeof $length !== "number")
      return this.cleanup$0$bailout(1, $length);
    i = 0;
    for (; i < $length; ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, $length) {
    var i = 0;
    for (; $.CONSTANT.$lt(i, $length); ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(object) {
    return;
  },
  $indexSet: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && x.$isMap())
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copy, len, i, t1;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior())
      return this.visitList$1$bailout1(1, list);
    copy = $.$$index(this._visited, list);
    if (!(copy == null))
      return copy;
    len = list.length;
    copy = $.List_List(len);
    $.$$indexSet(this._visited, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        copy = $.$$index(this._visited, list);
        if (!(copy == null))
          return copy;
        t1 = $.getInterceptor$JSArrayJSString(list);
        len = t1.get$length(list);
      case 2:
        var copy, i, t2;
        state0 = 0;
        copy = $.List_List(len);
        $.$$indexSet(this._visited, list, copy);
        for (i = 0; $.CONSTANT.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= copy.length)
            throw $.ioore(i);
          copy[i] = t2;
        }
        return copy;
    }
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t1.copy_0 = $.$$index(this._visited, map);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = $._HashMapImpl$();
    $.$$indexSet(this._visited, map, t1.copy_0);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copyId, id;
    copyId = $.$$index(this._visited, list);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var copyId, id;
    copyId = $.$$index(this._visited, map);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, map, id);
    return ["map", id, this._serializeList$1($.toList(map.get$keys())), this._serializeList$1($.toList(map.get$values()))];
  },
  _serializeList$1: function(list) {
    var len, result, i, t1;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSArrayJSString(list);
        len = t1.get$length(list);
      case 2:
        var result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        for (i = 0; $.CONSTANT.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $._HashMapImpl$();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$$index(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var id = $.$$index(x, 1);
    return $.$$index(this._deserialized, id);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$JSArrayJSString(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    $.$$indexSet(this._deserialized, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id, t2, len) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSArrayJSString(x);
        id = t1.$index(x, 1);
        dartList = t1.$index(x, 2);
      case 1:
        state0 = 0;
        $.$$indexSet(this._deserialized, id, dartList);
        t2 = $.getInterceptor$JSArrayJSString(dartList);
        len = t2.get$length(dartList);
      case 2:
        var t1, i;
        state0 = 0;
        for (i = 0; $.CONSTANT.$lt(i, len); ++i)
          t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
        return dartList;
    }
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, keys, values, len, i, key;
    result = $._HashMapImpl$();
    t1 = $.getInterceptor$JSArrayJSString(x);
    id = t1.$index(x, 1);
    $.$$indexSet(this._deserialized, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, 0, result, keys, 0, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values, t3, len) {
    switch (state0) {
      case 0:
        result = $._HashMapImpl$();
        t1 = $.getInterceptor$JSArrayJSString(x);
        id = t1.$index(x, 1);
        $.$$indexSet(this._deserialized, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(keys);
        len = t3.get$length(keys);
      case 3:
        var id, i;
        state0 = 0;
        for (t1 = $.getInterceptor$JSArrayJSString(values), i = 0; $.CONSTANT.$lt(i, len); ++i)
          result.$indexSet(this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle<",
  cancel$0: function() {
    if (!($.get$globalThis().setTimeout == null)) {
      if (this._inEventLoop === true)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.set$activeTimerCount($.$$sub(t1.get$activeTimerCount(), 1));
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if ($.$$eq(milliseconds, 0) === true)
      t1 = $.hasTimer() !== true || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), new $.anon(this, callback), "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add(t1.get$activeTimerCount(), 1));
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer) {
    var message, exception, t1;
    buffer.add$1("'");
    message = null;
    try {
      message = $.toString(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    buffer.add$1(message);
    buffer.add$1("'\n");
    t1 = this.stackTrace;
    if (!(t1 == null)) {
      buffer.add$1("Stack trace:\n");
      buffer.add$1($.toString(t1));
      buffer.add$1("\n");
    }
  },
  toString$0: function() {
    var buffer, cause;
    buffer = $.JsStringBuffer$("");
    buffer.add$1("AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; !(cause == null);) {
      buffer.add$1("Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return buffer.toString$0();
  },
  $isAsyncError: true
};

$$._CompleterImpl = {"": "Object;future,_isComplete",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future,_nextListener=",
  _sendValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state,_resultOrListeners>",
  get$_isComplete: function() {
    return $.$$eq(this._state, 0) !== true;
  },
  get$_hasValue: function() {
    return $.$$eq(this._state, 1);
  },
  get$_hasError: function() {
    return $.$$eq($.$$and(this._state, 2), 0) !== true;
  },
  get$_hasUnhandledError: function() {
    return $.$$eq($.$$and(this._state, 4), 0) !== true;
  },
  _clearUnhandledError$0: function() {
    this._state = $.$$and(this._state, 4294967291);
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (!(onError == null))
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.TimerImpl$(0, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._clearUnhandledError$0();
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.TimerImpl$(0, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; !(listeners == null); listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_setValue: function() {
    return new $.BoundClosure$1(this, "_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (!(listeners0 == null)) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = $.$$or(this._state, 4);
    $.TimerImpl$(0, new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; !(current == null); prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue() === true)
      future._setValue$1(this._resultOrListeners);
    else {
      this._clearUnhandledError$0();
      future._setError$1(this._resultOrListeners);
    }
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  },
  _asListener$0: function() {
    return $._FutureListenerWrapper$(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (!(this._test == null)) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  contains$1: function(match) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_contains_anon(t1, match, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_contains_anon0(future), t3, true);
    return future;
  },
  get$length: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  },
  get$isEmpty: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_isEmpty_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_isEmpty_anon0(future), t3, true);
    return future;
  },
  toList$0: function() {
    var result, future, t1, t2;
    result = [];
    future = $._FutureImpl$();
    t1 = new $.Stream_toList_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toList_anon0(result, future), t2, true);
    return future;
  }
};

$$.StreamSubscription = {"": "Object;"};

$$._EventStream = {"": "Stream;_liblib1$_target,_eventType,_useCapture",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._liblib1$_target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_liblib1$_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_liblib1$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (!(t1 == null))
      this._liblib1$_target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    this._liblib1$_target = null;
    this._onData = null;
  },
  get$_liblib1$_canceled: function() {
    return this._liblib1$_target == null;
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    if (!(this._onData == null) && this.get$_paused() !== true)
      this._liblib1$_target.$$dom_addEventListener$3(this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._CustomEventStreamProvider = {"": "Object;_eventTypeGetter",
  _eventTypeGetter$1: function(arg0) {
    return this._eventTypeGetter.call$1(arg0);
  },
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventTypeGetter$1(e), useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$top: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.top);
  },
  close$0: function() {
    return this._window.close();
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._length;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(2, t1, nextPosition);
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, t1, nextPosition);
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, nextPosition) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.$$add(t1, 1);
        t1 = this._length;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && $.$$lt(nextPosition, t1) === true)
          switch (state0) {
            case 0:
              t1 = this._array;
            case 3:
              state0 = 0;
              this._current = $.$$index(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$.Juggler = {"": "Object;_elapsedTime,_animatables,_animatablesCount",
  add$1: function(animatable) {
    var t1, t3, t4;
    if (animatable == null)
      return;
    t1 = this._animatablesCount;
    t3 = this._animatables;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.add$1$bailout(1, animatable, t1);
    if (t1 === t4)
      t3.push(animatable);
    else {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      t3[t1] = animatable;
    }
    t1 = this._animatablesCount;
    if (typeof t1 !== "number")
      return this.add$1$bailout(2, 0, t1);
    this._animatablesCount = t1 + 1;
  },
  add$1$bailout: function(state0, animatable, t1) {
    switch (state0) {
      case 0:
        if (animatable == null)
          return;
        t1 = this._animatablesCount;
      case 1:
        state0 = 0;
        t1 = $.$$eq(t1, this._animatables.length);
        t3 = this._animatables;
        if (t1 === true)
          t3.push(animatable);
        else {
          t1 = this._animatablesCount;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          t3[t1] = animatable;
        }
        t1 = this._animatablesCount;
      case 2:
        var t3;
        state0 = 0;
        this._animatablesCount = $.$$add(t1, 1);
    }
  },
  remove$1: function(animatable) {
    var i, t1;
    if (animatable == null)
      return;
    i = 0;
    while (true) {
      t1 = this._animatablesCount;
      if (typeof t1 !== "number")
        return this.remove$1$bailout(1, animatable, t1, i);
      if (!(i < t1))
        break;
      t1 = this._animatables;
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq(t1[i], animatable) === true) {
        t1 = this._animatables;
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i] = null;
        break;
      }
      ++i;
    }
  },
  remove$1$bailout: function(state0, animatable, t1, i) {
    switch (state0) {
      case 0:
        if (animatable == null)
          return;
        i = 0;
      case 1:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this._animatablesCount;
              case 1:
                state0 = 0;
                if (!$.CONSTANT.$lt(i, t1))
                  break L0;
                t1 = this._animatables;
                if (i >= t1.length)
                  throw $.ioore(i);
                if ($.$$eq(t1[i], animatable) === true) {
                  t1 = this._animatables;
                  if (i >= t1.length)
                    throw $.ioore(i);
                  t1[i] = null;
                  break L0;
                }
                ++i;
            }
    }
  },
  advanceTime$1: function(time) {
    var t1, animatablesCount, tail, head, animatable, t2, i, t3, tail0;
    if (typeof time !== "number")
      return this.advanceTime$1$bailout(1, time);
    t1 = this._elapsedTime;
    if (typeof t1 !== "number")
      return this.advanceTime$1$bailout(2, time, t1);
    this._elapsedTime = t1 + time;
    animatablesCount = this._animatablesCount;
    if (animatablesCount !== (animatablesCount | 0))
      return this.advanceTime$1$bailout(3, time, 0, animatablesCount);
    for (tail = 0, head = 0; head < animatablesCount; ++head) {
      t1 = this._animatables;
      if (head >= t1.length)
        throw $.ioore(head);
      animatable = t1[head];
      if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
        if (tail !== head) {
          t1 = this._animatables;
          if (tail >= t1.length)
            throw $.ioore(tail);
          t1[tail] = animatable;
        }
        ++tail;
      }
    }
    t1 = this._animatables;
    t2 = t1.length;
    i = animatablesCount;
    while (true) {
      t3 = this._animatablesCount;
      if (typeof t3 !== "number")
        return this.advanceTime$1$bailout(4, 0, t3, 0, tail, i);
      if (!(i < t3))
        break;
      tail0 = tail + 1;
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t3 = t1[i];
      if (tail >= t2)
        throw $.ioore(tail);
      t1[tail] = t3;
      ++i;
      tail = tail0;
    }
    for (i = tail; i < t3; ++i) {
      if (i >= t2)
        throw $.ioore(i);
      t1[i] = null;
    }
    this._animatablesCount = tail;
    return true;
  },
  advanceTime$1$bailout: function(state0, time, t1, animatablesCount, tail, i) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._elapsedTime;
      case 2:
        state0 = 0;
        this._elapsedTime = $.$$add(t1, time);
        animatablesCount = this._animatablesCount;
      case 3:
        state0 = 0;
        for (tail = 0, head = 0; $.CONSTANT.$lt(head, animatablesCount); ++head) {
          t1 = this._animatables;
          if (head >= t1.length)
            throw $.ioore(head);
          animatable = t1[head];
          if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
            if (tail !== head) {
              t1 = this._animatables;
              if (tail >= t1.length)
                throw $.ioore(tail);
              t1[tail] = animatable;
            }
            ++tail;
          }
        }
        i = animatablesCount;
      case 4:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this._animatablesCount;
              case 4:
                state0 = 0;
                if (!($.$$lt(i, t1) === true))
                  break L0;
                t1 = this._animatables;
                tail0 = tail + 1;
                if (i !== (i | 0))
                  throw $.iae(i);
                t2 = t1.length;
                if (i < 0 || i >= t2)
                  throw $.ioore(i);
                t3 = t1[i];
                if (tail >= t2)
                  throw $.ioore(tail);
                t1[tail] = t3;
                ++i;
                tail = tail0;
            }
        i = tail;
      case 5:
        var head, animatable, tail0, t2, t3;
        L1:
          while (true)
            switch (state0) {
              case 0:
                t1 = this._animatablesCount;
              case 5:
                state0 = 0;
                if (!$.CONSTANT.$lt(i, t1))
                  break L1;
                t1 = this._animatables;
                if (i >= t1.length)
                  throw $.ioore(i);
                t1[i] = null;
                ++i;
            }
        this._animatablesCount = tail;
        return true;
    }
  },
  Juggler$0: function() {
    this._elapsedTime = 0;
    this._animatables = $.List_List(0);
    this._animatablesCount = 0;
  }
};

$$.Point = {"": "Object;x=,y=",
  get$length: function() {
    var t1, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.get$length$bailout(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.get$length$bailout(2, t1, t3);
    return $.sqrt(t1 + t3 * t3);
  },
  get$length$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        return $.sqrt($.$$add(t1, $.$$mul(t3, t3)));
    }
  },
  add$1: function(p) {
    var t1, t3, t6;
    t1 = this.x;
    t3 = p.get$x();
    if (typeof t1 !== "number")
      return this.add$1$bailout(1, p, t1);
    if (typeof t3 !== "number")
      return this.add$1$bailout(2, p, t1, t3);
    t3 = t1 + t3;
    t1 = this.y;
    t6 = p.get$y();
    if (typeof t1 !== "number")
      return this.add$1$bailout(3, p, t1, t3);
    if (typeof t6 !== "number")
      return this.add$1$bailout(4, 0, t1, t3, t6);
    return $.Point$(t3, t1 + t6);
  },
  add$1$bailout: function(state0, p, t1, t3, t6) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = p.get$x();
      case 2:
        state0 = 0;
        t3 = $.$$add(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t6 = p.get$y();
      case 4:
        state0 = 0;
        return $.Point$(t3, $.$$add(t1, t6));
    }
  },
  copyFrom$1: function(p) {
    this.x = p.get$x();
    this.y = p.get$y();
  },
  equals$1: function(p) {
    return $.$$eq(this.x, p.x) === true && $.$$eq(this.y, p.y) === true;
  }
};

$$.Rectangle = {"": "Object;x=,y=,width=,height=",
  get$left: function() {
    return this.x;
  },
  get$top: function() {
    return this.y;
  },
  get$right: function() {
    var t1, t3;
    t1 = this.x;
    t3 = this.width;
    if (typeof t1 !== "number")
      return this.get$right$bailout(1, t1);
    if (typeof t3 !== "number")
      return this.get$right$bailout(2, t1, t3);
    return t1 + t3;
  },
  get$right$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = this.width;
      case 2:
        state0 = 0;
        return $.$$add(t1, t3);
    }
  },
  get$bottom: function() {
    var t1, t3;
    t1 = this.y;
    t3 = this.height;
    if (typeof t1 !== "number")
      return this.get$bottom$bailout(1, t1);
    if (typeof t3 !== "number")
      return this.get$bottom$bailout(2, t1, t3);
    return t1 + t3;
  },
  get$bottom$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.y;
      case 1:
        state0 = 0;
        t3 = this.height;
      case 2:
        state0 = 0;
        return $.$$add(t1, t3);
    }
  },
  get$size: function() {
    return $.Point$(this.width, this.height);
  },
  contains$2: function(px, py) {
    return $.$$le(this.x, px) === true && $.$$le(this.y, py) === true && $.$$ge(this.get$right(), px) === true && $.$$ge(this.get$bottom(), py) === true;
  },
  equals$1: function(r) {
    return $.$$eq(this.x, r.x) === true && $.$$eq(this.y, r.y) === true && $.$$eq(this.width, r.get$width()) === true && $.$$eq(this.height, r.get$height()) === true;
  },
  get$isEmpty: function() {
    var t1 = this.width;
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    if (t1 === 0) {
      t1 = this.height;
      if (typeof t1 !== "number")
        return this.get$isEmpty$bailout(2, t1);
      t1 = t1 === 0;
    } else
      t1 = false;
    return t1;
  },
  get$isEmpty$bailout: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = this.width;
      case 1:
        state0 = 0;
      case 2:
        var t3;
        if (state0 === 2 || state0 === 0 && $.$$eq(t1, 0) === true)
          switch (state0) {
            case 0:
              t1 = this.height;
            case 2:
              state0 = 0;
              t3 = $.$$eq(t1, 0) === true;
              t1 = t3;
          }
        else
          t1 = false;
        return t1;
    }
  },
  copyFrom$1: function(r) {
    this.x = r.get$x();
    this.y = r.get$y();
    this.width = r.get$width();
    this.height = r.get$height();
  }
};

$$.Matrix = {"": "Object;_a,_b,_c,_d,_tx,_ty,_det",
  get$a: function() {
    return this._a;
  },
  get$b: function() {
    return this._b;
  },
  get$c: function() {
    return this._c;
  },
  get$d: function() {
    return this._d;
  },
  get$tx: function() {
    return this._tx;
  },
  get$ty: function() {
    return this._ty;
  },
  get$det: function() {
    return this._det;
  },
  transformPoint$1: function(p) {
    return $.Point$($.$$add($.$$add($.$$mul(p.x, this._a), $.$$mul(p.y, this._c)), this._tx), $.$$add($.$$add($.$$mul(p.x, this._b), $.$$mul(p.y, this._d)), this._ty));
  },
  concat$1: function(matrix) {
    var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
    a1 = this._a;
    if (typeof a1 !== "number")
      return this.concat$1$bailout(1, matrix, a1);
    b1 = this._b;
    if (typeof b1 !== "number")
      return this.concat$1$bailout(2, matrix, a1, b1);
    c1 = this._c;
    if (typeof c1 !== "number")
      return this.concat$1$bailout(3, matrix, a1, b1, c1);
    d1 = this._d;
    if (typeof d1 !== "number")
      return this.concat$1$bailout(4, matrix, a1, b1, c1, d1);
    tx1 = this._tx;
    if (typeof tx1 !== "number")
      return this.concat$1$bailout(5, matrix, a1, b1, c1, d1, tx1);
    ty1 = this._ty;
    if (typeof ty1 !== "number")
      return this.concat$1$bailout(6, matrix, a1, b1, c1, d1, tx1, ty1);
    det1 = this._det;
    a2 = matrix.get$a();
    if (typeof a2 !== "number")
      return this.concat$1$bailout(8, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2);
    b2 = matrix.get$b();
    if (typeof b2 !== "number")
      return this.concat$1$bailout(9, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2);
    c2 = matrix.get$c();
    if (typeof c2 !== "number")
      return this.concat$1$bailout(10, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2);
    d2 = matrix.get$d();
    if (typeof d2 !== "number")
      return this.concat$1$bailout(11, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2);
    tx2 = matrix.get$tx();
    ty2 = matrix.get$ty();
    det2 = matrix.get$det();
    this._a = a1 * a2 + b1 * c2;
    this._b = a1 * b2 + b1 * d2;
    this._c = c1 * a2 + d1 * c2;
    this._d = c1 * b2 + d1 * d2;
    if (typeof tx2 !== "number")
      return this.concat$1$bailout(12, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2);
    this._tx = tx1 * a2 + ty1 * c2 + tx2;
    if (typeof ty2 !== "number")
      return this.concat$1$bailout(13, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2);
    this._ty = tx1 * b2 + ty1 * d2 + ty2;
    if (typeof det1 !== "number")
      return this.concat$1$bailout(7, matrix, a1, b1, c1, d1, tx1, ty1, det1);
    if (typeof det2 !== "number")
      return this.concat$1$bailout(14, 0, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2);
    this._det = det1 * det2;
  },
  concat$1$bailout: function(state0, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2) {
    switch (state0) {
      case 0:
        a1 = this._a;
      case 1:
        state0 = 0;
        b1 = this._b;
      case 2:
        state0 = 0;
        c1 = this._c;
      case 3:
        state0 = 0;
        d1 = this._d;
      case 4:
        state0 = 0;
        tx1 = this._tx;
      case 5:
        state0 = 0;
        ty1 = this._ty;
      case 6:
        state0 = 0;
        det1 = this._det;
      case 7:
        state0 = 0;
        a2 = matrix.get$a();
      case 8:
        state0 = 0;
        b2 = matrix.get$b();
      case 9:
        state0 = 0;
        c2 = matrix.get$c();
      case 10:
        state0 = 0;
        d2 = matrix.get$d();
      case 11:
        state0 = 0;
        tx2 = matrix.get$tx();
      case 12:
        state0 = 0;
        ty2 = matrix.get$ty();
      case 13:
        state0 = 0;
        det2 = matrix.get$det();
      case 14:
        var t15, t16, t17, t18, t19, t20;
        state0 = 0;
        t15 = $.getInterceptor$JSNumber(a1);
        t16 = $.getInterceptor$JSNumber(b1);
        this._a = $.$$add(t15.$mul(a1, a2), t16.$mul(b1, c2));
        this._b = $.$$add(t15.$mul(a1, b2), t16.$mul(b1, d2));
        t17 = $.getInterceptor$JSNumber(c1);
        t18 = $.getInterceptor$JSNumber(d1);
        this._c = $.$$add(t17.$mul(c1, a2), t18.$mul(d1, c2));
        this._d = $.$$add(t17.$mul(c1, b2), t18.$mul(d1, d2));
        t19 = $.getInterceptor$JSNumber(tx1);
        t20 = $.getInterceptor$JSNumber(ty1);
        this._tx = $.$$add($.$$add(t19.$mul(tx1, a2), t20.$mul(ty1, c2)), tx2);
        this._ty = $.$$add($.$$add(t19.$mul(tx1, b2), t20.$mul(ty1, d2)), ty2);
        this._det = $.$$mul(det1, det2);
    }
  },
  identity$0: function() {
    this._a = 1;
    this._b = 0;
    this._c = 0;
    this._d = 1;
    this._tx = 0;
    this._ty = 0;
    this._det = 1;
  },
  invert$0: function() {
    var a, b, c, d, tx, ty, det;
    a = this._a;
    b = this._b;
    c = this._c;
    d = this._d;
    tx = this._tx;
    ty = this._ty;
    det = this._det;
    this._a = $.$$div(d, det);
    this._b = $.$$negate($.$$div(b, det));
    this._c = $.$$negate($.$$div(c, det));
    this._d = $.$$div(a, det);
    this._tx = $.$$negate($.$$add($.$$mul(this._a, tx), $.$$mul(this._c, ty)));
    this._ty = $.$$negate($.$$add($.$$mul(this._b, tx), $.$$mul(this._d, ty)));
    if (typeof det !== "number")
      throw $.iae(det);
    this._det = 1 / det;
  },
  setTo$6: function(a, b, c, d, tx, ty) {
    this._a = a;
    this._b = b;
    this._c = c;
    this._d = d;
    this._tx = tx;
    this._ty = ty;
    this._det = $.$$sub($.$$mul(a, d), $.$$mul(b, c));
  },
  copyFrom$1: function(matrix) {
    this._a = matrix.get$a();
    this._b = matrix.get$b();
    this._c = matrix.get$c();
    this._d = matrix.get$d();
    this._tx = matrix.get$tx();
    this._ty = matrix.get$ty();
    this._det = matrix.get$det();
  },
  copyFromAndConcat$2: function(copyMatrix, concatMatrix) {
    var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
    a1 = copyMatrix.get$a();
    if (typeof a1 !== "number")
      return this.copyFromAndConcat$2$bailout(1, copyMatrix, concatMatrix, a1);
    b1 = copyMatrix.get$b();
    if (typeof b1 !== "number")
      return this.copyFromAndConcat$2$bailout(2, copyMatrix, concatMatrix, a1, b1);
    c1 = copyMatrix.get$c();
    if (typeof c1 !== "number")
      return this.copyFromAndConcat$2$bailout(3, copyMatrix, concatMatrix, a1, b1, c1);
    d1 = copyMatrix.get$d();
    if (typeof d1 !== "number")
      return this.copyFromAndConcat$2$bailout(4, copyMatrix, concatMatrix, a1, b1, c1, d1);
    tx1 = copyMatrix.get$tx();
    if (typeof tx1 !== "number")
      return this.copyFromAndConcat$2$bailout(5, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1);
    ty1 = copyMatrix.get$ty();
    if (typeof ty1 !== "number")
      return this.copyFromAndConcat$2$bailout(6, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, ty1);
    det1 = copyMatrix.get$det();
    a2 = concatMatrix.get$a();
    if (typeof a2 !== "number")
      return this.copyFromAndConcat$2$bailout(8, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2);
    b2 = concatMatrix.get$b();
    if (typeof b2 !== "number")
      return this.copyFromAndConcat$2$bailout(9, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2);
    c2 = concatMatrix.get$c();
    if (typeof c2 !== "number")
      return this.copyFromAndConcat$2$bailout(10, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2);
    d2 = concatMatrix.get$d();
    if (typeof d2 !== "number")
      return this.copyFromAndConcat$2$bailout(11, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2);
    tx2 = concatMatrix.get$tx();
    ty2 = concatMatrix.get$ty();
    det2 = concatMatrix.get$det();
    this._a = a1 * a2 + b1 * c2;
    this._b = a1 * b2 + b1 * d2;
    this._c = c1 * a2 + d1 * c2;
    this._d = c1 * b2 + d1 * d2;
    if (typeof tx2 !== "number")
      return this.copyFromAndConcat$2$bailout(12, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2);
    this._tx = tx1 * a2 + ty1 * c2 + tx2;
    if (typeof ty2 !== "number")
      return this.copyFromAndConcat$2$bailout(13, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2);
    this._ty = tx1 * b2 + ty1 * d2 + ty2;
    if (typeof det1 !== "number")
      return this.copyFromAndConcat$2$bailout(7, 0, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1);
    if (typeof det2 !== "number")
      return this.copyFromAndConcat$2$bailout(14, 0, 0, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2);
    this._det = det1 * det2;
  },
  copyFromAndConcat$2$bailout: function(state0, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2) {
    switch (state0) {
      case 0:
        a1 = copyMatrix.get$a();
      case 1:
        state0 = 0;
        b1 = copyMatrix.get$b();
      case 2:
        state0 = 0;
        c1 = copyMatrix.get$c();
      case 3:
        state0 = 0;
        d1 = copyMatrix.get$d();
      case 4:
        state0 = 0;
        tx1 = copyMatrix.get$tx();
      case 5:
        state0 = 0;
        ty1 = copyMatrix.get$ty();
      case 6:
        state0 = 0;
        det1 = copyMatrix.get$det();
      case 7:
        state0 = 0;
        a2 = concatMatrix.get$a();
      case 8:
        state0 = 0;
        b2 = concatMatrix.get$b();
      case 9:
        state0 = 0;
        c2 = concatMatrix.get$c();
      case 10:
        state0 = 0;
        d2 = concatMatrix.get$d();
      case 11:
        state0 = 0;
        tx2 = concatMatrix.get$tx();
      case 12:
        state0 = 0;
        ty2 = concatMatrix.get$ty();
      case 13:
        state0 = 0;
        det2 = concatMatrix.get$det();
      case 14:
        var t15, t16, t17, t18, t19, t20;
        state0 = 0;
        t15 = $.getInterceptor$JSNumber(a1);
        t16 = $.getInterceptor$JSNumber(b1);
        this._a = $.$$add(t15.$mul(a1, a2), t16.$mul(b1, c2));
        this._b = $.$$add(t15.$mul(a1, b2), t16.$mul(b1, d2));
        t17 = $.getInterceptor$JSNumber(c1);
        t18 = $.getInterceptor$JSNumber(d1);
        this._c = $.$$add(t17.$mul(c1, a2), t18.$mul(d1, c2));
        this._d = $.$$add(t17.$mul(c1, b2), t18.$mul(d1, d2));
        t19 = $.getInterceptor$JSNumber(tx1);
        t20 = $.getInterceptor$JSNumber(ty1);
        this._tx = $.$$add($.$$add(t19.$mul(tx1, a2), t20.$mul(ty1, c2)), tx2);
        this._ty = $.$$add($.$$add(t19.$mul(tx1, b2), t20.$mul(ty1, d2)), ty2);
        this._det = $.$$mul(det1, det2);
    }
  }
};

$$.RenderLoop = {"": "Object;_juggler,_stages,_renderTime,_enterFrameIndex,_enterFrameEvent",
  _onAnimationFrame$1: function(currentTime) {
    var t1, deltaTime, deltaTimeSec, i;
    if (typeof currentTime !== "number")
      return this._onAnimationFrame$1$bailout(1, currentTime);
    window.requestAnimationFrame$1(this.get$_onAnimationFrame());
    if ($.isNaN(this._renderTime) === true)
      this._renderTime = currentTime;
    t1 = this._renderTime;
    if (typeof t1 !== "number")
      return this._onAnimationFrame$1$bailout(2, currentTime, t1);
    if (t1 > currentTime)
      this._renderTime = currentTime;
    t1 = this._renderTime;
    if (typeof t1 !== "number")
      return this._onAnimationFrame$1$bailout(3, currentTime, t1);
    deltaTime = currentTime - t1;
    deltaTimeSec = deltaTime / 1000;
    if (deltaTime >= 1) {
      this._renderTime = currentTime;
      this._enterFrameEvent.set$_passedTime(deltaTimeSec);
      this._enterFrameIndex._dispatchEvent$1(this._enterFrameEvent);
      this._juggler.advanceTime$1(deltaTimeSec);
      i = 0;
      while (true) {
        t1 = $.length(this._stages);
        if (typeof t1 !== "number")
          return this._onAnimationFrame$1$bailout(4, 0, t1, i);
        if (!(i < t1))
          break;
        t1 = this._stages;
        if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
          return this._onAnimationFrame$1$bailout(5, 0, t1, i);
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i].materialize$0();
        ++i;
      }
    }
  },
  _onAnimationFrame$1$bailout: function(state0, currentTime, t1, i) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        window.requestAnimationFrame$1(this.get$_onAnimationFrame());
        if ($.isNaN(this._renderTime) === true)
          this._renderTime = currentTime;
        t1 = this._renderTime;
      case 2:
        state0 = 0;
        if ($.$$gt(t1, currentTime) === true)
          this._renderTime = currentTime;
        t1 = this._renderTime;
      case 3:
        state0 = 0;
        deltaTime = $.$$sub(currentTime, t1);
        t1 = $.getInterceptor$JSNumber(deltaTime);
        deltaTimeSec = t1.$div(deltaTime, 1000);
      default:
        var deltaTime, deltaTimeSec;
        if (state0 === 5 || state0 === 4 || state0 === 0 && t1.$ge(deltaTime, 1) === true)
          switch (state0) {
            case 0:
              this._renderTime = currentTime;
              this._enterFrameEvent.set$_passedTime(deltaTimeSec);
              this._enterFrameIndex._dispatchEvent$1(this._enterFrameEvent);
              this._juggler.advanceTime$1(deltaTimeSec);
              i = 0;
            default:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      t1 = $.length(this._stages);
                    case 4:
                      state0 = 0;
                      if (!$.CONSTANT.$lt(i, t1))
                        break L0;
                      t1 = this._stages;
                    case 5:
                      state0 = 0;
                      $.$$index(t1, i).materialize$0();
                      ++i;
                  }
          }
    }
  },
  get$_onAnimationFrame: function() {
    return new $.BoundClosure$1(this, "_onAnimationFrame$1");
  },
  addStage$1: function(stage) {
    $.add(this._stages, stage);
  },
  RenderLoop$0: function() {
    this._juggler = $.Juggler$();
    this._stages = $.List_List(0);
    this._renderTime = (0/0);
    this._enterFrameIndex = $.get$_EventStreamIndex_enterFrame();
    this._enterFrameEvent = $.EnterFrameEvent$(0);
    $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
  }
};

$$.RenderState = {"": "Object;_context,_matrices,_alphas,_depth",
  reset$0: function() {
    var t1, m, a;
    this._depth = 0;
    t1 = this._matrices;
    if (0 >= t1.length)
      throw $.ioore(0);
    m = t1[0];
    t1 = this._alphas;
    if (0 >= t1.length)
      throw $.ioore(0);
    a = t1[0];
    this._context.setTransform$6(m.get$a(), m.get$b(), m.get$c(), m.get$d(), m.get$tx(), m.get$ty());
    this._context.set$globalAlpha(a);
    t1 = this._context;
    t1.clearRect$4(0, 0, t1.get$canvas().get$width(), this._context.get$canvas().get$height());
  },
  renderDisplayObject$1: function(displayObject) {
    var d1, d2, t1, t2, m1, m2, t3, a1, t5, a2;
    d1 = this._depth;
    d2 = d1 + 1;
    t1 = this._matrices;
    t2 = t1.length;
    if (d1 < 0 || d1 >= t2)
      throw $.ioore(d1);
    m1 = t1[d1];
    if (d2 < 0 || d2 >= t2)
      throw $.ioore(d2);
    m2 = t1[d2];
    t1 = this._alphas;
    t3 = t1.length;
    if (d1 >= t3)
      throw $.ioore(d1);
    a1 = t1[d1];
    t5 = displayObject.get$_alpha();
    if (typeof t5 !== "number")
      return this.renderDisplayObject$1$bailout(2, displayObject, m2, t1, t3, a1, d1, d2, m1, t5);
    if (typeof a1 !== "number")
      return this.renderDisplayObject$1$bailout(1, displayObject, m2, t1, t3, a1, d1, d2, m1);
    a2 = t5 * a1;
    if (d2 >= t3)
      throw $.ioore(d2);
    t1[d2] = a2;
    m2.copyFromAndConcat$2(displayObject.get$_transformationMatrix(), m1);
    this._context.setTransform$6(m2.get$a(), m2.get$b(), m2.get$c(), m2.get$d(), m2.get$tx(), m2.get$ty());
    this._context.set$globalAlpha(a2);
    this._depth = d2;
    if (displayObject.get$mask() == null)
      displayObject.render$1(this);
    else {
      this._context.save$0();
      displayObject.get$mask().render$1(this);
      displayObject.render$1(this);
      this._context.restore$0();
    }
    this._depth = d1;
  },
  renderDisplayObject$1$bailout: function(state0, displayObject, m2, t1, t3, a1, d1, d2, m1, t5) {
    switch (state0) {
      case 0:
        d1 = this._depth;
        d2 = d1 + 1;
        t1 = this._matrices;
        t2 = t1.length;
        if (d1 < 0 || d1 >= t2)
          throw $.ioore(d1);
        m1 = t1[d1];
        if (d2 < 0 || d2 >= t2)
          throw $.ioore(d2);
        m2 = t1[d2];
        t1 = this._alphas;
        t3 = t1.length;
        if (d1 >= t3)
          throw $.ioore(d1);
        a1 = t1[d1];
      case 1:
        state0 = 0;
        t5 = displayObject.get$_alpha();
      case 2:
        var t2, a2;
        state0 = 0;
        a2 = $.$$mul(t5, a1);
        if (d2 >= t3)
          throw $.ioore(d2);
        t1[d2] = a2;
        m2.copyFromAndConcat$2(displayObject.get$_transformationMatrix(), m1);
        this._context.setTransform$6(m2.get$a(), m2.get$b(), m2.get$c(), m2.get$d(), m2.get$tx(), m2.get$ty());
        this._context.set$globalAlpha(a2);
        this._depth = d2;
        if (displayObject.get$mask() == null)
          displayObject.render$1(this);
        else {
          this._context.save$0();
          displayObject.get$mask().render$1(this);
          displayObject.render$1(this);
          this._context.restore$0();
        }
        this._depth = d1;
    }
  },
  RenderState$fromCanvasRenderingContext2D$2: function(context, matrix) {
    var i, t1, t2, m, a;
    this._context = context;
    this._matrices = $.List_List$fixedLength(100, null);
    this._alphas = $.List_List$fixedLength(100, null);
    for (i = 0; i < 100; ++i) {
      t1 = this._matrices;
      t2 = $.Matrix$fromIdentity();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
      t2 = this._alphas;
      if (i >= t2.length)
        throw $.ioore(i);
      t2[i] = 1;
    }
    this._depth = 0;
    if (!(matrix == null)) {
      t1 = this._matrices;
      if (0 >= t1.length)
        throw $.ioore(0);
      t1[0].copyFrom$1(matrix);
    }
    t1 = this._matrices;
    if (0 >= t1.length)
      throw $.ioore(0);
    m = t1[0];
    t1 = this._alphas;
    if (0 >= t1.length)
      throw $.ioore(0);
    a = t1[0];
    this._context.setTransform$6(m.get$a(), m.get$b(), m.get$c(), m.get$d(), m.get$tx(), m.get$ty());
    this._context.set$globalAlpha(a);
  }
};

$$.Event = {"": "Object;_type,_bubbles,_eventPhase<,_target=,_currentTarget<,_stopsPropagation<,_stopsImmediatePropagation<",
  _reset$2: function(type, bubbles) {
    this._type = type;
    this._bubbles = bubbles;
    this._eventPhase = 2;
    this._target = null;
    this._currentTarget = null;
    this._stopsPropagation = false;
    this._stopsImmediatePropagation = false;
  },
  get$stopsPropagation: function() {
    return this._stopsPropagation;
  },
  get$type: function() {
    return this._type;
  },
  get$bubbles: function() {
    return this._bubbles;
  },
  get$captures: function() {
    return true;
  },
  get$target: function() {
    return this._target;
  },
  Event$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.EventDispatcher = {"": "Object;_eventStreams",
  hasEventListener$1: function(type) {
    var t1 = this._eventStreams;
    if (!(t1 == null))
      return t1.containsKey$1(type) === true || this._eventStreams.containsKey$1($.S(type) + "_CAPTURE") === true;
    else
      return false;
  },
  addEventListener$3$useCapture: function(eventType, eventListener, useCapture) {
    return this._getEventStream$2(eventType, useCapture).listen$1(eventListener);
  },
  addEventListener$2: function(eventType, eventListener) {
    return this.addEventListener$3$useCapture(eventType, eventListener, false);
  },
  dispatchEvent$1: function($event) {
    this._dispatchEventInternal$4($event, this, this, 2);
  },
  _dispatchEventInternal$4: function($event, target, currentTarget, eventPhase) {
    var eventStreamKey, t1, eventStream;
    if (!(this._eventStreams == null)) {
      if (eventPhase === 1)
        eventStreamKey = $.S($event.get$type()) + "_CAPTURE";
      else {
        t1 = $event.get$type();
        if (typeof t1 !== "string")
          return this._dispatchEventInternal$4$bailout(1, $event, target, currentTarget, eventPhase, t1);
        eventStreamKey = t1;
      }
      eventStream = $.$$index(this._eventStreams, eventStreamKey);
      if (!(eventStream == null)) {
        $event.set$_target(target);
        $event.set$_currentTarget(currentTarget);
        $event.set$_eventPhase(eventPhase);
        $event.set$_stopsPropagation(false);
        $event.set$_stopsImmediatePropagation(false);
        eventStream._dispatchEvent$1($event);
      }
    }
  },
  _dispatchEventInternal$4$bailout: function(state0, $event, target, currentTarget, eventPhase, t1) {
    switch (state0) {
      case 0:
      case 1:
        var eventStreamKey, eventStream;
        if (state0 === 1 || state0 === 0 && !(this._eventStreams == null))
          switch (state0) {
            case 0:
            case 1:
              if (state0 === 0 && eventPhase === 1)
                eventStreamKey = $.S($event.get$type()) + "_CAPTURE";
              else
                switch (state0) {
                  case 0:
                    t1 = $event.get$type();
                  case 1:
                    state0 = 0;
                    eventStreamKey = t1;
                }
              eventStream = $.$$index(this._eventStreams, eventStreamKey);
              if (!(eventStream == null)) {
                $event.set$_target(target);
                $event.set$_currentTarget(currentTarget);
                $event.set$_eventPhase(eventPhase);
                $event.set$_stopsPropagation(false);
                $event.set$_stopsImmediatePropagation(false);
                eventStream._dispatchEvent$1($event);
              }
          }
    }
  },
  _getEventStream$2: function(eventType, useCapture) {
    var eventStreamKey, eventStream, t1;
    if (this._eventStreams == null)
      this._eventStreams = $._HashMapImpl$();
    eventStreamKey = useCapture === true ? $.S(eventType) + "_CAPTURE" : eventType;
    eventStream = $.$$index(this._eventStreams, eventStreamKey);
    if (eventStream == null) {
      t1 = this._eventStreams;
      eventStream = $._EventStream$0(this, eventType, useCapture);
      $.$$indexSet(t1, eventStreamKey, eventStream);
    }
    return eventStream;
  }
};

$$._EventStreamIndex = {"": "Object;_eventStreams,_eventStreamsCount",
  _addEventStream$1: function(eventStream) {
    var i, t1, t2, t3;
    for (i = 0; t1 = this._eventStreamsCount, i < t1; ++i) {
      t1 = this._eventStreams;
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq(t1[i], eventStream) === true)
        return;
    }
    t2 = this._eventStreams;
    t3 = t2.length;
    if (t1 === t3)
      $.CONSTANT1.add$1(t2, eventStream);
    else {
      if (t1 < 0 || t1 >= t3)
        throw $.ioore(t1);
      t2[t1] = eventStream;
    }
    this._eventStreamsCount = this._eventStreamsCount + 1;
  },
  _dispatchEvent$1: function($event) {
    var eventStreamsCount, tail, head, t1, eventStream, t2, i, t3, tail0;
    eventStreamsCount = this._eventStreamsCount;
    $event.set$_eventPhase(2);
    $event.set$_stopsPropagation(false);
    $event.set$_stopsImmediatePropagation(false);
    for (tail = 0, head = 0; head < eventStreamsCount; ++head) {
      t1 = this._eventStreams;
      if (head >= t1.length)
        throw $.ioore(head);
      eventStream = t1[head];
      if (!(eventStream == null)) {
        t1 = eventStream.get$_subscriptionsCount();
        if (typeof t1 !== "number")
          return this._dispatchEvent$1$bailout(1, $event, t1, eventStreamsCount, eventStream, tail, head);
        t1 = t1 > 0;
      } else
        t1 = false;
      if (t1) {
        $event.set$_target(eventStream.get$_target());
        $event.set$_currentTarget(eventStream.get$_target());
        eventStream._dispatchEvent$1($event);
        if (tail !== head) {
          t1 = this._eventStreams;
          if (tail >= t1.length)
            throw $.ioore(tail);
          t1[tail] = eventStream;
        }
        ++tail;
      }
    }
    for (t1 = this._eventStreams, t2 = t1.length, i = eventStreamsCount; t3 = this._eventStreamsCount, i < t3; ++i, tail = tail0) {
      tail0 = tail + 1;
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t3 = t1[i];
      if (tail >= t2)
        throw $.ioore(tail);
      t1[tail] = t3;
    }
    for (i = tail; i < t3; ++i) {
      if (i >= t2)
        throw $.ioore(i);
      t1[i] = null;
    }
    this._eventStreamsCount = tail;
  },
  _dispatchEvent$1$bailout: function(state0, $event, t1, eventStreamsCount, eventStream, tail, head) {
    switch (state0) {
      case 0:
        eventStreamsCount = this._eventStreamsCount;
        $event.set$_eventPhase(2);
        $event.set$_stopsPropagation(false);
        $event.set$_stopsImmediatePropagation(false);
        tail = 0;
        head = 0;
      case 1:
        var t3, t2, i, tail0;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(head < eventStreamsCount))
                  break L0;
                t1 = this._eventStreams;
                if (head >= t1.length)
                  throw $.ioore(head);
                eventStream = t1[head];
              case 1:
                if (state0 === 1 || state0 === 0 && !(eventStream == null))
                  switch (state0) {
                    case 0:
                      t1 = eventStream.get$_subscriptionsCount();
                    case 1:
                      state0 = 0;
                      t3 = $.$$gt(t1, 0) === true;
                      t1 = t3;
                  }
                else
                  t1 = false;
                if (t1) {
                  $event.set$_target(eventStream.get$_target());
                  $event.set$_currentTarget(eventStream.get$_target());
                  eventStream._dispatchEvent$1($event);
                  if (tail !== head) {
                    t1 = this._eventStreams;
                    if (tail >= t1.length)
                      throw $.ioore(tail);
                    t1[tail] = eventStream;
                  }
                  ++tail;
                }
                ++head;
            }
        for (t1 = this._eventStreams, t2 = t1.length, i = eventStreamsCount; t3 = this._eventStreamsCount, i < t3; ++i, tail = tail0) {
          tail0 = tail + 1;
          if (i < 0 || i >= t2)
            throw $.ioore(i);
          t3 = t1[i];
          if (tail >= t2)
            throw $.ioore(tail);
          t1[tail] = t3;
        }
        for (i = tail; i < t3; ++i) {
          if (i >= t2)
            throw $.ioore(i);
          t1[i] = null;
        }
        this._eventStreamsCount = tail;
    }
  },
  _EventStreamIndex$0: function() {
    this._eventStreams = $.List_List(50);
    this._eventStreamsCount = 0;
  }
};

$$._EventStream0 = {"": "Stream;_target>,_liblib2$_eventType,_liblib2$_useCapture,_subscriptions,_subscriptionsCount>",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    var subscription, t1, t2, t3;
    subscription = $._EventStreamSubscription$0(this, onData);
    t1 = this._subscriptionsCount;
    t2 = this._subscriptions;
    t3 = t2.length;
    if (t1 === t3)
      $.CONSTANT1.add$1(t2, subscription);
    else {
      if (t1 < 0 || t1 >= t3)
        throw $.ioore(t1);
      t2[t1] = subscription;
    }
    this._subscriptionsCount = this._subscriptionsCount + 1;
    if ($.$$eq(this._liblib2$_eventType, "enterFrame") === true && $.$$eq(this._liblib2$_useCapture, false) === true)
      $.get$_EventStreamIndex_enterFrame()._addEventStream$1(this);
    return subscription;
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  _onSubscriptionCancel$1: function(subscription) {
    var i, t1;
    for (i = 0; i < this._subscriptionsCount; ++i) {
      t1 = this._subscriptions;
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq(t1[i], subscription) === true) {
        t1 = this._subscriptions;
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i] = null;
        break;
      }
    }
  },
  _dispatchEvent$1: function($event) {
    var subscriptionsCount, tail, head, t1, subscription, t2, i, t3, tail0;
    subscriptionsCount = this._subscriptionsCount;
    for (tail = 0, head = 0; head < subscriptionsCount; ++head) {
      t1 = this._subscriptions;
      if (head >= t1.length)
        throw $.ioore(head);
      subscription = t1[head];
      if (!(subscription == null)) {
        subscription._liblib2$_onData$1($event);
        if (tail !== head) {
          t1 = this._subscriptions;
          if (tail >= t1.length)
            throw $.ioore(tail);
          t1[tail] = subscription;
        }
        ++tail;
      }
    }
    for (t1 = this._subscriptions, t2 = t1.length, i = subscriptionsCount; t3 = this._subscriptionsCount, i < t3; ++i, tail = tail0) {
      tail0 = tail + 1;
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t3 = t1[i];
      if (tail >= t2)
        throw $.ioore(tail);
      t1[tail] = t3;
    }
    for (i = tail; i < t3; ++i) {
      if (i >= t2)
        throw $.ioore(i);
      t1[i] = null;
    }
    this._subscriptionsCount = tail;
  },
  _EventStream$3: function(_target, _eventType, _useCapture) {
    this._subscriptions = $.List_List(5);
    this._subscriptionsCount = 0;
  }
};

$$.EventStreamProvider0 = {"": "Object;_liblib2$_eventType",
  forTarget$2$useCapture: function(target, useCapture) {
    return target._getEventStream$2(this._liblib2$_eventType, useCapture);
  },
  forTarget$1: function(target) {
    return this.forTarget$2$useCapture(target, false);
  }
};

$$._EventStreamSubscription0 = {"": "StreamSubscription;_eventStream,_liblib2$_onData,_liblib2$_pauseCount,_canceled",
  _liblib2$_onData$1: function(arg0) {
    return this._liblib2$_onData.call$1(arg0);
  },
  cancel$0: function() {
    if (!this._canceled) {
      this._eventStream._onSubscriptionCancel$1(this);
      this._canceled = true;
      this._liblib2$_onData = null;
    }
  },
  _liblib2$_EventStreamSubscription$2: function(_eventStream, _onData) {
    this._liblib2$_pauseCount = 0;
    this._canceled = false;
  }
};

$$.EnterFrameEvent = {"": "Event;_passedTime<,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  get$captures: function() {
    return false;
  },
  EnterFrameEvent$1: function(passedTime) {
    this._passedTime = passedTime;
  }
};

$$.MouseEvent = {"": "Event;_localX,_localY,_stageX,_stageY,_buttonDown<,_altKey<,_controlKey,_ctrlKey<,_shiftKey<,_clickCount<,_deltaX,_deltaY,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._localY = 0;
    this._localX = 0;
    this._stageY = 0;
    this._stageX = 0;
    this._buttonDown = false;
    this._altKey = false;
    this._controlKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._clickCount = 0;
    this._deltaX = 0;
    this._deltaY = 0;
  },
  set$_localPoint: function(point) {
    this._localX = point.get$x();
    this._localY = point.get$y();
  },
  set$_stagePoint: function(point) {
    this._stageX = point.get$x();
    this._stageY = point.get$y();
  },
  get$buttonDown: function() {
    return this._buttonDown;
  },
  get$altKey: function() {
    return this._altKey;
  },
  get$ctrlKey: function() {
    return this._ctrlKey;
  },
  get$shiftKey: function() {
    return this._shiftKey;
  },
  get$clickCount: function() {
    return this._clickCount;
  },
  MouseEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.KeyboardEvent = {"": "Event;_altKey<,_ctrlKey<,_shiftKey<,_commandKey,_controlKey,_charCode<,_keyCode<,_keyLocation<,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._altKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._commandKey = false;
    this._controlKey = false;
    this._charCode = 0;
    this._keyCode = 0;
    this._keyLocation = 0;
  },
  get$altKey: function() {
    return this._altKey;
  },
  get$ctrlKey: function() {
    return this._ctrlKey;
  },
  get$shiftKey: function() {
    return this._shiftKey;
  },
  get$charCode: function() {
    return this._charCode;
  },
  get$keyCode: function() {
    return this._keyCode;
  },
  get$keyLocation: function() {
    return this._keyLocation;
  },
  KeyboardEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.TextEvent = {"": "Event;_text,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation"};

$$.TouchEvent = {"": "Event;_touchPointID<,_isPrimaryTouchPoint<,_localX,_localY,_stageX,_stageY,_altKey<,_controlKey,_ctrlKey<,_shiftKey<,_pressure,_sizeX,_sizeY,_type,_bubbles,_eventPhase,_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._touchPointID = 0;
    this._isPrimaryTouchPoint = false;
    this._localY = 0;
    this._localX = 0;
    this._stageY = 0;
    this._stageX = 0;
    this._altKey = false;
    this._controlKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._pressure = 1;
    this._sizeX = 0;
    this._sizeY = 0;
  },
  set$_localPoint: function(point) {
    this._localX = point.get$x();
    this._localY = point.get$y();
  },
  set$_stagePoint: function(point) {
    this._stageX = point.get$x();
    this._stageY = point.get$y();
  },
  get$touchPointID: function() {
    return this._touchPointID;
  },
  get$altKey: function() {
    return this._altKey;
  },
  get$ctrlKey: function() {
    return this._ctrlKey;
  },
  get$shiftKey: function() {
    return this._shiftKey;
  },
  TouchEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.DisplayObject = {"": "EventDispatcher;_alpha>,_parent>",
  get$x: function() {
    return this._x;
  },
  get$y: function() {
    return this._y;
  },
  get$visible: function() {
    return this._visible;
  },
  get$mask: function() {
    return this._mask;
  },
  get$parent: function() {
    return this._parent;
  },
  get$root: function() {
    var currentObject, currentObject0;
    for (currentObject = this; currentObject0 = currentObject.get$_parent(), !(currentObject0 == null); currentObject = currentObject0)
      ;
    return currentObject;
  },
  get$stage: function() {
    var root = this.get$root();
    if (typeof root === "object" && root !== null && !!root.$isStage)
      return root;
    return;
  },
  set$x: function(value) {
    this._x = value;
    this._transformationMatrixRefresh = true;
  },
  set$y: function(value) {
    this._y = value;
    this._transformationMatrixRefresh = true;
  },
  set$scaleX: function(value) {
    this._scaleX = value;
    this._transformationMatrixRefresh = true;
  },
  set$scaleY: function(value) {
    this._scaleY = value;
    this._transformationMatrixRefresh = true;
  },
  get$width: function() {
    return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$width();
  },
  get$height: function() {
    return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$height();
  },
  set$width: function(value) {
    var normalWidth;
    this.set$scaleX(1);
    normalWidth = this.get$width();
    this.set$scaleX($.$$eq(normalWidth, 0) !== true ? $.$$div(value, normalWidth) : 1);
  },
  set$height: function(value) {
    var normalHeight;
    this.set$scaleY(1);
    normalHeight = this.get$height();
    this.set$scaleY($.$$eq(normalHeight, 0) !== true ? $.$$div(value, normalHeight) : 1);
  },
  removeFromParent$0: function() {
    var t1 = this._parent;
    if (!(t1 == null))
      t1.removeChild$1(this);
  },
  get$_transformationMatrix: function() {
    var t1, t2, t3, t4, t5, t6, t8, cosR, sinR, a, b, c, d, tx, t7;
    if (this._transformationMatrixRefresh) {
      this._transformationMatrixRefresh = false;
      t1 = this._rotation;
      t2 = this._pivotX;
      t3 = this._pivotY;
      if (t1 === 0) {
        t1 = this._transformationMatrixPrivate;
        t4 = this._scaleX;
        t5 = this._scaleY;
        t6 = this._x;
        if (typeof t4 !== "number")
          throw $.iae(t4);
        if (typeof t6 !== "number")
          return this.get$_transformationMatrix$bailout(1, t1, t3, t4, t5, t6, t2);
        t6 -= t2 * t4;
        t8 = this._y;
        if (typeof t5 !== "number")
          throw $.iae(t5);
        if (typeof t8 !== "number")
          return this.get$_transformationMatrix$bailout(2, t1, t3, t4, t5, t6, 0, t8);
        t1.setTo$6(t4, 0, 0, t5, t6, t8 - t3 * t5);
      } else {
        cosR = $.cos(t1);
        sinR = $.sin(t1);
        t1 = this._scaleX;
        if (typeof t1 !== "number")
          return this.get$_transformationMatrix$bailout(3, t1, t3, 0, 0, 0, t2, 0, cosR, sinR);
        a = t1 * cosR;
        b = t1 * sinR;
        t1 = this._scaleY;
        if (typeof t1 !== "number")
          return this.get$_transformationMatrix$bailout(5, t1, t3, 0, 0, 0, t2, 0, cosR, sinR, a, b);
        c = -t1 * sinR;
        d = t1 * cosR;
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.get$_transformationMatrix$bailout(7, 0, t3, 0, 0, 0, t2, 0, 0, 0, a, b, c, t1, d);
        tx = t1 - t2 * a - t3 * c;
        t7 = this._y;
        if (typeof t7 !== "number")
          return this.get$_transformationMatrix$bailout(8, 0, t3, 0, 0, 0, t2, 0, 0, 0, a, b, c, t7, d, tx);
        this._transformationMatrixPrivate.setTo$6(a, b, c, d, tx, t7 - t2 * b - t3 * d);
      }
    }
    return this._transformationMatrixPrivate;
  },
  get$_transformationMatrix$bailout: function(state0, t1, t3, t4, t5, t6, t2, t8, cosR, sinR, a, b, c, t7, d, tx) {
    switch (state0) {
      case 0:
      default:
        var t10, ty;
        if (state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && this._transformationMatrixRefresh)
          switch (state0) {
            case 0:
              this._transformationMatrixRefresh = false;
              t1 = this._rotation;
              t2 = this._pivotX;
              t3 = this._pivotY;
            default:
              if (state0 === 2 || state0 === 1 || state0 === 0 && t1 === 0)
                switch (state0) {
                  case 0:
                    t1 = this._transformationMatrixPrivate;
                    t4 = this._scaleX;
                    t5 = this._scaleY;
                    t6 = this._x;
                  case 1:
                    state0 = 0;
                    if (typeof t4 !== "number")
                      throw $.iae(t4);
                    t6 = $.$$sub(t6, t2 * t4);
                    t8 = this._y;
                  case 2:
                    state0 = 0;
                    t10 = this._scaleY;
                    if (typeof t10 !== "number")
                      throw $.iae(t10);
                    t1.setTo$6(t4, 0, 0, t5, t6, $.$$sub(t8, t3 * t10));
                }
              else
                switch (state0) {
                  case 0:
                    cosR = $.cos(t1);
                    sinR = $.sin(t1);
                    t1 = this._scaleX;
                  case 3:
                    state0 = 0;
                    a = $.$$mul(t1, cosR);
                    t1 = this._scaleX;
                  case 4:
                    state0 = 0;
                    b = $.$$mul(t1, sinR);
                    t1 = this._scaleY;
                  case 5:
                    state0 = 0;
                    c = $.$$mul($.$$negate(t1), sinR);
                    t7 = this._scaleY;
                  case 6:
                    state0 = 0;
                    d = $.$$mul(t7, cosR);
                    t7 = this._x;
                  case 7:
                    state0 = 0;
                    if (typeof a !== "number")
                      throw $.iae(a);
                    t7 = $.$$sub(t7, t2 * a);
                    if (typeof c !== "number")
                      throw $.iae(c);
                    tx = $.$$sub(t7, t3 * c);
                    t7 = this._y;
                  case 8:
                    state0 = 0;
                    if (typeof b !== "number")
                      throw $.iae(b);
                    t7 = $.$$sub(t7, t2 * b);
                    if (typeof d !== "number")
                      throw $.iae(d);
                    ty = $.$$sub(t7, t3 * d);
                    this._transformationMatrixPrivate.setTo$6(a, b, c, d, tx, ty);
                }
          }
        return this._transformationMatrixPrivate;
    }
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    returnRectangle.set$x(matrix.get$tx());
    returnRectangle.set$y(matrix.get$ty());
    returnRectangle.set$width(0);
    returnRectangle.set$height(0);
    return returnRectangle;
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    if ($.contains(this.getBoundsTransformed$1(this._tmpMatrixIdentity), localX, localY) === true)
      return this;
    return;
  },
  globalToLocal$1: function(globalPoint) {
    var displayObject, t1;
    this._tmpMatrix.identity$0();
    for (displayObject = this; t1 = this._tmpMatrix, !(displayObject == null); displayObject = displayObject.get$_parent())
      t1.concat$1(displayObject.get$_transformationMatrix());
    t1.invert$0();
    return this._tmpMatrix.transformPoint$1(globalPoint);
  },
  dispatchEvent$1: function($event) {
    var ancestor, ancestors, t1, t2, i;
    if ($event.get$captures() === true || $event.get$bubbles() === true) {
      for (ancestor = this._parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_parent())
        if (ancestor.hasEventListener$1($event.get$type()) === true) {
          if (ancestors == null)
            ancestors = $.List_List(0);
          $.add(ancestors, ancestor);
        }
    } else
      ancestors = null;
    if ($event.get$captures() === true && !(ancestors == null)) {
      t1 = $.getInterceptor$JSArrayJSString(ancestors);
      t2 = t1.get$length(ancestors);
      if (typeof t2 !== "number")
        return this.dispatchEvent$1$bailout1(1, $event, ancestors, t1, t2);
      i = t2 - 1;
      for (; i >= 0; --i) {
        t2 = $event.get$stopsPropagation();
        if (typeof t2 !== "boolean")
          return this.dispatchEvent$1$bailout1(2, $event, ancestors, t1, $.CONSTANT5, i, t2);
        if (!t2)
          t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 1);
      }
    }
    t1 = $event.get$stopsPropagation();
    if (typeof t1 !== "boolean")
      return this.dispatchEvent$1$bailout1(3, $event, ancestors, t1);
    if (!t1)
      this._dispatchEventInternal$4($event, this, this, 2);
    if ($event.get$bubbles() === true && !(ancestors == null)) {
      t1 = $.getInterceptor$JSArrayJSString(ancestors);
      i = 0;
      while (true) {
        t2 = t1.get$length(ancestors);
        if (typeof t2 !== "number")
          return this.dispatchEvent$1$bailout1(4, $event, ancestors, t1, t2, i);
        if (!(i < t2))
          break;
        t2 = $event.get$stopsPropagation();
        if (typeof t2 !== "boolean")
          return this.dispatchEvent$1$bailout1(5, $event, ancestors, t1, t2, i);
        if (!t2)
          t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 3);
        ++i;
      }
    }
  },
  dispatchEvent$1$bailout1: function(state0, $event, ancestors, t1, t2, i, t3) {
    switch (state0) {
      case 0:
        if ($event.get$captures() === true || $event.get$bubbles() === true) {
          for (ancestor = this._parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_parent())
            if (ancestor.hasEventListener$1($event.get$type()) === true) {
              if (ancestors == null)
                ancestors = $.List_List(0);
              $.add(ancestors, ancestor);
            }
        } else
          ancestors = null;
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && $event.get$captures() === true && !(ancestors == null))
          switch (state0) {
            case 0:
              t1 = $.getInterceptor$JSArrayJSString(ancestors);
              t2 = t1.get$length(ancestors);
            case 1:
              state0 = 0;
              i = $.$$sub(t2, 1);
            case 2:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = $.getInterceptor$JSNumber(i);
                      if (!(t2.$ge(i, 0) === true))
                        break L0;
                      t3 = $event.get$stopsPropagation();
                    case 2:
                      state0 = 0;
                      if ($.$$eq(t3, false) === true)
                        t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 1);
                      i = t2.$sub(i, 1);
                  }
          }
        t1 = $event.get$stopsPropagation();
      case 3:
        state0 = 0;
        if ($.$$eq(t1, false) === true)
          this._dispatchEventInternal$4($event, this, this, 2);
      case 4:
      case 5:
        var ancestor;
        if (state0 === 5 || state0 === 4 || state0 === 0 && $event.get$bubbles() === true && !(ancestors == null))
          switch (state0) {
            case 0:
              t1 = $.getInterceptor$JSArrayJSString(ancestors);
              i = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = t1.get$length(ancestors);
                    case 4:
                      state0 = 0;
                      if (!$.CONSTANT.$lt(i, t2))
                        break L1;
                      t2 = $event.get$stopsPropagation();
                    case 5:
                      state0 = 0;
                      if ($.$$eq(t2, false) === true)
                        t1.$index(ancestors, i)._dispatchEventInternal$4($event, this, t1.$index(ancestors, i), 3);
                      ++i;
                  }
          }
    }
  },
  _setParent$1: function(value) {
    var ancestor;
    for (ancestor = value; !(ancestor == null); ancestor = ancestor.get$_parent())
      if ($.$$eq(ancestor, this) === true)
        throw $.$$throw($.ArgumentError$("Error #2150: An object cannot be added as a child to one of it's children (or children's children, etc.)."));
    this._parent = value;
  },
  DisplayObject$0: function() {
    this._transformationMatrixPrivate = $.Matrix$fromIdentity();
    this._transformationMatrixRefresh = true;
    this._tmpMatrix = $.Matrix$fromIdentity();
    this._tmpMatrixIdentity = $.Matrix$fromIdentity();
  }
};

$$.InteractiveObject = {"": "DisplayObject;doubleClickEnabled>",
  get$onMouseOut: function() {
    return $.CONSTANT14.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT16.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT20.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT12.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT26.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT28.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT22.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT8.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  $isInteractiveObject: true
};

$$.DisplayObjectContainer = {"": "InteractiveObject;",
  addChild$1: function(child) {
    var t1, t2, index;
    t1 = $.$$eq(child.get$parent(), this);
    t2 = this._children;
    if (t1 === true) {
      index = $.CONSTANT1.indexOf$1(t2, child);
      $.CONSTANT1.removeAt$1(this._children, index);
      this._children.push(child);
    } else
      this.addChildAt$2(child, t2.length);
  },
  addChildAt$2: function(child, index) {
    var t1, t2;
    t1 = $.getInterceptor$JSNumber(index);
    if (t1.$lt(index, 0) === true && t1.$gt(index, this._children.length) === true)
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    if (child.$eq(this) === true)
      throw $.$$throw($.ArgumentError$("Error #2024: An object cannot be added as a child of itself."));
    if ($.$$eq(child.get$parent(), this) === true) {
      t2 = this._children;
      $.CONSTANT1.removeAt$1(t2, $.CONSTANT1.indexOf$1(t2, child));
      if (t1.$gt(index, this._children.length) === true)
        index = t1.$sub(index, 1);
      $.CONSTANT1.insertRange$3(this._children, index, 1, child);
    } else {
      child.removeFromParent$0();
      child._setParent$1(this);
      $.CONSTANT1.insertRange$3(this._children, index, 1, child);
      child.dispatchEvent$1($.Event$("added", true));
      if (!(this.get$stage() == null))
        this._dispatchEventOnChildren$2(child, $.Event$("addedToStage", false));
    }
  },
  removeChild$1: function(child) {
    var childIndex = $.CONSTANT1.indexOf$1(this._children, child);
    if ($.$$eq(childIndex, -1) === true)
      throw $.$$throw($.ArgumentError$("Error #2025: The supplied DisplayObject must be a child of the caller."));
    this.removeChildAt$1(childIndex);
  },
  removeChildAt$1: function(index) {
    var t1, child;
    t1 = $.getInterceptor$JSNumber(index);
    if (t1.$lt(index, 0) === true && t1.$ge(index, this._children.length) === true)
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    t1 = this._children;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    child = t1[index];
    child.dispatchEvent$1($.Event$("removed", true));
    if (!(this.get$stage() == null))
      this._dispatchEventOnChildren$2(child, $.Event$("removedFromStage", false));
    child._setParent$1(null);
    $.CONSTANT1.removeAt$1(this._children, index);
  },
  contains$1: function(child) {
    for (; !(child == null); child = child.get$_parent())
      if ($.$$eq(child, this) === true)
        return true;
    return false;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var left, $top, right, bottom, i, t1, child, rectangle;
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    if (this._children.length === 0)
      return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
    for (left = (1/0), $top = (1/0), right = (-1/0), bottom = (-1/0), i = 0; t1 = this._children, i < t1.length; ++i) {
      child = t1[i];
      this._tmpMatrix.copyFromAndConcat$2(child.get$_transformationMatrix(), matrix);
      rectangle = child.getBoundsTransformed$2(this._tmpMatrix, returnRectangle);
      t1 = rectangle.get$left();
      if (typeof t1 !== "number")
        return this.getBoundsTransformed$2$bailout1(1, matrix, left, $top, right, bottom, rectangle, i, t1, returnRectangle);
      if (t1 < left) {
        left = rectangle.get$left();
        if (typeof left !== "number")
          return this.getBoundsTransformed$2$bailout1(2, matrix, left, $top, right, bottom, rectangle, i, 0, returnRectangle);
      }
      t1 = rectangle.get$top();
      if (typeof t1 !== "number")
        return this.getBoundsTransformed$2$bailout1(3, matrix, left, $top, right, bottom, rectangle, i, t1, returnRectangle);
      if (t1 < $top) {
        $top = rectangle.get$top();
        if (typeof $top !== "number")
          return this.getBoundsTransformed$2$bailout1(4, matrix, left, $top, right, bottom, rectangle, i, 0, returnRectangle);
      }
      t1 = rectangle.get$right();
      if (typeof t1 !== "number")
        return this.getBoundsTransformed$2$bailout1(5, matrix, left, $top, right, bottom, rectangle, i, t1, returnRectangle);
      if (t1 > right) {
        right = rectangle.get$right();
        if (typeof right !== "number")
          return this.getBoundsTransformed$2$bailout1(6, matrix, left, $top, right, bottom, rectangle, i, 0, returnRectangle);
      }
      t1 = rectangle.get$bottom();
      if (typeof t1 !== "number")
        return this.getBoundsTransformed$2$bailout1(7, matrix, left, $top, right, bottom, rectangle, i, t1, returnRectangle);
      if (t1 > bottom) {
        bottom = rectangle.get$bottom();
        if (typeof bottom !== "number")
          return this.getBoundsTransformed$2$bailout1(8, matrix, left, $top, right, bottom, 0, i, 0, returnRectangle);
      }
    }
    returnRectangle.set$x(left);
    returnRectangle.set$y($top);
    returnRectangle.set$width(right - left);
    returnRectangle.set$height(bottom - $top);
    return returnRectangle;
  },
  getBoundsTransformed$2$bailout1: function(state0, matrix, left, $top, right, bottom, rectangle, i, t1, returnRectangle) {
    switch (state0) {
      case 0:
        if (returnRectangle == null)
          returnRectangle = $.Rectangle$zero();
        if (this._children.length === 0)
          return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
        left = (1/0);
        $top = (1/0);
        right = (-1/0);
        bottom = (-1/0);
        i = 0;
      default:
        var child;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this._children;
                if (!(i < t1.length))
                  break L0;
                child = t1[i];
                this._tmpMatrix.copyFromAndConcat$2(child.get$_transformationMatrix(), matrix);
                rectangle = child.getBoundsTransformed$2(this._tmpMatrix, returnRectangle);
                t1 = rectangle.get$left();
              case 1:
                state0 = 0;
              case 2:
                if (state0 === 2 || state0 === 0 && $.$$lt(t1, left) === true)
                  switch (state0) {
                    case 0:
                      left = rectangle.get$left();
                    case 2:
                      state0 = 0;
                  }
                t1 = rectangle.get$top();
              case 3:
                state0 = 0;
              case 4:
                if (state0 === 4 || state0 === 0 && $.$$lt(t1, $top) === true)
                  switch (state0) {
                    case 0:
                      $top = rectangle.get$top();
                    case 4:
                      state0 = 0;
                  }
                t1 = rectangle.get$right();
              case 5:
                state0 = 0;
              case 6:
                if (state0 === 6 || state0 === 0 && $.$$gt(t1, right) === true)
                  switch (state0) {
                    case 0:
                      right = rectangle.get$right();
                    case 6:
                      state0 = 0;
                  }
                t1 = rectangle.get$bottom();
              case 7:
                state0 = 0;
              case 8:
                if (state0 === 8 || state0 === 0 && $.$$gt(t1, bottom) === true)
                  switch (state0) {
                    case 0:
                      bottom = rectangle.get$bottom();
                    case 8:
                      state0 = 0;
                  }
                ++i;
            }
        returnRectangle.set$x(left);
        returnRectangle.set$y($top);
        returnRectangle.set$width($.$$sub(right, left));
        returnRectangle.set$height($.$$sub(bottom, $top));
        return returnRectangle;
    }
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var i, hit, t1, child, matrix, deltaX, deltaY, t5, t7, childX, t9, t11, displayObject;
    if (typeof localX !== "number")
      return this.hitTestInput$2$bailout1(1, localX, localY);
    if (typeof localY !== "number")
      return this.hitTestInput$2$bailout1(1, localX, localY);
    for (i = this._children.length - 1, hit = null; i >= 0; --i) {
      t1 = this._children;
      if (i >= t1.length)
        throw $.ioore(i);
      child = t1[i];
      if (child.get$visible() === true) {
        matrix = child.get$_transformationMatrix();
        t1 = matrix.get$tx();
        if (typeof t1 !== "number")
          return this.hitTestInput$2$bailout1(2, localX, localY, i, $.CONSTANT5, $.CONSTANT5, child, matrix, t1, hit);
        deltaX = localX - t1;
        t1 = matrix.get$ty();
        if (typeof t1 !== "number")
          return this.hitTestInput$2$bailout1(3, localX, localY, i, $.CONSTANT5, $.CONSTANT5, child, matrix, t1, hit, deltaX);
        deltaY = localY - t1;
        t1 = matrix.get$d();
        if (typeof t1 !== "number")
          return this.hitTestInput$2$bailout1(4, localX, localY, i, $.CONSTANT5, $.CONSTANT5, child, matrix, t1, hit, deltaX, deltaY);
        t1 *= deltaX;
        t5 = matrix.get$c();
        if (typeof t5 !== "number")
          return this.hitTestInput$2$bailout1(5, localX, localY, i, $.CONSTANT5, $.CONSTANT5, child, matrix, t1, hit, deltaX, deltaY, t5);
        t1 -= t5 * deltaY;
        t7 = matrix.get$det();
        if (typeof t7 !== "number")
          return this.hitTestInput$2$bailout1(6, localX, localY, i, $.CONSTANT5, $.CONSTANT5, child, matrix, t1, hit, deltaX, deltaY, 0, t7);
        childX = t1 / t7;
        t7 = matrix.get$a();
        if (typeof t7 !== "number")
          return this.hitTestInput$2$bailout1(7, localX, localY, i, $.CONSTANT5, $.CONSTANT5, child, matrix, 0, hit, deltaX, deltaY, 0, t7, childX);
        t7 *= deltaY;
        t9 = matrix.get$b();
        if (typeof t9 !== "number")
          return this.hitTestInput$2$bailout1(8, localX, localY, i, $.CONSTANT5, $.CONSTANT5, child, matrix, 0, hit, deltaX, 0, 0, t7, childX, t9);
        t7 -= t9 * deltaX;
        t11 = matrix.get$det();
        if (typeof t11 !== "number")
          return this.hitTestInput$2$bailout1(9, localX, localY, i, $.CONSTANT5, $.CONSTANT5, child, 0, 0, hit, 0, 0, 0, t7, childX, 0, t11);
        displayObject = child.hitTestInput$2(childX, t7 / t11);
        if (!(displayObject == null)) {
          if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isInteractiveObject)
            if (displayObject.mouseEnabled)
              return this._mouseChildren ? displayObject : this;
          hit = this;
        }
      }
    }
    return hit;
  },
  hitTestInput$2$bailout1: function(state0, localX, localY, i, t2, t1, child, matrix, t3, hit, deltaX, deltaY, t7, t9, childX, t11, t13) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        i = this._children.length - 1;
        t1 = $.getInterceptor$JSNumber(localX);
        t2 = $.getInterceptor$JSNumber(localY);
        hit = null;
      default:
        var displayObject;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(i >= 0))
                  break L0;
                t3 = this._children;
                if (i >= t3.length)
                  throw $.ioore(i);
                child = t3[i];
              default:
                if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && child.get$visible() === true)
                  switch (state0) {
                    case 0:
                      matrix = child.get$_transformationMatrix();
                      t3 = matrix.get$tx();
                    case 2:
                      state0 = 0;
                      deltaX = t1.$sub(localX, t3);
                      t3 = matrix.get$ty();
                    case 3:
                      state0 = 0;
                      deltaY = t2.$sub(localY, t3);
                      t3 = matrix.get$d();
                    case 4:
                      state0 = 0;
                      t3 = $.$$mul(t3, deltaX);
                      t7 = matrix.get$c();
                    case 5:
                      state0 = 0;
                      t3 = $.$$sub(t3, $.$$mul(t7, deltaY));
                      t9 = matrix.get$det();
                    case 6:
                      state0 = 0;
                      childX = $.$$div(t3, t9);
                      t9 = matrix.get$a();
                    case 7:
                      state0 = 0;
                      t9 = $.$$mul(t9, deltaY);
                      t11 = matrix.get$b();
                    case 8:
                      state0 = 0;
                      t9 = $.$$sub(t9, $.$$mul(t11, deltaX));
                      t13 = matrix.get$det();
                    case 9:
                      state0 = 0;
                      displayObject = child.hitTestInput$2(childX, $.$$div(t9, t13));
                      if (!(displayObject == null)) {
                        if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isInteractiveObject)
                          if (displayObject.mouseEnabled)
                            return this._mouseChildren ? displayObject : this;
                        hit = this;
                      }
                  }
                --i;
            }
        return hit;
    }
  },
  render$1: function(renderState) {
    var i, t1, child;
    for (i = 0; t1 = this._children, i < t1.length; ++i) {
      child = t1[i];
      if (child.get$visible() === true)
        renderState.renderDisplayObject$1(child);
    }
  },
  _dispatchEventOnChildren$2: function(displayObject, $event) {
    var children, i;
    displayObject.dispatchEvent$1($event);
    if (typeof displayObject === "object" && displayObject !== null && !!displayObject.$isDisplayObjectContainer) {
      children = $.List_List$from(displayObject._children);
      for (i = 0; i < children.length; ++i)
        this._dispatchEventOnChildren$2(children[i], $event);
    }
  },
  DisplayObjectContainer$0: function() {
    this._children = $.List_List(0);
  },
  $isDisplayObjectContainer: true
};

$$._MouseButton = {"": "Object;target=,buttonDown=,clickTime=,clickCount=,mouseDownEventType>,mouseUpEventType>,mouseClickEventType>,mouseDoubleClickEventType>"};

$$._Touch = {"": "Object;touchPointID>,target=,primaryTouchPoint>"};

$$.Stage = {"": "DisplayObjectContainer;_canvas,_context,_focus,_renderState,_renderMode,_mouseCursor,_mousePosition,_mouseTarget,_mouseButtons,_touches,_mouseEvent,_keyboardEvent,_touchEvent,_onMouseEventHandler,_onTouchEventHandler,_touchEventSubscriptions,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_transformationMatrixPrivate,_transformationMatrixRefresh,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_eventStreams",
  get$focus: function() {
    return this._focus;
  },
  focus$0: function() {
    return this.get$focus().call$0();
  },
  _throwStageException$0: function() {
    throw $.$$throw($.UnsupportedError$("Error #2071: The Stage class does not implement this property or method."));
  },
  set$x: function(value) {
    this._throwStageException$0();
  },
  set$y: function(value) {
    this._throwStageException$0();
  },
  set$scaleX: function(value) {
    this._throwStageException$0();
  },
  set$scaleY: function(value) {
    this._throwStageException$0();
  },
  set$width: function(value) {
    this._throwStageException$0();
  },
  set$height: function(value) {
    this._throwStageException$0();
  },
  materialize$0: function() {
    var t1 = this._renderMode;
    if (typeof t1 !== "string")
      return this.materialize$0$bailout(1, t1);
    if (t1 === "auto" || t1 === "once") {
      this._renderState.reset$0();
      this.render$1(this._renderState);
      t1 = this._renderMode;
      if (typeof t1 !== "string")
        return this.materialize$0$bailout(3, t1);
      if (t1 === "once")
        this._renderMode = "stop";
    }
  },
  materialize$0$bailout: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = this._renderMode;
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$eq(t1, "auto") !== true)
          switch (state0) {
            case 0:
              t1 = this._renderMode;
            case 2:
              state0 = 0;
              t3 = $.$$eq(t1, "once") === true;
              t1 = t3;
          }
        else
          t1 = true;
      case 3:
        var t3;
        if (state0 === 3 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              this._renderState.reset$0();
              this.render$1(this._renderState);
              t1 = this._renderMode;
            case 3:
              state0 = 0;
              if ($.$$eq(t1, "once") === true)
                this._renderMode = "stop";
          }
    }
  },
  _onMouseCursorChanged$1: function($event) {
    var t1 = $.Mouse__getCssStyle(this._mouseCursor);
    this._canvas.get$style().set$cursor(t1);
  },
  get$_onMouseCursorChanged: function() {
    return new $.BoundClosure$1(this, "_onMouseCursorChanged$1");
  },
  _onMouseEvent$1: function($event) {
    var clientRect, time, button, stagePoint, t1, mouseButton, target, mouseCursor, t2, t3, t4, t5, mouseEventType, isClick, isDoubleClick, localPoint;
    $event.preventDefault$0();
    clientRect = this._canvas.getBoundingClientRect$0();
    time = $.DateTime$_now().millisecondsSinceEpoch;
    button = $event.get$button();
    stagePoint = $.Point$($.$$sub($event.get$clientX(), clientRect.get$left()), $.$$sub($event.get$clientY(), clientRect.get$top()));
    t1 = $.getInterceptor$JSNumber(button);
    if (t1.$lt(button, 0) === true || t1.$gt(button, 2) === true)
      return;
    if ($.$$eq($event.get$type(), "mousemove") === true && this._mousePosition.equals$1(stagePoint) === true)
      return;
    mouseButton = $.$$index(this._mouseButtons, button);
    this._mousePosition = stagePoint;
    target = $.$$eq($event.get$type(), "mouseout") !== true ? $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), "$isInteractiveObject") : null;
    mouseCursor = typeof target === "object" && target !== null && !!target.$isSprite ? target.useHandCursor === true ? "button" : "arrow" : "arrow";
    if (typeof target === "object" && target !== null && !!target.$isSimpleButton)
      mouseCursor = target.useHandCursor === true ? "button" : mouseCursor;
    if ($.$$eq(this._mouseCursor, mouseCursor) !== true) {
      this._mouseCursor = mouseCursor;
      t1 = $.Mouse__getCssStyle(mouseCursor);
      this._canvas.get$style().set$cursor(t1);
    }
    t1 = this._mouseTarget;
    if (!(t1 == null) && $.$$eq(t1, target) !== true) {
      t1 = this._mouseTarget;
      t2 = mouseButton.get$buttonDown();
      t3 = !(this._mouseTarget.get$stage() == null) ? this._mouseTarget.globalToLocal$1(stagePoint) : $.Point$zero();
      t4 = this._mouseEvent;
      t4._reset$2("mouseOut", true);
      t4.set$_localPoint(t3);
      t4.set$_stagePoint(stagePoint);
      t4.set$_buttonDown(t2);
      t1.dispatchEvent$1(t4);
      this._mouseTarget = null;
    }
    t1 = $.getInterceptor(target);
    t2 = !(target == null);
    if (t2 && t1.$eq(target, this._mouseTarget) !== true) {
      t3 = mouseButton.get$buttonDown();
      t4 = target.globalToLocal$1(stagePoint);
      t5 = this._mouseEvent;
      t5._reset$2("mouseOver", true);
      t5.set$_localPoint(t4);
      t5.set$_stagePoint(stagePoint);
      t5.set$_buttonDown(t3);
      target.dispatchEvent$1(t5);
      this._mouseTarget = target;
    }
    if ($.$$eq($event.get$type(), "mousedown") === true) {
      mouseEventType = mouseButton.get$mouseDownEventType();
      if (t1.$eq(target, mouseButton.get$target()) !== true || $.$$gt(time, $.$$add(mouseButton.get$clickTime(), 500)) === true)
        mouseButton.set$clickCount(0);
      mouseButton.set$buttonDown(true);
      mouseButton.set$target(target);
      mouseButton.set$clickTime(time);
      mouseButton.set$clickCount($.$$add(mouseButton.get$clickCount(), 1));
    } else
      mouseEventType = null;
    if ($.$$eq($event.get$type(), "mouseup") === true) {
      mouseEventType = mouseButton.get$mouseUpEventType();
      mouseButton.set$buttonDown(false);
      isClick = $.$$eq(mouseButton.get$target(), target);
      isDoubleClick = isClick === true && $.isEven(mouseButton.get$clickCount()) === true && $.$$lt(time, $.$$add(mouseButton.get$clickTime(), 500)) === true;
    } else {
      isClick = false;
      isDoubleClick = false;
    }
    if ($.$$eq($event.get$type(), "mousemove") === true)
      mouseEventType = "mouseMove";
    if (!(mouseEventType == null) && t2) {
      localPoint = target.globalToLocal$1(stagePoint);
      t1 = mouseButton.get$clickCount();
      t2 = mouseButton.get$buttonDown();
      t3 = this._mouseEvent;
      t3._reset$2(mouseEventType, true);
      t3.set$_localPoint(localPoint);
      t3.set$_stagePoint(stagePoint);
      t3.set$_buttonDown(t2);
      t3.set$_clickCount(t1);
      target.dispatchEvent$1(t3);
      if (isClick === true)
        if (isDoubleClick && target.get$doubleClickEnabled() === true) {
          t1 = mouseButton.get$buttonDown();
          t2 = this._mouseEvent;
          t2._reset$2(mouseButton.get$mouseDoubleClickEventType(), true);
          t2.set$_localPoint(localPoint);
          t2.set$_stagePoint(stagePoint);
          t2.set$_buttonDown(t1);
          target.dispatchEvent$1(t2);
        } else {
          t1 = mouseButton.get$buttonDown();
          t2 = this._mouseEvent;
          t2._reset$2(mouseButton.get$mouseClickEventType(), true);
          t2.set$_localPoint(localPoint);
          t2.set$_stagePoint(stagePoint);
          t2.set$_buttonDown(t1);
          target.dispatchEvent$1(t2);
        }
    }
  },
  get$_onMouseEvent: function() {
    return new $.BoundClosure$1(this, "_onMouseEvent$1");
  },
  _onMultitouchInputModeChanged$1: function($event) {
    $.CONSTANT1.forEach$1(this._touchEventSubscriptions, new $.Stage__onMultitouchInputModeChanged_anon());
    $.Multitouch__initialize();
    if ($.$$eq($.Multitouch__inputMode, "touchPoint") === true)
      this._touchEventSubscriptions = [this._canvas.get$onTouchStart().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchEnd().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchMove().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchEnter().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchLeave().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchCancel().listen$1(this._onTouchEventHandler)];
  },
  get$_onMultitouchInputModeChanged: function() {
    return new $.BoundClosure$1(this, "_onMultitouchInputModeChanged$1");
  },
  _onTouchEvent$1: function($event) {
    var clientRect, t1, t2, identifier, stagePoint, target, t3, touch, t4, t5, t6, touchEventType;
    $event.preventDefault$0();
    clientRect = this._canvas.getBoundingClientRect$0();
    for (t1 = $.iterator($event.get$changedTouches()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      identifier = t2.get$identifier();
      stagePoint = $.Point$($.$$sub(t2.get$clientX(), clientRect.get$left()), $.$$sub(t2.get$clientY(), clientRect.get$top()));
      target = $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), "$isInteractiveObject");
      t2 = this._touches.containsKey$1(identifier);
      t3 = this._touches;
      touch = t2 === true ? $.$$index(t3, identifier) : $._Touch$(target, $.$$eq($.length(t3), 0));
      if (!(touch.get$target() == null) && $.$$eq(touch.get$target(), target) !== true) {
        t2 = touch.get$target();
        t3 = touch.get$primaryTouchPoint();
        t4 = touch.get$touchPointID();
        t5 = !(touch.get$target().get$stage() == null) ? touch.get$target().globalToLocal$1(stagePoint) : $.Point$zero();
        t6 = this._touchEvent;
        t6._reset$2("touchOut", true);
        t6.set$_localPoint(t5);
        t6.set$_stagePoint(stagePoint);
        t6.set$_touchPointID(t4);
        t6.set$_isPrimaryTouchPoint(t3);
        t2.dispatchEvent$1(t6);
        touch.set$target(null);
      }
      t2 = !(target == null);
      if (t2 && $.$$eq(target, touch.get$target()) !== true) {
        t3 = touch.get$primaryTouchPoint();
        t4 = touch.get$touchPointID();
        t5 = target.globalToLocal$1(stagePoint);
        t6 = this._touchEvent;
        t6._reset$2("touchOver", true);
        t6.set$_localPoint(t5);
        t6.set$_stagePoint(stagePoint);
        t6.set$_touchPointID(t4);
        t6.set$_isPrimaryTouchPoint(t3);
        target.dispatchEvent$1(t6);
        touch.set$target(target);
      }
      if ($.$$eq($event.get$type(), "touchstart") === true) {
        $.$$indexSet(this._touches, identifier, touch);
        touchEventType = "touchBegin";
      } else
        touchEventType = null;
      if ($.$$eq($event.get$type(), "touchend") === true) {
        $.remove(this._touches, identifier);
        touchEventType = "touchEnd";
      }
      if ($.$$eq($event.get$type(), "touchcancel") === true) {
        $.remove(this._touches, identifier);
        touchEventType = "touchCancel";
      }
      if ($.$$eq($event.get$type(), "touchmove") === true)
        touchEventType = "touchMove";
      if (!(touchEventType == null) && t2) {
        t2 = touch.get$primaryTouchPoint();
        t3 = touch.get$touchPointID();
        t4 = target.globalToLocal$1(stagePoint);
        t5 = this._touchEvent;
        t5._reset$2(touchEventType, true);
        t5.set$_localPoint(t4);
        t5.set$_stagePoint(stagePoint);
        t5.set$_touchPointID(t3);
        t5.set$_isPrimaryTouchPoint(t2);
        target.dispatchEvent$1(t5);
      }
    }
  },
  get$_onTouchEvent: function() {
    return new $.BoundClosure$1(this, "_onTouchEvent$1");
  },
  _onKeyEvent$1: function($event) {
    var keyboardEventType, t1, t2, t3, t4, t5, t6;
    $event.preventDefault$0();
    keyboardEventType = $.$$eq($event.get$type(), "keyup") === true ? "keyUp" : null;
    if ($.$$eq($event.get$type(), "keydown") === true)
      keyboardEventType = "keyDown";
    t1 = $event.get$keyCode();
    t2 = $event.get$charCode();
    t3 = $event.get$shiftKey();
    t4 = $event.get$ctrlKey();
    t5 = $event.get$altKey();
    t6 = this._keyboardEvent;
    t6._reset$2(keyboardEventType, true);
    t6.set$_altKey(t5);
    t6.set$_ctrlKey(t4);
    t6.set$_shiftKey(t3);
    t6.set$_charCode(t2);
    t6.set$_keyCode(t1);
    t6.set$_keyLocation(0);
    if ($.$$eq($event.get$keyLocation(), 1) === true)
      this._keyboardEvent.set$_keyLocation(1);
    if ($.$$eq($event.get$keyLocation(), 2) === true)
      this._keyboardEvent.set$_keyLocation(2);
    if ($.$$eq($event.get$keyLocation(), 3) === true)
      this._keyboardEvent.set$_keyLocation(3);
    if ($.$$eq($event.get$keyLocation(), 5) === true)
      this._keyboardEvent.set$_keyLocation(4);
    if ($.$$eq($event.get$keyLocation(), 4) === true)
      this._keyboardEvent.set$_keyLocation(4);
    t1 = this._focus;
    if (!(t1 == null))
      t1.dispatchEvent$1(this._keyboardEvent);
  },
  get$_onKeyEvent: function() {
    return new $.BoundClosure$1(this, "_onKeyEvent$1");
  },
  _onTextEvent$1: function($event) {
    var charCode, textEvent, t1;
    charCode = $.$$eq($event.get$charCode(), 0) !== true ? $event.get$charCode() : $event.get$keyCode();
    textEvent = $.TextEvent$("textInput", true);
    textEvent._text = $.String_String$fromCharCodes([charCode]);
    t1 = this._focus;
    if (!(t1 == null))
      t1.dispatchEvent$1(textEvent);
  },
  get$_onTextEvent: function() {
    return new $.BoundClosure$1(this, "_onTextEvent$1");
  },
  Stage$2: function($name, canvas) {
    this._name = $name;
    this._canvas = canvas;
    this._canvas.focus$0();
    this._context = canvas.get$context2d();
    this._renderState = $.RenderState$fromCanvasRenderingContext2D(this._context, null);
    this._renderMode = "auto";
    this._mouseCursor = "arrow";
    $.get$Mouse__eventDispatcher().addEventListener$2("mouseCursorChanged", this.get$_onMouseCursorChanged());
    this._mouseButtons = [$._MouseButton$("mouseDown", "mouseUp", "click", "doubleClick"), $._MouseButton$("middleMouseDown", "middleMouseUp", "middleClick", "middleClick"), $._MouseButton$("rightMouseDown", "rightMouseUp", "rightClick", "rightClick")];
    this._mouseTarget = null;
    this._mousePosition = $.Point$(0, 0);
    this._mouseEvent = $.MouseEvent$("click", true);
    this._onMouseEventHandler = this.get$_onMouseEvent();
    this._canvas.get$onMouseDown().listen$1(this._onMouseEventHandler);
    this._canvas.get$onMouseUp().listen$1(this._onMouseEventHandler);
    this._canvas.get$onMouseMove().listen$1(this._onMouseEventHandler);
    this._canvas.get$onMouseOut().listen$1(this._onMouseEventHandler);
    this._canvas.get$onMouseWheel().listen$1(this._onMouseEventHandler);
    this._touches = $.Map_Map();
    this._touchEvent = $.TouchEvent$("touchBegin", true);
    this._onTouchEventHandler = this.get$_onTouchEvent();
    $.get$Multitouch__eventDispatcher().addEventListener$2("inputModeChanged", this.get$_onMultitouchInputModeChanged());
    this._onMultitouchInputModeChanged$1(null);
    this._keyboardEvent = $.KeyboardEvent$("keyDown", true);
    this._canvas.get$onKeyDown().listen$1(this.get$_onKeyEvent());
    this._canvas.get$onKeyUp().listen$1(this.get$_onKeyEvent());
    this._canvas.get$onKeyPress().listen$1(this.get$_onTextEvent());
  },
  $isStage: true
};

$$.TextField = {"": "InteractiveObject;_text,_textColor,_defaultTextFormat,_autoSize,_gridFitType,_type,_wordWrap,_background,_backgroundColor,_border,_borderColor,_textWidth,_textHeight,_linesText,_linesMetrics,_canvasRefreshPending,_canvasWidth,_canvasHeight,_canvas,_context,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_transformationMatrixPrivate,_transformationMatrixRefresh,_alpha,_visible,_mask,_name,_parent,_tmpMatrix,_tmpMatrixIdentity,_eventStreams",
  get$type: function() {
    return this._type;
  },
  get$width: function() {
    return this._canvasWidth;
  },
  get$height: function() {
    return this._canvasHeight;
  },
  set$text: function(value) {
    this._text = value;
    this._canvasRefreshPending = true;
  },
  set$defaultTextFormat: function(value) {
    this._defaultTextFormat = value;
    this._textColor = this._defaultTextFormat.get$color();
    this._canvasRefreshPending = true;
  },
  set$width: function(value) {
    this._canvasWidth = value;
    this._canvasRefreshPending = true;
  },
  set$height: function(value) {
    this._canvasHeight = value;
    this._canvasRefreshPending = true;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    return $._getBoundsTransformedHelper(matrix, this._canvasWidth, this._canvasHeight, returnRectangle);
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1;
    if (typeof localX !== "number")
      return this.hitTestInput$2$bailout1(1, localX, localY);
    if (typeof localY !== "number")
      return this.hitTestInput$2$bailout1(1, localX, localY);
    if (localX >= 0)
      if (localY >= 0) {
        t1 = this._canvasWidth;
        if (typeof t1 !== "number")
          return this.hitTestInput$2$bailout1(2, localX, localY, t1, $.CONSTANT5, $.CONSTANT5);
        if (localX < t1) {
          t1 = this._canvasHeight;
          if (typeof t1 !== "number")
            return this.hitTestInput$2$bailout1(3, 0, localY, 0, $.CONSTANT5, t1);
          t1 = localY < t1;
        } else
          t1 = false;
      } else
        t1 = false;
    else
      t1 = false;
    if (t1)
      return this;
    return;
  },
  hitTestInput$2$bailout1: function(state0, localX, localY, t3, t2, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSNumber(localX);
      default:
        var t4;
        if (state0 === 3 || state0 === 2 || state0 === 0 && t1.$ge(localX, 0) === true)
          switch (state0) {
            case 0:
              t2 = $.getInterceptor$JSNumber(localY);
            default:
              if (state0 === 3 || state0 === 2 || state0 === 0 && t2.$ge(localY, 0) === true)
                switch (state0) {
                  case 0:
                    t3 = this._canvasWidth;
                  case 2:
                    state0 = 0;
                  case 3:
                    if (state0 === 3 || state0 === 0 && t1.$lt(localX, t3) === true)
                      switch (state0) {
                        case 0:
                          t1 = this._canvasHeight;
                        case 3:
                          state0 = 0;
                          t4 = t2.$lt(localY, t1) === true;
                          t1 = t4;
                      }
                    else
                      t1 = false;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
        if (t1)
          return this;
        return;
    }
  },
  render$1: function(renderState) {
    this._canvasRefresh$0();
    renderState._context.drawImage$3(this._canvas, 0, 0);
  },
  _processTextLines$0: function() {
    var lineBuffer, t1, previousLength, line, t2, word, t3, metrics, offsetX, textLineMetrics;
    $.CONSTANT1.clear$0(this._linesText);
    $.CONSTANT1.clear$0(this._linesMetrics);
    if (!this._wordWrap)
      this._linesText.push(this._text);
    else {
      lineBuffer = $.JsStringBuffer$("");
      for (t1 = $.iterator($.split($.replaceAll(this._text, "\r", ""), "\n")), previousLength = null, line = null; t1.moveNext$0() === true;) {
        for (t2 = $.iterator($.split(t1.get$current(), " ")); t2.moveNext$0() === true;) {
          word = t2.get$current();
          previousLength = lineBuffer.get$length();
          t3 = $.getInterceptor$JSNumber(previousLength);
          lineBuffer.add$1(t3.$gt(previousLength, 0) === true ? " " + $.S(word) : word);
          line = lineBuffer.toString$0();
          if ($.$$gt(this._context.measureText$1(line).get$width(), this._canvasWidth) === true) {
            if (t3.$gt(previousLength, 0) === true)
              line = $.substring(line, 0, previousLength);
            else
              word = "";
            this._linesText.push(line);
            lineBuffer.clear$0();
            lineBuffer.add$1(word);
          }
        }
        if ($.$$eq(lineBuffer.get$isEmpty(), false) === true) {
          this._linesText.push(lineBuffer.toString$0());
          lineBuffer.clear$0();
        }
      }
    }
    this._textWidth = 0;
    this._textHeight = 0;
    for (t1 = $.CONSTANT1.get$iterator(this._linesText); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      metrics = this._context.measureText$1(t2);
      offsetX = $.$$eq(this._defaultTextFormat.get$align(), "center") === true || $.$$eq(this._defaultTextFormat.get$align(), "justify") === true ? $.$$div($.$$sub(this._canvasWidth, metrics.get$width()), 2) : 0;
      if ($.$$eq(this._defaultTextFormat.get$align(), "right") === true || $.$$eq(this._defaultTextFormat.get$align(), "end") === true)
        offsetX = $.$$sub(this._canvasWidth, metrics.get$width());
      textLineMetrics = $.TextLineMetrics$(offsetX, metrics.get$width(), this._defaultTextFormat.get$size(), 0, 0, 0);
      this._linesMetrics.push(textLineMetrics);
      this._textWidth = $.max(this._textWidth, textLineMetrics.width);
      t2 = this._textHeight;
      t3 = textLineMetrics.height;
      if (typeof t3 !== "number")
        throw $.iae(t3);
      this._textHeight = t2 + t3;
    }
  },
  _canvasRefresh$0: function() {
    var canvasWidthInt, canvasHeightInt, fontStyle, t1, offsetY, i, metrics, t2;
    if (this._canvasRefreshPending) {
      this._canvasRefreshPending = false;
      canvasWidthInt = $.toInt($.ceil(this._canvasWidth));
      canvasHeightInt = $.toInt($.ceil(this._canvasHeight));
      if (this._canvas == null) {
        this._canvas = $.CanvasElement_CanvasElement(canvasHeightInt, canvasWidthInt);
        this._context = this._canvas.get$context2d();
      }
      if ($.$$eq(this._canvas.get$width(), canvasWidthInt) !== true)
        this._canvas.set$width(canvasWidthInt);
      if ($.$$eq(this._canvas.get$height(), canvasHeightInt) !== true)
        this._canvas.set$height(canvasHeightInt);
      fontStyle = $.JsStringBuffer$("");
      fontStyle.add$1(this._defaultTextFormat.get$italic() === true ? "italic " : "normal ");
      fontStyle.add$1("normal ");
      fontStyle.add$1(this._defaultTextFormat.get$bold() === true ? "bold " : "normal ");
      fontStyle.add$1($.S(this._defaultTextFormat.get$size()) + "px ");
      fontStyle.add$1($.S(this._defaultTextFormat.get$font()) + ",sans-serif");
      t1 = fontStyle.toString$0();
      this._context.set$font(t1);
      this._context.set$textAlign("start");
      this._context.set$textBaseline("top");
      t1 = $._color2rgb(this._textColor);
      this._context.set$fillStyle(t1);
      this._processTextLines$0();
      if (this._background) {
        t1 = $._color2rgb(this._backgroundColor);
        this._context.set$fillStyle(t1);
        this._context.fillRect$4(0, 0, this._canvasWidth, this._canvasHeight);
      } else
        this._context.clearRect$4(0, 0, this._canvasWidth, this._canvasHeight);
      for (offsetY = 0, i = 0; i < this._linesText.length; ++i) {
        t1 = this._linesMetrics;
        if (i >= t1.length)
          throw $.ioore(i);
        metrics = t1[i];
        t1 = $._color2rgb(this._textColor);
        this._context.set$fillStyle(t1);
        t1 = this._context;
        t2 = this._linesText;
        if (i >= t2.length)
          throw $.ioore(i);
        t1.fillText$3(t2[i], metrics.get$x(), offsetY);
        t1 = metrics.get$height();
        if (typeof t1 !== "number")
          throw $.iae(t1);
        offsetY += t1;
      }
      if (this._border) {
        t1 = $._color2rgb(this._borderColor);
        this._context.set$strokeStyle(t1);
        this._context.set$lineWidth(1);
        this._context.strokeRect$4(0, 0, this._canvasWidth, this._canvasHeight);
      }
    }
  },
  TextField$0: function() {
    this._defaultTextFormat = $.TextFormat$("Arial", 12, 0, "left", false, 0, false, 0, 0, 0, false);
    this._linesText = $.List_List(0);
    this._linesMetrics = $.List_List(0);
  }
};

$$.TextFormat = {"": "Object;font=,size>,color>,bold>,italic>,underline,align>,leftMargin,rightMargin,indent,leading,letterSpacing,blockIndent,bullet,kerning"};

$$.TextLineMetrics = {"": "Object;ascent,descent,height=,leading,width=,x="};

$$.ToString__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true)
      $.add(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    $.add(t1, ": ");
    $.ToString__emitObject(v, t1, t2);
  }
};

$$._LinkedHashMapImpl_forEach_anon = {"": "Closure;f_0",
  call$1: function(entry) {
    this.f_0.call$2(entry.get$key(), entry.get$value());
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$$gt(t1.i_1, 0) === true)
      $.add(t1.sb_0, ", ");
    $.add(t1.sb_0, key);
    $.add(t1.sb_0, ": ");
    $.add(t1.sb_0, $.Error_safeToString(value));
    t1.i_1 = $.$$add(t1.i_1, 1);
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$$add(t1.count_0, 1);
  }
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  }
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$1: function(_) {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError() === true) {
      t1._clearUnhandledError$0();
      error = t1.get$_resultOrListeners();
      $.Primitives_printString("Uncaught Error: " + $.S(error.get$error()));
      t1 = error.get$stackTrace();
      if (!(t1 == null))
        $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
      throw $.$$throw(error.get$error());
    }
  }
};

$$.anon = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
};

$$.internalCallback = {"": "Closure;this_2,callback_3",
  call$0: function() {
    var t1, t2;
    t1 = this.callback_3;
    t2 = this.this_2;
    t1.call$1(t2);
    t2.set$_handle(null);
    t2 = $globalState.topEventLoop;
    t2.set$activeTimerCount($.$$sub(t2.get$activeTimerCount(), 1));
  }
};

$$.Stage__onMultitouchInputModeChanged_anon = {"": "Closure;",
  call$1: function(s) {
    return s.cancel$0();
  }
};

$$.Stream_contains_anon = {"": "Closure;box_0,match_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_contains__anon(this.match_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_contains__anon0(t2, t3), $._cancelAndError(t2.subscription_0, t3), null);
  }
};

$$.Stream_contains__anon = {"": "Closure;match_3,element_4",
  call$0: function() {
    return $.$$eq(this.element_4, this.match_3);
  }
};

$$.Stream_contains__anon0 = {"": "Closure;box_0,future_5",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._setValue$1(true);
    }
  }
};

$$.Stream_contains_anon0 = {"": "Closure;future_6",
  call$0: function() {
    this.future_6._setValue$1(false);
  }
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  }
};

$$.DateTime_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$JSNumber(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) === true ? "-" : "";
    t1 = $.getInterceptor$JSNumber(absN);
    if (t1.$ge(absN, 1000) === true)
      return $.S(n);
    if (t1.$ge(absN, 100) === true)
      return sign + "0" + $.S(absN);
    if (t1.$ge(absN, 10) === true)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$.DateTime_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$JSNumber(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$ge(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.DateTime_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$$ge(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.convertDartToNative_Dictionary_anon = {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (this.this_0.runIteration$0() !== true)
      return;
    $.TimerImpl$(0, new $._EventLoop__runHelper_next_anon(this));
  }
};

$$._EventLoop__runHelper_next_anon = {"": "Closure;next_1",
  call$1: function(_) {
    return this.next_1.call$0();
  }
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1;
    this.port_1.close$0();
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(value);
  }
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true)
      $globalState.mainManager.postMessage$1(workerMessage);
    else {
      manager = $.$$index($globalState.managers, t1.get$_workerId());
      if (!(manager == null))
        manager.postMessage$1(workerMessage);
    }
  }
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$1: function(_) {
    this.thenFuture_0._sendValue$1(this.value_1);
  }
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$1: function(_) {
    this.errorFuture_1._sendError$1(this.error_0);
  }
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,completer_1,values_2,pos_3",
  call$1: function(value) {
    var t1, t2, remaining;
    t1 = this.values_2;
    $.$$indexSet(t1, this.pos_3, value);
    t2 = this.box_0;
    remaining = $.$$sub(t2.remaining_0, 1);
    t2.remaining_0 = remaining;
    if ($.$$eq(remaining, 0) === true)
      this.completer_1.complete$1(t1);
  }
};

$$._FutureImpl__FutureImpl$wait_anon0 = {"": "Closure;box_0,completer_4",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.completed_1 !== true)
      this.completer_4.completeError$2(error.get$error(), error.get$stackTrace());
    t1.completed_1 = true;
  }
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    isolate = $.$$index($globalState.isolates, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = !($globalState.currentContext == null) && $.$$eq($globalState.currentContext.get$id(), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.topEventLoop.enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  }
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (!(t1.get$_receivePort().get$_callback() == null)) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  }
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._setValue$1(false);
  }
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setValue$1(true);
  }
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    return $.add(this.values_0, v);
  }
};

$$._LinkedHashMapImpl_values_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$value();
  }
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$.Stream_toList_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  }
};

$$.Stream_toList_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  }
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    return $.add(this.keys_0, k);
  }
};

$$._LinkedHashMapImpl_keys_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$key();
  }
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$$indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.BoundClosure$1 = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$.MappedIterable$ = function(_iterable, _f) {
  return new $.MappedIterable(_iterable, _f);
};

$.MappedIterator$ = function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(list, list.length, -1, null);
};

$.ToString_collectionToString = function(c) {
  var result = $.JsStringBuffer$("");
  $.ToString__emitCollection(c, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, t2);
  for (t2 = $.iterator(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.ToString__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.ToString__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.ToString__containsRef(visiting, o) === true)
      $.add(result, typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.ToString__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.$isMap())
    if ($.ToString__containsRef(visiting, o) === true)
      $.add(result, "{...}");
    else
      $.ToString__emitMap(o, result, visiting);
  else
    $.add(result, o);
};

$.ToString__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.ToString_mapToString = function(m) {
  var result = $.JsStringBuffer$("");
  $.ToString__emitMap(m, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.forEach(m, new $.ToString__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
};

$._currentIsolate = function() {
  return $globalState.currentContext;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var scripts, len, i, script, src, t1;
  scripts = document.getElementsByTagName('script');
  for (len = scripts.length, i = 0; i < len; ++i) {
    script = scripts[i];
    src = script && script.src;
    t1 = $.getInterceptor(src);
    if (!(src == null) && t1.endsWith$1(src, "test_controller.js") !== true && t1.endsWith$1(src, "dart.js") !== true)
      return src;
  }
  return;
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$JSArrayJSString(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.currentManagerId = t2;
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.topEventLoop.enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (!(t1.$index(msg, "port") == null))
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      $.remove($globalState.managers, sender.get$id());
      sender.terminate$0();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true)
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.Primitives_printString($.toString(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, exception;
  if ($globalState.isWorker === true)
    $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($._ExceptionImplementation$(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePortImpl$();
  replyTo.send$2("spawned", $._Isolate_port().toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  worker.set$id(workerId);
  $.$$indexSet($globalState.managers, workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$$add(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return !($.get$globalThis().setTimeout == null);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && !(value === 0) || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  res = $.toString(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$$add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_objectTypeName = function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback(object);
  if ($.$$eq($name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$JSString($name);
  return t1.charCodeAt$1($name, 0) === 36 ? t1.substring$1($name, 1) : $name;
};

$.Primitives_newFixedList = function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CONSTANT1.get$iterator(codePoints); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.CONSTANT.$shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CONSTANT1.get$iterator(charCodes); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.listInsertRange = function(receiver, start, $length, initialValue) {
  var receiverLength, t1, t2, t3, i;
  if (typeof receiver !== "object" || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.$isJavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, $length, initialValue);
  if ($.$$eq($length, 0) === true)
    return;
  if (!(typeof $length === "number" && Math.floor($length) === $length))
    throw $.$$throw($.ArgumentError$($length));
  if ($length < 0)
    throw $.$$throw($.ArgumentError$($length));
  if (!(typeof start === "number" && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + $length;
  $.CONSTANT1.set$length(receiver, t1);
  t2 = start + $length;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (t3 = receiver.length, i = start; i < t2; ++i) {
      if (i < 0 || i >= t3)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.CONSTANT1.set$length(receiver, t1);
};

$.listInsertRange$bailout = function(state0, receiver, start, $length, initialValue) {
  var receiverLength, t1, t2, i;
  if ($.$$eq($length, 0) === true)
    return;
  if (!(typeof $length === "number" && Math.floor($length) === $length))
    throw $.$$throw($.ArgumentError$($length));
  if ($length < 0)
    throw $.$$throw($.ArgumentError$($length));
  if (!(typeof start === "number" && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + $length;
  $.CONSTANT1.set$length(receiver, t1);
  t2 = start + $length;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (i = start; i < t2; ++i)
      $.CONSTANT1.$indexSet(receiver, i, initialValue);
  $.CONSTANT1.set$length(receiver, t1);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT0;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString(this);
};

$.unwrapException = function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if ($.CONSTANT2.endsWith$1(message, "is null") === true || $.CONSTANT2.endsWith$1(message, "is undefined") === true || $.CONSTANT2.endsWith$1(message, "is null or undefined") === true || $.CONSTANT2.endsWith$1(message, "of undefined") === true || $.CONSTANT2.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    t1 = t1 ? message : "";
    return $._ExceptionImplementation$(t1);
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.CONSTANT1.get$iterator(keyValuePairs);
  result = $._LinkedHashMapImpl$();
  for (; iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($._ExceptionImplementation$("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $._currentIsolate();
  $function = function($0, $1) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, $0, $1); };
  closure.$identity = $function;
  return $function;
};

$.propertyTypeCastError = function(value, property) {
  var t1 = $.getInterceptor$JSArrayJSString(property);
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var $name = tag;
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "WebKitMutationObserver")
    return "MutationObserver";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
};

$.typeNameInOpera = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  return $name;
};

$.typeNameInFirefox = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "MouseScrollEvent")
    return "WheelEvent";
  if ($name === "OfflineResourceList")
    return "DOMApplicationCache";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
};

$.typeNameInIE = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "MouseWheelEvent")
    return "WheelEvent";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return $name;
};

$.constructorNameFallback = function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = !($name === "") && !($name === "Object") && !($name === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, $name, methods, $arguments) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT31));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError($name + " is not a function");} else {return Object.prototype[$name].apply(this, arguments);}};
  if ($.callHasOwnProperty(hasOwnPropertyFunction, proto, $name) !== true)
    $.defineProperty(proto, $name, method);
  return method.apply(obj, $arguments);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function($name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[$name];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT31)[$name];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, $name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, $name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.JsStringBuffer$("");
  if (isMultiLine === true)
    $.add(sb, "m");
  if (isCaseSensitive !== true)
    $.add(sb, "i");
  if (global === true)
    $.add(sb, "g");
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, $length, patternLength, startIndex, position, t2, endIndex;
  result = $.List_List(0);
  t1 = $.getInterceptor$JSArrayJSString(haystack);
  $length = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    t2 = $.getInterceptor(position);
    if (t2.$eq(position, -1) === true)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = t2.$add(position, patternLength);
    if ($.$$eq(endIndex, $length) === true)
      break;
    else
      startIndex = t2.$eq(position, endIndex) === true ? $.$$add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.$$eq($.CONSTANT2.indexOf$2(receiver, other, startIndex), -1) !== true;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT2.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.CONSTANT2.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, $length, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.JsStringBuffer$("");
      $length = receiver.length;
      result.add$1(to);
      for (i = 0; i < $length; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        result.add$1(receiver[i]);
        result.add$1(to);
      }
      return result.toString$0();
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.JsStringBuffer$ = function($content) {
  var t1 = $content;
  return new $.JsStringBuffer(t1);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, completer, values, i, i0;
  t1 = {};
  t2 = $.getInterceptor$JSArrayJSString(futures);
  if (t2.get$isEmpty(futures) === true)
    return $._FutureImpl$immediate($.CONSTANT32);
  completer = $._CompleterImpl$();
  t1.remaining_0 = t2.get$length(futures);
  values = $.List_List$fixedLength(t2.get$length(futures), null);
  t1.completed_1 = false;
  for (t2 = t2.get$iterator(futures), i = 0; t2.moveNext$0() === true; i = i0) {
    i0 = i + 1;
    t2.get$current().then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, completer, values, i)).catchError$1(new $._FutureImpl__FutureImpl$wait_anon0(t1, completer));
  }
  return completer.future;
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$._runUserCode = function(userCode, onSuccess, onError, cause) {
  var result, e, e0, s, exception, t1;
  result = null;
  try {
    result = userCode.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
      e = t1;
      return onError.call$1(e);
    } else {
      e0 = t1;
      s = $.getTraceFromException(exception);
      if (cause == null)
        onError.call$1($.AsyncError$(e0, s));
      else
        onError.call$1($.AsyncError$withCause(e0, s, cause));
    }
  }

  onSuccess.call$1(result);
};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t2, t3, t1;
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.$isJavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart) {
    i = srcStart + count - 1;
    if (i !== (i | 0))
      return $.Arrays_copy$bailout(2, src, srcStart, dst, dstStart, count, i);
    j = dstStart + count - 1;
    t2 = src.length;
    t3 = dst.length;
    for (; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t1 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t1;
    }
  } else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count, i) {
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    case 2:
      var j;
      if (state0 === 2 || state0 === 0 && srcStart < dstStart)
        switch (state0) {
          case 0:
            i = srcStart + count - 1;
          case 2:
            state0 = 0;
            j = dstStart + count - 1;
            for (; i >= srcStart; --i, --j) {
              if (i !== (i | 0))
                throw $.iae(i);
              if (i < 0 || i >= src.length)
                throw $.ioore(i);
              $.CONSTANT1.$indexSet(dst, j, src[i]);
            }
        }
      else
        for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
          if (i < 0 || i >= src.length)
            throw $.ioore(i);
          $.CONSTANT1.$indexSet(dst, j, src[i]);
        }
  }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1, t2;
  for (t1 = $.iterator(iterable), t2 = $.getInterceptor(element); t1.moveNext$0() === true;)
    if (t2.$eq(element, t1.get$current()) === true)
      return true;
  return false;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.CONSTANT.$tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, $length) {
  return $.$$and($.$$add(currentProbe, numberOfProbes), $.$$sub($length, 1));
};

$._HashMapImplKeyIterable$ = function(_map) {
  return new $._HashMapImplKeyIterable(_map);
};

$._HashMapImplValueIterable$ = function(_map) {
  return new $._HashMapImplValueIterable(_map);
};

$._HashMapImplKeyIterator$ = function(map) {
  return new $._HashMapImplKeyIterator(map, -1, null);
};

$._HashMapImplValueIterator$ = function(map) {
  return new $._HashMapImplValueIterator(map, -1, null);
};

$._HashMapImplIndexIterator$ = function(map) {
  return new $._HashMapImplIndexIterator(map, -1, null);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(sentinel) {
  return new $._DoubleLinkedQueueIterator(sentinel, sentinel, null);
};

$.DateTime$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DateTime$_now = function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString(object);
  if (typeof object === "string")
    return "\"" + $.S($.replaceAll($.replaceAll($.replaceAll($.CONSTANT2.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"")) + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.IllegalJSRegExpException$ = function(pattern, errmsg) {
  return new $.IllegalJSRegExpException("Illegal pattern: " + $.S(pattern) + ", " + errmsg);
};

$.List_List = function($length) {
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  return new Array($length);
};

$.List_List$fixedLength = function($length, fill) {
  var result, t1, i;
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  result = $.Primitives_newFixedList($length);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.$isJavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, $length, fill, result);
  if ($.$$eq($length, 0) !== true && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, $length, fill, result) {
  var t1, i;
  if ($.$$eq($length, 0) !== true && !(fill == null))
    for (t1 = $.getInterceptor$JSArrayJSString(result), i = 0; $.CONSTANT.$lt(i, t1.get$length(result)); ++i)
      t1.$indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!charCodes.constructor === Array)
    charCodes = $.List_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.window = function() {
  return window;
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = document.$$dom_createElement$1("canvas");
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.Element__determineMouseWheelEventType = function(e) {
  if (e.onwheel !== undefined)
    return "wheel";
  else if (e.onmousewheel !== undefined)
    return "mousewheel";
  else
    return "DOMMouseScroll";
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains($._Device_userAgent(), "Opera", 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains($._Device_userAgent(), "MSIE", 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains($._Device_userAgent(), "Firefox", 0);
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  if (w === window)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.length(array), -1, null);
};

$.convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.forEach(dict, new $.convertDartToNative_Dictionary_anon(object));
  return object;
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, t2, i;
  t1 = $.getInterceptor$JSArrayJSString(a);
  t2 = $.getInterceptor$JSNumber(startIndex);
  if (t2.$ge(startIndex, t1.get$length(a)) === true)
    return -1;
  if (t2.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, endIndex) === true; i = t2.$add(i, 1))
    if ($.$$eq(t1.$index(a, i), element) === true)
      return i;
  return -1;
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$._Isolate_port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$.max = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return a + b;
        if ($.CONSTANT30.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.CONSTANT5.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.main = function() {
  var stage, textField1;
  stage = $.Stage$("myStage", document.query$1("#stage"));
  $.RenderLoop$().addStage$1(stage);
  textField1 = $.TextField$();
  textField1.set$defaultTextFormat($.TextFormat$("Helvetica,Arial", 14, 4289309097, "left", true, 0, false, 0, 0, 0, false));
  textField1.set$text("ToDo: show a cool demo ...");
  textField1.set$x(10);
  textField1.set$y(10);
  textField1.set$width(920);
  textField1.set$height(20);
  stage.addChild$1(textField1);
};

$.Juggler$ = function() {
  var t1 = new $.Juggler(null, null, null);
  t1.Juggler$0();
  return t1;
};

$._MouseButton$ = function(mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType) {
  return new $._MouseButton(null, false, 0, 0, mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType);
};

$._Touch$ = function(target, primaryTouchPoint) {
  var t1 = $._Touch__globalTouchPointID;
  $._Touch__globalTouchPointID = $.$$add(t1, 1);
  return new $._Touch(t1, target, primaryTouchPoint);
};

$.Stage$ = function($name, canvas) {
  var t1 = new $.Stage(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, [], null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, null, "", null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Stage$2($name, canvas);
  return t1;
};

$.RenderLoop$ = function() {
  var t1 = new $.RenderLoop(null, null, null, null, null);
  t1.RenderLoop$0();
  return t1;
};

$.RenderState$fromCanvasRenderingContext2D = function(context, matrix) {
  var t1 = new $.RenderState(null, null, null, null);
  t1.RenderState$fromCanvasRenderingContext2D$2(context, matrix);
  return t1;
};

$.EnterFrameEvent$ = function(passedTime) {
  var t1 = new $.EnterFrameEvent(null, null, null, null, null, null, null, null);
  t1.Event$2("enterFrame", false);
  t1.EnterFrameEvent$1(passedTime);
  return t1;
};

$.Event$ = function(type, bubbles) {
  var t1 = new $.Event(null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$.EventDispatcher$ = function() {
  return new $.EventDispatcher(null);
};

$._EventStream$0 = function(_target, _eventType, _useCapture) {
  var t1 = new $._EventStream0(_target, _eventType, _useCapture, null, null);
  t1._EventStream$3(_target, _eventType, _useCapture);
  return t1;
};

$._EventStreamIndex$ = function() {
  var t1 = new $._EventStreamIndex(null, null);
  t1._EventStreamIndex$0();
  return t1;
};

$._EventStreamSubscription$0 = function(_eventStream, _onData) {
  var t1 = new $._EventStreamSubscription0(_eventStream, _onData, null, null);
  t1._liblib2$_EventStreamSubscription$2(_eventStream, _onData);
  return t1;
};

$.KeyboardEvent$ = function(type, bubbles) {
  var t1 = new $.KeyboardEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.KeyboardEvent$2(type, bubbles);
  return t1;
};

$.MouseEvent$ = function(type, bubbles) {
  var t1 = new $.MouseEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.MouseEvent$2(type, bubbles);
  return t1;
};

$.TextEvent$ = function(type, bubbles) {
  var t1 = new $.TextEvent("", null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$.TouchEvent$ = function(type, bubbles) {
  var t1 = new $.TouchEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.TouchEvent$2(type, bubbles);
  return t1;
};

$.Matrix$fromIdentity = function() {
  return new $.Matrix(1, 0, 0, 1, 0, 0, 1);
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.Point$zero = function() {
  return new $.Point(0, 0);
};

$.Rectangle$zero = function() {
  return new $.Rectangle(0, 0, 0, 0);
};

$.TextField$ = function() {
  var t1 = new $.TextField("", 0, null, "none", "pixel", "dynamic", false, false, 0, false, 0, 0, 0, null, null, true, 100, 100, null, null, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, null, "", null, null, null, null);
  t1.DisplayObject$0();
  t1.TextField$0();
  return t1;
};

$.TextFormat$ = function(font, size, color, align, bold, indent, italic, leading, leftMargin, rightMargin, underline) {
  return new $.TextFormat(font, size, color, bold, italic, underline, align, leftMargin, rightMargin, indent, leading, 0, 0, false, false);
};

$.TextLineMetrics$ = function(x, width, height, ascent, descent, leading) {
  return new $.TextLineMetrics(ascent, descent, height, leading, width, x);
};

$.Mouse__getCssStyle = function(mouseCursor) {
  var cursor, style;
  cursor = $.$$eq($.Mouse__customCursor, "auto") !== true ? $.Mouse__customCursor : mouseCursor;
  style = "auto";
  switch (cursor) {
    case "auto":
      style = "auto";
      break;
    case "arrow":
      style = "default";
      break;
    case "button":
      style = "pointer";
      break;
    case "hand":
      style = "move";
      break;
    case "ibeam":
      style = "text";
      break;
    case "wait":
      style = "wait";
      break;
  }
  return $.Mouse__isCursorHidden === true ? "none" : style;
};

$.Multitouch__initialize = function() {
  var ua, t1;
  if ($.$$eq($.Multitouch__initialized, false) === true) {
    $.Multitouch__initialized = true;
    ua = window.navigator.get$userAgent();
    t1 = $.getInterceptor$JSArrayJSString(ua);
    if (t1.contains$1(ua, "iPhone") === true || t1.contains$1(ua, "iPad") === true || t1.contains$1(ua, "iPod") === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if (t1.contains$1(ua, "Android") === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if (t1.contains$1(ua, "IEMobile") === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
  }
};

$._color2rgb = function(color) {
  var t1, r, g, b;
  t1 = $.getInterceptor$JSNumber(color);
  r = $.$$and(t1.$shr(color, 16), 255);
  g = $.$$and(t1.$shr(color, 8), 255);
  b = $.$$and(t1.$shr(color, 0), 255);
  return "rgb(" + $.S(r) + "," + $.S(g) + "," + $.S(b) + ")";
};

$._getBoundsTransformedHelper = function(matrix, width, height, returnRectangle) {
  var t1, x2, y2, t2, x3, y3, x4, y4, left, $top, right, bottom;
  t1 = $.getInterceptor$JSNumber(width);
  x2 = t1.$mul(width, matrix.get$a());
  y2 = t1.$mul(width, matrix.get$b());
  t2 = $.getInterceptor$JSNumber(height);
  x3 = $.$$add(t1.$mul(width, matrix.get$a()), t2.$mul(height, matrix.get$c()));
  y3 = $.$$add(t1.$mul(width, matrix.get$b()), t2.$mul(height, matrix.get$d()));
  x4 = t2.$mul(height, matrix.get$c());
  y4 = t2.$mul(height, matrix.get$d());
  left = $.CONSTANT.$gt(0, x2) ? x2 : 0;
  if ($.$$gt(left, x3) === true)
    left = x3;
  if ($.$$gt(left, x4) === true)
    left = x4;
  $top = $.CONSTANT.$gt(0, y2) ? y2 : 0;
  if ($.$$gt($top, y3) === true)
    $top = y3;
  if ($.$$gt($top, y4) === true)
    $top = y4;
  right = $.CONSTANT.$lt(0, x2) ? x2 : 0;
  if ($.$$lt(right, x3) === true)
    right = x3;
  if ($.$$lt(right, x4) === true)
    right = x4;
  bottom = $.CONSTANT.$lt(0, y2) ? y2 : 0;
  if ($.$$lt(bottom, y3) === true)
    bottom = y3;
  if ($.$$lt(bottom, y4) === true)
    bottom = y4;
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  returnRectangle.set$x($.$$add(matrix.get$tx(), left));
  returnRectangle.set$y($.$$add(matrix.get$ty(), $top));
  returnRectangle.set$width($.$$sub(right, left));
  returnRectangle.set$height($.$$sub(bottom, $top));
  return returnRectangle;
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.Element__determineMouseWheelEventType.call$1 = $.Element__determineMouseWheelEventType;
$.Element__determineMouseWheelEventType.$name = "Element__determineMouseWheelEventType";
Isolate.$finishClasses($$);
$$ = {};
$.$double = {builtin$cls: '$double'};
$.List = {builtin$cls: 'List'};
$.Animatable = {builtin$cls: 'Animatable'};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
$.Match = {builtin$cls: 'Match'};
$.Node = {builtin$cls: 'Node'};
$.String = {builtin$cls: 'String'};
$.Touch = {builtin$cls: 'Touch'};
$.bool = {builtin$cls: 'bool'};
$.$int = {builtin$cls: '$int'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT32 = Isolate.makeConstantList([]);
$.CONSTANT8 = new Isolate.$isolateProperties.EventStreamProvider0("keyUp");
$.CONSTANT23 = new Isolate.$isolateProperties.EventStreamProvider("touchleave");
$.CONSTANT31 = new Isolate.$isolateProperties.Object();
$.CONSTANT10 = new Isolate.$isolateProperties.EventStreamProvider0("keyDown");
$.CONSTANT16 = new Isolate.$isolateProperties.EventStreamProvider0("mouseMove");
$.CONSTANT24 = new Isolate.$isolateProperties.EventStreamProvider("touchenter");
$.CONSTANT9 = new Isolate.$isolateProperties.EventStreamProvider("keydown");
$.CONSTANT18 = new Isolate.$isolateProperties.EventStreamProvider0("mouseUp");
$.CONSTANT19 = new Isolate.$isolateProperties.EventStreamProvider("mousedown");
$.CONSTANT21 = new Isolate.$isolateProperties.EventStreamProvider("touchcancel");
$.CONSTANT22 = new Isolate.$isolateProperties.EventStreamProvider0("touchCancel");
$.CONSTANT25 = new Isolate.$isolateProperties.EventStreamProvider("touchmove");
$.CONSTANT27 = new Isolate.$isolateProperties.EventStreamProvider("touchend");
$.CONSTANT7 = new Isolate.$isolateProperties.EventStreamProvider("keyup");
$.CONSTANT28 = new Isolate.$isolateProperties.EventStreamProvider0("touchEnd");
$.CONSTANT3 = new Isolate.$isolateProperties.JSNull();
$.CONSTANT1 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT5 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT = new Isolate.$isolateProperties.JSInt();
$.CONSTANT30 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT0 = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT2 = new Isolate.$isolateProperties.JSString();
$.CONSTANT14 = new Isolate.$isolateProperties.EventStreamProvider0("mouseOut");
$.CONSTANT29 = new Isolate.$isolateProperties.EventStreamProvider("touchstart");
$.CONSTANT12 = new Isolate.$isolateProperties.EventStreamProvider0("mouseWheel");
$.CONSTANT6 = new Isolate.$isolateProperties.EventStreamProvider("keypress");
$.CONSTANT26 = new Isolate.$isolateProperties.EventStreamProvider0("touchMove");
$.CONSTANT4 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT15 = new Isolate.$isolateProperties.EventStreamProvider("mousemove");
$.CONSTANT20 = new Isolate.$isolateProperties.EventStreamProvider0("mouseDown");
$.CONSTANT17 = new Isolate.$isolateProperties.EventStreamProvider("mouseup");
$.CONSTANT11 = new Isolate.$isolateProperties._CustomEventStreamProvider(Isolate.$isolateProperties.Element__determineMouseWheelEventType);
$.CONSTANT13 = new Isolate.$isolateProperties.EventStreamProvider("mouseout");
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$._getTypeNameOf = null;
$._cachedBrowserPrefix = null;
$._Touch__globalTouchPointID = 0;
$.Mouse__customCursor = "auto";
$.Mouse__isCursorHidden = false;
$.Multitouch__initialized = false;
$.Multitouch__supportsTouchEvents = false;
$.Multitouch__maxTouchPoints = 0;
$.Multitouch__inputMode = "none";
$.$$and = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$and(receiver, a0);
};
$.$$mul = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mul(receiver, a0);
};
$.$$add = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$add(receiver, a0);
};
$.$$sub = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$sub(receiver, a0);
};
$.$$div = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$div(receiver, a0);
};
$.$$lt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$lt(receiver, a0);
};
$.$$shl = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$shl(receiver, a0);
};
$.$$le = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$le(receiver, a0);
};
$.$$eq = function(receiver, a0) {
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$$gt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$gt(receiver, a0);
};
$.$$ge = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$ge(receiver, a0);
};
$.abs = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).abs$0(receiver);
};
$.add = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).add$1(receiver, a0);
};
$.addLast = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addLast$1(receiver, a0);
};
$.allMatches = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).allMatches$1(receiver, a0);
};
$.ceil = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).ceil$0(receiver);
};
$.contains = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).contains$2(receiver, a0, a1);
};
$.forEach = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).forEach$1(receiver, a0);
};
$.hashCode = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.indexOf = function(receiver, a0) {
  return $.getInterceptor$JSArrayJSString(receiver).indexOf$1(receiver, a0);
};
$.insertRange = function(receiver, a0, a1, a2) {
  return $.getInterceptor$JSArray(receiver).insertRange$3(receiver, a0, a1, a2);
};
$.isEmpty = function(receiver) {
  return $.getInterceptor$JSArrayJSString(receiver).get$isEmpty(receiver);
};
$.isEven = function(receiver) {
  return $.getInterceptor$JSInt(receiver).get$isEven(receiver);
};
$.isNaN = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).get$isNaN(receiver);
};
$.iterator = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$iterator(receiver);
};
$.length = function(receiver) {
  return $.getInterceptor$JSArrayJSString(receiver).get$length(receiver);
};
$.remove = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).remove$1(receiver, a0);
};
$.removeAt = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeAt$1(receiver, a0);
};
$.replaceAll = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).replaceAll$2(receiver, a0, a1);
};
$.split = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).split$1(receiver, a0);
};
$.substring = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).substring$2(receiver, a0, a1);
};
$.toInt = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).toInt$0(receiver);
};
$.toList = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toList$0(receiver);
};
$.toString = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.$$index = function(receiver, a0) {
  return $.getInterceptor$JSArrayJSString(receiver).$index(receiver, a0);
};
$.$$indexSet = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).$indexSet(receiver, a0, a1);
};
$.$$xor = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$xor(receiver, a0);
};
$.$$negate = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).$negate(receiver);
};
$.$$or = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$or(receiver, a0);
};
$.$$tdiv = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$tdiv(receiver, a0);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArrayJSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSInt = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSNumber.prototype;
  }
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "quoteRegExp", "quoteRegExp", "get$quoteRegExp", function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
Isolate.$lazy($, "enterFrame", "_EventStreamIndex_enterFrame", "get$_EventStreamIndex_enterFrame", function() {
  return $._EventStreamIndex$();
});
Isolate.$lazy($, "_eventDispatcher", "Mouse__eventDispatcher", "get$Mouse__eventDispatcher", function() {
  return $.EventDispatcher$();
});
Isolate.$lazy($, "_eventDispatcher", "Multitouch__eventDispatcher", "get$Multitouch__eventDispatcher", function() {
  return $.EventDispatcher$();
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $isCollection: function() {
    return false;
  },
  $isList: function() {
    return false;
  },
  $isMap: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "target=,type>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLAreaElement", {"": "target="});

$.$defineNativeClass("HTMLBaseElement", {"": "target="});

$.$defineNativeClass("HTMLButtonElement", {"": "type>,value="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width=",
  getContext$2: function(contextId, attrs) {
    var t1 = $ === attrs;
    if (t1)
      attrs = null;
    if (!t1)
      return this._getContext_1$2(contextId, $.convertDartToNative_Dictionary(attrs));
    return this._getContext_2$1(contextId);
  },
  getContext$1: function(contextId) {
    return this.getContext$2(contextId, $);
  },
  _getContext_1$2: function(contextId, attrs) {
    return this.getContext(contextId,attrs);
  },
  _getContext_2$1: function(contextId) {
    return this.getContext(contextId);
  },
  get$context2d: function() {
    return this.getContext$1("2d");
  }
});

$.$defineNativeClass("CanvasRenderingContext", {"": "canvas>"});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle<,font=,globalAlpha<,lineWidth<,strokeStyle<,textAlign<,textBaseline<",
  clearRect$4: function(x, y, width, height) {
    return this.clearRect(x,y,width,height);
  },
  drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
    return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
  },
  drawImage$3: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y) {
    return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y);
  },
  fillRect$4: function(x, y, width, height) {
    return this.fillRect(x,y,width,height);
  },
  fillText$4: function(text, x, y, maxWidth) {
    return this.fillText(text,x,y,maxWidth);
  },
  fillText$3: function(text, x, y) {
    return this.fillText(text, x, y);
  },
  measureText$1: function(text) {
    return this.measureText(text);
  },
  restore$0: function() {
    return this.restore();
  },
  save$0: function() {
    return this.save();
  },
  setTransform$6: function(m11, m12, m21, m22, dx, dy) {
    return this.setTransform(m11,m12,m21,m22,dx,dy);
  },
  strokeRect$5: function(x, y, width, height, lineWidth) {
    return this.strokeRect(x,y,width,height,lineWidth);
  },
  strokeRect$4: function(x, y, width, height) {
    return this.strokeRect(x, y, width, height);
  }
});

$.$defineNativeClass("CharacterData", {"": "length>"});

$.$defineNativeClass("ClientRect", {"": "bottom>,height>,left>,right>,top>,width>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  _getPropertyValue$1: function(propertyName) {
    return this.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this._getPropertyValue$1(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  get$bottom: function() {
    return this.getPropertyValue$1("bottom");
  },
  get$color: function() {
    return this.getPropertyValue$1("color");
  },
  set$cursor: function(value) {
    this.setProperty$3("cursor", value, "");
  },
  get$font: function() {
    return this.getPropertyValue$1("font");
  },
  set$font: function(value) {
    this.setProperty$3("font", value, "");
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  get$left: function() {
    return this.getPropertyValue$1("left");
  },
  get$mask: function() {
    return this.getPropertyValue$1($.S($._browserPrefix()) + "mask");
  },
  get$right: function() {
    return this.getPropertyValue$1("right");
  },
  get$size: function() {
    return this.getPropertyValue$1("size");
  },
  set$textAlign: function(value) {
    this.setProperty$3("text-align", value, "");
  },
  get$top: function() {
    return this.getPropertyValue$1("top");
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  }
});

$.$defineNativeClass("Document", {
  $$dom_createElement$1: function(tagName) {
    return this.createElement(tagName);
  },
  $$dom_getElementById$1: function(elementId) {
    return this.getElementById(elementId);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  get$onKeyDown: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT6.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT7.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT15.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT27.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT25.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT29.forTarget$1(this);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors) === true)
      return this.$$dom_getElementById$1($.CONSTANT2.substring$1(selectors, 1));
    return this.$$dom_querySelector$1(selectors);
  }
});

$.$defineNativeClass("DOMException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "id>,style>",
  focus$0: function() {
    return this.focus();
  },
  getBoundingClientRect$0: function() {
    return this.getBoundingClientRect();
  },
  get$onKeyDown: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT6.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT7.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT15.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT27.forTarget$1(this);
  },
  get$onTouchEnter: function() {
    return $.CONSTANT24.forTarget$1(this);
  },
  get$onTouchLeave: function() {
    return $.CONSTANT23.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT25.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT29.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "align>,height=,type>,width="});

$.$defineNativeClass("Event", {"": "bubbles>,type>",
  get$target: function() {
    return $._convertNativeToDart_EventTarget(this.target);
  },
  preventDefault$0: function() {
    return this.preventDefault();
  }
});

$.$defineNativeClass("EventException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  dispatchEvent$1: function($event) {
    if (Object.getPrototypeOf(this).hasOwnProperty("dispatchEvent$1")) {
      return this.dispatchEvent($event);
    } else
      return Object.prototype.dispatchEvent$1.call(this, $event);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "type>"});

$.$defineNativeClass("FileException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>,target=",
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("XMLHttpRequestException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,width="});

$.$defineNativeClass("HTMLImageElement", {"": "height=,width=,x>,y>",
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "height=,pattern>,size>,type>,value=,width="});

$.$defineNativeClass("KeyboardEvent", {"": "altKey>,ctrlKey>,keyLocation>,shiftKey>",
  get$keyCode: function() {
    return this.keyCode;
  },
  get$charCode: function() {
    return this.charCode;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "type>"});

$.$defineNativeClass("HTMLLIElement", {"": "type>,value="});

$.$defineNativeClass("HTMLLinkElement", {"": "type>"});

$.$defineNativeClass("HTMLMediaElement", {"": "error>"});

$.$defineNativeClass("MessageEvent", {"": "ports>"});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MouseEvent", {"": "altKey>,button>,clientX>,clientY>,ctrlKey>,shiftKey>"});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Navigator", {"": "userAgent>"});

$.$defineNativeClass("Node", {
  remove$0: function() {
    var t1 = this.parentNode;
    if (!(t1 == null))
      t1.$$dom_removeChild$1(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  dispatchEvent$1: function($event) {
    return this.dispatchEvent($event);
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type>"});

$.$defineNativeClass("HTMLObjectElement", {"": "height=,type>,width="});

$.$defineNativeClass("HTMLOptionElement", {"": "value="});

$.$defineNativeClass("HTMLOutputElement", {"": "type>,value="});

$.$defineNativeClass("HTMLParamElement", {"": "value="});

$.$defineNativeClass("ProcessingInstruction", {"": "target>"});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("RangeException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "type>"});

$.$defineNativeClass("HTMLSelectElement", {"": "length>,size>,type>,value="});

$.$defineNativeClass("HTMLSourceElement", {"": "type>"});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return !(this.$$dom_getItem$1(key) == null);
  },
  $index: function(key) {
    return this.$$dom_getItem$1(key);
  },
  $indexSet: function(key, value) {
    this.$$dom_setItem$2(key, value);
  },
  remove$1: function(key) {
    var value = this.$index(key);
    this.$$dom_removeItem$1(key);
    return value;
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(i);
      if (key == null)
        return;
      f.call$2(key, this.$index(key));
    }
  },
  get$keys: function() {
    var keys = [];
    this.forEach$1(new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function() {
    var values = [];
    this.forEach$1(new $.Storage_values_anon(values));
    return values;
  },
  get$length: function() {
    return this.length;
  },
  get$isEmpty: function() {
    return this.$$dom_key$1(0) == null;
  },
  $$dom_getItem$1: function(key) {
    return this.getItem(key);
  },
  $$dom_key$1: function(index) {
    return this.key(index);
  },
  $$dom_removeItem$1: function(key) {
    return this.removeItem(key);
  },
  $$dom_setItem$2: function(key, data) {
    return this.setItem(key,data);
  },
  $isMap: function() {
    return true;
  }
});

$.$defineNativeClass("StorageEvent", {"": "key>"});

$.$defineNativeClass("HTMLStyleElement", {"": "type>"});

$.$defineNativeClass("HTMLTextAreaElement", {"": "type>,value="});

$.$defineNativeClass("TextMetrics", {"": "width>"});

$.$defineNativeClass("Touch", {"": "clientX>,clientY>,identifier>",
  get$target: function() {
    return $._convertNativeToDart_EventTarget(this.target);
  }
});

$.$defineNativeClass("TouchEvent", {"": "altKey>,changedTouches>,ctrlKey>,shiftKey>"});

$.$defineNativeClass("TouchList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  $index: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return this[index];
    } else
      return Object.prototype.$index.call(this, index);
  },
  $indexSet: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      this[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  contains$1: function(element) {
    if (Object.getPrototypeOf(this).hasOwnProperty("contains$1")) {
      return $.IterableMixinWorkaround_contains(this, element);
    } else
      return Object.prototype.contains$1.call(this, element);
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  toList$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$0")) {
      return $.List_List$from(this);
    } else
      return Object.prototype.toList$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      var t1 = this.get$length();
      if (typeof t1 !== "number")
        return this.get$isEmpty$bailout(1, t1);
      return t1 === 0;
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  addLast$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addLast$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addLast$1.call(this, value);
  },
  indexOf$2: function(element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(this, element, start, this.get$length());
    } else
      return Object.prototype.indexOf$2.call(this, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAt$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAt$1.call(this, pos);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    if (Object.getPrototypeOf(this).hasOwnProperty("insertRange$3")) {
      throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
    } else
      return Object.prototype.insertRange$3.call(this, start, rangeLength, initialValue);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout1(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout1: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("DOMWindow", {"": "navigator>",
  requestAnimationFrame$1: function(callback) {
    this._ensureRequestAnimationFrame$0();
    return this._requestAnimationFrame$1(callback);
  },
  _requestAnimationFrame$1: function(callback) {
    return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function() {
    if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
  },
  get$top: function() {
    return $._convertNativeToDart_Window(this.top);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  dispatchEvent$1: function(evt) {
    return this.dispatchEvent(evt);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onKeyDown: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT6.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT7.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT15.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT27.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT25.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT29.forTarget$1(this);
  }
});

$.$defineNativeClass("XPathException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGAElement", {"": "target>"});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type>,height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type>,height>,width>,x>,y>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGScriptElement", {"": "type>"});

$.$defineNativeClass("SVGStyleElement", {"": "type>"});

$.$defineNativeClass("SVGElement", {
  get$id: function() {
    return this.id;
  }
});

$.$defineNativeClass("SVGException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x>,y>"});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type>"});

$.$defineNativeClass("SVGCursorElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x=,y="});

// 100 dynamic classes.
// 241 classes
// 23 !leaf
(function() {
  var v0_TextPositioningElement = "SVGTextPositioningElement|SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTRefElement", v1__SVGComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncBElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncAElement", v2_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v3_SvgElement = [v0_TextPositioningElement, v1__SVGComponentTransferFunctionElement, "SVGElement|SVGStyledElement|SVGAElement|SVGTextContentElement|SVGTextPathElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDisplacementMapElement|SVGFEFloodElement|SVGFEDiffuseLightingElement|SVGFEColorMatrixElement|SVGFEMergeElement|SVGFEMorphologyElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFETileElement|SVGFESpecularLightingElement|SVGFEOffsetElement|SVGFETurbulenceElement|SVGForeignObjectElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGImageElement|SVGMarkerElement|SVGMaskElement|SVGGElement|SVGFilterElement|SVGLineElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGStopElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGFEDropShadowElement|SVGGlyphRefElement|SVGMissingGlyphElement|SVGAnimationElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGAnimateColorElement|SVGFEDistantLightElement|SVGFEPointLightElement|SVGFESpotLightElement|SVGFEMergeNodeElement|SVGMetadataElement|SVGScriptElement|SVGStyleElement|SVGViewElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGCursorElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGHKernElement|SVGMPathElement|SVGVKernElement"].join("|"), v4_MouseEvent = "MouseEvent|WheelEvent", v5_Element = [v2_MediaElement, v3_SvgElement, "Element|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement|HTMLElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement"].join("|"), v6_CharacterData = "CharacterData|Text|CDATASection|Comment", v7_Document = "Document|SVGDocument|HTMLDocument", v8_Node = [v5_Element, v6_CharacterData, v7_Document, "Node|ProcessingInstruction|DocumentFragment|ShadowRoot|Attr|DocumentType|EntityReference|Notation"].join("|");
  $.dynamicSetMetadata([["CanvasRenderingContext", "CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D"], ["CharacterData", v6_CharacterData], ["Document", v7_Document], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGComponentTransferFunctionElement", v1__SVGComponentTransferFunctionElement], ["SVGElement", v3_SvgElement], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["HTMLMediaElement", v2_MediaElement], ["Element", v5_Element], ["MouseEvent", v4_MouseEvent], ["Event", [v4_MouseEvent, "Event|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|UIEvent|TextEvent|TouchEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitTransitionEvent|IDBVersionChangeEvent|CloseEvent|CustomEvent|WebKitAnimationEvent|BeforeLoadEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|DeviceMotionEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent"].join("|")], ["Node", v8_Node], ["EventTarget", [v8_Node, "EventTarget|DOMWindow"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["NodeList", "NodeList|RadioNodeList"]]);
})();

$.main.call$0 = $.main;

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } finally {
          if (result === sentinelUndefined) {
            if ($[fieldName] === sentinelInProgress) {
              $[fieldName] = null;
            }
          }
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}
//@ sourceMappingURL=tweener.dart.js.map
