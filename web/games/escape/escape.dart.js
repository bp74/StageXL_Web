// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DateImplementation = {"":
 ["millisecondsSinceEpoch?", "isUtc"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 hashCode$0: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1 = new $.DateImplementation_toString_fourDigits();
  var t2 = new $.DateImplementation_toString_threeDigits();
  var t3 = new $.DateImplementation_toString_twoDigits();
  var y = t1.call$1(this.get$year());
  var m = t3.call$1(this.get$month());
  var d = t3.call$1(this.get$day());
  var h = t3.call$1(this.get$hour());
  var min = t3.call$1(this.get$minute());
  var sec = t3.call$1(this.get$second());
  var ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms) + 'Z';
  else
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms);
},
 add$1: function(duration) {
  return $.DateImplementation$fromMillisecondsSinceEpoch($.add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 DateImplementation$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.abs(t1), 8640000000000000))
    throw $.$$throw($.IllegalArgumentException$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.IllegalArgumentException$(t1));
},
 DateImplementation$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 is$Date: true
};

$$.ExceptionImplementation = {"":
 ["_msg"],
 "super": "Object",
 toString$0: function() {
  var t1 = this._msg;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
},
 is$Exception: true
};

$$.FutureImpl = {"":
 ["_isComplete", "_lib0_value?", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw(t1);
  return this._lib0_value;
},
 get$exception: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._exception;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
  else if (this._exceptionHandled !== true)
    throw $.$$throw(this._exception);
},
 handleException$1: function(onException) {
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete === true) {
    var t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function() {
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (var t1 = $.iterator(this._exceptionHandlers); t1.hasNext$0() === true;) {
        var handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.hasNext$0() === true;) {
        var listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && $.gtB($.get$length(this._successListeners), 0))
      throw $.$$throw(this._exception);
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.hasNext$0() === true;) {
      var listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete === true)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._lib0_value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.IllegalArgumentException$(null));
  if (this._isComplete === true)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$.CompleterImpl = {"":
 ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$.HashMapImplementation = {"":
 ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  var t1 = $.hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1, 0, 0, 0);
  var t3 = $.get$length(this._keys);
  if (t3 !== (t3 | 0))
    return this._probeForAdding$1$bailout(2, key, t1, t3, 0, 0);
  var hash = (t1 & t3 - 1) >>> 0;
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this._probeForAdding$1$bailout(3, key, hash, numberOfProbes, insertionIndex, t1);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC13 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(4, numberOfProbes0, key, insertionIndex, hash, 0);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForAdding$1$bailout: function(state, env0, env1, env2, env3, env4) {
  switch (state) {
    case 1:
      var key = env0;
      t1 = env1;
      break;
    case 2:
      key = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 3:
      key = env0;
      hash = env1;
      numberOfProbes = env2;
      insertionIndex = env3;
      t1 = env4;
      break;
    case 4:
      numberOfProbes0 = env0;
      key = env1;
      insertionIndex = env2;
      hash = env3;
      break;
  }
  switch (state) {
    case 0:
      var t1 = $.hashCode(key);
    case 1:
      state = 0;
      var t3 = $.get$length(this._keys);
    case 2:
      state = 0;
      var hash = $.and(t1, $.sub(t3, 1));
      var numberOfProbes = 1;
      var insertionIndex = -1;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
            case 3:
              state = 0;
              var existingKey = $.index(t1, hash);
              if (existingKey == null) {
                if ($.ltB(insertionIndex, 0))
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if ($.ltB(insertionIndex, 0) && $.CTC13 === existingKey)
                insertionIndex = hash;
              var numberOfProbes0 = numberOfProbes + 1;
              hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
            case 4:
              state = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var hash = $.and($.hashCode(key), $.sub($.get$length(this._keys), 1));
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (var numberOfProbes = 1; true;) {
    var existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1$bailout: function(state, key, hash) {
  for (var numberOfProbes = 1; true;) {
    var existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
    numberOfProbes = numberOfProbes0;
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1($.mul($.get$length(this._keys), 2));
    return;
  }
  var numberOfFree = $.sub($.sub($.get$length(this._keys), newNumberOfEntries), this._numberOfDeleted);
  if ($.gtB(this._numberOfDeleted, numberOfFree))
    this._grow$1($.get$length(this._keys));
},
 _grow$1: function(newCapacity) {
  var capacity = $.get$length(this._keys);
  if (typeof capacity !== 'number')
    return this._grow$1$bailout(1, newCapacity, capacity, 0, 0);
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  var oldKeys = this._keys;
  if (typeof oldKeys !== 'string' && (typeof oldKeys !== 'object' || oldKeys === null || oldKeys.constructor !== Array && !oldKeys.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(2, newCapacity, oldKeys, capacity, 0);
  var oldValues = this._values;
  if (typeof oldValues !== 'string' && (typeof oldValues !== 'object' || oldValues === null || oldValues.constructor !== Array && !oldValues.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(3, newCapacity, oldKeys, oldValues, capacity);
  this._keys = $.ListImplementation_List(newCapacity);
  this._values = $.ListImplementation_List(newCapacity);
  for (var i = 0; i < capacity; ++i) {
    if (i < 0 || i >= oldKeys.length)
      throw $.ioore(i);
    var key = oldKeys[i];
    if (key == null || key === $.CTC13)
      continue;
    if (i < 0 || i >= oldValues.length)
      throw $.ioore(i);
    var value = oldValues[i];
    var newIndex = this._probeForAdding$1(key);
    $.indexSet(this._keys, newIndex, key);
    $.indexSet(this._values, newIndex, value);
  }
  this._numberOfDeleted = 0;
},
 _grow$1$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var newCapacity = env0;
      capacity = env1;
      break;
    case 2:
      newCapacity = env0;
      oldKeys = env1;
      capacity = env2;
      break;
    case 3:
      newCapacity = env0;
      oldKeys = env1;
      oldValues = env2;
      capacity = env3;
      break;
  }
  switch (state) {
    case 0:
      var capacity = $.get$length(this._keys);
    case 1:
      state = 0;
      this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
      var oldKeys = this._keys;
    case 2:
      state = 0;
      var oldValues = this._values;
    case 3:
      state = 0;
      this._keys = $.ListImplementation_List(newCapacity);
      this._values = $.ListImplementation_List(newCapacity);
      for (var i = 0; $.ltB(i, capacity); ++i) {
        var key = $.index(oldKeys, i);
        if (key == null || key === $.CTC13)
          continue;
        var value = $.index(oldValues, i);
        var newIndex = this._probeForAdding$1(key);
        $.indexSet(this._keys, newIndex, key);
        $.indexSet(this._values, newIndex, value);
      }
      this._numberOfDeleted = 0;
  }
},
 clear$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  var length$ = $.get$length(this._keys);
  if (typeof length$ !== 'number')
    return this.clear$0$bailout(1, length$);
  for (var i = 0; i < length$; ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 clear$0$bailout: function(state, length$) {
  for (var i = 0; $.ltB(i, length$); ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 operator$indexSet$2: function(key, value) {
  this._ensureCapacity$0();
  var index = this._probeForAdding$1(key);
  var t1 = this._keys;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$indexSet$2$bailout(1, key, value, index, t1);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  if (!(t1[index] == null)) {
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    var t2 = t1[index] === $.CTC13;
    t1 = t2;
  } else
    t1 = true;
  if (t1) {
    t1 = this._numberOfEntries;
    if (typeof t1 !== 'number')
      return this.operator$indexSet$2$bailout(3, key, value, t1, index);
    this._numberOfEntries = t1 + 1;
  }
  t1 = this._keys;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.operator$indexSet$2$bailout(4, key, value, t1, index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.operator$indexSet$2$bailout(5, value, t1, index, 0);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$indexSet$2$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var key = env0;
      var value = env1;
      index = env2;
      t1 = env3;
      break;
    case 2:
      key = env0;
      value = env1;
      index = env2;
      t1 = env3;
      break;
    case 3:
      key = env0;
      value = env1;
      t1 = env2;
      index = env3;
      break;
    case 4:
      key = env0;
      value = env1;
      t1 = env2;
      index = env3;
      break;
    case 5:
      value = env0;
      t1 = env1;
      index = env2;
      break;
  }
  switch (state) {
    case 0:
      this._ensureCapacity$0();
      var index = this._probeForAdding$1(key);
      var t1 = this._keys;
    case 1:
      state = 0;
    case 2:
      if (state === 2 || state === 0 && !($.index(t1, index) == null))
        switch (state) {
          case 0:
            t1 = this._keys;
          case 2:
            state = 0;
            var t3 = $.index(t1, index) === $.CTC13;
            t1 = t3;
        }
      else
        t1 = true;
    case 3:
      if (state === 3 || state === 0 && t1)
        switch (state) {
          case 0:
            t1 = this._numberOfEntries;
          case 3:
            state = 0;
            this._numberOfEntries = $.add(t1, 1);
        }
      t1 = this._keys;
    case 4:
      state = 0;
      $.indexSet(t1, index, key);
      t1 = this._values;
    case 5:
      state = 0;
      $.indexSet(t1, index, value);
  }
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  return $.index(this._values, index);
},
 remove$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = $.sub(this._numberOfEntries, 1);
    var value = $.index(this._values, index);
    $.indexSet(this._values, index, null);
    $.indexSet(this._keys, index, $.CTC13);
    this._numberOfDeleted = $.add(this._numberOfDeleted, 1);
    return value;
  }
  return;
},
 isEmpty$0: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$ = $.get$length(this._keys);
  if (typeof length$ !== 'number')
    return this.forEach$1$bailout(1, f, length$);
  for (var i = 0; i < length$; ++i) {
    var key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC13))
      f.call$2(key, $.index(this._values, i));
  }
},
 forEach$1$bailout: function(state, f, length$) {
  for (var i = 0; $.ltB(i, length$); ++i) {
    var key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC13))
      f.call$2(key, $.index(this._values, i));
  }
},
 getKeys$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_1 = 0;
  this.forEach$1(new $.HashMapImplementation_getKeys__(list, t1));
  return list;
},
 getValues$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_11 = 0;
  this.forEach$1(new $.HashMapImplementation_getValues__(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 HashMapImplementation$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $.HashMapImplementation__computeLoadLimit(8);
  this._keys = $.ListImplementation_List(8);
  this._values = $.ListImplementation_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":
 [],
 "super": "Object"
};

$$.KeyValuePair = {"":
 ["key?", "value="],
 "super": "Object"
};

$$.LinkedHashMapImplementation = {"":
 ["_lib0_list", "_map"],
 "super": "Object",
 operator$indexSet$2: function(key, value) {
  var t1 = this._map;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.operator$indexSet$2$bailout(1, key, value, t1);
  if (t1.containsKey$1(key) === true) {
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1[key].get$element().set$value(value);
  } else {
    var t2 = this._lib0_list;
    $.addLast(t2, $.KeyValuePair$(key, value));
    t2 = t2.lastEntry$0();
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1[key] = t2;
  }
},
 operator$indexSet$2$bailout: function(state, key, value, t1) {
  if (t1.containsKey$1(key) === true)
    $.index(t1, key).get$element().set$value(value);
  else {
    var t2 = this._lib0_list;
    $.addLast(t2, $.KeyValuePair$(key, value));
    $.indexSet(t1, key, t2.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var t1 = this._map;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout(1, key, t1);
  if (key !== (key | 0))
    throw $.iae(key);
  if (key < 0 || key >= t1.length)
    throw $.ioore(key);
  var entry = t1[key];
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 operator$index$1$bailout: function(state, key, t1) {
  var entry = $.index(t1, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 getKeys$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_1 = 0;
  $.forEach(this._lib0_list, new $.LinkedHashMapImplementation_getKeys__(list, t1));
  return list;
},
 getValues$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_10 = 0;
  $.forEach(this._lib0_list, new $.LinkedHashMapImplementation_getValues__(list, t1));
  return list;
},
 forEach$1: function(f) {
  $.forEach(this._lib0_list, new $.LinkedHashMapImplementation_forEach__(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 clear$0: function() {
  $.clear(this._map);
  $.clear(this._lib0_list);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 LinkedHashMapImplementation$0: function() {
  this._map = $.HashMapImplementation$();
  this._lib0_list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.DoubleLinkedQueueEntry = {"":
 ["_previous=", "_next=", "_lib0_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._lib0_element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._lib0_element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._lib0_element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":
 ["_previous", "_next", "_lib0_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.CTC19);
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.CTC19);
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":
 ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this.addLast$1(value);
},
 removeLast$0: function() {
  return this._sentinel.get$_previous().remove$0();
},
 removeFirst$0: function() {
  return this._sentinel.get$_next().remove$0();
},
 last$0: function() {
  return this._sentinel.get$_previous().get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 isEmpty$0: function() {
  var t1 = this._sentinel;
  var t2 = t1.get$_next();
  return t2 == null ? t1 == null : t2 === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1.set$_next(t1);
  t1.set$_previous(t1);
},
 forEach$1: function(f) {
  var t1 = this._sentinel;
  var entry = t1.get$_next();
  for (; !(entry == null ? t1 == null : entry === t1);) {
    var nextEntry = entry.get$_next();
    f.call$1(entry.get$_lib0_element());
    entry = nextEntry;
  }
},
 filter$1: function(f) {
  var other = $.DoubleLinkedQueue$();
  var t1 = this._sentinel;
  var entry = t1.get$_next();
  for (; !(entry == null ? t1 == null : entry === t1);) {
    var nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_lib0_element()) === true)
      other.addLast$1(entry.get$_lib0_element());
    entry = nextEntry;
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":
 ["_sentinel", "_currentEntry"],
 "super": "Object",
 hasNext$0: function() {
  var t1 = this._currentEntry.get$_next();
  var t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.JSSyntaxRegExp = {"":
 ["_ignoreCase", "_multiLine", "_lib0_pattern"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  var matchStart = $.regExpMatchStart(m);
  var t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$.StringBufferImpl = {"":
 ["_buffer?", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 isEmpty$0: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  var t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, str, t1);
  var t3 = $.get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t1, t3);
  this._length = t1 + t3;
  return this;
},
 add$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      str = env0;
      t1 = env1;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      var str = $.toString(obj);
      if (str == null || $.isEmpty(str) === true)
        return this;
      $.add$1(this._buffer, str);
      var t1 = this._length;
    case 1:
      state = 0;
      var t3 = $.get$length(str);
    case 2:
      state = 0;
      this._length = $.add(t1, t3);
      return this;
  }
},
 clear$0: function() {
  this._buffer = $.ListImplementation_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1) {
    var t1 = this._buffer;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.toString$0$bailout(1, t1);
    if (0 >= t1.length)
      throw $.ioore(0);
    return t1[0];
  }
  var result = $.stringJoinUnchecked($.StringImplementation__toJsStringArray(this._buffer), '');
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 toString$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
      if ($.get$length(this._buffer) === 0)
        return '';
    case 1:
      if (state === 1 || state === 0 && $.get$length(this._buffer) === 1)
        switch (state) {
          case 0:
            var t1 = this._buffer;
          case 1:
            state = 0;
            return $.index(t1, 0);
        }
      var result = $.stringJoinUnchecked($.StringImplementation__toJsStringArray(this._buffer), '');
      $.clear(this._buffer);
      $.add$1(this._buffer, result);
      return result;
  }
},
 StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$._MatchImplementation = {"":
 ["pattern?", "str", "_lib0_start", "_end", "_groups"],
 "super": "Object",
 start$0: function() {
  return this._lib0_start;
},
 group$1: function(index) {
  return $.index(this._groups, index);
},
 operator$index$1: function(index) {
  return this.group$1(index);
}
};

$$._AllMatchesIterable = {"":
 ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":
 ["_re", "_str", "_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  var next = this._next;
  this._next = null;
  return next;
},
 hasNext$0: function() {
  if (this._done === true)
    return false;
  else if (!(this._next == null))
    return true;
  this._next = this._re.firstMatch$1(this._str);
  if (this._next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.NoSuchMethodError = {"":
 ["_receiver", "_functionName", "_arguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var sb = $.StringBufferImpl$('');
  for (var t1 = this._arguments, i = 0; i < t1.length; ++i) {
    if (i > 0)
      sb.add$1(', ');
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    sb.add$1(t1[i]);
  }
  t1 = this._existingArgumentNames;
  if (t1 == null)
    return 'NoSuchMethodError : method not found: \'' + $.S(this._functionName) + '\'\n' + 'Receiver: ' + this._receiver + '\n' + 'Arguments: [' + $.S(sb) + ']';
  else {
    var actualParameters = sb.toString$0();
    sb = $.StringBufferImpl$('');
    for (i = 0; $.ltB(i, $.get$length(t1)); ++i) {
      if (i > 0)
        sb.add$1(', ');
      sb.add$1($.index(t1, i));
    }
    var formalParameters = sb.toString$0();
    t1 = this._functionName;
    return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t1) + '\'\nReceiver: ' + this._receiver + '\n' + 'Tried calling: ' + $.S(t1) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t1) + '(' + $.S(formalParameters) + ')';
  }
}
};

$$.IndexOutOfRangeException = {"":
 ["_value?"],
 "super": "Object",
 toString$0: function() {
  return 'IndexOutOfRangeException: ' + $.S(this._value);
},
 is$Exception: true
};

$$.ObjectNotClosureException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Object is not closure';
},
 is$Exception: true
};

$$.IllegalArgumentException = {"":
 ["_arg"],
 "super": "Object",
 toString$0: function() {
  return 'Illegal argument(s): ' + $.S(this._arg);
},
 is$Exception: true
};

$$.StackOverflowException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
},
 is$Exception: true
};

$$.FormatException = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + $.S(this.message);
},
 is$Exception: true
};

$$.NullPointerException = {"":
 ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
},
 is$Exception: true
};

$$.NoMoreElementsException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'NoMoreElementsException';
},
 is$Exception: true
};

$$.EmptyQueueException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'EmptyQueueException';
},
 is$Exception: true
};

$$.UnsupportedOperationException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  return 'UnsupportedOperationException: ' + this._message;
},
 is$Exception: true
};

$$.NotImplementedException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this._message;
  return !(t1 == null) ? 'NotImplementedException: ' + $.S(t1) : 'NotImplementedException';
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"":
 ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
},
 is$Exception: true
};

$$.Object = {"":
 [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.ListIterator = {"":
 ["i", "list"],
 "super": "Object",
 hasNext$0: function() {
  var t1 = this.i;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 < this.list.length;
},
 hasNext$0$bailout: function(state, t1) {
  return $.lt(t1, this.list.length);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.NoMoreElementsException$());
  var value = this.list[this.i];
  var t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout: function(state, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.StackTrace = {"":
 ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : '';
}
};

$$.Closure = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.CastExceptionImplementation = {"":
 ["actualType", "expectedType"],
 "super": "Object",
 toString$0: function() {
  return 'CastException: Casting value of type ' + $.S(this.actualType) + ' to' + ' incompatible type ' + $.S(this.expectedType);
}
};

$$.MetaInfo = {"":
 ["_tag?", "_tags", "_set?"],
 "super": "Object"
};

$$.StringMatch = {"":
 ["_start", "str", "pattern?"],
 "super": "Object",
 start$0: function() {
  return this._start;
},
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.IndexOutOfRangeException$(group_));
  return this.pattern;
}
};

$$.Alarm = {"":
 ["_alarmBitmapDatas?", "_alarmBitmap?", "_warning", "_warningChannel", "_tween", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 start$0: function() {
  this._warningChannel = this._warning.play$0();
  $.Juggler_instance().remove$1(this._tween);
  this._tween = $.Tween$(this, 9, $.Transitions_linear);
  this._tween.animateValue$3(new $.Alarm_start_anon(this), 0, 80);
  $.add$1($.Juggler_instance(), this._tween);
},
 stop$0: function() {
  var t1 = this._warningChannel;
  if (!(t1 == null)) {
    t1.stop$0();
    this._warningChannel = null;
  }
  $.Juggler_instance().remove$1(this._tween);
  t1 = $.index(this._alarmBitmapDatas, 0);
  this._alarmBitmap.set$bitmapData(t1);
},
 Alarm$0: function() {
  this._warning = $.Sounds_resource.getSound$1('Warning');
  this._warningChannel = null;
  this._alarmBitmapDatas = $.Grafix_getAlarms();
  this._alarmBitmap = $.Bitmap$($.index(this._alarmBitmapDatas, 0), 'auto', false);
  this.addChild$1(this._alarmBitmap);
}
};

$$.Board = {"":
 ["_levelChains", "_levelLocks", "_levelJokers", "_levelBlocks", "_levelDoubles", "_levelQuints", "_levelColors", "_random", "_status", "_colors", "_queue", "_fields", "_locks?", "_mouseBuffer?", "_animationRunning!", "_chainLayer?", "_linkLayer?", "_specialLayer?", "_lockLayer", "_explosionLayer?", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 updateStatus$1: function(status$) {
  if (status$ === 2)
    this._status = status$;
  if (status$ === 3 && this._status === 1) {
    this._status = status$;
    if ($.eqB(this._animationRunning, false))
      this.dispatchEvent$1($.BoardEvent$('Timeouted', null, false));
  }
},
 dropFields$0: function() {
  this.mask = $.Mask$rectangle(0, 0, 500, 500);
  for (var t1 = this._chainLayer, t2 = this._linkLayer, t3 = this._specialLayer, y = 0; y < 10; ++y)
    for (var t4 = y * 10, t5 = 500 + y * 50 + 25, x = 0; x < 10; ++x) {
      var field = $.index(this._fields, x + t4);
      field.set$linked(false);
      field.set$linkedJoker(false);
      field.set$special('None');
      field.updateDisplayObjects$3(t1, t2, t3);
      var tween = $.Tween$(field, 0.5, $.Transitions_easeOutCubic);
      tween.animate$2('y', t5);
      tween.set$delay(x * 0.1);
      $.add$1($.Juggler_instance(), tween);
    }
},
 initLocks$0: function() {
  this._locks = $.ListImplementation_List(null);
  var t1 = this._levelLocks;
  if (typeof t1 !== 'number')
    return this.initLocks$0$bailout(1, t1);
  var t3 = this._random;
  var t4 = this._lockLayer;
  var t5 = 300 - 90 * t1 / 2;
  var l = 0;
  for (; l < t1; ++l) {
    var lock = $.Lock$(l);
    lock.set$rotation($.div($.mul($.sub(t3.nextInt$1(30), 15), 3.141592653589793), 180));
    var t2 = t5 + l * 90;
    var t6 = t3.nextInt$1(20);
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    lock.set$x(t2 + t6 - 10);
    lock.set$y(550);
    $.add$1(this._locks, lock);
    t4.addChild$1(lock);
  }
},
 initLocks$0$bailout: function(state, t1) {
  var t3 = this._random;
  var t4 = this._lockLayer;
  var l = 0;
  for (; $.ltB(l, t1); ++l) {
    var lock = $.Lock$(l);
    lock.set$rotation($.div($.mul($.sub(t3.nextInt$1(30), 15), 3.141592653589793), 180));
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    var t2 = 300 - 90 * t1 / 2 + l * 90;
    var t5 = t3.nextInt$1(20);
    if (typeof t5 !== 'number')
      throw $.iae(t5);
    lock.set$x(t2 + t5 - 10);
    lock.set$y(550);
    $.add$1(this._locks, lock);
    t4.addChild$1(lock);
  }
},
 countLinks$2: function(x, y) {
  var t1 = this._fields;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.countLinks$2$bailout(1, x, y, t1, 0, 0);
  var t3 = y * 10;
  var t4 = x + t3;
  if (t4 < 0 || t4 >= t1.length)
    throw $.ioore(t4);
  var field = t1[t4];
  t1 = field.get$direction();
  if (typeof t1 !== 'number')
    return this.countLinks$2$bailout(2, x, y, t3, field, t1);
  if (t1 === 0) {
    if (x > 0) {
      t1 = this._fields;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.countLinks$2$bailout(3, x, t3, field, t1, 0);
      t4 = x - 1 + t3;
      if (t4 < 0 || t4 >= t1.length)
        throw $.ioore(t4);
      var fieldWest = t1[t4];
    } else
      fieldWest = null;
    if (x < 9) {
      t1 = this._fields;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.countLinks$2$bailout(4, x, t1, t3, field, fieldWest);
      t3 = x + 1 + t3;
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      var fieldEast = t1[t3];
    } else
      fieldEast = null;
    var linkCount = field.canLinkHorizontal$1(fieldWest) === true ? 1 : 0;
    if (field.canLinkHorizontal$1(fieldEast) === true)
      ++linkCount;
  } else {
    if (y > 0) {
      t1 = this._fields;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.countLinks$2$bailout(5, x, y, t1, field, 0);
      t3 = x + (y - 1) * 10;
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      var fieldNorth = t1[t3];
    } else
      fieldNorth = null;
    if (y < 9) {
      t1 = this._fields;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.countLinks$2$bailout(6, x, y, fieldNorth, field, t1);
      t3 = x + (y + 1) * 10;
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      var fieldSouth = t1[t3];
    } else
      fieldSouth = null;
    linkCount = field.canLinkVertical$1(fieldNorth) === true ? 1 : 0;
    if (field.canLinkVertical$1(fieldSouth) === true)
      ++linkCount;
  }
  return linkCount;
},
 countLinks$2$bailout: function(state, env0, env1, env2, env3, env4) {
  switch (state) {
    case 1:
      var x = env0;
      var y = env1;
      t1 = env2;
      break;
    case 2:
      x = env0;
      y = env1;
      t3 = env2;
      field = env3;
      t1 = env4;
      break;
    case 3:
      x = env0;
      t3 = env1;
      field = env2;
      t1 = env3;
      break;
    case 4:
      x = env0;
      t1 = env1;
      t3 = env2;
      field = env3;
      fieldWest = env4;
      break;
    case 5:
      x = env0;
      y = env1;
      t1 = env2;
      field = env3;
      break;
    case 6:
      x = env0;
      y = env1;
      fieldNorth = env2;
      field = env3;
      t1 = env4;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._fields;
    case 1:
      state = 0;
      var t3 = y * 10;
      var field = $.index(t1, x + t3);
      t1 = field.get$direction();
    case 2:
      state = 0;
    default:
      if (state === 4 || state === 3 || state === 0 && $.eqB(t1, 0))
        switch (state) {
          case 0:
          case 3:
            if (state === 3 || state === 0 && x > 0)
              switch (state) {
                case 0:
                  t1 = this._fields;
                case 3:
                  state = 0;
                  var fieldWest = $.index(t1, x - 1 + t3);
              }
            else
              fieldWest = null;
          case 4:
            if (state === 4 || state === 0 && x < 9)
              switch (state) {
                case 0:
                  t1 = this._fields;
                case 4:
                  state = 0;
                  var fieldEast = $.index(t1, x + 1 + t3);
              }
            else
              fieldEast = null;
            var linkCount = field.canLinkHorizontal$1(fieldWest) === true ? 1 : 0;
            if (field.canLinkHorizontal$1(fieldEast) === true)
              ++linkCount;
        }
      else
        switch (state) {
          case 0:
          case 5:
            if (state === 5 || state === 0 && y > 0)
              switch (state) {
                case 0:
                  t1 = this._fields;
                case 5:
                  state = 0;
                  var fieldNorth = $.index(t1, x + (y - 1) * 10);
              }
            else
              fieldNorth = null;
          case 6:
            if (state === 6 || state === 0 && y < 9)
              switch (state) {
                case 0:
                  t1 = this._fields;
                case 6:
                  state = 0;
                  var fieldSouth = $.index(t1, x + (y + 1) * 10);
              }
            else
              fieldSouth = null;
            linkCount = field.canLinkVertical$1(fieldNorth) === true ? 1 : 0;
            if (field.canLinkVertical$1(fieldSouth) === true)
              ++linkCount;
        }
      return linkCount;
  }
},
 clearCombinations$0: function() {
  var t1 = this._levelColors;
  if (typeof t1 !== 'number')
    return this.clearCombinations$0$bailout(1, t1, 0, 0, 0, 0, 0, 0, 0);
  var t3 = this._colors;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this.clearCombinations$0$bailout(2, t3, t1, 0, 0, 0, 0, 0, 0);
  var retry = t1 * 2;
  var y = 0;
  for (; y < 10; ++y)
    for (var t2 = y * 10, x = 0; x < 10; ++x) {
      var t4 = this._fields;
      if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
        return this.clearCombinations$0$bailout(3, x, t4, y, t1, t3, t2, 0, 0);
      var t6 = x + t2;
      if (t6 < 0 || t6 >= t4.length)
        throw $.ioore(t6);
      var field = t4[t6];
      var retry0 = retry;
      while (true) {
        t4 = this.countLinks$2(x, y);
        if (typeof t4 !== 'number')
          return this.clearCombinations$0$bailout(4, field, x, t1, y, retry0, t3, t4, t2);
        if (!(t4 === 2 && retry0 > 0))
          break;
        if ($.mod(retry0, 2) === 0) {
          t4 = field.get$direction();
          if (typeof t4 !== 'number')
            throw $.iae(t4);
          field.set$direction(1 - t4);
          --retry0;
        } else {
          for (var colorIndex = 0, ci = 0; t4 = t3.length, ci < t4; ++ci) {
            t4 = field.get$color();
            if (ci < 0 || ci >= t3.length)
              throw $.ioore(ci);
            if ($.eqB(t4, t3[ci]))
              colorIndex = ci;
          }
          var t5 = $.mod(colorIndex + 1, t4);
          if (t5 < 0 || t5 >= t4)
            throw $.ioore(t5);
          field.set$color(t3[t5]);
          --retry0;
        }
      }
    }
  for (var y = 0, rebuild = false; y < 10; ++y)
    for (x = 0; x < 10; ++x)
      if (!rebuild) {
        t1 = this.countLinks$2(x, y);
        if (typeof t1 !== 'number')
          return this.clearCombinations$0$bailout(5, t1, x, y, 0, 0, 0, 0, 0);
        rebuild = t1 === 2;
      } else
        rebuild = true;
  return rebuild;
},
 clearCombinations$0$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env0;
      t1 = env1;
      break;
    case 3:
      x = env0;
      t4 = env1;
      y = env2;
      t1 = env3;
      t3 = env4;
      t2 = env5;
      break;
    case 4:
      field = env0;
      x = env1;
      t1 = env2;
      y = env3;
      retry = env4;
      t3 = env5;
      t4 = env6;
      t2 = env7;
      break;
    case 5:
      t1 = env0;
      x = env1;
      y = env2;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._levelColors;
    case 1:
      state = 0;
      var t3 = this._colors;
    case 2:
      state = 0;
      var y = 0;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(y < 10))
                break L0;
              var t2 = y * 10;
              var x = 0;
            default:
              L1:
                while (true)
                  switch (state) {
                    case 0:
                      if (!(x < 10))
                        break L1;
                      var t4 = this._fields;
                    case 3:
                      state = 0;
                      var field = $.index(t4, x + t2);
                      var retry = $.mul(t1, 2);
                    case 4:
                      L2:
                        while (true)
                          switch (state) {
                            case 0:
                              t4 = this.countLinks$2(x, y);
                            case 4:
                              state = 0;
                              if (!($.eqB(t4, 2) && $.gtB(retry, 0)))
                                break L2;
                              if ($.eqB($.mod(retry, 2), 0)) {
                                t4 = field.get$direction();
                                if (typeof t4 !== 'number')
                                  throw $.iae(t4);
                                field.set$direction(1 - t4);
                                retry = $.sub(retry, 1);
                              } else {
                                for (var colorIndex = 0, ci = 0; $.ltB(ci, $.get$length(t3)); ++ci)
                                  colorIndex = $.eqB(field.get$color(), $.index(t3, ci)) ? ci : colorIndex;
                                t4 = colorIndex + 1;
                                var t5 = $.get$length(t3);
                                if (typeof t5 !== 'number')
                                  throw $.iae(t5);
                                field.set$color($.index(t3, $.mod(t4, t5)));
                                retry = $.sub(retry, 1);
                              }
                          }
                      ++x;
                  }
              ++y;
          }
      y = 0;
      var rebuild = false;
    case 5:
      L3:
        while (true)
          switch (state) {
            case 0:
              if (!(y < 10))
                break L3;
              x = 0;
            case 5:
              L4:
                while (true)
                  switch (state) {
                    case 0:
                      if (!(x < 10))
                        break L4;
                    case 5:
                      if (state === 5 || state === 0 && !rebuild)
                        switch (state) {
                          case 0:
                            t1 = this.countLinks$2(x, y);
                          case 5:
                            state = 0;
                            rebuild = $.eqB(t1, 2);
                        }
                      else
                        rebuild = true;
                      ++x;
                  }
              ++y;
          }
      return rebuild;
  }
},
 possibleCombinations$0: function() {
  for (var y = 0; y < 10; ++y)
    for (var t1 = y * 10, x = 1; x < 9; ++x) {
      var t2 = this._fields;
      if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
        return this.possibleCombinations$0$bailout(1, t2, x, t1, y, 0);
      var t4 = x - 1 + t1;
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      t4 = t2[t4];
      var t5 = x + t1;
      if (t5 < 0 || t5 >= t2.length)
        throw $.ioore(t5);
      if (t4.couldLink$1(t2[t5]) === true) {
        t2 = this._fields;
        if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
          return this.possibleCombinations$0$bailout(3, y, x, t1, t5, t2);
        if (t5 < 0 || t5 >= t2.length)
          throw $.ioore(t5);
        t5 = t2[t5];
        t4 = x + 1 + t1;
        if (t4 < 0 || t4 >= t2.length)
          throw $.ioore(t4);
        var t6 = t5.couldLink$1(t2[t4]) === true;
        t2 = t6;
      } else
        t2 = false;
      if (t2)
        return true;
    }
  for (x = 0; x < 10; ++x)
    for (y = 1; y < 9; ++y) {
      t1 = this._fields;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.possibleCombinations$0$bailout(5, t1, x, y, 0, 0);
      var t3 = x + (y - 1) * 10;
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      t3 = t1[t3];
      t4 = x + y * 10;
      if (t4 < 0 || t4 >= t1.length)
        throw $.ioore(t4);
      if (t3.couldLink$1(t1[t4]) === true) {
        t1 = this._fields;
        if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
          return this.possibleCombinations$0$bailout(7, t4, t1, x, y, 0);
        if (t4 < 0 || t4 >= t1.length)
          throw $.ioore(t4);
        t4 = t1[t4];
        t3 = x + (y + 1) * 10;
        if (t3 < 0 || t3 >= t1.length)
          throw $.ioore(t3);
        t5 = t4.couldLink$1(t1[t3]) === true;
        t1 = t5;
      } else
        t1 = false;
      if (t1)
        return true;
    }
  return false;
},
 possibleCombinations$0$bailout: function(state, env0, env1, env2, env3, env4) {
  switch (state) {
    case 1:
      t2 = env0;
      x = env1;
      t1 = env2;
      y = env3;
      break;
    case 2:
      t4 = env0;
      x = env1;
      t1 = env2;
      y = env3;
      t2 = env4;
      break;
    case 3:
      y = env0;
      x = env1;
      t1 = env2;
      t6 = env3;
      t2 = env4;
      break;
    case 4:
      t6 = env0;
      x = env1;
      t2 = env2;
      y = env3;
      t1 = env4;
      break;
    case 5:
      t1 = env0;
      x = env1;
      y = env2;
      break;
    case 6:
      t3 = env0;
      t1 = env1;
      x = env2;
      y = env3;
      break;
    case 7:
      t5 = env0;
      t1 = env1;
      x = env2;
      y = env3;
      break;
    case 8:
      t1 = env0;
      t5 = env1;
      x = env2;
      y = env3;
      break;
  }
  switch (state) {
    case 0:
      var y = 0;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(y < 10))
                break L0;
              var t1 = y * 10;
              var x = 1;
            default:
              L1:
                while (true)
                  switch (state) {
                    case 0:
                      if (!(x < 9))
                        break L1;
                      var t2 = this._fields;
                    case 1:
                      state = 0;
                      t2 = $.index(t2, x - 1 + t1);
                      var t4 = this._fields;
                    case 2:
                      state = 0;
                      var t6 = x + t1;
                    default:
                      if (state === 4 || state === 3 || state === 0 && t2.couldLink$1($.index(t4, t6)) === true)
                        switch (state) {
                          case 0:
                            t2 = this._fields;
                          case 3:
                            state = 0;
                            t6 = $.index(t2, t6);
                            t2 = this._fields;
                          case 4:
                            state = 0;
                            var t5 = t6.couldLink$1($.index(t2, x + 1 + t1)) === true;
                            t2 = t5;
                        }
                      else
                        t2 = false;
                      if (t2)
                        return true;
                      ++x;
                  }
              ++y;
          }
      x = 0;
    case 5:
    case 6:
    case 7:
    case 8:
      L2:
        while (true)
          switch (state) {
            case 0:
              if (!(x < 10))
                break L2;
              y = 1;
            default:
              L3:
                while (true)
                  switch (state) {
                    case 0:
                      if (!(y < 9))
                        break L3;
                      t1 = this._fields;
                    case 5:
                      state = 0;
                      t1 = $.index(t1, x + (y - 1) * 10);
                      var t3 = this._fields;
                    case 6:
                      state = 0;
                      t5 = x + y * 10;
                    default:
                      if (state === 8 || state === 7 || state === 0 && t1.couldLink$1($.index(t3, t5)) === true)
                        switch (state) {
                          case 0:
                            t1 = this._fields;
                          case 7:
                            state = 0;
                            t5 = $.index(t1, t5);
                            t1 = this._fields;
                          case 8:
                            state = 0;
                            t4 = t5.couldLink$1($.index(t1, x + (y + 1) * 10)) === true;
                            t1 = t4;
                        }
                      else
                        t1 = false;
                      if (t1)
                        return true;
                      ++y;
                  }
              ++x;
          }
      return false;
  }
},
 _initQueuePlaceSpecial$3: function(special, current, maximum) {
  if (typeof maximum !== 'number')
    return this._initQueuePlaceSpecial$3$bailout(1, special, current, maximum, 0, 0, 0, 0, 0);
  var t1 = this._levelChains;
  if (typeof t1 !== 'number')
    return this._initQueuePlaceSpecial$3$bailout(2, special, current, maximum, t1, 0, 0, 0, 0);
  var t3 = this._random;
  var t4 = t1 / maximum;
  var retry = 0;
  for (; retry < 20; ++retry) {
    var range = $.toInt(t4);
    if (typeof range !== 'number')
      throw $.iae(range);
    var t2 = current * range;
    var t5 = t3.nextInt$1(range);
    if (typeof t5 !== 'number')
      throw $.iae(t5);
    var index = t2 + t5;
    t2 = this._queue;
    if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this._initQueuePlaceSpecial$3$bailout(3, special, current, maximum, retry, t3, t2, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t2.length)
      throw $.ioore(index);
    var t6 = t2[index].get$special();
    if (typeof t6 !== 'string')
      return this._initQueuePlaceSpecial$3$bailout(4, special, current, maximum, t6, retry, t3, t1, index);
    if (t6 === 'None') {
      t1 = this._queue;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this._initQueuePlaceSpecial$3$bailout(5, special, t1, index, 0, 0, 0, 0, 0);
      if (index < 0 || index >= t1.length)
        throw $.ioore(index);
      t1[index].set$special(special);
      return;
    }
  }
},
 _initQueuePlaceSpecial$3$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state) {
    case 1:
      var special = env0;
      var current = env1;
      var maximum = env2;
      break;
    case 2:
      special = env0;
      current = env1;
      maximum = env2;
      t1 = env3;
      break;
    case 3:
      special = env0;
      current = env1;
      maximum = env2;
      retry = env3;
      t3 = env4;
      t2 = env5;
      t1 = env6;
      index = env7;
      break;
    case 4:
      special = env0;
      current = env1;
      maximum = env2;
      t5 = env3;
      retry = env4;
      t3 = env5;
      t1 = env6;
      index = env7;
      break;
    case 5:
      special = env0;
      t1 = env1;
      index = env2;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._levelChains;
    case 2:
      state = 0;
      var t3 = this._random;
      var retry = 0;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(retry < 20))
                break L0;
              var range = $.toInt($.div(t1, maximum));
              if (typeof range !== 'number')
                throw $.iae(range);
              var t2 = current * range;
              var t4 = t3.nextInt$1(range);
              if (typeof t4 !== 'number')
                throw $.iae(t4);
              var index = t2 + t4;
              t2 = this._queue;
            case 3:
              state = 0;
              var t5 = $.index(t2, index).get$special();
            case 4:
              state = 0;
            case 5:
              if (state === 5 || state === 0 && $.eqB(t5, 'None'))
                switch (state) {
                  case 0:
                    t1 = this._queue;
                  case 5:
                    state = 0;
                    $.index(t1, index).set$special(special);
                    return;
                }
              ++retry;
          }
  }
},
 initQueue$0: function() {
  this._queue = $.ListImplementation_List(null);
  var t1 = this._levelChains;
  if (typeof t1 !== 'number')
    return this.initQueue$0$bailout(1, t1, 0);
  var t3 = this._colors;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this.initQueue$0$bailout(2, t1, t3);
  var t5 = this._random;
  var i = 0;
  for (; i < t1; ++i) {
    var t2 = t5.nextInt$1(t3.length);
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t3.length)
      throw $.ioore(t2);
    var color = t3[t2];
    var direction = t5.nextInt$1(2);
    $.add$1(this._queue, $.Field$(color, direction));
  }
  t1 = this._levelLocks;
  if (typeof t1 !== 'number')
    return this.initQueue$0$bailout(3, t1, 0);
  t3 = t1 * 2;
  i = 0;
  for (; i < t3; ++i)
    this._initQueuePlaceSpecial$3('Lock' + $.S($.mod(i, t1) + 1), i, t3);
  t1 = this._levelJokers;
  if (typeof t1 !== 'number')
    return this.initQueue$0$bailout(4, t1, 0);
  i = 0;
  for (; i < t1; ++i)
    this._initQueuePlaceSpecial$3('Joker', i, t1);
  t1 = this._levelBlocks;
  if (typeof t1 !== 'number')
    return this.initQueue$0$bailout(5, t1, 0);
  i = 0;
  for (; i < t1; ++i)
    this._initQueuePlaceSpecial$3('Block', i, t1);
  t1 = this._levelDoubles;
  if (typeof t1 !== 'number')
    return this.initQueue$0$bailout(6, t1, 0);
  i = 0;
  for (; i < t1; ++i)
    this._initQueuePlaceSpecial$3('Double', i, t1);
  t1 = this._levelQuints;
  if (typeof t1 !== 'number')
    return this.initQueue$0$bailout(7, t1, 0);
  i = 0;
  for (; i < t1; ++i)
    this._initQueuePlaceSpecial$3('Quint', i, t1);
},
 initQueue$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
    case 3:
      t1 = env0;
      break;
    case 4:
      t1 = env0;
      break;
    case 5:
      t1 = env0;
      break;
    case 6:
      t1 = env0;
      break;
    case 7:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
      this._queue = $.ListImplementation_List(null);
      var t1 = this._levelChains;
    case 1:
      state = 0;
      var t3 = this._colors;
    case 2:
      state = 0;
      var t5 = this._random;
      var i = 0;
      for (; $.ltB(i, t1); ++i) {
        var color = $.index(t3, t5.nextInt$1($.get$length(t3)));
        var direction = t5.nextInt$1(2);
        $.add$1(this._queue, $.Field$(color, direction));
      }
      t1 = this._levelLocks;
    case 3:
      state = 0;
      i = 0;
      for (; $.ltB(i, $.mul(t1, 2)); ++i) {
        if (typeof t1 !== 'number')
          throw $.iae(t1);
        this._initQueuePlaceSpecial$3('Lock' + $.S($.mod(i, t1) + 1), i, t1 * 2);
      }
      t1 = this._levelJokers;
    case 4:
      state = 0;
      i = 0;
      for (; $.ltB(i, t1); ++i)
        this._initQueuePlaceSpecial$3('Joker', i, t1);
      t1 = this._levelBlocks;
    case 5:
      state = 0;
      i = 0;
      for (; $.ltB(i, t1); ++i)
        this._initQueuePlaceSpecial$3('Block', i, t1);
      t1 = this._levelDoubles;
    case 6:
      state = 0;
      i = 0;
      for (; $.ltB(i, t1); ++i)
        this._initQueuePlaceSpecial$3('Double', i, t1);
      t1 = this._levelQuints;
    case 7:
      state = 0;
      i = 0;
      for (; $.ltB(i, t1); ++i)
        this._initQueuePlaceSpecial$3('Quint', i, t1);
  }
},
 initField$0: function() {
  this._fields = $.ListImplementation_List(null);
  var t1 = this._colors;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.initField$0$bailout(1, t1);
  var t3 = this._random;
  var rebuild = true;
  for (; rebuild === true;) {
    $.clear(this._fields);
    for (var f = 0; f < 100; ++f) {
      var t2 = t3.nextInt$1(t1.length);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      var color = t1[t2];
      var direction = t3.nextInt$1(2);
      $.add$1(this._fields, $.Field$(color, direction));
    }
    rebuild = this.clearCombinations$0();
  }
},
 initField$0$bailout: function(state, t1) {
  var t3 = this._random;
  var rebuild = true;
  for (; rebuild === true;) {
    $.clear(this._fields);
    for (var f = 0; f < 100; ++f) {
      var color = $.index(t1, t3.nextInt$1($.get$length(t1)));
      var direction = t3.nextInt$1(2);
      $.add$1(this._fields, $.Field$(color, direction));
    }
    rebuild = this.clearCombinations$0();
  }
},
 shuffleField$0: function() {
  if (this._animationRunning === true || !(this._status === 1))
    return false;
  this._animationRunning = true;
  var t1 = this._chainLayer;
  var t2 = this._linkLayer;
  var t3 = this._specialLayer;
  var t4 = this._colors;
  if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
    return this.shuffleField$0$bailout(1, t1, t2, t3, t4);
  var t6 = this._random;
  var rebuild = true;
  for (; rebuild;) {
    for (var f = 0; $.ltB(f, $.get$length(this._fields)); ++f) {
      var field = $.index(this._fields, f);
      field.set$linked(false);
      field.set$linkedJoker(false);
      field.updateDisplayObjects$3(t1, t2, t3);
      var t5 = t6.nextInt$1(t4.length);
      if (t5 !== (t5 | 0))
        throw $.iae(t5);
      if (t5 < 0 || t5 >= t4.length)
        throw $.ioore(t5);
      field.set$color(t4[t5]);
      field.set$direction(t6.nextInt$1(2));
    }
    rebuild = this.clearCombinations$0() === true || $.eqB(this.possibleCombinations$0(), false);
  }
  $.Sounds_resource.getSound$1('BonusUniversal').play$0();
  var completeCounter = $.ValueCounter$();
  for (var x = 0; x < 10; ++x)
    for (var delay = x * 0.06, y = 0; y < 10; ++y) {
      field = $.index(this._fields, x + y * 10);
      field.set$sinScale(0);
      var tween = $.Tween$(field, 0.2, $.Transitions_linear);
      tween.animateValue$3(new $.Board_shuffleField_anon(field), 0, 1);
      tween.set$delay(delay);
      tween.set$onStart(new $.Board_shuffleField_anon0(this, field));
      tween.set$onComplete(new $.Board_shuffleField_anon1(this, completeCounter));
      $.add$1($.Juggler_instance(), tween);
    }
  return true;
},
 shuffleField$0$bailout: function(state, t1, t2, t3, t4) {
  var t6 = this._random;
  var rebuild = true;
  for (; rebuild;) {
    for (var f = 0; $.ltB(f, $.get$length(this._fields)); ++f) {
      var field = $.index(this._fields, f);
      field.set$linked(false);
      field.set$linkedJoker(false);
      field.updateDisplayObjects$3(t1, t2, t3);
      field.set$color($.index(t4, t6.nextInt$1($.get$length(t4))));
      field.set$direction(t6.nextInt$1(2));
    }
    rebuild = this.clearCombinations$0() === true || $.eqB(this.possibleCombinations$0(), false);
  }
  $.Sounds_resource.getSound$1('BonusUniversal').play$0();
  var completeCounter = $.ValueCounter$();
  for (var x = 0; x < 10; ++x)
    for (var delay = x * 0.06, y = 0; y < 10; ++y) {
      field = $.index(this._fields, x + y * 10);
      field.set$sinScale(0);
      var tween = $.Tween$(field, 0.2, $.Transitions_linear);
      tween.animateValue$3(new $.Board_shuffleField_anon(field), 0, 1);
      tween.set$delay(delay);
      tween.set$onStart(new $.Board_shuffleField_anon0(this, field));
      tween.set$onComplete(new $.Board_shuffleField_anon1(this, completeCounter));
      $.add$1($.Juggler_instance(), tween);
    }
  return true;
},
 _updateLinks$0: function() {
  for (var t1 = this._chainLayer, t2 = this._linkLayer, t3 = this._specialLayer, y = 0; y < 10; ++y)
    for (var t4 = y * 10, t5 = y < 9, t6 = (y + 1) * 10, x = 0; x < 10; ++x) {
      var field = $.index(this._fields, x + t4);
      var fieldEast = x < 9 ? $.index(this._fields, x + 1 + t4) : null;
      var fieldSouth = t5 ? $.index(this._fields, x + t6) : null;
      if (field.canLinkHorizontal$1(fieldEast) === true) {
        var linkedJoker = $.eqB(field.get$special(), 'Joker') || $.eqB(fieldEast.get$special(), 'Joker');
        var linked = true;
      } else {
        linked = false;
        linkedJoker = false;
      }
      if (field.canLinkVertical$1(fieldSouth) === true) {
        linkedJoker = $.eqB(field.get$special(), 'Joker') || $.eqB(fieldSouth.get$special(), 'Joker');
        linked = true;
      }
      if (!$.eqB(field.get$linked(), linked) || !$.eqB(field.get$linkedJoker(), linkedJoker)) {
        field.set$linked(linked);
        field.set$linkedJoker(linkedJoker);
        field.updateDisplayObjects$3(t1, t2, t3);
      }
    }
},
 _processCombinationsExplosion$6: function(animationCounter, x, y, length$, dx, dy) {
  this._animationRunning = true;
  animationCounter.increment$1(length$);
  for (var factor = 1, l = 0; l < length$; ++l) {
    var t1 = this._fields;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this._processCombinationsExplosion$6$bailout(1, animationCounter, x, factor, y, dx, dy, l, length$, t1, 0, 0, 0);
    var t3 = x + l * dx;
    var t4 = y + l * dy;
    var t5 = t3 + t4 * 10;
    if (t5 < 0 || t5 >= t1.length)
      throw $.ioore(t5);
    var field = t1[t5];
    t1 = field.get$special();
    if (typeof t1 !== 'string')
      return this._processCombinationsExplosion$6$bailout(2, animationCounter, x, y, t3, dx, dy, length$, t4, field, t1, factor, l);
    if (t1 === 'Double')
      factor *= 2;
    t1 = field.get$special();
    if (typeof t1 !== 'string')
      return this._processCombinationsExplosion$6$bailout(3, animationCounter, x, y, t3, dx, dy, length$, t4, field, l, factor, t1);
    if (t1 === 'Quint')
      factor *= 5;
    $.Juggler_instance().delayCall$2(new $.Board__processCombinationsExplosion_anon(field, this, t4, t3, animationCounter), 0.1 + l * 0.1);
  }
  this.dispatchEvent$1($.BoardEvent$('Explosion', $.makeLiteralMap(['Length', length$, 'Factor', factor]), false));
},
 _processCombinationsExplosion$6$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
  switch (state) {
    case 1:
      var animationCounter = env0;
      var x = env1;
      factor = env2;
      var y = env3;
      var dx = env4;
      var dy = env5;
      l = env6;
      var length$ = env7;
      t1 = env8;
      break;
    case 2:
      animationCounter = env0;
      x = env1;
      y = env2;
      t3 = env3;
      dx = env4;
      dy = env5;
      length$ = env6;
      t4 = env7;
      field = env8;
      t1 = env9;
      factor = env10;
      l = env11;
      break;
    case 3:
      animationCounter = env0;
      x = env1;
      y = env2;
      t3 = env3;
      dx = env4;
      dy = env5;
      length$ = env6;
      t4 = env7;
      field = env8;
      l = env9;
      factor = env10;
      t1 = env11;
      break;
  }
  switch (state) {
    case 0:
      this._animationRunning = true;
      animationCounter.increment$1(length$);
      var factor = 1;
      var l = 0;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(l < length$))
                break L0;
              var t1 = this._fields;
            case 1:
              state = 0;
              var t3 = x + l * dx;
              var t4 = y + l * dy;
              var field = $.index(t1, t3 + t4 * 10);
              t1 = field.get$special();
            case 2:
              state = 0;
              if ($.eqB(t1, 'Double'))
                factor *= 2;
              t1 = field.get$special();
            case 3:
              state = 0;
              if ($.eqB(t1, 'Quint'))
                factor *= 5;
              $.Juggler_instance().delayCall$2(new $.Board__processCombinationsExplosion_anon(field, this, t4, t3, animationCounter), 0.1 + l * 0.1);
              ++l;
          }
      this.dispatchEvent$1($.BoardEvent$('Explosion', $.makeLiteralMap(['Length', length$, 'Factor', factor]), false));
  }
},
 _processCombinations$0: function() {
  this._animationRunning = false;
  var animationCounter = $.ValueCounter$();
  for (var y = 0; y < 10; ++y)
    for (var t1 = y * 10, x = 0; x < 10;) {
      var length$ = 1;
      while (true) {
        var x0 = x + length$;
        if (x0 < 10) {
          var t2 = this._fields;
          if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
            return this._processCombinations$0$bailout(1, t2, length$, animationCounter, t1, x, x0, y, 0);
          var t4 = x0 - 1 + t1;
          if (t4 < 0 || t4 >= t2.length)
            throw $.ioore(t4);
          t4 = t2[t4];
          var t5 = x0 + t1;
          if (t5 < 0 || t5 >= t2.length)
            throw $.ioore(t5);
          var t6 = t4.canLinkHorizontal$1(t2[t5]) === true;
          t2 = t6;
        } else
          t2 = false;
        if (!t2)
          break;
        ++length$;
      }
      if (length$ >= 3)
        this._processCombinationsExplosion$6(animationCounter, x, y, length$, 1, 0);
      x = x0;
    }
  for (x = 0; x < 10; ++x)
    for (y = 0; y < 10;) {
      length$ = 1;
      while (true) {
        var y0 = y + length$;
        if (y0 < 10) {
          t1 = this._fields;
          if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
            return this._processCombinations$0$bailout(3, y0, x, animationCounter, t1, length$, y, 0, 0);
          var t3 = x + (y0 - 1) * 10;
          if (t3 < 0 || t3 >= t1.length)
            throw $.ioore(t3);
          t3 = t1[t3];
          t4 = x + y0 * 10;
          if (t4 < 0 || t4 >= t1.length)
            throw $.ioore(t4);
          t5 = t3.canLinkVertical$1(t1[t4]) === true;
          t1 = t5;
        } else
          t1 = false;
        if (!t1)
          break;
        ++length$;
      }
      if (length$ >= 3)
        this._processCombinationsExplosion$6(animationCounter, x, y, length$, 0, 1);
      y = y0;
    }
  t1 = animationCounter.value;
  if (typeof t1 !== 'number')
    return this._processCombinations$0$bailout(5, t1, 0, 0, 0, 0, 0, 0, 0);
  if (t1 === 0) {
    if (this._status === 2)
      this.dispatchEvent$1($.BoardEvent$('Finalized', null, false));
    if (this._status === 3)
      this.dispatchEvent$1($.BoardEvent$('Timeouted', null, false));
    if (this._status === 1) {
      t1 = this.possibleCombinations$0();
      if (typeof t1 !== 'boolean')
        return this._processCombinations$0$bailout(6, t1, 0, 0, 0, 0, 0, 0, 0);
      t1 = !t1;
    } else
      t1 = false;
    if (t1)
      this.shuffleField$0();
  }
},
 _processCombinations$0$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state) {
    case 1:
      t2 = env0;
      length$ = env1;
      animationCounter = env2;
      t1 = env3;
      x = env4;
      x0 = env5;
      y = env6;
      break;
    case 2:
      t4 = env0;
      length$ = env1;
      animationCounter = env2;
      t1 = env3;
      x = env4;
      x0 = env5;
      y = env6;
      t2 = env7;
      break;
    case 3:
      y0 = env0;
      x = env1;
      animationCounter = env2;
      t1 = env3;
      length$ = env4;
      y = env5;
      break;
    case 4:
      y0 = env0;
      t1 = env1;
      x = env2;
      animationCounter = env3;
      length$ = env4;
      t3 = env5;
      y = env6;
      break;
    case 5:
      t1 = env0;
      break;
    case 6:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
      this._animationRunning = false;
      var animationCounter = $.ValueCounter$();
      var y = 0;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(y < 10))
                break L0;
              var t1 = y * 10;
              var x = 0;
            default:
              L1:
                while (true)
                  switch (state) {
                    case 0:
                      if (!(x < 10))
                        break L1;
                      var length$ = 1;
                    default:
                      L2:
                        while (true)
                          switch (state) {
                            case 0:
                              var x0 = x + length$;
                            default:
                              if (state === 2 || state === 1 || state === 0 && x0 < 10)
                                switch (state) {
                                  case 0:
                                    var t2 = this._fields;
                                  case 1:
                                    state = 0;
                                    t2 = $.index(t2, x0 - 1 + t1);
                                    var t4 = this._fields;
                                  case 2:
                                    state = 0;
                                    var t6 = t2.canLinkHorizontal$1($.index(t4, x0 + t1)) === true;
                                    t2 = t6;
                                }
                              else
                                t2 = false;
                              if (!t2)
                                break L2;
                              ++length$;
                          }
                      if (length$ >= 3)
                        this._processCombinationsExplosion$6(animationCounter, x, y, length$, 1, 0);
                      x = x0;
                  }
              ++y;
          }
      x = 0;
    case 3:
    case 4:
      L3:
        while (true)
          switch (state) {
            case 0:
              if (!(x < 10))
                break L3;
              y = 0;
            default:
              L4:
                while (true)
                  switch (state) {
                    case 0:
                      if (!(y < 10))
                        break L4;
                      length$ = 1;
                    default:
                      L5:
                        while (true)
                          switch (state) {
                            case 0:
                              var y0 = y + length$;
                            default:
                              if (state === 4 || state === 3 || state === 0 && y0 < 10)
                                switch (state) {
                                  case 0:
                                    t1 = this._fields;
                                  case 3:
                                    state = 0;
                                    t1 = $.index(t1, x + (y0 - 1) * 10);
                                    var t3 = this._fields;
                                  case 4:
                                    state = 0;
                                    var t5 = t1.canLinkVertical$1($.index(t3, x + y0 * 10)) === true;
                                    t1 = t5;
                                }
                              else
                                t1 = false;
                              if (!t1)
                                break L5;
                              ++length$;
                          }
                      if (length$ >= 3)
                        this._processCombinationsExplosion$6(animationCounter, x, y, length$, 0, 1);
                      y = y0;
                  }
              ++x;
          }
      t1 = animationCounter.value;
    case 5:
      state = 0;
    case 6:
      if (state === 6 || state === 0 && $.eqB(t1, 0))
        switch (state) {
          case 0:
            if (this._status === 2)
              this.dispatchEvent$1($.BoardEvent$('Finalized', null, false));
            if (this._status === 3)
              this.dispatchEvent$1($.BoardEvent$('Timeouted', null, false));
          case 6:
            if (state === 6 || state === 0 && this._status === 1)
              switch (state) {
                case 0:
                  t1 = this.possibleCombinations$0();
                case 6:
                  state = 0;
                  t1 = $.eqB(t1, false);
              }
            else
              t1 = false;
            if (t1)
              this.shuffleField$0();
        }
  }
},
 processSpecial$1: function(field) {
  if ($.eqB($.indexOf$1(field.get$special(), 'Lock'), 0)) {
    var lockNumber = $.sub($.int_parse($.substring$2(field.get$special(), 4, 5)), 1);
    var lock = $.index(this._locks, lockNumber);
    var special = $.Grafix_getSpecial(field.get$special());
    special.set$x(field.get$x());
    special.set$y(field.get$y());
    this.addChild$1(special);
    var tween = $.Tween$(special, 0.5, $.Transitions_easeOutCubic);
    tween.animate$2('x', lock.get$x());
    tween.animate$2('y', $.sub(lock.get$y(), 10));
    tween.set$onComplete(new $.Board_processSpecial_anon(this, special));
    $.add$1($.Juggler_instance(), tween);
    $.Juggler_instance().delayCall$2(new $.Board_processSpecial_anon0(this, lockNumber), 0.5);
  }
},
 openLock$1: function(lockNumber) {
  var lock = $.index(this._locks, lockNumber);
  if (lock.get$locked() === true) {
    var boardEvent = $.BoardEvent$('Unlocked', $.makeLiteralMap(['Type', 'SingleLocked', 'Position', $.Point$($.add(lock.get$x(), 20), lock.get$y())]), false);
    $.Sounds_resource.getSound$1('Unlock').play$0();
  } else
    boardEvent = $.BoardEvent$('Unlocked', $.makeLiteralMap(['Type', 'SingleUnlocked', 'Position', $.Point$($.add(lock.get$x(), 20), lock.get$y())]), false);
  this.dispatchEvent$1(boardEvent);
  lock.set$locked(false);
  lock.showLocked$1(false);
  for (var allUnlocked = true, i = 0; $.ltB(i, $.get$length(this._locks)); ++i)
    allUnlocked = allUnlocked && $.eqB($.index(this._locks, i).get$locked(), false);
  if (allUnlocked) {
    $.Sounds_resource.getSound$1('BonusAllUnlock').play$0();
    var box_0 = {};
    for (box_0.i_10 = 0; $.ltB(box_0.i_10, $.get$length(this._locks)); box_00 = {}, box_00.i_10 = box_0.i_10, box_00.i_10 = $.add(box_00.i_10, 1), box_0 = box_00) {
      $.index(this._locks, box_0.i_10).set$locked(true);
      $.Juggler_instance().delayCall$2(new $.Board_openLock_anon(this, lockNumber, box_0), $.mul(box_0.i_10, 0.2));
    }
    $.Juggler_instance().delayCall$2(new $.Board_openLock_anon0(this), 0.75);
  }
  var box_00;
},
 _fillEmptyFields$0: function() {
  var animationCounter = $.ValueCounter$();
  var t1 = this._chainLayer;
  var t2 = this._linkLayer;
  var t3 = this._specialLayer;
  var t4 = this._colors;
  if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
    return this._fillEmptyFields$0$bailout(1, t3, t4, animationCounter, t1, t2);
  var t6 = this._random;
  var fieldSource = null;
  var fieldSourceWest = null;
  var x = 0;
  var fieldTarget = null;
  for (; x < 10; ++x)
    for (var t5 = x > 0, t7 = x - 1, t8 = 50 * x + 25, target = 9, source = 8; target >= 0;) {
      while (true) {
        var t9 = target >= 0;
        if (!(t9 && $.eqB($.index(this._fields, x + target * 10).get$empty(), false)))
          break;
        --target;
        --source;
      }
      while (true) {
        var t10 = source >= 0;
        if (!(t10 && $.eqB($.index(this._fields, x + source * 10).get$empty(), true)))
          break;
        --source;
      }
      if (t9) {
        if (t10) {
          t9 = this._fields;
          t10 = source * 10;
          fieldSource = $.index(t9, x + t10);
          if (t5) {
            fieldSourceWest = $.index(this._fields, t7 + t10);
            if (fieldSource.canLinkHorizontal$1(fieldSourceWest) === true) {
              fieldSourceWest.set$linked(false);
              fieldSourceWest.updateDisplayObjects$3(t1, t2, t3);
            }
          }
          fieldSource.set$linked(false);
          fieldSource.set$empty(true);
          fieldSource.updateDisplayObjects$3(t1, t2, t3);
        } else if ($.gtB($.get$length(this._queue), 0)) {
          fieldSource = $.index(this._queue, 0);
          $.removeRange(this._queue, 0, 1);
        } else {
          t9 = t6.nextInt$1(t4.length);
          if (t9 !== (t9 | 0))
            throw $.iae(t9);
          if (t9 < 0 || t9 >= t4.length)
            throw $.ioore(t9);
          fieldSource = $.Field$(t4[t9], t6.nextInt$1(2));
        }
        fieldTarget = $.index(this._fields, x + target * 10);
        fieldTarget.set$color(fieldSource.get$color());
        fieldTarget.set$direction(fieldSource.get$direction());
        fieldTarget.set$special(fieldSource.get$special());
        fieldTarget.set$linked(false);
        fieldTarget.set$empty(false);
        fieldTarget.set$x(t8);
        fieldTarget.set$y(50 * source + 25);
        fieldTarget.updateDisplayObjects$3(t1, t2, t3);
        animationCounter.increment$0();
        var tween = $.Tween$(fieldTarget, 0.1, $.Transitions_linear);
        tween.animate$2('y', 50 * target + 25);
        tween.set$onComplete(new $.Board__fillEmptyFields_anon(this, animationCounter));
        $.add$1($.Juggler_instance(), tween);
      }
    }
},
 _fillEmptyFields$0$bailout: function(state, t3, t4, animationCounter, t1, t2) {
  var t6 = this._random;
  var fieldSource = null;
  var fieldSourceWest = null;
  var x = 0;
  var fieldTarget = null;
  for (; x < 10; ++x)
    for (var t5 = x > 0, t7 = x - 1, t8 = 50 * x + 25, target = 9, source = 8; target >= 0;) {
      while (true) {
        var t9 = target >= 0;
        if (!(t9 && $.eqB($.index(this._fields, x + target * 10).get$empty(), false)))
          break;
        --target;
        --source;
      }
      while (true) {
        var t10 = source >= 0;
        if (!(t10 && $.eqB($.index(this._fields, x + source * 10).get$empty(), true)))
          break;
        --source;
      }
      if (t9) {
        if (t10) {
          t9 = this._fields;
          t10 = source * 10;
          fieldSource = $.index(t9, x + t10);
          if (t5) {
            fieldSourceWest = $.index(this._fields, t7 + t10);
            if (fieldSource.canLinkHorizontal$1(fieldSourceWest) === true) {
              fieldSourceWest.set$linked(false);
              fieldSourceWest.updateDisplayObjects$3(t1, t2, t3);
            }
          }
          fieldSource.set$linked(false);
          fieldSource.set$empty(true);
          fieldSource.updateDisplayObjects$3(t1, t2, t3);
        } else if ($.gtB($.get$length(this._queue), 0)) {
          fieldSource = $.index(this._queue, 0);
          $.removeRange(this._queue, 0, 1);
        } else
          fieldSource = $.Field$($.index(t4, t6.nextInt$1($.get$length(t4))), t6.nextInt$1(2));
        fieldTarget = $.index(this._fields, x + target * 10);
        fieldTarget.set$color(fieldSource.get$color());
        fieldTarget.set$direction(fieldSource.get$direction());
        fieldTarget.set$special(fieldSource.get$special());
        fieldTarget.set$linked(false);
        fieldTarget.set$empty(false);
        fieldTarget.set$x(t8);
        fieldTarget.set$y(50 * source + 25);
        fieldTarget.updateDisplayObjects$3(t1, t2, t3);
        animationCounter.increment$0();
        var tween = $.Tween$(fieldTarget, 0.1, $.Transitions_linear);
        tween.animate$2('y', 50 * target + 25);
        tween.set$onComplete(new $.Board__fillEmptyFields_anon(this, animationCounter));
        $.add$1($.Juggler_instance(), tween);
      }
    }
},
 _onMouseDown$1: function(me) {
  if ($.eqB(me.get$target(), this._chainLayer) && this.mouseEnabled === true) {
    var p = $.Point$($.toInt($.min($.div(me.get$localX(), 50), 9)), $.toInt($.min($.div(me.get$localY(), 50), 9)));
    this._mouseBuffer.push(p);
    this._checkMouseBuffer$0();
  }
},
 get$_onMouseDown: function() { return new $.BoundClosure(this, '_onMouseDown$1'); },
 _checkMouseBuffer$0: function() {
  var t1 = this._mouseBuffer;
  var t2 = this._chainLayer;
  var t3 = this._linkLayer;
  var t4 = this._specialLayer;
  while (true) {
    if (!(this._status === 1 && $.eqB(this._animationRunning, false) && t1.length > 0))
      break;
    c$0: {
      if (0 < 0 || 0 >= t1.length)
        throw $.ioore(0);
      var p = t1[0];
      $.removeRange(t1, 0, 1);
      var x = $.toInt(p.get$x());
      var y = $.toInt(p.get$y());
      var field = $.index(this._fields, $.add(x, $.mul(y, 10)));
      var fieldWest = $.gtB(x, 0) ? $.index(this._fields, $.add($.sub(x, 1), $.mul(y, 10))) : null;
      var fieldEast = $.ltB(x, 9) ? $.index(this._fields, $.add($.add(x, 1), $.mul(y, 10))) : null;
      var fieldNorth = $.gtB(y, 0) ? $.index(this._fields, $.add(x, $.mul($.sub(y, 1), 10))) : null;
      var fieldSouth = $.ltB(y, 9) ? $.index(this._fields, $.add(x, $.mul($.add(y, 1), 10))) : null;
      if ($.eqB(field.get$special(), 'Block')) {
        $.Sounds_resource.getSound$1('ChainError').play$0();
        break c$0;
      }
      if (field.canLinkVertical$1(fieldNorth) === true) {
        fieldNorth.set$linked(false);
        fieldNorth.updateDisplayObjects$3(t2, t3, t4);
      }
      if (field.canLinkHorizontal$1(fieldWest) === true) {
        fieldWest.set$linked(false);
        fieldWest.updateDisplayObjects$3(t2, t3, t4);
      }
      var t5 = field.get$direction();
      if (typeof t5 !== 'number')
        throw $.iae(t5);
      field.set$direction(1 - t5);
      field.set$linked(false);
      field.set$linkedJoker(false);
      $.Sounds_resource.getSound$1('ChainRotate').play$0();
      if (field.canLinkHorizontal$1(fieldEast) === true) {
        field.set$linked(true);
        field.set$linkedJoker($.eqB(field.get$special(), 'Joker') || $.eqB(fieldEast.get$special(), 'Joker'));
      }
      if (field.canLinkVertical$1(fieldSouth) === true) {
        field.set$linked(true);
        field.set$linkedJoker($.eqB(field.get$special(), 'Joker') || $.eqB(fieldSouth.get$special(), 'Joker'));
      }
      field.updateDisplayObjects$3(t2, t3, t4);
      var playChainLink = field.get$linked() === true;
      if (field.canLinkVertical$1(fieldNorth) === true) {
        fieldNorth.set$linked(true);
        fieldNorth.set$linkedJoker($.eqB(field.get$special(), 'Joker') || $.eqB(fieldNorth.get$special(), 'Joker'));
        fieldNorth.updateDisplayObjects$3(t2, t3, t4);
        playChainLink = true;
      }
      if (field.canLinkHorizontal$1(fieldWest) === true) {
        fieldWest.set$linked(true);
        fieldWest.set$linkedJoker($.eqB(field.get$special(), 'Joker') || $.eqB(fieldWest.get$special(), 'Joker'));
        fieldWest.updateDisplayObjects$3(t2, t3, t4);
        playChainLink = true;
      }
      if (playChainLink)
        $.Sounds_resource.getSound$1('ChainLink').play$0();
      this._processCombinations$0();
    }
  }
},
 Board$7: function(chains, locks, jokers, blocks, doubles, quints, colors) {
  this._random = $.Random_Random(null);
  this._status = 1;
  this._colors = colors;
  this._levelChains = chains;
  this._levelLocks = locks;
  this._levelJokers = jokers;
  this._levelBlocks = blocks;
  this._levelDoubles = doubles;
  this._levelQuints = quints;
  this._levelColors = $.get$length(colors);
  this._mouseBuffer = $.ListImplementation_List(null);
  this._chainLayer = $.Sprite$();
  this._linkLayer = $.Sprite$();
  this._specialLayer = $.Sprite$();
  this._lockLayer = $.Sprite$();
  this._explosionLayer = $.Sprite$();
  var t1 = this._chainLayer;
  this.addChild$1(t1);
  var t2 = this._linkLayer;
  this.addChild$1(t2);
  var t3 = this._specialLayer;
  this.addChild$1(t3);
  var t4 = this._lockLayer;
  this.addChild$1(t4);
  var t5 = this._explosionLayer;
  this.addChild$1(t5);
  t2.set$mouseEnabled(false);
  t3.set$mouseEnabled(false);
  t4.set$mouseEnabled(false);
  t5.set$mouseEnabled(false);
  this.initLocks$0();
  this.initQueue$0();
  this.initField$0();
  this._animationRunning = true;
  var completeCounter = $.ValueCounter$();
  this.mask = $.Mask$rectangle(0, 0, 500, 500);
  for (var x = 0; x < 10; ++x)
    for (var t4 = x * 50 + 25, t5 = x * 0.03, y = 0; y < 10; ++y) {
      var field = $.index(this._fields, x + y * 10);
      field.set$x(t4);
      var t6 = y * 50 + 25;
      field.set$y(t6 - 550);
      field.updateDisplayObjects$3(t1, t2, t3);
      var tween = $.Tween$(field, 0.4, $.Transitions_easeOutCubic);
      tween.animate$2('y', t6);
      tween.set$delay(t5);
      tween.set$onComplete(new $.anon1(this, completeCounter));
      $.add$1($.Juggler_instance(), tween);
    }
  this.addEventListener$2('mouseDown', this.get$_onMouseDown());
}
};

$$.BoardEvent = {"":
 ["_info", "_lib1_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 get$info: function() {
  return this._info;
},
 BoardEvent$3: function(type, info, bubbles) {
  this._info = info;
}
};

$$.Bonus = {"":
 ["_textFieldContainer?", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 Bonus$1: function(points) {
  var textFormat = $.TextFormat$('Arial', 30, 16777215, true, false, false, null, null, 'left', 0, 0, 0, 0);
  textFormat.align = 'center';
  var textField = $.TextField$();
  textField.set$defaultTextFormat(textFormat);
  textField.set$width(110);
  textField.set$height(36);
  textField.set$wordWrap(false);
  textField.set$x(646);
  textField.set$y(130);
  textField.mouseEnabled = false;
  textField.set$text($.toString(points));
  textField.set$x($.div($.neg(textField.get$width()), 2));
  textField.set$y($.div($.neg(textField.get$height()), 2));
  this._textFieldContainer = $.Sprite$();
  var t1 = this._textFieldContainer;
  t1.addChild$1(textField);
  this.addChild$1(t1);
  var tween = $.Tween$(this, 1.5, $.Transitions_easeOutCubic);
  tween.animateValue$3(new $.anon(this), 0, 1);
  tween.set$onComplete(new $.anon0(this));
  $.add$1($.Juggler_instance(), tween);
}
};

$$.ExitBox = {"":
 ["_timeGauge?", "_yesButton", "_noButton", "_doneFunction", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 _doneFunction$0: function() { return this._doneFunction.call$0(); },
 _doneFunction$1: function(arg0) { return this._doneFunction.call$1(arg0); },
 _onExit$1: function(exit) {
  if (!(this._doneFunction == null)) {
    this._doneFunction$1(exit);
    this._doneFunction = null;
  }
},
 _onYesButtonClicked$1: function(me) {
  this._onExit$1(true);
},
 get$_onYesButtonClicked: function() { return new $.BoundClosure(this, '_onYesButtonClicked$1'); },
 _onNoButtonClicked$1: function(me) {
  this._onExit$1(false);
},
 get$_onNoButtonClicked: function() { return new $.BoundClosure(this, '_onNoButtonClicked$1'); },
 _onTimeOver$1: function(e) {
  this._onExit$1(false);
},
 get$_onTimeOver: function() { return new $.BoundClosure(this, '_onTimeOver$1'); },
 show$1: function(doneFunction) {
  this._doneFunction = doneFunction;
},
 ExitBox$0: function() {
  this.addChild$1($.Bitmap$($.Grafix_resource.getBitmapData$1('ExitBox'), 'auto', false));
  var textFormat = $.TextFormat$('Arial', 24, 16777215, true, false, false, null, null, 'left', 0, 0, 0, 0);
  textFormat.align = 'center';
  var textField = $.TextField$();
  textField.set$defaultTextFormat(textFormat);
  textField.set$width(240);
  textField.set$height(100);
  textField.set$wordWrap(true);
  textField.set$text($.Texts_resource.getText$1('GENexitquery'));
  textField.set$x(47);
  var t1 = $.div(textField.get$textHeight(), 2);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  textField.set$y(150 - t1);
  textField.mouseEnabled = false;
  this.addChild$1(textField);
  this._timeGauge = $.TimeGauge$(7, $.Grafix_resource.getBitmapData$1('ExitGauge'), 'DIRECTION_DOWN');
  var t2 = this._timeGauge;
  t2.set$x(268);
  t2.set$y(25);
  t2.addEventListener$2('TimeOver', this.get$_onTimeOver());
  this.addChild$1(t2);
  t2.addAlarm$2('TimeOver', 0);
  t2.start$0();
  var exitYesButtonNormal = $.Bitmap$($.Grafix_resource.getBitmapData$1('ExitYesButtonNormal'), 'auto', false);
  var exitYesButtonPressed = $.Bitmap$($.Grafix_resource.getBitmapData$1('ExitYesButtonPressed'), 'auto', false);
  this._yesButton = $.SimpleButton$(exitYesButtonNormal, exitYesButtonNormal, exitYesButtonPressed, exitYesButtonPressed);
  t2 = this._yesButton;
  t2.set$x(68);
  t2.set$y(239);
  t2.addEventListener$2('click', this.get$_onYesButtonClicked());
  this.addChild$1(t2);
  var exitNoButtonNormal = $.Bitmap$($.Grafix_resource.getBitmapData$1('ExitNoButtonNormal'), 'auto', false);
  var exitNoButtonPressed = $.Bitmap$($.Grafix_resource.getBitmapData$1('ExitNoButtonPressed'), 'auto', false);
  this._noButton = $.SimpleButton$(exitNoButtonNormal, exitNoButtonNormal, exitNoButtonPressed, exitNoButtonPressed);
  t2 = this._noButton;
  t2.set$x(173);
  t2.set$y(232);
  t2.addEventListener$2('click', this.get$_onNoButtonClicked());
  this.addChild$1(t2);
  this.addEventListener$2('addedToStage', new $.anon8(this));
  this.addEventListener$2('removedFromStage', new $.anon9(this));
}
};

$$.ExplosionParticle = {"":
 ["bitmap?", "startX?", "startY?", "angle?", "velocity?", "rotation="],
 "super": "Object"
};

$$.Explosion = {"":
 ["_particles", "_lib2_currentTime", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 advanceTime$1: function(time) {
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time, 0, 0, 0, 0, 0, 0, 0, 0);
  var t1 = this._lib2_currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(2, time, t1, 0, 0, 0, 0, 0, 0, 0);
  this._lib2_currentTime = $.min(0.8, t1 + time);
  for (var t1 = this._particles, i = 0; t2 = t1.length, i < t2; ++i) {
    if (i < 0 || i >= t2)
      throw $.ioore(i);
    var particle = t1[i];
    var bitmap = particle.get$bitmap();
    var angle = particle.get$angle();
    var velocity = particle.get$velocity();
    var rotation = particle.get$rotation();
    if (typeof rotation !== 'number')
      return this.advanceTime$1$bailout(3, i, angle, rotation, velocity, t1, particle, bitmap, 0, 0);
    var t4 = particle.get$startX();
    if (typeof t4 !== 'number')
      return this.advanceTime$1$bailout(4, i, angle, rotation, t4, velocity, t1, particle, bitmap, 0);
    var t6 = this._lib2_currentTime;
    if (typeof t6 !== 'number')
      return this.advanceTime$1$bailout(5, i, angle, rotation, t4, velocity, t6, t1, particle, bitmap);
    var t8 = $.cos(angle);
    if (typeof velocity !== 'number')
      throw $.iae(velocity);
    var posX = t4 + t6 * (t8 * velocity);
    t4 = particle.get$startY();
    if (typeof t4 !== 'number')
      return this.advanceTime$1$bailout(6, i, angle, rotation, t1, velocity, posX, t4, bitmap, 0);
    var t10 = this._lib2_currentTime;
    if (typeof t10 !== 'number')
      return this.advanceTime$1$bailout(7, i, t10, rotation, angle, t1, velocity, posX, t4, bitmap);
    var t12 = $.sin(angle) * velocity;
    var t13 = this._lib2_currentTime;
    if (typeof t13 !== 'number')
      return this.advanceTime$1$bailout(8, i, t10, rotation, t12, t13, t1, posX, t4, bitmap);
    var posY = t4 + t10 * (t12 + t13 * 981 * 0.5);
    bitmap.set$x(posX);
    bitmap.set$y(posY);
    t4 = this._lib2_currentTime;
    if (typeof t4 !== 'number')
      return this.advanceTime$1$bailout(9, i, t4, rotation, t1, bitmap, 0, 0, 0, 0);
    bitmap.set$rotation(t4 * rotation);
  }
  t1 = this._lib2_currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(10, t1, 0, 0, 0, 0, 0, 0, 0, 0);
  if (t1 >= 0.6)
    this.set$alpha((0.8 - t1) / 0.2);
  t1 = this._lib2_currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(11, t1, 0, 0, 0, 0, 0, 0, 0, 0);
  if (t1 >= 0.8)
    this.removeFromParent$0();
  t1 = this._lib2_currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(12, t1, 0, 0, 0, 0, 0, 0, 0, 0);
  return t1 < 0.8;
  var t2;
},
 advanceTime$1$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
    case 3:
      i = env0;
      angle = env1;
      rotation = env2;
      velocity = env3;
      t1 = env4;
      particle = env5;
      bitmap = env6;
      break;
    case 4:
      i = env0;
      angle = env1;
      rotation = env2;
      t3 = env3;
      velocity = env4;
      t1 = env5;
      particle = env6;
      bitmap = env7;
      break;
    case 5:
      i = env0;
      angle = env1;
      rotation = env2;
      t3 = env3;
      velocity = env4;
      t5 = env5;
      t1 = env6;
      particle = env7;
      bitmap = env8;
      break;
    case 6:
      i = env0;
      angle = env1;
      rotation = env2;
      t1 = env3;
      velocity = env4;
      posX = env5;
      t3 = env6;
      bitmap = env7;
      break;
    case 7:
      i = env0;
      t9 = env1;
      rotation = env2;
      angle = env3;
      t1 = env4;
      velocity = env5;
      posX = env6;
      t3 = env7;
      bitmap = env8;
      break;
    case 8:
      i = env0;
      t9 = env1;
      rotation = env2;
      t11 = env3;
      t12 = env4;
      t1 = env5;
      posX = env6;
      t3 = env7;
      bitmap = env8;
      break;
    case 9:
      i = env0;
      t3 = env1;
      rotation = env2;
      t1 = env3;
      bitmap = env4;
      break;
    case 10:
      t1 = env0;
      break;
    case 11:
      t1 = env0;
      break;
    case 12:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._lib2_currentTime;
    case 2:
      state = 0;
      this._lib2_currentTime = $.min(0.8, $.add(t1, time));
      t1 = this._particles;
      var i = 0;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(i < t1.length))
                break L0;
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              var particle = t1[i];
              var bitmap = particle.get$bitmap();
              var angle = particle.get$angle();
              var velocity = particle.get$velocity();
              var rotation = particle.get$rotation();
            case 3:
              state = 0;
              var t3 = particle.get$startX();
            case 4:
              state = 0;
              var t5 = this._lib2_currentTime;
            case 5:
              state = 0;
              var t7 = $.cos(angle);
              if (typeof velocity !== 'number')
                throw $.iae(velocity);
              var posX = $.add(t3, $.mul(t5, t7 * velocity));
              t3 = particle.get$startY();
            case 6:
              state = 0;
              var t9 = this._lib2_currentTime;
            case 7:
              state = 0;
              var t11 = $.sin(angle) * velocity;
              var t12 = this._lib2_currentTime;
            case 8:
              state = 0;
              var t14 = $.mul($.mul(t12, 981), 0.5);
              if (typeof t14 !== 'number')
                throw $.iae(t14);
              var posY = $.add(t3, $.mul(t9, t11 + t14));
              bitmap.set$x(posX);
              bitmap.set$y(posY);
              t3 = this._lib2_currentTime;
            case 9:
              state = 0;
              bitmap.set$rotation($.mul(t3, rotation));
              ++i;
          }
      t1 = this._lib2_currentTime;
    case 10:
      state = 0;
      if ($.geB(t1, 0.6)) {
        t1 = this._lib2_currentTime;
        if (typeof t1 !== 'number')
          throw $.iae(t1);
        this.set$alpha((0.8 - t1) / 0.2);
      }
      t1 = this._lib2_currentTime;
    case 11:
      state = 0;
      if ($.geB(t1, 0.8))
        this.removeFromParent$0();
      t1 = this._lib2_currentTime;
    case 12:
      state = 0;
      return $.lt(t1, 0.8);
  }
},
 Explosion$2: function(color, direction) {
  this._particles = $.ListImplementation_List(null);
  this._lib2_currentTime = 0;
  this.mouseEnabled = false;
  var chain = $.Grafix_getChain(color, direction);
  var random = $.Random_Random(null);
  for (var t1 = this._particles, velocity = null, angle = null, rotation = null, y = 0; y <= 1; ++y)
    for (var t2 = y === 0, t3 = y === 1, t4 = y * 25, t5 = 12.5 + t4, t6 = t4 + 12.5, x = 0; x <= 1; ++x) {
      var t7 = x === 0;
      if (t7 && t2) {
        angle = 3.6128315516282616;
        rotation = -6.283185307179586;
      }
      var t8 = x === 1;
      if (t8 && t2) {
        angle = 5.811946409141117;
        rotation = 6.283185307179586;
      }
      if (t8 && t3) {
        angle = 0.47123889803846897;
        rotation = 6.283185307179586;
      }
      if (t7 && t3) {
        angle = 2.670353755551324;
        rotation = -6.283185307179586;
      }
      t7 = random.nextDouble$0();
      if (typeof t7 !== 'number')
        throw $.iae(t7);
      angle = $.add(angle, 0.6283185307179586 * t7);
      t8 = random.nextDouble$0();
      if (typeof t8 !== 'number')
        throw $.iae(t8);
      velocity = 80 + 40 * t8;
      var bitmap = $.Bitmap$(chain.bitmapData, 'auto', false);
      var t9 = x * 25;
      bitmap.clipRectangle = $.Rectangle$(t9, t4, 25, 25);
      bitmap.set$pivotX(12.5 + t9);
      bitmap.set$pivotY(t5);
      bitmap.set$x(t9);
      bitmap.set$y(t4);
      this.addChild$1(bitmap);
      var particle = $.ExplosionParticle$();
      particle.bitmap = bitmap;
      particle.startX = t9 + 12.5;
      particle.startY = t6;
      particle.angle = angle;
      particle.velocity = velocity;
      particle.rotation = rotation;
      t1.push(particle);
    }
}
};

$$.Field = {"":
 ["_color", "_direction", "_special", "_lib2_x", "_lib2_y", "_linked", "_linkedJoker", "_empty", "_chainDisplayObject", "_linkDisplayObject", "_specialDisplayObject"],
 "super": "Object",
 get$color: function() {
  return this._color;
},
 set$color: function(value) {
  this._color = value;
},
 get$direction: function() {
  return this._direction;
},
 set$direction: function(value) {
  this._direction = value;
},
 get$special: function() {
  return this._special;
},
 set$special: function(value) {
  this._special = value;
},
 get$linked: function() {
  return this._linked;
},
 set$linked: function(value) {
  this._linked = value;
},
 get$linkedJoker: function() {
  return this._linkedJoker;
},
 set$linkedJoker: function(value) {
  this._linkedJoker = value;
},
 get$empty: function() {
  return this._empty;
},
 set$empty: function(value) {
  this._empty = value;
},
 couldLink$1: function(field) {
  if (!(field == null)) {
    if (!$.eqB(field.get$color(), this._color)) {
      var t1 = field.get$special();
      if (typeof t1 !== 'string')
        return this.couldLink$1$bailout(1, field, t1);
      if (!(t1 === 'Joker')) {
        t1 = this._special;
        if (typeof t1 !== 'string')
          return this.couldLink$1$bailout(2, field, t1);
        t1 = t1 === 'Joker';
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1) {
      t1 = field.get$special();
      if (typeof t1 !== 'string')
        return this.couldLink$1$bailout(3, t1, 0);
      if (!(t1 === 'Block')) {
        t1 = this._special;
        if (typeof t1 !== 'string')
          return this.couldLink$1$bailout(4, t1, 0);
        var t3 = !(t1 === 'Block');
        t1 = t3;
      } else
        t1 = false;
      var link = t1;
    } else
      link = false;
  } else
    link = false;
  return link;
},
 couldLink$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      var field = env0;
      t1 = env1;
      break;
    case 2:
      field = env0;
      t1 = env1;
      break;
    case 3:
      t1 = env0;
      break;
    case 4:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
    default:
      if (state === 4 || state === 3 || state === 2 || state === 1 || state === 0 && !(field == null))
        switch (state) {
          case 0:
          default:
            if (state === 2 || state === 1 || state === 0 && !$.eqB(field.get$color(), this._color))
              switch (state) {
                case 0:
                  var t1 = field.get$special();
                case 1:
                  state = 0;
                case 2:
                  if (state === 2 || state === 0 && !$.eqB(t1, 'Joker'))
                    switch (state) {
                      case 0:
                        t1 = this._special;
                      case 2:
                        state = 0;
                        t1 = $.eqB(t1, 'Joker');
                    }
                  else
                    t1 = true;
              }
            else
              t1 = true;
          case 3:
          case 4:
            if (state === 4 || state === 3 || state === 0 && t1)
              switch (state) {
                case 0:
                  t1 = field.get$special();
                case 3:
                  state = 0;
                case 4:
                  if (state === 4 || state === 0 && !$.eqB(t1, 'Block'))
                    switch (state) {
                      case 0:
                        t1 = this._special;
                      case 4:
                        state = 0;
                        var t3 = !$.eqB(t1, 'Block');
                        t1 = t3;
                    }
                  else
                    t1 = false;
                  var link = t1;
              }
            else
              link = false;
        }
      else
        link = false;
      return link;
  }
},
 canLinkHorizontal$1: function(field) {
  if (!(field == null)) {
    if (!$.eqB(field.get$color(), this._color)) {
      var t1 = field.get$special();
      if (typeof t1 !== 'string')
        return this.canLinkHorizontal$1$bailout(1, field, t1);
      if (!(t1 === 'Joker')) {
        t1 = this._special;
        if (typeof t1 !== 'string')
          return this.canLinkHorizontal$1$bailout(2, field, t1);
        t1 = t1 === 'Joker';
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1) {
      t1 = field.get$direction();
      if (typeof t1 !== 'number')
        return this.canLinkHorizontal$1$bailout(3, field, t1);
      if (t1 === 0) {
        t1 = this._direction;
        if (typeof t1 !== 'number')
          return this.canLinkHorizontal$1$bailout(4, field, t1);
        if (t1 === 0) {
          t1 = field.get$special();
          if (typeof t1 !== 'string')
            return this.canLinkHorizontal$1$bailout(5, t1, 0);
          if (!(t1 === 'Block')) {
            t1 = this._special;
            if (typeof t1 !== 'string')
              return this.canLinkHorizontal$1$bailout(6, t1, 0);
            var t3 = !(t1 === 'Block');
            t1 = t3;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      var link = t1;
    } else
      link = false;
  } else
    link = false;
  return link;
},
 canLinkHorizontal$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      var field = env0;
      t1 = env1;
      break;
    case 2:
      field = env0;
      t1 = env1;
      break;
    case 3:
      field = env0;
      t1 = env1;
      break;
    case 4:
      field = env0;
      t1 = env1;
      break;
    case 5:
      t1 = env0;
      break;
    case 6:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
    default:
      if (state === 6 || state === 5 || state === 4 || state === 3 || state === 2 || state === 1 || state === 0 && !(field == null))
        switch (state) {
          case 0:
          default:
            if (state === 2 || state === 1 || state === 0 && !$.eqB(field.get$color(), this._color))
              switch (state) {
                case 0:
                  var t1 = field.get$special();
                case 1:
                  state = 0;
                case 2:
                  if (state === 2 || state === 0 && !$.eqB(t1, 'Joker'))
                    switch (state) {
                      case 0:
                        t1 = this._special;
                      case 2:
                        state = 0;
                        t1 = $.eqB(t1, 'Joker');
                    }
                  else
                    t1 = true;
              }
            else
              t1 = true;
          case 3:
          case 4:
          case 5:
          case 6:
            if (state === 6 || state === 5 || state === 4 || state === 3 || state === 0 && t1)
              switch (state) {
                case 0:
                  t1 = field.get$direction();
                case 3:
                  state = 0;
                default:
                  if (state === 6 || state === 5 || state === 4 || state === 0 && $.eqB(t1, 0))
                    switch (state) {
                      case 0:
                        t1 = this._direction;
                      case 4:
                        state = 0;
                      default:
                        if (state === 6 || state === 5 || state === 0 && $.eqB(t1, 0))
                          switch (state) {
                            case 0:
                              t1 = field.get$special();
                            case 5:
                              state = 0;
                            case 6:
                              if (state === 6 || state === 0 && !$.eqB(t1, 'Block'))
                                switch (state) {
                                  case 0:
                                    t1 = this._special;
                                  case 6:
                                    state = 0;
                                    var t3 = !$.eqB(t1, 'Block');
                                    t1 = t3;
                                }
                              else
                                t1 = false;
                          }
                        else
                          t1 = false;
                    }
                  else
                    t1 = false;
                  var link = t1;
              }
            else
              link = false;
        }
      else
        link = false;
      return link;
  }
},
 canLinkVertical$1: function(field) {
  if (!(field == null)) {
    if (!$.eqB(field.get$color(), this._color)) {
      var t1 = field.get$special();
      if (typeof t1 !== 'string')
        return this.canLinkVertical$1$bailout(1, field, t1);
      if (!(t1 === 'Joker')) {
        t1 = this._special;
        if (typeof t1 !== 'string')
          return this.canLinkVertical$1$bailout(2, field, t1);
        t1 = t1 === 'Joker';
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1) {
      t1 = field.get$direction();
      if (typeof t1 !== 'number')
        return this.canLinkVertical$1$bailout(3, field, t1);
      if (t1 === 1) {
        t1 = this._direction;
        if (typeof t1 !== 'number')
          return this.canLinkVertical$1$bailout(4, field, t1);
        if (t1 === 1) {
          t1 = field.get$special();
          if (typeof t1 !== 'string')
            return this.canLinkVertical$1$bailout(5, t1, 0);
          if (!(t1 === 'Block')) {
            t1 = this._special;
            if (typeof t1 !== 'string')
              return this.canLinkVertical$1$bailout(6, t1, 0);
            var t3 = !(t1 === 'Block');
            t1 = t3;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      var link = t1;
    } else
      link = false;
  } else
    link = false;
  return link;
},
 canLinkVertical$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      var field = env0;
      t1 = env1;
      break;
    case 2:
      field = env0;
      t1 = env1;
      break;
    case 3:
      field = env0;
      t1 = env1;
      break;
    case 4:
      field = env0;
      t1 = env1;
      break;
    case 5:
      t1 = env0;
      break;
    case 6:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
    default:
      if (state === 6 || state === 5 || state === 4 || state === 3 || state === 2 || state === 1 || state === 0 && !(field == null))
        switch (state) {
          case 0:
          default:
            if (state === 2 || state === 1 || state === 0 && !$.eqB(field.get$color(), this._color))
              switch (state) {
                case 0:
                  var t1 = field.get$special();
                case 1:
                  state = 0;
                case 2:
                  if (state === 2 || state === 0 && !$.eqB(t1, 'Joker'))
                    switch (state) {
                      case 0:
                        t1 = this._special;
                      case 2:
                        state = 0;
                        t1 = $.eqB(t1, 'Joker');
                    }
                  else
                    t1 = true;
              }
            else
              t1 = true;
          case 3:
          case 4:
          case 5:
          case 6:
            if (state === 6 || state === 5 || state === 4 || state === 3 || state === 0 && t1)
              switch (state) {
                case 0:
                  t1 = field.get$direction();
                case 3:
                  state = 0;
                default:
                  if (state === 6 || state === 5 || state === 4 || state === 0 && $.eqB(t1, 1))
                    switch (state) {
                      case 0:
                        t1 = this._direction;
                      case 4:
                        state = 0;
                      default:
                        if (state === 6 || state === 5 || state === 0 && $.eqB(t1, 1))
                          switch (state) {
                            case 0:
                              t1 = field.get$special();
                            case 5:
                              state = 0;
                            case 6:
                              if (state === 6 || state === 0 && !$.eqB(t1, 'Block'))
                                switch (state) {
                                  case 0:
                                    t1 = this._special;
                                  case 6:
                                    state = 0;
                                    var t3 = !$.eqB(t1, 'Block');
                                    t1 = t3;
                                }
                              else
                                t1 = false;
                          }
                        else
                          t1 = false;
                    }
                  else
                    t1 = false;
                  var link = t1;
              }
            else
              link = false;
        }
      else
        link = false;
      return link;
  }
},
 get$x: function() {
  return this._lib2_x;
},
 set$x: function(value) {
  this._lib2_x = value;
  var t1 = this._chainDisplayObject;
  if (!(t1 == null))
    t1.set$x(value);
  t1 = this._linkDisplayObject;
  if (!(t1 == null))
    t1.set$x(value);
  t1 = this._specialDisplayObject;
  if (!(t1 == null))
    t1.set$x(value);
},
 get$y: function() {
  return this._lib2_y;
},
 set$y: function(value) {
  this._lib2_y = value;
  var t1 = this._chainDisplayObject;
  if (!(t1 == null))
    t1.set$y(value);
  t1 = this._linkDisplayObject;
  if (!(t1 == null))
    t1.set$y(value);
  t1 = this._specialDisplayObject;
  if (!(t1 == null))
    t1.set$y(value);
},
 set$sinScale: function(n) {
  if (!(this._chainDisplayObject == null)) {
    var s = 1 + 0.3 * $.sin($.mul(n, 3.141592653589793));
    this._chainDisplayObject.set$scaleX(s);
    this._chainDisplayObject.set$scaleY(s);
  }
},
 updateDisplayObjects$3: function(chainLayer, linkLayer, specialLayer) {
  var t1 = this._chainDisplayObject;
  if (!(t1 == null)) {
    t1.get$parent().removeChild$1(this._chainDisplayObject);
    this._chainDisplayObject = null;
  }
  t1 = this._linkDisplayObject;
  if (!(t1 == null)) {
    t1.get$parent().removeChild$1(this._linkDisplayObject);
    this._linkDisplayObject = null;
  }
  t1 = this._specialDisplayObject;
  if (!(t1 == null)) {
    t1.get$parent().removeChild$1(this._specialDisplayObject);
    this._specialDisplayObject = null;
  }
  if ($.eqB(this.get$empty(), false)) {
    switch (this._special) {
      case 'Joker':
        this._chainDisplayObject = $.SpecialJokerChain$(this._direction);
        t1 = this._lib2_x;
        this._chainDisplayObject.set$x(t1);
        t1 = this._lib2_y;
        this._chainDisplayObject.set$y(t1);
        chainLayer.addChild$1(this._chainDisplayObject);
        break;
      case 'Block':
        this._chainDisplayObject = $.Grafix_getSpecial('Block');
        t1 = this._lib2_x;
        this._chainDisplayObject.set$x(t1);
        t1 = this._lib2_y;
        this._chainDisplayObject.set$y(t1);
        chainLayer.addChild$1(this._chainDisplayObject);
        break;
      default:
        this._chainDisplayObject = $.Grafix_getChain(this._color, this._direction);
        t1 = this._lib2_x;
        this._chainDisplayObject.set$x(t1);
        t1 = this._lib2_y;
        this._chainDisplayObject.set$y(t1);
        chainLayer.addChild$1(this._chainDisplayObject);
        break;
    }
    if (this._linked === true) {
      t1 = this._linkedJoker === true;
      var t2 = this._direction;
      this._linkDisplayObject = t1 ? $.SpecialJokerLink$(t2) : $.Grafix_getLink(this._color, t2);
      t1 = this._lib2_x;
      t2 = $.eqB(this._direction, 0) ? 25 : 0;
      t2 = $.add(t1, t2);
      this._linkDisplayObject.set$x(t2);
      t2 = this._lib2_y;
      t1 = $.add(t2, $.eqB(this._direction, 1) ? 25 : 0);
      this._linkDisplayObject.set$y(t1);
      linkLayer.addChild$1(this._linkDisplayObject);
    }
    t1 = this._special;
    switch (t1) {
      case 'None':
        break;
      case 'Block':
        break;
      case 'Joker':
        break;
      default:
        this._specialDisplayObject = $.SpecialWobble$(t1);
        t2 = this._lib2_x;
        this._specialDisplayObject.set$x(t2);
        t2 = this._lib2_y;
        this._specialDisplayObject.set$y(t2);
        specialLayer.addChild$1(this._specialDisplayObject);
        break;
    }
  }
},
 Field$2: function(color, direction) {
  this._color = color;
  this._direction = direction;
  this._special = 'None';
  this._lib2_x = -1000;
  this._lib2_y = -1000;
  this._linked = false;
  this._linkedJoker = false;
  this._empty = false;
  this._chainDisplayObject = null;
  this._linkDisplayObject = null;
  this._specialDisplayObject = null;
}
};

$$.Game = {"":
 ["_infoBox?", "_shuffleButton", "_exitButton", "_board?", "_timeGauge?", "_head?", "_alarm", "_pointsTextField?", "_shufflesTextField", "_level=", "_lives", "_shuffles", "_chainCount", "_points=", "_gameLayer?", "_messageLayer", "_exitLayer?", "_introSound=", "_introSoundChannel?", "_exitCalled", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 start$0: function() {
  this._level = 1;
  this._lives = 1;
  this._points = 0;
  this._shuffles = 3;
  var messageBox = $.MessageBox$($.Texts_resource.getText$1('ESCStartText'));
  this._messageLayer.addChild$1(messageBox);
  $.Juggler_instance().delayCall$2(new $.Game_start_anon(this), 1);
  messageBox.show$1(new $.Game_start_anon0(this));
},
 _nextLevel$0: function() {
  var t1 = this._board;
  if (!(t1 == null) && this.contains$1(t1) === true)
    this._gameLayer.removeChild$1(this._board);
  var level = this._level;
  switch (level) {
    case 1:
      this._board = $.Board$(40, 3, 0, 0, 0, 0, [0, 1, 2]);
      var chainCount = 40;
      var time = 50;
      break;
    case 2:
      this._board = $.Board$(45, 3, 1, 0, 0, 0, [2, 3, 4]);
      chainCount = 45;
      time = 45;
      break;
    case 3:
      this._board = $.Board$(50, 4, 2, 2, 1, 0, [5, 6, 7]);
      chainCount = 50;
      time = 40;
      break;
    case 4:
      this._board = $.Board$(55, 4, 3, 3, 2, 0, [0, 2, 6]);
      chainCount = 55;
      time = 35;
      break;
    case 5:
      this._board = $.Board$(60, 5, 4, 4, 2, 1, [1, 3, 5]);
      chainCount = 60;
      time = 30;
      break;
    case 6:
      this._board = $.Board$(60, 5, 5, 5, 3, 2, [1, 2, 4, 7]);
      chainCount = 60;
      time = 34;
      break;
    case 7:
      this._board = $.Board$(65, 5, 5, 6, 3, 2, [0, 1, 2, 3]);
      chainCount = 65;
      time = 33;
      break;
    case 8:
      this._board = $.Board$(70, 5, 5, 6, 3, 2, [0, 2, 5, 6]);
      chainCount = 70;
      time = 32;
      break;
    case 9:
      this._board = $.Board$(75, 5, 5, 6, 3, 2, [1, 4, 5, 7]);
      chainCount = 75;
      time = 31;
      break;
    default:
      t1 = $.mul($.sub(level, 10), 5);
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      chainCount = 80 + t1;
      this._board = $.Board$(chainCount, 5, 5, 6, 3, 2, [0, 1, 2, 3]);
      time = 30;
      break;
  }
  this._chainCount = chainCount;
  if ($.ltB(this._shuffles, 3)) {
    this._shuffles = $.add(this._shuffles, 1);
    t1 = $.S(this._shuffles) + 'x';
    this._shufflesTextField.set$text(t1);
  }
  this._board.addEventListener$2('Explosion', this.get$_onBoardEventExplosion());
  this._board.addEventListener$2('Unlocked', this.get$_onBoardEventUnlocked());
  this._board.addEventListener$2('Finalized', this.get$_onBoardEventFinalized());
  this._board.addEventListener$2('Timeouted', this.get$_onBoardEventTimeouted());
  this._board.set$x(20);
  this._board.set$y(16);
  this._board.set$mouseEnabled(false);
  this._gameLayer.addChild$1(this._board);
  t1 = this._timeGauge;
  t1.reset$1(time);
  t1.addAlarm$2('TimeShort', 9);
  t1.addAlarm$2('TimeOver', 0);
  t1.pause$0();
  t1 = this._infoBox;
  t1.set$level(level);
  t1.set$chains(chainCount);
  t1.set$y(-210);
  var tween1 = $.Tween$(t1, 0.4, $.Transitions_easeOutCubic);
  tween1.animate$2('y', -90);
  $.add$1($.Juggler_instance(), tween1);
  var messageBox = $.MessageBox$($.replaceAll($.Texts_resource.getText$1('ESCLevelBoxText'), '{0}', $.S(chainCount)));
  this._messageLayer.addChild$1(messageBox);
  messageBox.show$1(new $.Game__nextLevel_anon(this));
},
 _onTimeShort$1: function(e) {
  this._alarm.start$0();
},
 get$_onTimeShort: function() { return new $.BoundClosure(this, '_onTimeShort$1'); },
 _onTimeOver$1: function(e) {
  this._board.updateStatus$1(3);
},
 get$_onTimeOver: function() { return new $.BoundClosure(this, '_onTimeOver$1'); },
 _onBoardEventUnlocked$1: function(be) {
  var position = $.index(be.get$info(), 'Position');
  var type = $.index(be.get$info(), 'Type');
  var unlockPoints = $.eqB(type, 'SingleLocked') ? 3000 : 0;
  if ($.eqB(type, 'SingleUnlocked'))
    unlockPoints = 1000;
  if ($.eqB(type, 'All'))
    unlockPoints = 10000;
  var bonus = $.Bonus$(unlockPoints);
  bonus.set$x(position.get$x());
  bonus.set$y(position.get$y());
  this._gameLayer.addChild$1(bonus);
  this._points = $.add(this._points, unlockPoints);
  var t1 = $.S(this._points);
  this._pointsTextField.set$text(t1);
},
 get$_onBoardEventUnlocked: function() { return new $.BoundClosure(this, '_onBoardEventUnlocked$1'); },
 _onBoardEventExplosion$1: function(be) {
  var chainCount = this._chainCount;
  var chainLength = $.index(be.get$info(), 'Length');
  var chainFactor = $.index(be.get$info(), 'Factor');
  chainCount = $.gtB(chainCount, chainLength) ? $.sub(chainCount, chainLength) : 0;
  this._chainCount = chainCount;
  this._infoBox.set$chains(chainCount);
  if ($.eqB(chainCount, 0))
    this._board.updateStatus$1(2);
  switch (chainLength) {
    case 3:
      var chainPoints = 1000;
      break;
    case 4:
      chainPoints = 2000;
      break;
    case 5:
      chainPoints = 5000;
      break;
    default:
      chainPoints = 5000;
  }
  var t1 = this._points;
  if (typeof chainFactor !== 'number')
    throw $.iae(chainFactor);
  this._points = $.add(t1, chainPoints * chainFactor);
  var t2 = $.S(this._points);
  this._pointsTextField.set$text(t2);
},
 get$_onBoardEventExplosion: function() { return new $.BoundClosure(this, '_onBoardEventExplosion$1'); },
 _onBoardEventFinalized$1: function(be) {
  this._timeGauge.pause$0();
  this._alarm.stop$0();
  var laugh = $.Sounds_resource.getSound$1('Laugh');
  var levelUp = $.Sounds_resource.getSound$1('LevelUp');
  laugh.play$0();
  this._head.nod$1(3);
  var levelUpAnimation = $.Grafix_getLevelUpAnimation();
  levelUpAnimation.set$x(55);
  levelUpAnimation.set$y(260);
  this._gameLayer.addChild$1(levelUpAnimation);
  $.Juggler_instance().delayCall$2(new $.Game__onBoardEventFinalized_anon(this, levelUp), 2);
  $.Juggler_instance().delayCall$2(new $.Game__onBoardEventFinalized_anon0(this), 2.5);
  var tween = $.Tween$(this._infoBox, 0.5, $.Transitions_easeOutCubic);
  tween.animate$2('y', -210);
  tween.set$delay(3);
  $.add$1($.Juggler_instance(), tween);
  $.Juggler_instance().delayCall$2(new $.Game__onBoardEventFinalized_anon1(this, levelUpAnimation), 3.5);
  $.Juggler_instance().delayCall$2(new $.Game__onBoardEventFinalized_anon2(this), 4);
},
 get$_onBoardEventFinalized: function() { return new $.BoundClosure(this, '_onBoardEventFinalized$1'); },
 _onBoardEventTimeouted$1: function(be) {
  this._alarm.stop$0();
  this._board.dropFields$0();
  var t1 = $.gtB(this._lives, 0);
  var t2 = this._messageLayer;
  if (t1) {
    this._lives = $.sub(this._lives, 1);
    var messageBox = $.MessageBox$($.Texts_resource.getText$1('GEN2ndchancetime'));
    t2.addChild$1(messageBox);
    $.Sounds_resource.getSound$1('LevelUp').play$0();
    messageBox.show$1(new $.Game__onBoardEventTimeouted_anon(this));
  } else {
    messageBox = $.MessageBox$($.Texts_resource.getText$1('GENtimeup'));
    t2.addChild$1(messageBox);
    $.Sounds_resource.getSound$1('GameOver').play$0();
    messageBox.show$1(new $.Game__onBoardEventTimeouted_anon0(this));
  }
},
 get$_onBoardEventTimeouted: function() { return new $.BoundClosure(this, '_onBoardEventTimeouted$1'); },
 _onShuffleButtonClick$1: function(me) {
  if (!(this._board == null) && $.gtB(this._shuffles, 0))
    if (this._board.shuffleField$0() === true) {
      this._shuffles = $.sub(this._shuffles, 1);
      var t1 = $.S(this._shuffles) + 'x';
      this._shufflesTextField.set$text(t1);
    }
},
 get$_onShuffleButtonClick: function() { return new $.BoundClosure(this, '_onShuffleButtonClick$1'); },
 _onExitButtonClick$1: function(me) {
  var dark = $.Sprite$();
  dark.addChild$1($.Bitmap$($.BitmapData$(800, 600, false, 0), 'auto', false));
  dark.set$alpha(0.6);
  var t1 = this._exitLayer;
  t1.addChild$1(dark);
  var exitBox = $.ExitBox$();
  exitBox.set$x(235);
  exitBox.set$y(150);
  t1.addChild$1(exitBox);
  exitBox.show$1(new $.Game__onExitButtonClick_anon(this, dark, exitBox));
},
 get$_onExitButtonClick: function() { return new $.BoundClosure(this, '_onExitButtonClick$1'); },
 _gameOver$0: function() {
  var gameOverBox = $.Sprite$();
  gameOverBox.addChild$1($.Bitmap$($.Grafix_resource.getBitmapData$1('ExitBox'), 'auto', false));
  var textFormat = $.TextFormat$('Arial', 30, 16777215, true, false, false, null, null, 'left', 0, 0, 0, 0);
  textFormat.align = 'center';
  var textField = $.TextField$();
  textField.set$defaultTextFormat(textFormat);
  textField.set$width(240);
  textField.set$height(200);
  textField.set$wordWrap(true);
  textField.set$text($.Texts_resource.getText$1('GENgameover'));
  textField.set$x(47);
  var t1 = $.div($.sub(textField.get$height(), textField.get$textHeight()), 2);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  textField.set$y(30 + t1);
  textField.mouseEnabled = false;
  gameOverBox.addChild$1(textField);
  gameOverBox.set$x(110);
  gameOverBox.set$y($.neg(gameOverBox.get$height()));
  this._messageLayer.addChild$1(gameOverBox);
  var laugh = $.Sounds_resource.getSound$1('Laugh');
  $.Juggler_instance().delayCall$2(new $.Game__gameOver_anon(laugh), 0.3);
  var tween = $.Tween$(gameOverBox, 0.3, $.Transitions_easeOutCubic);
  tween.animate$2('y', 150);
  $.add$1($.Juggler_instance(), tween);
  $.Juggler_instance().delayCall$2(new $.Game__gameOver_anon0(this), 5);
  gameOverBox.addEventListener$2('click', new $.Game__gameOver_anon1(this));
},
 _exitGame$1: function(gameEnded) {
  this._timeGauge.pause$0();
  if (this._exitCalled === false)
    this._exitCalled = true;
},
 Game$0: function() {
  var shuffleButtonNormal = $.Bitmap$($.Grafix_resource.getBitmapData$1('ShuffleButtonNormal'), 'auto', false);
  var shuffleButtonPressed = $.Bitmap$($.Grafix_resource.getBitmapData$1('ShuffleButtonPressed'), 'auto', false);
  this._shuffleButton = $.SimpleButton$(shuffleButtonNormal, shuffleButtonNormal, shuffleButtonPressed, shuffleButtonPressed);
  var t1 = this._shuffleButton;
  t1.addEventListener$2('click', this.get$_onShuffleButtonClick());
  t1.set$x(530);
  t1.set$y(525);
  this.addChild$1(t1);
  var exitButtonNormal = $.Bitmap$($.Grafix_resource.getBitmapData$1('ExitButtonNormal'), 'auto', false);
  var exitButtonPressed = $.Bitmap$($.Grafix_resource.getBitmapData$1('ExitButtonPressed'), 'auto', false);
  this._exitButton = $.SimpleButton$(exitButtonNormal, exitButtonNormal, exitButtonPressed, exitButtonPressed);
  t1 = this._exitButton;
  t1.addEventListener$2('click', this.get$_onExitButtonClick());
  t1.set$x(700);
  t1.set$y(500);
  this.addChild$1(t1);
  this._infoBox = $.InfoBox$();
  t1 = this._infoBox;
  t1.set$x(540);
  t1.set$y(-1000);
  this.addChild$1(t1);
  this._timeGauge = $.TimeGauge$(10, $.Grafix_resource.getBitmapData$1('TimeGauge'), 'DIRECTION_UP');
  t1 = this._timeGauge;
  t1.set$x(659);
  t1.set$y(244);
  t1.addEventListener$2('TimeShort', this.get$_onTimeShort());
  t1.addEventListener$2('TimeOver', this.get$_onTimeOver());
  this.addChild$1(t1);
  $.add$1($.Juggler_instance(), t1);
  this._head = $.Head$();
  t1 = this._head;
  t1.set$x(640);
  t1.set$y(230);
  this.addChild$1(t1);
  this._alarm = $.Alarm$();
  t1 = this._alarm;
  t1.set$x(665);
  t1.set$y(160);
  this.addChild$1(t1);
  this._pointsTextField = $.TextField$();
  t1 = $.TextFormat$('Arial', 30, 13684944, true, false, false, null, null, 'center', 0, 0, 0, 0);
  var t2 = this._pointsTextField;
  t2.set$defaultTextFormat(t1);
  t2.set$width(140);
  t2.set$height(36);
  t2.set$wordWrap(false);
  t2.set$x(646);
  t2.set$y(130);
  t2.set$mouseEnabled(false);
  t2.set$text('0');
  t2.set$scaleX(0.9);
  this.addChild$1(t2);
  this._shufflesTextField = $.TextField$();
  t2 = $.TextFormat$('Arial', 20, 16777215, true, false, false, null, null, 'center', 0, 0, 0, 0);
  t1 = this._shufflesTextField;
  t1.set$defaultTextFormat(t2);
  t1.set$width(44);
  t1.set$height(30);
  t1.set$wordWrap(false);
  t1.set$x(610);
  t1.set$y(559);
  t1.set$mouseEnabled(false);
  t1.set$text('3x');
  this.addChild$1(t1);
  this._gameLayer = $.Sprite$();
  this.addChild$1(this._gameLayer);
  this._messageLayer = $.Sprite$();
  this.addChild$1(this._messageLayer);
  this._exitLayer = $.Sprite$();
  this.addChild$1(this._exitLayer);
  this._introSound = $.Sounds_resource.getSound$1('Intro');
  this._introSoundChannel = this._introSound.play$0();
}
};

$$.Head = {"":
 ["_headBitmapDatas?", "_headBitmap?", "_nodTween", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 nod$1: function(count) {
  $.Juggler_instance().remove$1(this._nodTween);
  this._nodTween = $.Tween$(this, 0.5 * count, $.Transitions_linear);
  this._nodTween.animateValue$3(new $.Head_nod_anon(this), 0, count);
  $.add$1($.Juggler_instance(), this._nodTween);
},
 nodStop$0: function() {
  $.Juggler_instance().remove$1(this._nodTween);
  var t1 = $.index(this._headBitmapDatas, 0);
  this._headBitmap.set$bitmapData(t1);
},
 Head$0: function() {
  this._headBitmapDatas = $.Grafix_getHeads();
  this._headBitmap = $.Bitmap$($.index(this._headBitmapDatas, 0), 'auto', false);
  var t1 = this._headBitmap;
  t1.set$x($.div($.neg(t1.get$width()), 2));
  t1.set$y($.div($.neg(t1.get$height()), 2));
  this.addChild$1(t1);
  this._nodTween = null;
}
};

$$.InfoBox = {"":
 ["_level=", "_levelText", "_chains", "_chainsText", "_chainsTextZoom", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 set$level: function(value) {
  this._level = value;
  var t1 = 'Level ' + $.S(this._level);
  this._levelText.set$text(t1);
},
 set$chains: function(value) {
  this._chains = value;
  var t1 = $.S(this._chains);
  this._chainsText.set$text(t1);
},
 InfoBox$0: function() {
  this.addChild$1($.Bitmap$($.Grafix_resource.getBitmapData$1('InfoBox'), 'auto', false));
  var levelTextFormat = $.TextFormat$('Arial', 35, 16777215, true, false, false, null, null, 'left', 0, 0, 0, 0);
  levelTextFormat.align = 'center';
  this._levelText = $.TextField$();
  var t1 = this._levelText;
  t1.set$defaultTextFormat(levelTextFormat);
  t1.set$width(220);
  t1.set$height(40);
  t1.set$wordWrap(false);
  t1.set$text('Level 1');
  t1.set$x(20);
  t1.set$y(115);
  t1.set$rotation(-0.03490658503988659);
  this.addChild$1(t1);
  var chainTextFormat = $.TextFormat$('Arial', 25, 16777215, true, false, false, null, null, 'left', 0, 0, 0, 0);
  chainTextFormat.align = 'center';
  this._chainsText = $.TextField$();
  t1 = this._chainsText;
  t1.set$defaultTextFormat(chainTextFormat);
  t1.set$width(220);
  t1.set$height(30);
  t1.set$wordWrap(false);
  t1.set$text('40');
  t1.set$x($.div($.neg(t1.get$width()), 2));
  t1.set$y($.div($.neg(t1.get$height()), 2));
  t1.set$rotation(-0.03490658503988659);
  this._chainsTextZoom = $.Sprite$();
  var t2 = this._chainsTextZoom;
  t2.addChild$1(t1);
  t2.set$x(150);
  t2.set$y(172);
  this.addChild$1(t2);
  var chain = $.Grafix_getChain(3, 0);
  chain.set$x(110);
  chain.set$y(171);
  chain.set$rotation(-0.03490658503988659);
  chain.set$scaleY(0.6);
  chain.set$scaleX(0.6);
  this.addChild$1(chain);
}
};

$$.Lock = {"":
 ["_color", "_bitmap", "_lockBitmapDatas", "_locked?", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 get$locked: function() {
  return this._locked;
},
 set$locked: function(value) {
  this._locked = value;
},
 showLocked$1: function(locked) {
  var t1 = this._lockBitmapDatas;
  t1 = $.index(t1, locked === true ? 0 : 4);
  this._bitmap.set$bitmapData(t1);
},
 showHappy$0: function() {
  var tween1 = $.Tween$(this, 2, $.Transitions_easeOutCubic);
  tween1.animateValue$3(new $.Lock_showHappy_anon(this), 0, 1);
  var tween2 = $.Tween$(this, 0.2, $.Transitions_easeOutCubic);
  tween2.animate$2('alpha', 0);
  tween2.set$delay(2);
  tween2.set$onComplete(new $.Lock_showHappy_anon0(this));
  var tween3 = $.Tween$(this, 0.2, $.Transitions_easeInCubic);
  tween3.animate$2('alpha', 1);
  tween3.set$delay(2.2);
  $.add$1($.Juggler_instance(), tween1);
  $.add$1($.Juggler_instance(), tween2);
  $.add$1($.Juggler_instance(), tween3);
},
 Lock$1: function(color) {
  this._color = color;
  this._lockBitmapDatas = $.Grafix_getLock(color);
  this._locked = true;
  this._bitmap = $.Bitmap$($.index(this._lockBitmapDatas, 0), 'auto', false);
  var t1 = this._bitmap;
  t1.set$x(-34);
  t1.set$y(-50);
  this.addChild$1(t1);
}
};

$$.MessageBox = {"":
 ["_showTimeout!", "_doneFunction", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 _doneFunction$0: function() { return this._doneFunction.call$0(); },
 _doneFunction$1: function(arg0) { return this._doneFunction.call$1(arg0); },
 show$1: function(doneFunction) {
  this.get$parent().addChild$1(this);
  this.set$x($.neg(this.get$width()));
  this.set$y(150);
  this._doneFunction = doneFunction;
  var tween = $.Tween$(this, 0.3, $.Transitions_easeOutCubic);
  tween.animate$2('x', 110);
  tween.set$onComplete(new $.MessageBox_show_anon(this));
  $.add$1($.Juggler_instance(), tween);
},
 _hide$0: function() {
  if (!(this._showTimeout == null)) {
    $.Juggler_instance().remove$1(this._showTimeout);
    this._showTimeout = null;
    this._doneFunction$0();
    var tween = $.Tween$(this, 0.4, $.Transitions_easeInCubic);
    tween.animate$2('x', 800);
    tween.set$onComplete(new $.MessageBox__hide_anon(this));
    $.add$1($.Juggler_instance(), tween);
  }
},
 get$_hide: function() { return new $.BoundClosure0(this, '_hide$0'); },
 _onClick$1: function(me) {
  this._hide$0();
},
 get$_onClick: function() { return new $.BoundClosure(this, '_onClick$1'); },
 MessageBox$1: function(text) {
  this.addChild$1($.Bitmap$($.Grafix_resource.getBitmapData$1('MessageBox'), 'auto', false));
  var textFormat = $.TextFormat$('Arial', 24, 16777215, true, false, false, null, null, 'left', 0, 0, 0, 0);
  textFormat.align = 'center';
  var textField = $.TextField$();
  textField.set$defaultTextFormat(textFormat);
  textField.set$width(240);
  textField.set$height(200);
  textField.set$wordWrap(true);
  textField.set$text(text);
  textField.set$x(47);
  var t1 = $.div(textField.get$textHeight(), 2);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  textField.set$y(130 - t1);
  textField.mouseEnabled = false;
  this.addChild$1(textField);
  this._showTimeout = null;
  this.addEventListener$2('click', this.get$_onClick());
}
};

$$.SpecialJokerChain = {"":
 ["_bitmap", "_jokerBitmapDatas", "_lib2_currentTime", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 advanceTime$1: function(time) {
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time, 0);
  var t1 = this._lib2_currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(2, time, t1);
  this._lib2_currentTime = t1 + time;
  var t3 = this._lib2_currentTime;
  if (typeof t3 !== 'number')
    return this.advanceTime$1$bailout(3, t3, 0);
  var t5 = $.toInt(t3 * 10);
  if (typeof t5 !== 'number')
    return this.advanceTime$1$bailout(4, t5, 0);
  var t7 = this._jokerBitmapDatas;
  if (typeof t7 !== 'string' && (typeof t7 !== 'object' || t7 === null || t7.constructor !== Array && !t7.is$JavaScriptIndexingBehavior()))
    return this.advanceTime$1$bailout(5, t5, t7);
  var t9 = t7.length;
  var frame = $.mod(t5, t9);
  if (frame !== (frame | 0))
    throw $.iae(frame);
  if (frame < 0 || frame >= t9)
    throw $.ioore(frame);
  t7 = t7[frame];
  this._bitmap.bitmapData = t7;
  return true;
},
 advanceTime$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
    case 3:
      t3 = env0;
      break;
    case 4:
      t5 = env0;
      break;
    case 5:
      t5 = env0;
      t7 = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._lib2_currentTime;
    case 2:
      state = 0;
      this._lib2_currentTime = $.add(t1, time);
      var t3 = this._lib2_currentTime;
    case 3:
      state = 0;
      var t5 = $.toInt($.mul(t3, 10));
    case 4:
      state = 0;
      var t7 = this._jokerBitmapDatas;
    case 5:
      state = 0;
      t7 = $.index(t7, $.mod(t5, $.get$length(t7)));
      this._bitmap.set$bitmapData(t7);
      return true;
  }
},
 SpecialJokerChain$1: function(direction) {
  this.mouseEnabled = false;
  this._lib2_currentTime = 0;
  this._jokerBitmapDatas = $.Grafix_getJokerChain(direction);
  this._bitmap = $.Bitmap$($.index(this._jokerBitmapDatas, 0), 'auto', false);
  var t1 = this._bitmap;
  t1.set$x(-25);
  t1.set$y(-25);
  this.addChild$1(t1);
  this.addEventListener$2('addedToStage', new $.anon6(this));
  this.addEventListener$2('removedFromStage', new $.anon7(this));
}
};

$$.SpecialJokerLink = {"":
 ["_bitmap", "_jokerBitmapDatas", "_lib2_currentTime", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 advanceTime$1: function(time) {
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time, 0);
  var t1 = this._lib2_currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(2, time, t1);
  this._lib2_currentTime = t1 + time;
  var t3 = this._lib2_currentTime;
  if (typeof t3 !== 'number')
    return this.advanceTime$1$bailout(3, t3, 0);
  var t5 = $.toInt(t3 * 10);
  if (typeof t5 !== 'number')
    return this.advanceTime$1$bailout(4, t5, 0);
  var t7 = this._jokerBitmapDatas;
  if (typeof t7 !== 'string' && (typeof t7 !== 'object' || t7 === null || t7.constructor !== Array && !t7.is$JavaScriptIndexingBehavior()))
    return this.advanceTime$1$bailout(5, t5, t7);
  var t9 = t7.length;
  var frame = $.mod(t5, t9);
  if (frame !== (frame | 0))
    throw $.iae(frame);
  if (frame < 0 || frame >= t9)
    throw $.ioore(frame);
  t7 = t7[frame];
  this._bitmap.bitmapData = t7;
  return true;
},
 advanceTime$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
    case 3:
      t3 = env0;
      break;
    case 4:
      t5 = env0;
      break;
    case 5:
      t5 = env0;
      t7 = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._lib2_currentTime;
    case 2:
      state = 0;
      this._lib2_currentTime = $.add(t1, time);
      var t3 = this._lib2_currentTime;
    case 3:
      state = 0;
      var t5 = $.toInt($.mul(t3, 10));
    case 4:
      state = 0;
      var t7 = this._jokerBitmapDatas;
    case 5:
      state = 0;
      t7 = $.index(t7, $.mod(t5, $.get$length(t7)));
      this._bitmap.set$bitmapData(t7);
      return true;
  }
},
 SpecialJokerLink$1: function(direction) {
  this.mouseEnabled = false;
  this._lib2_currentTime = 0;
  this._jokerBitmapDatas = $.Grafix_getJokerLink(direction);
  this._bitmap = $.Bitmap$($.index(this._jokerBitmapDatas, 0), 'auto', false);
  var t1 = this._bitmap;
  t1.set$x(-25);
  t1.set$y(-25);
  this.addChild$1(t1);
  this.addEventListener$2('addedToStage', new $.anon4(this));
  this.addEventListener$2('removedFromStage', new $.anon5(this));
}
};

$$.SpecialWobble = {"":
 ["_bitmap", "_lib2_currentTime", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Sprite",
 advanceTime$1: function(time) {
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time, 0);
  var t1 = this._lib2_currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(2, time, t1);
  this._lib2_currentTime = t1 + time;
  var t3 = this._lib2_currentTime;
  if (typeof t3 !== 'number')
    return this.advanceTime$1$bailout(3, t3, 0);
  this.set$rotation($.sin(t3 * 7) * 10 * 3.141592653589793 / 180);
  return true;
},
 advanceTime$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
    case 3:
      t3 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._lib2_currentTime;
    case 2:
      state = 0;
      this._lib2_currentTime = $.add(t1, time);
      var t3 = this._lib2_currentTime;
    case 3:
      state = 0;
      this.set$rotation($.sin($.mul(t3, 7)) * 10 * 3.141592653589793 / 180);
      return true;
  }
},
 SpecialWobble$1: function(special) {
  this.mouseEnabled = false;
  this._lib2_currentTime = 0;
  this._bitmap = $.Grafix_getSpecial(special);
  this.addChild$1(this._bitmap);
  this.addEventListener$2('addedToStage', new $.anon2(this));
  this.addEventListener$2('removedFromStage', new $.anon3(this));
}
};

$$.ValueCounter = {"":
 ["value="],
 "super": "Object",
 increment$1: function(inc) {
  var t1 = this.value;
  if (typeof t1 !== 'number')
    return this.increment$1$bailout(1, inc, t1);
  t1 += inc;
  this.value = t1;
  return t1;
},
 increment$1$bailout: function(state, inc, t1) {
  t1 = $.add(t1, inc);
  this.value = t1;
  return t1;
},
 increment$0: function() {
  return this.increment$1(1)
},
 increment$0: function() {
  return this.increment$1(1)
},
 decrement$1: function(dec) {
  var t1 = $.sub(this.value, dec);
  this.value = t1;
  return t1;
},
 decrement$0: function() {
  return this.decrement$1(1)
},
 decrement$0: function() {
  return this.decrement$1(1)
}
};

$$.Gauge = {"":
 [],
 "super": "Sprite",
 _updateMask$0: function() {
  var t1 = this._bitmap;
  var bdWidth = t1.get$bitmapData().get$width();
  var bdHeight = t1.get$bitmapData().get$height();
  switch (this._direction) {
    case 'DIRECTION_LEFT':
      var t2 = this._ratio;
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      t2 = 1 - t2;
      if (typeof bdWidth !== 'number')
        throw $.iae(bdWidth);
      var t3 = $.toInt(t2 * bdWidth);
      t1.get$clipRectangle().set$left(t3);
      t1.get$clipRectangle().set$top(0);
      t1.get$clipRectangle().set$right(bdWidth);
      t1.get$clipRectangle().set$bottom(bdHeight);
      break;
    case 'DIRECTION_UP':
      t1.get$clipRectangle().set$left(0);
      t2 = this._ratio;
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      t2 = 1 - t2;
      if (typeof bdHeight !== 'number')
        throw $.iae(bdHeight);
      t3 = $.toInt(t2 * bdHeight);
      t1.get$clipRectangle().set$top(t3);
      t1.get$clipRectangle().set$right(bdWidth);
      t1.get$clipRectangle().set$bottom(bdHeight);
      break;
    case 'DIRECTION_RIGHT':
      t1.get$clipRectangle().set$left(0);
      t1.get$clipRectangle().set$top(0);
      t2 = $.toInt($.mul(this._ratio, bdWidth));
      t1.get$clipRectangle().set$right(t2);
      t1.get$clipRectangle().set$bottom(bdHeight);
      break;
    case 'DIRECTION_DOWN':
      t1.get$clipRectangle().set$left(0);
      t1.get$clipRectangle().set$top(0);
      t1.get$clipRectangle().set$right(bdWidth);
      t2 = $.toInt($.mul(this._ratio, bdHeight));
      t1.get$clipRectangle().set$bottom(t2);
      break;
    default:
      throw $.$$throw('Invalid Gauge direction!');
  }
},
 get$ratio: function() {
  return this._ratio;
},
 set$ratio: function(value) {
  if ($.ltB(value, 0))
    value = 0;
  this._ratio = $.gtB(value, 1) ? 1 : value;
  this._updateMask$0();
},
 Gauge$2: function(bitmapData, direction) {
  this._direction = direction;
  this._ratio = 1;
  this._bitmap = $.Bitmap$(bitmapData, 'auto', false);
  var t1 = $.Rectangle$(0, 0, bitmapData.get$width(), bitmapData.get$height());
  var t2 = this._bitmap;
  t2.set$clipRectangle(t1);
  this.addChild$1(t2);
  this._updateMask$0();
}
};

$$.TimeGauge = {"":
 ["_isStarted", "_lib2_currentTime", "_lib2_totalTime", "_alarms", "_alarmsEnabled", "_direction", "_ratio", "_bitmap", "buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "Gauge",
 advanceTime$1: function(time) {
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time, 0, 0);
  if (this._isStarted) {
    var t1 = this.get$ratio();
    if (typeof t1 !== 'number')
      return this.advanceTime$1$bailout(2, time, t1, 0);
    t1 = t1 > 0;
  } else
    t1 = false;
  if (t1) {
    t1 = this.get$ratio();
    if (typeof t1 !== 'number')
      return this.advanceTime$1$bailout(3, time, t1, 0);
    var t3 = this.get$totalTime();
    if (typeof t3 !== 'number')
      return this.advanceTime$1$bailout(4, time, t1, t3);
    this.set$ratio(t1 - time / t3);
    t1 = this.get$ratio();
    if (typeof t1 !== 'number')
      return this.advanceTime$1$bailout(5, t1, 0, 0);
    if (t1 === 0)
      this.pause$0();
  }
  return true;
},
 advanceTime$1$bailout: function(state, env0, env1, env2) {
  switch (state) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
    case 3:
      time = env0;
      t1 = env1;
      break;
    case 4:
      time = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 5:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    case 2:
      if (state === 2 || state === 0 && this._isStarted === true)
        switch (state) {
          case 0:
            var t1 = this.get$ratio();
          case 2:
            state = 0;
            t1 = $.gtB(t1, 0);
        }
      else
        t1 = false;
    default:
      if (state === 5 || state === 4 || state === 3 || state === 0 && t1)
        switch (state) {
          case 0:
            t1 = this.get$ratio();
          case 3:
            state = 0;
            var t3 = this.get$totalTime();
          case 4:
            state = 0;
            this.set$ratio($.sub(t1, $.div(time, t3)));
            t1 = this.get$ratio();
          case 5:
            state = 0;
            if ($.eqB(t1, 0))
              this.pause$0();
        }
      return true;
  }
},
 start$0: function() {
  this._isStarted = true;
},
 pause$0: function() {
  this._isStarted = false;
},
 reset$1: function(time) {
  this.pause$0();
  time = $.max(time, 0);
  if (!(time === 0)) {
    this._lib2_totalTime = time;
    this.clearAlarms$0();
  }
  this.set$ratio(1);
},
 reset$0: function() {
  return this.reset$1(0)
},
 addAlarm$2: function(name$, restTime) {
  var t1 = this._alarms;
  var t2 = this.get$totalTime();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  $.indexSet(t1, name$, restTime / t2);
},
 clearAlarms$0: function() {
  this._alarms = $.HashMapImplementation$();
  this.addAlarm$2('TIME_OUT', 0);
},
 get$totalTime: function() {
  return this._lib2_totalTime;
},
 get$restTime: function() {
  return $.mul(this.get$ratio(), this.get$totalTime());
},
 set$ratio: function(value) {
  var oldRatio = this.get$ratio();
  $.Gauge.prototype.set$ratio.call(this, value);
  if (this._alarmsEnabled === true)
    $.forEach(this._alarms, new $.TimeGauge_ratio_anon(this, oldRatio));
},
 TimeGauge$3: function(time, bitmapData, direction) {
  if ($.leB(time, 0))
    throw $.$$throw('Time must be greater than zero');
  this._lib2_totalTime = time;
  this.clearAlarms$0();
}
};

$$._AbstractWorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._AudioContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$._BatteryManagerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._BodyElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._DOMApplicationCacheEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._DedicatedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._DocumentEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 reset$1: function(arg0) { return this.get$reset().call$1(arg0); }
};

$$.FilteredElementList = {"":
 ["_node", "_childNodes"],
 "super": "Object",
 get$_filtered: function() {
  return $.ListImplementation_List$from($.filter(this._childNodes, new $.FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  $.forEach(this.get$_filtered(), f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.CTC17);
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
},
 add$1: function(value) {
  $.add$1(this._childNodes, value);
},
 addLast$1: function(value) {
  this.add$1(value);
},
 removeRange$2: function(start, rangeLength) {
  $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $.FilteredElementList_removeRange_anon());
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC24);
},
 clear$0: function() {
  $.clear(this._childNodes);
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    result.remove$0();
  return result;
},
 filter$1: function(f) {
  return $.filter(this.get$_filtered(), f);
},
 isEmpty$0: function() {
  return $.isEmpty(this.get$_filtered());
},
 get$length: function() {
  return $.get$length(this.get$_filtered());
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  return $.iterator(this.get$_filtered());
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this.get$_filtered(), start, rangeLength);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_filtered(), element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return $.last(this.get$_filtered());
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.EmptyElementRect = {"":
 ["client", "offset", "scroll", "bounding", "clientRects"],
 "super": "Object"
};

$$._ChildrenElementList = {"":
 ["_element?", "_childElements"],
 "super": "Object",
 _toList$0: function() {
  var t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  var output = $.ListImplementation_List(t1.length);
  for (var len = t1.length, i = 0; i < len; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var t2 = t1[i];
    if (i < 0 || i >= output.length)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state, t1) {
  var output = $.ListImplementation_List($.get$length(t1));
  for (var len = $.get$length(t1), i = 0; $.ltB(i, len); ++i) {
    var t2 = $.index(t1, i);
    if (i < 0 || i >= output.length)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 forEach$1: function(f) {
  for (var t1 = $.iterator(this._childElements); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output = [];
  this.forEach$1(new $._ChildrenElementList_filter_anon(f, output));
  return $._FrozenElementList$_wrap(output);
},
 isEmpty$0: function() {
  return this._element.get$$$dom_firstElementChild() == null;
},
 get$length: function() {
  return $.get$length(this._childElements);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._element.$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.CTC16);
},
 add$1: function(value) {
  this._element.$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  return this.add$1(value);
},
 iterator$0: function() {
  return $.iterator(this._toList$0());
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($._Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  this._element.set$text('');
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._element.$dom_removeChild$1(result);
  return result;
},
 last$0: function() {
  return this._element.get$$$dom_lastElementChild();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"":
 ["_nodeList"],
 "super": "Object",
 forEach$1: function(f) {
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var out = $._ElementList$([]);
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.add$1(t2);
  }
  return out;
},
 isEmpty$0: function() {
  return $.isEmpty(this._nodeList);
},
 get$length: function() {
  return $.get$length(this._nodeList);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.CTC16);
},
 set$length: function(newLength) {
  $.set$length(this._nodeList, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.CTC16);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC16);
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC16);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC16);
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._nodeList, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  throw $.$$throw($.CTC16);
},
 removeLast$0: function() {
  throw $.$$throw($.CTC16);
},
 last$0: function() {
  return $.last(this._nodeList);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"":
 ["_list", "_index"],
 "super": "Object",
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  var t1 = this._list;
  var t2 = this._index;
  if (typeof t2 !== 'number')
    return this.next$0$bailout(1, t1, t2);
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 next$0$bailout: function(state, t1, t2) {
  this._index = $.add(t2, 1);
  return $.index(t1, t2);
},
 hasNext$0: function() {
  var t1 = this._index;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1, 0);
  var t3 = $.get$length(this._list);
  if (typeof t3 !== 'number')
    return this.hasNext$0$bailout(2, t1, t3);
  return t1 < t3;
},
 hasNext$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._index;
    case 1:
      state = 0;
      var t3 = $.get$length(this._list);
    case 2:
      state = 0;
      return $.lt(t1, t3);
  }
}
};

$$._ElementList = {"":
 ["_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  return $._ElementList$($._ListWrapper.prototype.filter$1.call(this, f));
},
 getRange$2: function(start, rangeLength) {
  return $._ElementList$($._ListWrapper.prototype.getRange$2.call(this, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._SimpleClientRect = {"":
 ["left?", "top?", "width?", "height?"],
 "super": "Object",
 get$right: function() {
  return $.add(this.left, this.width);
},
 get$bottom: function() {
  return $.add(this.top, this.height);
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.left, other.get$left()) && $.eqB(this.top, other.get$top()) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 toString$0: function() {
  return '(' + $.S(this.left) + ', ' + $.S(this.top) + ', ' + $.S(this.width) + ', ' + $.S(this.height) + ')';
}
};

$$._ElementRectImpl = {"":
 ["client", "offset", "scroll", "_boundingClientRect", "_clientRects"],
 "super": "Object"
};

$$._ElementEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 reset$1: function(arg0) { return this.get$reset().call$1(arg0); }
};

$$._EventSourceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$message: function() {
  return this.operator$index$1('message');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._EventsImpl = {"":
 ["_ptr"],
 "super": "Object",
 operator$index$1: function(type) {
  return $._EventListenerListImpl$(this._ptr, type);
}
};

$$._EventListenerListImpl = {"":
 ["_ptr", "_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._add$2(listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._remove$2(listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
},
 _add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._type, listener, useCapture);
},
 _remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._type, listener, useCapture);
}
};

$$._FileReaderEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 load$1: function(arg0) { return this.get$load().call$1(arg0); }
};

$$._FileWriterEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._FrameSetElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._HttpRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 load$1: function(arg0) { return this.get$load().call$1(arg0); }
};

$$._HttpRequestUploadEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 load$1: function(arg0) { return this.get$load().call$1(arg0); }
};

$$._IDBDatabaseEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._IDBOpenDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._IDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._IDBTransactionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); },
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._IDBVersionChangeRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._InputElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._JavaScriptAudioNodeEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$canPlayThrough: function() {
  return this.operator$index$1('canplaythrough');
},
 get$ended: function() {
  return this.operator$index$1('ended');
},
 get$pause: function() {
  return this.operator$index$1('pause');
},
 pause$0: function() { return this.get$pause().call$0(); },
 get$play: function() {
  return this.operator$index$1('play');
},
 play$0: function() { return this.get$play().call$0(); }
};

$$._MediaStreamEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$ended: function() {
  return this.operator$index$1('ended');
}
};

$$._MediaStreamTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$ended: function() {
  return this.operator$index$1('ended');
}
};

$$._MediaStreamTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MessagePortEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._ChildNodeListLazy = {"":
 ["_this"],
 "super": "Object",
 last$0: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._this.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._this.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  return $.iterator(this._this.get$$$dom_childNodes());
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot removeRange on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot insertRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 get$length: function() {
  return $.get$length(this._this.get$$$dom_childNodes());
},
 operator$index$1: function(index) {
  return $.index(this._this.get$$$dom_childNodes(), index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._ListWrapper = {"":
 [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._list);
},
 forEach$1: function(f) {
  return $.forEach(this._list, f);
},
 filter$1: function(f) {
  return $.filter(this._list, f);
},
 isEmpty$0: function() {
  return $.isEmpty(this._list);
},
 get$length: function() {
  return $.get$length(this._list);
},
 operator$index$1: function(index) {
  return $.index(this._list, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._list, newLength);
},
 add$1: function(value) {
  return $.add$1(this._list, value);
},
 addLast$1: function(value) {
  return $.addLast(this._list, value);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._list, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  return $.clear(this._list);
},
 removeLast$0: function() {
  return $.removeLast(this._list);
},
 last$0: function() {
  return $.last(this._list);
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this._list, start, rangeLength);
},
 removeRange$2: function(start, rangeLength) {
  return $.removeRange(this._list, start, rangeLength);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  return $.insertRange$3(this._list, start, rangeLength, initialValue);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"":
 ["_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  return $._NodeListWrapper$($.filter(this._list, f));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($.getRange(this._list, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NotificationEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._PeerConnection00EventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._RTCPeerConnectionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._SVGElementInstanceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 reset$1: function(arg0) { return this.get$reset().call$1(arg0); }
};

$$._SharedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl",
 get$connect: function() {
  return this.operator$index$1('connect');
},
 connect$3: function(arg0, arg1, arg2) { return this.get$connect().call$3(arg0, arg1, arg2); }
};

$$._SpeechRecognitionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$start: function() {
  return this.operator$index$1('start');
},
 start$0: function() { return this.get$start().call$0(); }
};

$$._TextTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackCueEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._WebSocketEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1('error');
},
 get$message: function() {
  return this.operator$index$1('message');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._WindowEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$canPlayThrough: function() {
  return this.operator$index$1('canplaythrough');
},
 get$ended: function() {
  return this.operator$index$1('ended');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyPress: function() {
  return this.operator$index$1('keypress');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$message: function() {
  return this.operator$index$1('message');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$pause: function() {
  return this.operator$index$1('pause');
},
 pause$0: function() { return this.get$pause().call$0(); },
 get$play: function() {
  return this.operator$index$1('play');
},
 play$0: function() { return this.get$play().call$0(); },
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 reset$1: function(arg0) { return this.get$reset().call$1(arg0); }
};

$$._WorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_AbstractWorkerEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._WorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._MeasurementRequest = {"":
 ["computeValue", "completer?", "value=", "exception="],
 "super": "Object",
 computeValue$0: function() { return this.computeValue.call$0(); }
};

$$._DOMWindowCrossFrameImpl = {"":
 ["_window"],
 "super": "Object",
 get$parent: function() {
  return $._DOMWindowCrossFrameImpl__createSafe($._DOMWindowCrossFrameImpl__parent(this._window));
},
 get$top: function() {
  return $._DOMWindowCrossFrameImpl__createSafe($._DOMWindowCrossFrameImpl__top(this._window));
},
 focus$0: function() {
  return $._DOMWindowCrossFrameImpl__focus(this._window);
},
 close$0: function() {
  return $._DOMWindowCrossFrameImpl__close(this._window);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1 = messagePorts == null;
  var t2 = this._window;
  if (t1)
    $._DOMWindowCrossFrameImpl__postMessage2(t2, message, targetOrigin);
  else
    $._DOMWindowCrossFrameImpl__postMessage3(t2, message, targetOrigin, messagePorts);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,null)
}
};

$$._FixedSizeListIterator = {"":
 ["_lib_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 hasNext$0: function() {
  var t1 = this._lib_length;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1, 0);
  var t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.hasNext$0$bailout(2, t1, t3);
  return t1 > t3;
},
 hasNext$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._lib_length;
    case 1:
      state = 0;
      var t3 = this._pos;
    case 2:
      state = 0;
      return $.gt(t1, t3);
  }
}
};

$$._VariableSizeListIterator = {"":
 [],
 "super": "Object",
 hasNext$0: function() {
  var t1 = $.get$length(this._array);
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1, 0);
  var t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.hasNext$0$bailout(2, t3, t1);
  return t1 > t3;
},
 hasNext$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env0;
      t1 = env1;
      break;
  }
  switch (state) {
    case 0:
      var t1 = $.get$length(this._array);
    case 1:
      state = 0;
      var t3 = this._pos;
    case 2:
      state = 0;
      return $.gt(t1, t3);
  }
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  var t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1, 0);
  var t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t1, t3);
  this._pos = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      if (this.hasNext$0() !== true)
        throw $.$$throw($.CTC2);
      var t1 = this._array;
    case 1:
      state = 0;
      var t3 = this._pos;
    case 2:
      state = 0;
      this._pos = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$._Manager = {"":
 ["nextIsolateId=", "currentManagerId?", "nextManagerId", "currentContext=", "rootContext=", "topEventLoop?", "fromCommandLine?", "isWorker?", "supportsWorkers", "isolates?", "mainManager?", "managers?"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
    this.isWorker = $isWorker;
    this.supportsWorkers = $supportsWorkers;
    this.fromCommandLine = typeof(window) == 'undefined';
  
},
 _nativeInitWorkerMessageHandler$0: function() {
    $globalThis.onmessage = function (e) {
      _IsolateNatives._processWorkerMessage(this.mainManager, e);
    }
  
},
 maybeCloseWorker$0: function() {
  if ($.isEmpty(this.isolates) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'close'])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.HashMapImplementation$();
  this.managers = $.HashMapImplementation$();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"":
 ["id?", "ports?", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
$initGlobals(this);
},
 eval$1: function(code) {
  var old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  var result = null;
  try {
    result = code.call$0();
  } finally {
    var t1 = old;
    $._globalState().set$currentContext(t1);
    t1 = old;
    if (!(t1 == null))
      t1._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
$setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  var t1 = this.ports;
  if (t1.containsKey$1(portId) === true)
    throw $.$$throw($.ExceptionImplementation$('Registry: ports must be registered only once.'));
  $.indexSet(t1, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  var t1 = this.ports;
  t1.remove$1(portId);
  if ($.isEmpty(t1) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1 = $._globalState();
  var t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.HashMapImplementation$();
  this.initGlobals$0();
}
};

$$._EventLoop = {"":
 ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else if (!($._globalState().get$rootContext() == null) && $._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true && $._globalState().get$fromCommandLine() === true && $.isEmpty($._globalState().get$rootContext().get$ports()) === true)
      throw $.$$throw($.ExceptionImplementation$('Program exited with open ReceivePorts.'));
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function() {
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      var t1 = $.unwrapException(exception);
      var e = t1;
      var trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'error', 'msg', $.S(e) + '\n' + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"":
 ["isolate", "fn", "message?"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"":
 [],
 "super": "Object",
 get$id: function() {
  return 0;
},
 postMessage$1: function(msg) {
$globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"":
 ["_isolateId?"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($.ExceptionImplementation$('SendPort.send: Illegal replyTo port type'));
},
 call$1: function(message) {
  var completer = $.CompleterImpl$();
  var port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(port, completer));
  return completer.get$future();
},
 is$SendPort: true
};

$$._NativeJsSendPort = {"":
 ["_receivePort?", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(message, this, replyTo));
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
},
 hashCode$0: function() {
  return this._receivePort.get$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"":
 ["_workerId?", "_receivePortId", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(message, this, replyTo));
},
 operator$eq$1: function(other) {
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    var t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 hashCode$0: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"":
 ["_id?", "_callback?"],
 "super": "Object",
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._callback = onMessage;
},
 close$0: function() {
  this._callback = null;
  $._globalState().get$currentContext().unregister$1(this._id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._id, this);
}
};

$$._PendingSendPortFinder = {"":
 ["ports?", "_visited"],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  var t1 = this._visited;
  if (!($.index(t1, list) == null))
    return;
  $.indexSet(t1, list, true);
  $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  var t1 = this._visited;
  if (!($.index(t1, map) == null))
    return;
  $.indexSet(t1, map, true);
  $.forEach(map.getValues$0(), new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  if (!!port.is$_BufferingSendPort && port._port == null)
    this.ports.push(port.get$_futurePort());
},
 _PendingSendPortFinder$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsSerializer = {"":
 ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ['sendport', $._globalState().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
},
 visitWorkerSendPort$1: function(port) {
  return ['sendport', port._workerId, port._isolateId, port._receivePortId];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsSerializer$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"":
 ["_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._receivePort, port._isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsCopier$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer = {"":
 ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var managerId = $.index(x, 1);
  var isolateId = $.index(x, 2);
  var receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    var isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"":
 ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return this._getAttachedInfo$1(object);
},
 operator$indexSet$2: function(object, info) {
  $.add$1(this.tagged, object);
  this._setAttachedInfo$2(object, info);
},
 reset$0: function() {
  this.tagged = $.ListImplementation_List(null);
},
 cleanup$0: function() {
  var length$ = $.get$length(this.tagged);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  var i = 0;
  for (; i < length$; ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 cleanup$0$bailout: function(state, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 _clearAttachedInfo$1: function(o) {
o['__MessageTraverser__attached_info__'] = (void 0);
},
 _setAttachedInfo$2: function(o, info) {
o['__MessageTraverser__attached_info__'] = info;
},
 _getAttachedInfo$1: function(o) {
return o['__MessageTraverser__attached_info__'];
}
};

$$._MessageTraverserVisitedMap = {"":
 [],
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"":
 [],
 "super": "Object",
 traverse$1: function(x) {
  if ($._MessageTraverser_isPrimitive(x))
    return this.visitPrimitive$1(x);
  var t1 = this._visited;
  t1.reset$0();
  var result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    t1.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if ($._MessageTraverser_isPrimitive(x))
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw('Message serialization: Illegal value ' + $.S(x) + ' passed');
}
};

$$._Copier = {"":
 [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  var t1 = this._visited;
  var copy = t1.operator$index$1(list);
  if (!(copy == null))
    return copy;
  var len = list.length;
  copy = $.ListImplementation_List(len);
  t1.operator$indexSet$2(list, copy);
  for (var i = 0; i < len; ++i) {
    if (i < 0 || i >= list.length)
      throw $.ioore(i);
    t1 = this._dispatch$1(list[i]);
    if (i < 0 || i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitList$1$bailout: function(state, list) {
  var t1 = this._visited;
  var copy = $.index(t1, list);
  if (!(copy == null))
    return copy;
  var len = $.get$length(list);
  copy = $.ListImplementation_List(len);
  $.indexSet(t1, list, copy);
  for (var i = 0; $.ltB(i, len); ++i) {
    t1 = this._dispatch$1($.index(list, i));
    if (i < 0 || i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitMap$1: function(map) {
  var t1 = {};
  var t2 = this._visited;
  t1.copy_10 = $.index(t2, map);
  var t3 = t1.copy_10;
  if (!(t3 == null))
    return t3;
  t1.copy_10 = $.HashMapImplementation$();
  $.indexSet(t2, map, t1.copy_10);
  map.forEach$1(new $._Copier_visitMap_anon(this, t1));
  return t1.copy_10;
}
};

$$._Serializer = {"":
 [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var t1 = this._visited;
  var copyId = $.index(t1, list);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(t1, list, id);
  return ['list', id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var t1 = this._visited;
  var copyId = $.index(t1, map);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(t1, map, id);
  return ['map', id, this._serializeList$1(map.getKeys$0()), this._serializeList$1(map.getValues$0())];
},
 _serializeList$1: function(list) {
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  var len = list.length;
  var result = $.ListImplementation_List(len);
  for (var i = 0; i < len; ++i) {
    if (i < 0 || i >= list.length)
      throw $.ioore(i);
    var t1 = this._dispatch$1(list[i]);
    if (i < 0 || i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
},
 _serializeList$1$bailout: function(state, list) {
  var len = $.get$length(list);
  var result = $.ListImplementation_List(len);
  for (var i = 0; $.ltB(i, len); ++i) {
    var t1 = this._dispatch$1($.index(list, i));
    if (i < 0 || i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
}
};

$$._Deserializer = {"":
 [],
 "super": "Object",
 deserialize$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  this._deserialized = $.HashMapImplementation$();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  switch ($.index(x, 0)) {
    case 'ref':
      return this._deserializeRef$1(x);
    case 'list':
      return this._deserializeList$1(x);
    case 'map':
      return this._deserializeMap$1(x);
    case 'sendport':
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id = $.index(x, 1);
  var dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  var len = dartList.length;
  for (var i = 0; i < len; ++i) {
    if (i < 0 || i >= dartList.length)
      throw $.ioore(i);
    var t1 = this._deserializeHelper$1(dartList[i]);
    if (i < 0 || i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state, dartList, id) {
  $.indexSet(this._deserialized, id, dartList);
  var len = $.get$length(dartList);
  for (var i = 0; $.ltB(i, len); ++i)
    $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
  return dartList;
},
 _deserializeMap$1: function(x) {
  var result = $.HashMapImplementation$();
  var id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  var keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  var values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  var len = keys.length;
  for (var i = 0; i < len; ++i) {
    if (i < 0 || i >= keys.length)
      throw $.ioore(i);
    var key = this._deserializeHelper$1(keys[i]);
    if (i < 0 || i >= values.length)
      throw $.ioore(i);
    result.operator$indexSet$2(key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state, env0, env1, env2) {
  switch (state) {
    case 1:
      var x = env0;
      result = env1;
      keys = env2;
      break;
    case 2:
      values = env0;
      result = env1;
      keys = env2;
      break;
  }
  switch (state) {
    case 0:
      var result = $.HashMapImplementation$();
      var id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      var keys = $.index(x, 2);
    case 1:
      state = 0;
      var values = $.index(x, 3);
    case 2:
      state = 0;
      var len = $.get$length(keys);
      for (var i = 0; $.ltB(i, len); ++i)
        result.operator$indexSet$2(this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw('Unexpected serialized object');
}
};

$$._Timer = {"":
 ["_once", "_handle"],
 "super": "Object",
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window().setInterval$2(new $.anon11(this, callback), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window().setTimeout$2(new $.anon10(this, callback), milliSeconds);
}
};

$$._Random = {"":
 [],
 "super": "Object",
 nextInt$1: function(max) {
  if (typeof max !== 'number')
    return this.nextInt$1$bailout(1, max);
  if (max < 0)
    throw $.$$throw($.IllegalArgumentException$('negative max: ' + $.S(max)));
  if (max > 4294967295)
    max = 4294967295;
  return (Math.random() * max) >>> 0;
},
 nextInt$1$bailout: function(state, max) {
  if ($.ltB(max, 0))
    throw $.$$throw($.IllegalArgumentException$('negative max: ' + $.S(max)));
  if ($.gtB(max, 4294967295))
    max = 4294967295;
  return (Math.random() * max) >>> 0;
},
 nextDouble$0: function() {
  return Math.random();
}
};

$$._JsonParser = {"":
 ["json", "length?", "position"],
 "super": "Object",
 parseToplevel$0: function() {
  var result = this.parseValue$0();
  if (!(this.token$0() == null))
    this.error$1('Junk at the end of JSON input');
  return result;
},
 parseValue$0: function() {
  var token = this.token$0();
  if (token == null)
    this.error$1('Nothing to parse');
  switch (token) {
    case 34:
      return this.parseString$0();
    case 45:
      return this.parseNumber$0();
    case 110:
      return this.expectKeyword$2('null', null);
    case 102:
      return this.expectKeyword$2('false', false);
    case 116:
      return this.expectKeyword$2('true', true);
    case 123:
      return this.parseObject$0();
    case 91:
      return this.parseList$0();
    default:
      this.error$1('Unexpected token');
  }
},
 expectKeyword$2: function(word, value) {
  for (var t1 = word.length, i = 0; i < t1; ++i) {
    if (!$.eqB(this.char$0(), $.charCodeAt(word, i)))
      this.error$1('Expected keyword \'' + word + '\'');
    this.position = $.add(this.position, 1);
  }
  return value;
},
 parseObject$0: function() {
  var object = $.makeLiteralMap([]);
  if (typeof object !== 'object' || object === null || (object.constructor !== Array || !!object.immutable$list) && !object.is$JavaScriptIndexingBehavior())
    return this.parseObject$0$bailout(1, object);
  this.position = $.add(this.position, 1);
  if (this.isToken$1(125) !== true) {
    for (; true;) {
      var key = this.parseString$0();
      if (this.isToken$1(58) !== true)
        this.error$1('Expected \':\' when parsing object');
      this.position = $.add(this.position, 1);
      var t1 = this.parseValue$0();
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= object.length)
        throw $.ioore(key);
      object[key] = t1;
      if (this.isToken$1(44) !== true)
        break;
      this.position = $.add(this.position, 1);
    }
    if (this.isToken$1(125) !== true)
      this.error$1('Expected \'}\' at end of object');
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseObject$0$bailout: function(state, object) {
  this.position = $.add(this.position, 1);
  if (this.isToken$1(125) !== true) {
    for (; true;) {
      var key = this.parseString$0();
      if (this.isToken$1(58) !== true)
        this.error$1('Expected \':\' when parsing object');
      this.position = $.add(this.position, 1);
      $.indexSet(object, key, this.parseValue$0());
      if (this.isToken$1(44) !== true)
        break;
      this.position = $.add(this.position, 1);
    }
    if (this.isToken$1(125) !== true)
      this.error$1('Expected \'}\' at end of object');
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseList$0: function() {
  var list = [];
  this.position = $.add(this.position, 1);
  if (this.isToken$1(93) !== true) {
    for (; true;) {
      list.push(this.parseValue$0());
      if (this.isToken$1(44) !== true)
        break;
      this.position = $.add(this.position, 1);
    }
    if (this.isToken$1(93) !== true)
      this.error$1('Expected \']\' at end of list');
  }
  this.position = $.add(this.position, 1);
  return list;
},
 parseString$0: function() {
  if (this.isToken$1(34) !== true)
    this.error$1('Expected string literal');
  this.position = $.add(this.position, 1);
  var charCodes = $.ListImplementation_List(null);
  for (var t1 = this.json; true;) {
    var c = this.char$0();
    if ($.eqB(c, 34)) {
      this.position = $.add(this.position, 1);
      break;
    }
    if ($.eqB(c, 92)) {
      this.position = $.add(this.position, 1);
      if ($.eqB(this.position, $.get$length(this)))
        this.error$1('\\ at the end of input');
      switch (this.char$0()) {
        case 34:
          c = 34;
          break;
        case 92:
          c = 92;
          break;
        case 47:
          c = 47;
          break;
        case 98:
          c = 8;
          break;
        case 110:
          c = 10;
          break;
        case 114:
          c = 13;
          break;
        case 102:
          c = 12;
          break;
        case 116:
          c = 9;
          break;
        case 117:
          if ($.gtB($.add(this.position, 5), $.get$length(this)))
            this.error$1('Invalid unicode esacape sequence');
          var codeString = $.substring$2(t1, $.add(this.position, 1), $.add(this.position, 5));
          try {
            c = $.int_parse('0x' + $.S(codeString));
          } catch (exception) {
            $.unwrapException(exception);
            this.error$1('Invalid unicode esacape sequence');
          }

          this.position = $.add(this.position, 4);
          break;
        default:
          this.error$1('Invalid esacape sequence in string literal');
      }
    }
    charCodes.push(c);
    this.position = $.add(this.position, 1);
  }
  return $.StringImplementation_String$fromCharCodes(charCodes);
},
 parseNumber$0: function() {
  if (this.isToken$1(45) !== true)
    this.error$1('Expected number literal');
  var startPos = this.position;
  var char$ = this.char$0();
  if (char$ === 45)
    char$ = this.nextChar$0();
  if (char$ === 48)
    char$ = this.nextChar$0();
  else if (this.isDigit$1(char$) === true) {
    char$ = this.nextChar$0();
    for (; this.isDigit$1(char$) === true;)
      char$ = this.nextChar$0();
  } else
    this.error$1('Expected digit when parsing number');
  if (char$ === 46) {
    char$ = this.nextChar$0();
    if (this.isDigit$1(char$) === true) {
      char$ = this.nextChar$0();
      for (; this.isDigit$1(char$) === true;)
        char$ = this.nextChar$0();
      var isInt = false;
    } else {
      this.error$1('Expected digit following comma');
      isInt = true;
    }
  } else
    isInt = true;
  if (char$ === 101 || char$ === 69) {
    char$ = this.nextChar$0();
    if (char$ === 45 || char$ === 43)
      char$ = this.nextChar$0();
    if (this.isDigit$1(char$) === true) {
      char$ = this.nextChar$0();
      for (; this.isDigit$1(char$) === true;)
        char$ = this.nextChar$0();
      isInt = false;
    } else
      this.error$1('Expected digit following \'e\' or \'E\'');
  }
  var number = $.substring$2(this.json, startPos, this.position);
  if (isInt)
    return $.int_parse(number);
  else
    return $.double_parse(number);
},
 isDigit$1: function(char$) {
  if (typeof char$ !== 'number')
    return this.isDigit$1$bailout(1, char$);
  return char$ >= 48 && char$ <= 57;
},
 isDigit$1$bailout: function(state, char$) {
  return $.geB(char$, 48) && $.leB(char$, 57);
},
 isToken$1: function(tokenKind) {
  var t1 = this.token$0();
  if (typeof t1 !== 'number')
    return this.isToken$1$bailout(1, tokenKind, t1);
  return t1 === tokenKind;
},
 isToken$1$bailout: function(state, tokenKind, t1) {
  return $.eq(t1, tokenKind);
},
 char$0: function() {
  var t1 = this.position;
  if (typeof t1 !== 'number')
    return this.char$0$bailout(1, t1, 0);
  var t3 = $.get$length(this);
  if (typeof t3 !== 'number')
    return this.char$0$bailout(2, t1, t3);
  if (t1 >= t3)
    this.error$1('Unexpected end of JSON stream');
  return $.charCodeAt(this.json, this.position);
},
 char$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this.position;
    case 1:
      state = 0;
      var t3 = $.get$length(this);
    case 2:
      state = 0;
      if ($.geB(t1, t3))
        this.error$1('Unexpected end of JSON stream');
      return $.charCodeAt(this.json, this.position);
  }
},
 nextChar$0: function() {
  var t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(1, t1, 0);
  this.position = t1 + 1;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(2, t1, 0);
  var t3 = $.get$length(this);
  if (typeof t3 !== 'number')
    return this.nextChar$0$bailout(3, t1, t3);
  if (t1 >= t3)
    return 0;
  return $.charCodeAt(this.json, this.position);
},
 nextChar$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this.position;
    case 1:
      state = 0;
      this.position = $.add(t1, 1);
      t1 = this.position;
    case 2:
      state = 0;
      var t3 = $.get$length(this);
    case 3:
      state = 0;
      if ($.geB(t1, t3))
        return 0;
      return $.charCodeAt(this.json, this.position);
  }
},
 token$0: function() {
  for (var t1 = this.json; true;) {
    if ($.geB(this.position, $.get$length(this)))
      return;
    var char$ = $.charCodeAt(t1, this.position);
    var token = $.index($._JsonParser_tokens, char$);
    if (token === 32) {
      this.position = $.add(this.position, 1);
      continue;
    }
    if (token == null)
      return 0;
    return token;
  }
},
 error$1: function(message) {
  throw $.$$throw(message);
},
 get$error: function() { return new $.BoundClosure(this, 'error$1'); },
 _JsonParser$1: function(json) {
  if (!($._JsonParser_tokens == null))
    return;
  $._JsonParser_tokens = $.ListImplementation_List(126);
  $.indexSet($._JsonParser_tokens, 9, 32);
  $.indexSet($._JsonParser_tokens, 10, 32);
  $.indexSet($._JsonParser_tokens, 13, 32);
  $.indexSet($._JsonParser_tokens, 32, 32);
  $.indexSet($._JsonParser_tokens, 48, 45);
  $.indexSet($._JsonParser_tokens, 49, 45);
  $.indexSet($._JsonParser_tokens, 50, 45);
  $.indexSet($._JsonParser_tokens, 51, 45);
  $.indexSet($._JsonParser_tokens, 52, 45);
  $.indexSet($._JsonParser_tokens, 53, 45);
  $.indexSet($._JsonParser_tokens, 54, 45);
  $.indexSet($._JsonParser_tokens, 55, 45);
  $.indexSet($._JsonParser_tokens, 56, 45);
  $.indexSet($._JsonParser_tokens, 57, 45);
  $.indexSet($._JsonParser_tokens, 45, 45);
  $.indexSet($._JsonParser_tokens, 123, 123);
  $.indexSet($._JsonParser_tokens, 125, 125);
  $.indexSet($._JsonParser_tokens, 91, 91);
  $.indexSet($._JsonParser_tokens, 93, 93);
  $.indexSet($._JsonParser_tokens, 34, 34);
  $.indexSet($._JsonParser_tokens, 58, 58);
  $.indexSet($._JsonParser_tokens, 44, 44);
  $.indexSet($._JsonParser_tokens, 110, 110);
  $.indexSet($._JsonParser_tokens, 116, 116);
  $.indexSet($._JsonParser_tokens, 102, 102);
}
};

$$.DelayedCall = {"":
 ["_currentTime", "_totalTime", "_repeatCount", "_action"],
 "super": "Object",
 _action$0: function() { return this._action.call$0(); },
 advanceTime$1: function(time) {
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time, 0, 0);
  var t1 = this._currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(2, time, t1, 0);
  var newTime = t1 + time;
  t1 = this._totalTime;
  while (true) {
    if (newTime >= t1) {
      var t2 = this._repeatCount;
      if (typeof t2 !== 'number')
        return this.advanceTime$1$bailout(3, newTime, t1, t2);
      t2 = t2 > 0;
    } else
      t2 = false;
    if (!t2)
      break;
    this._currentTime = t1;
    t2 = this._repeatCount;
    if (typeof t2 !== 'number')
      return this.advanceTime$1$bailout(4, newTime, t2, t1);
    this._repeatCount = t2 - 1;
    this._action$0();
    newTime -= t1;
  }
  t1 = this._repeatCount;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(5, newTime, t1, 0);
  if (t1 === 0)
    return false;
  this._currentTime = newTime;
  return true;
},
 advanceTime$1$bailout: function(state, env0, env1, env2) {
  switch (state) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
    case 3:
      newTime = env0;
      t1 = env1;
      t2 = env2;
      break;
    case 4:
      newTime = env0;
      t2 = env1;
      t1 = env2;
      break;
    case 5:
      newTime = env0;
      t1 = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._currentTime;
    case 2:
      state = 0;
      var newTime = $.add(t1, time);
      t1 = this._totalTime;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
            case 3:
              if (state === 3 || state === 0 && $.geB(newTime, t1))
                switch (state) {
                  case 0:
                    var t2 = this._repeatCount;
                  case 3:
                    state = 0;
                    t2 = $.gtB(t2, 0);
                }
              else
                t2 = false;
              if (!t2)
                break L0;
              this._currentTime = t1;
              t2 = this._repeatCount;
            case 4:
              state = 0;
              this._repeatCount = $.sub(t2, 1);
              this._action$0();
              newTime = $.sub(newTime, t1);
          }
      t1 = this._repeatCount;
    case 5:
      state = 0;
      if ($.eqB(t1, 0))
        return false;
      this._currentTime = newTime;
      return true;
  }
},
 get$currentTime: function() {
  return this._currentTime;
},
 DelayedCall$2: function(action, delay) {
  this._action = action;
  this._totalTime = $.max(delay, 0.0001);
}
};

$$.Juggler = {"":
 ["_animatables", "_animatablesCount", "_elapsedTime"],
 "super": "Object",
 add$1: function(animatable) {
  if (animatable == null)
    return;
  var t1 = this._animatablesCount;
  var t2 = this._animatables;
  if ($.geB(t1, t2.length))
    t2.push(animatable);
  else {
    t1 = this._animatablesCount;
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= t2.length)
      throw $.ioore(t1);
    t2[t1] = animatable;
  }
  this._animatablesCount = $.add(this._animatablesCount, 1);
},
 remove$1: function(animatable) {
  if (animatable == null)
    return;
  for (var t1 = this._animatables, i = 0; $.ltB(i, this._animatablesCount); ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    if ($.eqB(t1[i], animatable)) {
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      t1[i] = null;
    }
  }
},
 delayCall$2: function(action, delay) {
  var delayedCall = $.DelayedCall$(action, delay);
  this.add$1(delayedCall);
  return delayedCall;
},
 advanceTime$1: function(time) {
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time, 0, 0, 0);
  var t1 = this._elapsedTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(2, time, t1, 0, 0);
  this._elapsedTime = t1 + time;
  var animatablesCount = this._animatablesCount;
  if (typeof animatablesCount !== 'number')
    return this.advanceTime$1$bailout(3, time, animatablesCount, 0, 0);
  for (var t1 = this._animatables, i = 0, c = 0; i < animatablesCount; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var animatable = t1[i];
    if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
      if (!(c === i)) {
        if (c < 0 || c >= t1.length)
          throw $.ioore(c);
        t1[c] = animatable;
      }
      ++c;
    }
  }
  i = animatablesCount;
  while (true) {
    var t2 = this._animatablesCount;
    if (typeof t2 !== 'number')
      return this.advanceTime$1$bailout(4, t2, c, t1, i);
    if (!(i < t2))
      break;
    var c0 = c + 1;
    if (i !== (i | 0))
      throw $.iae(i);
    t2 = t1.length;
    if (i < 0 || i >= t2)
      throw $.ioore(i);
    var t3 = t1[i];
    if (c < 0 || c >= t2)
      throw $.ioore(c);
    t1[c] = t3;
    c = c0;
    ++i;
  }
  i = c;
  while (true) {
    t2 = this._animatablesCount;
    if (typeof t2 !== 'number')
      return this.advanceTime$1$bailout(5, c, t1, t2, i);
    if (!(i < t2))
      break;
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    t1[i] = null;
    ++i;
  }
  this._animatablesCount = c;
  return true;
},
 advanceTime$1$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
    case 3:
      time = env0;
      animatablesCount = env1;
      break;
    case 4:
      t2 = env0;
      c = env1;
      t1 = env2;
      i = env3;
      break;
    case 5:
      c = env0;
      t1 = env1;
      t2 = env2;
      i = env3;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._elapsedTime;
    case 2:
      state = 0;
      this._elapsedTime = $.add(t1, time);
      var animatablesCount = this._animatablesCount;
    case 3:
      state = 0;
      for (var t1 = this._animatables, i = 0, c = 0; $.ltB(i, animatablesCount); ++i) {
        if (i < 0 || i >= t1.length)
          throw $.ioore(i);
        var animatable = t1[i];
        if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
          if (!(c === i)) {
            if (c < 0 || c >= t1.length)
              throw $.ioore(c);
            t1[c] = animatable;
          }
          ++c;
        }
      }
      i = animatablesCount;
    case 4:
      L0:
        while (true)
          switch (state) {
            case 0:
              var t2 = this._animatablesCount;
            case 4:
              state = 0;
              if (!$.ltB(i, t2))
                break L0;
              var c0 = c + 1;
              if (i !== (i | 0))
                throw $.iae(i);
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              t2 = t1[i];
              if (c < 0 || c >= t1.length)
                throw $.ioore(c);
              t1[c] = t2;
              c = c0;
              i = $.add(i, 1);
          }
      i = c;
    case 5:
      L1:
        while (true)
          switch (state) {
            case 0:
              t2 = this._animatablesCount;
            case 5:
              state = 0;
              if (!$.ltB(i, t2))
                break L1;
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              t1[i] = null;
              ++i;
          }
      this._animatablesCount = c;
      return true;
  }
},
 Juggler$0: function() {
  this._elapsedTime = 0;
  this._animatables = $.ListImplementation_List(null);
  this._animatablesCount = 0;
}
};

$$._AnimateProperty = {"":
 ["name?", "startValue=", "targetValue?"],
 "super": "Object"
};

$$._AnimateValue = {"":
 ["tweenFunction", "startValue=", "targetValue?"],
 "super": "Object",
 tweenFunction$1: function(arg0) { return this.tweenFunction.call$1(arg0); }
};

$$.Tween = {"":
 ["_target!", "_transitionFunction", "_animateProperties", "_animateValues", "_onStart", "_onUpdate", "_onComplete", "_totalTime", "_currentTime", "_delay", "_roundToInt", "_started"],
 "super": "Object",
 _transitionFunction$1: function(arg0) { return this._transitionFunction.call$1(arg0); },
 _onStart$0: function() { return this._onStart.call$0(); },
 _onUpdate$0: function() { return this._onUpdate.call$0(); },
 _onComplete$0: function() { return this._onComplete.call$0(); },
 animate$2: function(property, targetValue) {
  if (!(this._target == null) && this._started === false)
    this._animateProperties.push($._AnimateProperty$(property, 0, targetValue));
},
 animateValue$3: function(tweenFunction, startValue, targetValue) {
  if (this._started === false)
    this._animateValues.push($._AnimateValue$(tweenFunction, startValue, targetValue));
},
 moveTo$2: function(x, y) {
  this.animate$2('x', x);
  this.animate$2('y', y);
},
 advanceTime$1: function(time) {
  if (typeof time !== 'number')
    return this.advanceTime$1$bailout(1, time, 0, 0, 0, 0, 0, 0, 0);
  var t1 = this._currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(2, time, t1, 0, 0, 0, 0, 0, 0);
  var t3 = this._totalTime;
  if (typeof t3 !== 'number')
    return this.advanceTime$1$bailout(3, time, t1, t3, 0, 0, 0, 0, 0);
  if (t1 < t3 || !this._started) {
    this._currentTime = t1 + time;
    t1 = this._currentTime;
    if (typeof t1 !== 'number')
      return this.advanceTime$1$bailout(5, t1, t3, 0, 0, 0, 0, 0, 0);
    if (t1 > t3)
      this._currentTime = t3;
    t1 = this._currentTime;
    if (typeof t1 !== 'number')
      return this.advanceTime$1$bailout(6, t1, t3, 0, 0, 0, 0, 0, 0);
    if (t1 >= 0) {
      if (!this._started) {
        this._started = true;
        for (var t1 = this._animateProperties, i = 0; t2 = t1.length, i < t2; ++i) {
          if (i < 0 || i >= t2)
            throw $.ioore(i);
          var ap = t1[i];
          ap.set$startValue(this._getPropertyValue$2(this._target, ap.get$name()));
        }
        if (!(this._onStart == null))
          this._onStart$0();
      }
      t1 = this._currentTime;
      if (typeof t1 !== 'number')
        return this.advanceTime$1$bailout(7, t1, t3, 0, 0, 0, 0, 0, 0);
      var transition = this._transitionFunction$1(t1 / t3);
      if (typeof transition !== 'number')
        return this.advanceTime$1$bailout(8, transition, t3, 0, 0, 0, 0, 0, 0);
      for (t1 = this._animateProperties, t2 = this._roundToInt, i = 0; t4 = t1.length, i < t4; ++i) {
        if (i < 0 || i >= t4)
          throw $.ioore(i);
        ap = t1[i];
        var t5 = ap.get$startValue();
        if (typeof t5 !== 'number')
          return this.advanceTime$1$bailout(9, transition, t2, ap, t5, t1, i, t3, 0);
        var t7 = ap.get$targetValue();
        if (typeof t7 !== 'number')
          return this.advanceTime$1$bailout(10, transition, t2, ap, t5, t7, i, t1, t3);
        var value = t5 + transition * (t7 - t5);
        t5 = this._target;
        var t9 = ap.get$name();
        if (t2) {
          var t4 = $.round(value);
          if (typeof t4 !== 'number')
            return this.advanceTime$1$bailout(11, t9, transition, t2, t4, t1, i, t5, t3);
        } else
          t4 = value;
        this._setPropertyValue$3(t5, t9, t4);
      }
      for (t1 = this._animateValues, i = 0; t4 = t1.length, i < t4; ++i) {
        if (i < 0 || i >= t4)
          throw $.ioore(i);
        var av = t1[i];
        t5 = av.get$startValue();
        if (typeof t5 !== 'number')
          return this.advanceTime$1$bailout(12, transition, t2, av, t5, i, t1, t3, 0);
        t7 = av.get$targetValue();
        if (typeof t7 !== 'number')
          return this.advanceTime$1$bailout(13, transition, t2, av, t5, t7, i, t1, t3);
        value = t5 + transition * (t7 - t5);
        if (t2) {
          t4 = $.round(value);
          if (typeof t4 !== 'number')
            return this.advanceTime$1$bailout(14, transition, t2, t4, av, i, t1, t3, 0);
        } else
          t4 = value;
        av.tweenFunction$1(t4);
      }
      if (!(this._onUpdate == null))
        this._onUpdate$0();
      if (!(this._onComplete == null)) {
        t1 = this._currentTime;
        if (typeof t1 !== 'number')
          return this.advanceTime$1$bailout(15, t3, t1, 0, 0, 0, 0, 0, 0);
        t1 = t1 === t3;
      } else
        t1 = false;
      if (t1)
        this._onComplete$0();
    }
  }
  t1 = this._currentTime;
  if (typeof t1 !== 'number')
    return this.advanceTime$1$bailout(16, t1, t3, 0, 0, 0, 0, 0, 0);
  return t1 < t3;
  var t2;
},
 advanceTime$1$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
    case 3:
      time = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 4:
      time = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 5:
      t1 = env0;
      t3 = env1;
      break;
    case 6:
      t1 = env0;
      t3 = env1;
      break;
    case 7:
      t1 = env0;
      t3 = env1;
      break;
    case 8:
      transition = env0;
      t3 = env1;
      break;
    case 9:
      transition = env0;
      t2 = env1;
      ap = env2;
      t4 = env3;
      t1 = env4;
      i = env5;
      t3 = env6;
      break;
    case 10:
      transition = env0;
      t2 = env1;
      ap = env2;
      t4 = env3;
      t6 = env4;
      i = env5;
      t1 = env6;
      t3 = env7;
      break;
    case 11:
      t8 = env0;
      transition = env1;
      t2 = env2;
      t5 = env3;
      t1 = env4;
      i = env5;
      t4 = env6;
      t3 = env7;
      break;
    case 12:
      transition = env0;
      t2 = env1;
      av = env2;
      t4 = env3;
      i = env4;
      t1 = env5;
      t3 = env6;
      break;
    case 13:
      transition = env0;
      t2 = env1;
      av = env2;
      t4 = env3;
      t6 = env4;
      i = env5;
      t1 = env6;
      t3 = env7;
      break;
    case 14:
      transition = env0;
      t2 = env1;
      t4 = env2;
      av = env3;
      i = env4;
      t1 = env5;
      t3 = env6;
      break;
    case 15:
      t3 = env0;
      t1 = env1;
      break;
    case 16:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._currentTime;
    case 2:
      state = 0;
      var t3 = this._totalTime;
    case 3:
      state = 0;
    default:
      if (state === 15 || state === 14 || state === 13 || state === 12 || state === 11 || state === 10 || state === 9 || state === 8 || state === 7 || state === 6 || state === 5 || state === 4 || state === 0 && ($.ltB(t1, t3) || this._started === false))
        switch (state) {
          case 0:
            t1 = this._currentTime;
          case 4:
            state = 0;
            this._currentTime = $.add(t1, time);
            t1 = this._currentTime;
          case 5:
            state = 0;
            if ($.gtB(t1, t3))
              this._currentTime = t3;
            t1 = this._currentTime;
          case 6:
            state = 0;
          default:
            if (state === 15 || state === 14 || state === 13 || state === 12 || state === 11 || state === 10 || state === 9 || state === 8 || state === 7 || state === 0 && $.geB(t1, 0))
              switch (state) {
                case 0:
                  if (this._started === false) {
                    this._started = true;
                    for (var t1 = this._animateProperties, i = 0; i < t1.length; ++i) {
                      if (i < 0 || i >= t1.length)
                        throw $.ioore(i);
                      var ap = t1[i];
                      ap.set$startValue(this._getPropertyValue$2(this._target, ap.get$name()));
                    }
                    if (!(this._onStart == null))
                      this._onStart$0();
                  }
                  t1 = this._currentTime;
                case 7:
                  state = 0;
                  var transition = this._transitionFunction$1($.div(t1, t3));
                case 8:
                  state = 0;
                  t1 = this._animateProperties;
                  var t2 = this._roundToInt === true;
                  i = 0;
                default:
                  L0:
                    while (true)
                      switch (state) {
                        case 0:
                          if (!(i < t1.length))
                            break L0;
                          if (i < 0 || i >= t1.length)
                            throw $.ioore(i);
                          ap = t1[i];
                          var t4 = ap.get$startValue();
                        case 9:
                          state = 0;
                          var t6 = ap.get$targetValue();
                        case 10:
                          state = 0;
                          var value = $.add(t4, $.mul(transition, $.sub(t6, t4)));
                          t4 = this._target;
                          var t8 = ap.get$name();
                        case 11:
                          if (state === 11 || state === 0 && t2)
                            switch (state) {
                              case 0:
                                var t5 = $.round(value);
                              case 11:
                                state = 0;
                            }
                          else
                            t5 = value;
                          this._setPropertyValue$3(t4, t8, t5);
                          ++i;
                      }
                  t1 = this._animateValues;
                  i = 0;
                case 12:
                case 13:
                case 14:
                  L1:
                    while (true)
                      switch (state) {
                        case 0:
                          if (!(i < t1.length))
                            break L1;
                          if (i < 0 || i >= t1.length)
                            throw $.ioore(i);
                          var av = t1[i];
                          t4 = av.get$startValue();
                        case 12:
                          state = 0;
                          t6 = av.get$targetValue();
                        case 13:
                          state = 0;
                          value = $.add(t4, $.mul(transition, $.sub(t6, t4)));
                        case 14:
                          if (state === 14 || state === 0 && t2)
                            switch (state) {
                              case 0:
                                t4 = $.round(value);
                              case 14:
                                state = 0;
                            }
                          else
                            t4 = value;
                          av.tweenFunction$1(t4);
                          ++i;
                      }
                  if (!(this._onUpdate == null))
                    this._onUpdate$0();
                case 15:
                  if (state === 15 || state === 0 && !(this._onComplete == null))
                    switch (state) {
                      case 0:
                        t1 = this._currentTime;
                      case 15:
                        state = 0;
                        t1 = $.eqB(t1, t3);
                    }
                  else
                    t1 = false;
                  if (t1)
                    this._onComplete$0();
              }
        }
      t1 = this._currentTime;
    case 16:
      state = 0;
      return $.lt(t1, t3);
  }
},
 get$target: function() {
  return this._target;
},
 get$currentTime: function() {
  return this._currentTime;
},
 get$isComplete: function() {
  return $.ge(this._currentTime, this._totalTime);
},
 set$delay: function(value) {
  if (this._started === false)
    this._currentTime = $.sub($.add(this._currentTime, this._delay), value);
  this._delay = value;
},
 set$onStart: function(value) {
  this._onStart = value;
},
 set$onComplete: function(value) {
  this._onComplete = value;
},
 _setPropertyValue$3: function(object, name$, value) {
  switch (name$) {
    case 'x':
      object.set$x(value);
      break;
    case 'y':
      object.set$y(value);
      break;
    case 'pivotX':
      object.set$pivotX(value);
      break;
    case 'pivotY':
      object.set$pivotY(value);
      break;
    case 'scaleX':
      object.set$scaleX(value);
      break;
    case 'scaleY':
      object.set$scaleY(value);
      break;
    case 'rotation':
      object.set$rotation(value);
      break;
    case 'alpha':
      object.set$alpha(value);
      break;
    default:
      throw $.$$throw($.ExceptionImplementation$('Error #9003: The supplied property name (\'' + $.S(name$) + '\') is not supported at this time.'));
  }
},
 _getPropertyValue$2: function(object, name$) {
  switch (name$) {
    case 'x':
      return object.get$x();
    case 'y':
      return object.get$y();
    case 'pivotX':
      return object.get$pivotX();
    case 'pivotY':
      return object.get$pivotY();
    case 'scaleX':
      return object.get$scaleX();
    case 'scaleY':
      return object.get$scaleY();
    case 'rotation':
      return object.get$rotation();
    case 'alpha':
      return object.get$alpha();
    default:
      throw $.$$throw($.ExceptionImplementation$('Error #9003: The supplied property name (\'' + $.S(name$) + '\') is not supported at this time.'));
  }
},
 Tween$3: function(target, time, transitionFunction) {
  this._target = target;
  this._transitionFunction = !(transitionFunction == null) ? transitionFunction : $.Transitions_linear;
  this._currentTime = 0;
  this._totalTime = $.max(0.0001, time);
  this._delay = 0;
  this._roundToInt = false;
  this._started = false;
  this._animateProperties = $.ListImplementation_List(null);
  this._animateValues = $.ListImplementation_List(null);
}
};

$$.Point = {"":
 ["x=", "y="],
 "super": "Object",
 get$length: function() {
  var t1 = this.x;
  t1 = $.mul(t1, t1);
  var t2 = this.y;
  return $.sqrt($.add(t1, $.mul(t2, t2)));
},
 add$1: function(p) {
  return $.Point$($.add(this.x, p.get$x()), $.add(this.y, p.get$y()));
}
};

$$.Rectangle = {"":
 ["x=", "y=", "width=", "height="],
 "super": "Object",
 get$left: function() {
  return this.x;
},
 get$top: function() {
  return this.y;
},
 get$right: function() {
  return $.add(this.x, this.width);
},
 get$bottom: function() {
  return $.add(this.y, this.height);
},
 get$size: function() {
  return $.Point$(this.width, this.height);
},
 set$bottom: function(value) {
  this.height = $.sub(value, this.y);
},
 set$left: function(value) {
  this.x = value;
},
 set$right: function(value) {
  this.width = $.sub(value, this.x);
},
 set$top: function(value) {
  this.y = value;
},
 contains$2: function(px, py) {
  return $.leB(this.x, px) && $.leB(this.y, py) && $.geB(this.get$right(), px) && $.geB(this.get$bottom(), py);
},
 get$isEmpty: function() {
  return $.eqB(this.width, 0) && $.eqB(this.height, 0);
},
 isEmpty$0: function() { return this.get$isEmpty().call$0(); }
};

$$.Matrix = {"":
 ["_a", "_b", "_c", "_d", "_tx", "_ty", "_det"],
 "super": "Object",
 get$a: function() {
  return this._a;
},
 get$b: function() {
  return this._b;
},
 get$c: function() {
  return this._c;
},
 get$d: function() {
  return this._d;
},
 get$tx: function() {
  return this._tx;
},
 get$ty: function() {
  return this._ty;
},
 get$det: function() {
  return this._det;
},
 transformPoint$1: function(p) {
  return $.Point$($.add($.add($.mul(p.x, this._a), $.mul(p.y, this._c)), this._tx), $.add($.add($.mul(p.x, this._b), $.mul(p.y, this._d)), this._ty));
},
 concat$1: function(matrix) {
  var a1 = this._a;
  var b1 = this._b;
  var c1 = this._c;
  var d1 = this._d;
  var tx1 = this._tx;
  var ty1 = this._ty;
  var det1 = this._det;
  var a2 = matrix.get$a();
  var b2 = matrix.get$b();
  var c2 = matrix.get$c();
  var d2 = matrix.get$d();
  var tx2 = matrix.get$tx();
  var ty2 = matrix.get$ty();
  var det2 = matrix.get$det();
  this._a = $.add($.mul(a1, a2), $.mul(b1, c2));
  this._b = $.add($.mul(a1, b2), $.mul(b1, d2));
  this._c = $.add($.mul(c1, a2), $.mul(d1, c2));
  this._d = $.add($.mul(c1, b2), $.mul(d1, d2));
  this._tx = $.add($.add($.mul(tx1, a2), $.mul(ty1, c2)), tx2);
  this._ty = $.add($.add($.mul(tx1, b2), $.mul(ty1, d2)), ty2);
  this._det = $.mul(det1, det2);
},
 identity$0: function() {
  this._a = 1;
  this._b = 0;
  this._c = 0;
  this._d = 1;
  this._tx = 0;
  this._ty = 0;
  this._det = 1;
},
 invert$0: function() {
  var a = this._a;
  var b = this._b;
  var c = this._c;
  var d = this._d;
  var tx = this._tx;
  var ty = this._ty;
  var det = this._det;
  this._a = $.div(d, det);
  this._b = $.neg($.div(b, det));
  this._c = $.neg($.div(c, det));
  this._d = $.div(a, det);
  this._tx = $.neg($.add($.mul(this._a, tx), $.mul(this._c, ty)));
  this._ty = $.neg($.add($.mul(this._b, tx), $.mul(this._d, ty)));
  if (typeof det !== 'number')
    throw $.iae(det);
  this._det = 1 / det;
},
 setTo$6: function(a, b, c, d, tx, ty) {
  this._a = a;
  this._b = b;
  this._c = c;
  this._d = d;
  this._tx = tx;
  this._ty = ty;
  this._det = $.sub($.mul(a, d), $.mul(b, c));
},
 copyFromAndConcat$2: function(copyMatrix, concatMatrix) {
  var a1 = copyMatrix.get$a();
  if (typeof a1 !== 'number')
    return this.copyFromAndConcat$2$bailout(1, copyMatrix, concatMatrix, a1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var b1 = copyMatrix.get$b();
  if (typeof b1 !== 'number')
    return this.copyFromAndConcat$2$bailout(2, copyMatrix, concatMatrix, a1, b1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var c1 = copyMatrix.get$c();
  if (typeof c1 !== 'number')
    return this.copyFromAndConcat$2$bailout(3, copyMatrix, concatMatrix, a1, b1, c1, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var d1 = copyMatrix.get$d();
  if (typeof d1 !== 'number')
    return this.copyFromAndConcat$2$bailout(4, copyMatrix, concatMatrix, a1, b1, c1, d1, 0, 0, 0, 0, 0, 0, 0, 0);
  var tx1 = copyMatrix.get$tx();
  if (typeof tx1 !== 'number')
    return this.copyFromAndConcat$2$bailout(5, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, 0, 0, 0, 0, 0, 0, 0);
  var ty1 = copyMatrix.get$ty();
  if (typeof ty1 !== 'number')
    return this.copyFromAndConcat$2$bailout(6, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, ty1, 0, 0, 0, 0, 0, 0);
  var det1 = copyMatrix.get$det();
  if (typeof det1 !== 'number')
    return this.copyFromAndConcat$2$bailout(7, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, 0, 0, 0, 0, 0, 0);
  var a2 = concatMatrix.get$a();
  if (typeof a2 !== 'number')
    return this.copyFromAndConcat$2$bailout(8, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, 0, 0, 0, 0, 0);
  var b2 = concatMatrix.get$b();
  if (typeof b2 !== 'number')
    return this.copyFromAndConcat$2$bailout(9, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, 0, 0, 0, 0);
  var c2 = concatMatrix.get$c();
  if (typeof c2 !== 'number')
    return this.copyFromAndConcat$2$bailout(10, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, 0, 0, 0);
  var d2 = concatMatrix.get$d();
  if (typeof d2 !== 'number')
    return this.copyFromAndConcat$2$bailout(11, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, 0, 0);
  var tx2 = concatMatrix.get$tx();
  if (typeof tx2 !== 'number')
    return this.copyFromAndConcat$2$bailout(12, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, 0);
  var ty2 = concatMatrix.get$ty();
  if (typeof ty2 !== 'number')
    return this.copyFromAndConcat$2$bailout(13, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2);
  var det2 = concatMatrix.get$det();
  if (typeof det2 !== 'number')
    return this.copyFromAndConcat$2$bailout(14, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2);
  this._a = a1 * a2 + b1 * c2;
  this._b = a1 * b2 + b1 * d2;
  this._c = c1 * a2 + d1 * c2;
  this._d = c1 * b2 + d1 * d2;
  this._tx = tx1 * a2 + ty1 * c2 + tx2;
  this._ty = tx1 * b2 + ty1 * d2 + ty2;
  this._det = det1 * det2;
},
 copyFromAndConcat$2$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state) {
    case 1:
      var copyMatrix = env0;
      var concatMatrix = env1;
      a1 = env2;
      break;
    case 2:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      break;
    case 3:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      c1 = env4;
      break;
    case 4:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      c1 = env4;
      d1 = env5;
      break;
    case 5:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      c1 = env4;
      d1 = env5;
      tx1 = env6;
      break;
    case 6:
      copyMatrix = env0;
      concatMatrix = env1;
      a1 = env2;
      b1 = env3;
      c1 = env4;
      d1 = env5;
      tx1 = env6;
      ty1 = env7;
      break;
    case 7:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      break;
    case 8:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      break;
    case 9:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      break;
    case 10:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      c2 = env10;
      break;
    case 11:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      c2 = env10;
      d2 = env11;
      break;
    case 12:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      c2 = env10;
      d2 = env11;
      tx2 = env12;
      break;
    case 13:
      concatMatrix = env0;
      a1 = env1;
      b1 = env2;
      c1 = env3;
      d1 = env4;
      tx1 = env5;
      ty1 = env6;
      det1 = env7;
      a2 = env8;
      b2 = env9;
      c2 = env10;
      d2 = env11;
      tx2 = env12;
      ty2 = env13;
      break;
    case 14:
      a1 = env0;
      b1 = env1;
      c1 = env2;
      d1 = env3;
      tx1 = env4;
      ty1 = env5;
      det1 = env6;
      a2 = env7;
      b2 = env8;
      c2 = env9;
      d2 = env10;
      tx2 = env11;
      ty2 = env12;
      det2 = env13;
      break;
  }
  switch (state) {
    case 0:
      var a1 = copyMatrix.get$a();
    case 1:
      state = 0;
      var b1 = copyMatrix.get$b();
    case 2:
      state = 0;
      var c1 = copyMatrix.get$c();
    case 3:
      state = 0;
      var d1 = copyMatrix.get$d();
    case 4:
      state = 0;
      var tx1 = copyMatrix.get$tx();
    case 5:
      state = 0;
      var ty1 = copyMatrix.get$ty();
    case 6:
      state = 0;
      var det1 = copyMatrix.get$det();
    case 7:
      state = 0;
      var a2 = concatMatrix.get$a();
    case 8:
      state = 0;
      var b2 = concatMatrix.get$b();
    case 9:
      state = 0;
      var c2 = concatMatrix.get$c();
    case 10:
      state = 0;
      var d2 = concatMatrix.get$d();
    case 11:
      state = 0;
      var tx2 = concatMatrix.get$tx();
    case 12:
      state = 0;
      var ty2 = concatMatrix.get$ty();
    case 13:
      state = 0;
      var det2 = concatMatrix.get$det();
    case 14:
      state = 0;
      this._a = $.add($.mul(a1, a2), $.mul(b1, c2));
      this._b = $.add($.mul(a1, b2), $.mul(b1, d2));
      this._c = $.add($.mul(c1, a2), $.mul(d1, c2));
      this._d = $.add($.mul(c1, b2), $.mul(d1, d2));
      this._tx = $.add($.add($.mul(tx1, a2), $.mul(ty1, c2)), tx2);
      this._ty = $.add($.add($.mul(tx1, b2), $.mul(ty1, d2)), ty2);
      this._det = $.mul(det1, det2);
  }
}
};

$$.RenderLoop = {"":
 ["_juggler", "_stages", "_renderTime"],
 "super": "Object",
 _onAnimationFrame$1: function(currentTime) {
  if (typeof currentTime !== 'number')
    return this._onAnimationFrame$1$bailout(1, currentTime, 0);
  $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
  if ($.isNaN(this._renderTime) === true)
    this._renderTime = currentTime;
  var t1 = this._renderTime;
  if (typeof t1 !== 'number')
    return this._onAnimationFrame$1$bailout(3, t1, currentTime);
  if (t1 > currentTime)
    this._renderTime = currentTime;
  t1 = this._renderTime;
  if (typeof t1 !== 'number')
    return this._onAnimationFrame$1$bailout(4, currentTime, t1);
  var deltaTime = currentTime - t1;
  var deltaTimeSec = deltaTime / 1000;
  if (deltaTime >= 1) {
    this._renderTime = currentTime;
    $._EventDispatcherCatalog_dispatchEvent($.EnterFrameEvent$(deltaTimeSec));
    this._juggler.advanceTime$1(deltaTimeSec);
    for (var t1 = this._stages, i = 0; t2 = t1.length, i < t2; ++i) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t1[i].materialize$0();
    }
  }
  return true;
  var t2;
},
 _onAnimationFrame$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      var currentTime = env0;
      break;
    case 2:
      currentTime = env0;
      break;
    case 3:
      t1 = env0;
      currentTime = env1;
      break;
    case 4:
      currentTime = env0;
      t1 = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
    case 2:
      if (state === 2 || state === 0 && currentTime == null)
        switch (state) {
          case 0:
            currentTime = $.DateImplementation$now().millisecondsSinceEpoch;
          case 2:
            state = 0;
        }
      if ($.isNaN(this._renderTime) === true)
        this._renderTime = currentTime;
      var t1 = this._renderTime;
    case 3:
      state = 0;
      if ($.gtB(t1, currentTime))
        this._renderTime = currentTime;
      t1 = this._renderTime;
    case 4:
      state = 0;
      var deltaTime = $.sub(currentTime, t1);
      var deltaTimeSec = $.div(deltaTime, 1000);
      if ($.geB(deltaTime, 1)) {
        this._renderTime = currentTime;
        $._EventDispatcherCatalog_dispatchEvent($.EnterFrameEvent$(deltaTimeSec));
        this._juggler.advanceTime$1(deltaTimeSec);
        for (var t1 = this._stages, i = 0; i < t1.length; ++i) {
          if (i < 0 || i >= t1.length)
            throw $.ioore(i);
          t1[i].materialize$0();
        }
      }
      return true;
  }
},
 get$_onAnimationFrame: function() { return new $.BoundClosure(this, '_onAnimationFrame$1'); },
 addStage$1: function(stage) {
  this._stages.push(stage);
},
 RenderLoop$0: function() {
  this._juggler = $.Juggler_instance();
  this._stages = $.ListImplementation_List(null);
  $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
}
};

$$.RenderState = {"":
 ["_context", "_matrices", "_alphas", "_depth"],
 "super": "Object",
 get$context: function() {
  return this._context;
},
 reset$0: function() {
  var t1 = this._context;
  t1.setTransform$6(1, 0, 0, 1, 0, 0);
  t1.set$globalAlpha(1);
  t1.clearRect$4(0, 0, t1.get$canvas().get$width(), t1.get$canvas().get$height());
  this._depth = 0;
},
 renderDisplayObject$1: function(displayObject) {
  var t1 = this._depth;
  if (typeof t1 !== 'number')
    return this.renderDisplayObject$1$bailout(1, displayObject, t1, 0, 0, 0, 0);
  this._depth = t1 + 1;
  var t3 = this._matrices;
  var t4 = this._depth;
  if (t4 !== (t4 | 0))
    throw $.iae(t4);
  if (t4 < 0 || t4 >= t3.length)
    throw $.ioore(t4);
  var matrix = t3[t4];
  t4 = displayObject.get$_transformationMatrix();
  var t5 = this._depth;
  if (typeof t5 !== 'number')
    return this.renderDisplayObject$1$bailout(2, displayObject, matrix, t3, t4, t5, 0);
  --t5;
  if (t5 !== (t5 | 0))
    throw $.iae(t5);
  if (t5 < 0 || t5 >= t3.length)
    throw $.ioore(t5);
  matrix.copyFromAndConcat$2(t4, t3[t5]);
  t4 = this._context;
  t4.setTransform$6(matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
  var t7 = this._alphas;
  var t8 = this._depth;
  if (typeof t8 !== 'number')
    return this.renderDisplayObject$1$bailout(3, displayObject, t4, t7, t8, 0, 0);
  var t10 = t8 - 1;
  if (t10 !== (t10 | 0))
    throw $.iae(t10);
  var t11 = t7.length;
  if (t10 < 0 || t10 >= t11)
    throw $.ioore(t10);
  t10 = t7[t10];
  if (typeof t10 !== 'number')
    return this.renderDisplayObject$1$bailout(4, displayObject, t4, t7, t8, t10, 0);
  var t13 = displayObject.get$_alpha();
  if (typeof t13 !== 'number')
    return this.renderDisplayObject$1$bailout(5, displayObject, t10, t13, t4, t7, t8);
  t13 = t10 * t13;
  if (t8 !== (t8 | 0))
    throw $.iae(t8);
  if (t8 < 0 || t8 >= t11)
    throw $.ioore(t8);
  t7[t8] = t13;
  t4.set$globalAlpha(t13);
  if (displayObject.get$mask() == null)
    displayObject.render$1(this);
  else {
    t4.save$0();
    displayObject.get$mask().render$1(this);
    displayObject.render$1(this);
    t4.restore$0();
  }
  t1 = this._depth;
  if (typeof t1 !== 'number')
    return this.renderDisplayObject$1$bailout(6, t1, 0, 0, 0, 0, 0);
  this._depth = t1 - 1;
},
 renderDisplayObject$1$bailout: function(state, env0, env1, env2, env3, env4, env5) {
  switch (state) {
    case 1:
      var displayObject = env0;
      t1 = env1;
      break;
    case 2:
      displayObject = env0;
      matrix = env1;
      t3 = env2;
      t4 = env3;
      t5 = env4;
      break;
    case 3:
      displayObject = env0;
      t4 = env1;
      t7 = env2;
      t8 = env3;
      break;
    case 4:
      displayObject = env0;
      t4 = env1;
      t7 = env2;
      t8 = env3;
      t10 = env4;
      break;
    case 5:
      displayObject = env0;
      t10 = env1;
      t12 = env2;
      t4 = env3;
      t7 = env4;
      t8 = env5;
      break;
    case 6:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._depth;
    case 1:
      state = 0;
      this._depth = $.add(t1, 1);
      var t3 = this._matrices;
      var t4 = this._depth;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t3.length)
        throw $.ioore(t4);
      var matrix = t3[t4];
      t4 = displayObject.get$_transformationMatrix();
      var t5 = this._depth;
    case 2:
      state = 0;
      t5 = $.sub(t5, 1);
      if (t5 !== (t5 | 0))
        throw $.iae(t5);
      if (t5 < 0 || t5 >= t3.length)
        throw $.ioore(t5);
      matrix.copyFromAndConcat$2(t4, t3[t5]);
      t4 = this._context;
      t4.setTransform$6(matrix.get$a(), matrix.get$b(), matrix.get$c(), matrix.get$d(), matrix.get$tx(), matrix.get$ty());
      var t7 = this._alphas;
      var t8 = this._depth;
    case 3:
      state = 0;
      var t10 = $.sub(t8, 1);
      if (t10 !== (t10 | 0))
        throw $.iae(t10);
      if (t10 < 0 || t10 >= t7.length)
        throw $.ioore(t10);
      t10 = t7[t10];
    case 4:
      state = 0;
      var t12 = displayObject.get$_alpha();
    case 5:
      state = 0;
      t12 = $.mul(t10, t12);
      if (t8 !== (t8 | 0))
        throw $.iae(t8);
      if (t8 < 0 || t8 >= t7.length)
        throw $.ioore(t8);
      t7[t8] = t12;
      t4.set$globalAlpha(t12);
      if (displayObject.get$mask() == null)
        displayObject.render$1(this);
      else {
        t4.save$0();
        displayObject.get$mask().render$1(this);
        displayObject.render$1(this);
        t4.restore$0();
      }
      t1 = this._depth;
    case 6:
      state = 0;
      this._depth = $.sub(t1, 1);
  }
},
 RenderState$fromCanvasRenderingContext2D$1: function(context) {
  this._context = context;
  this._matrices = $.ListImplementation_List(null);
  this._alphas = $.ListImplementation_List(null);
  this._depth = 0;
  for (var t1 = this._matrices, t2 = this._alphas, i = 0; i < 100; ++i) {
    t1.push($.Matrix$fromIdentity());
    t2.push(1);
  }
}
};

$$.Event = {"":
 ["_lib1_type", "_bubbles", "_eventPhase!", "_target!", "_currentTarget!", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Object",
 get$stopsPropagation: function() {
  return this._stopsPropagation;
},
 get$stopsImmediatePropagation: function() {
  return this._stopsImmediatePropagation;
},
 get$type: function() {
  return this._lib1_type;
},
 get$bubbles: function() {
  return this._bubbles;
},
 get$captures: function() {
  return true;
},
 get$target: function() {
  return this._target;
},
 Event$2: function(type, bubbles) {
  this._lib1_type = type;
  this._bubbles = bubbles;
  this._eventPhase = 2;
}
};

$$.EventDispatcher = {"":
 ["_eventListenersMap"],
 "super": "Object",
 hasEventListener$1: function(type) {
  var t1 = this._eventListenersMap;
  return !(t1 == null) && t1.containsKey$1(type) === true;
},
 addEventListener$3: function(type, listener, useCapture) {
  var eventListener = $._EventListener$(listener, useCapture);
  if (this._eventListenersMap == null)
    this._eventListenersMap = $.HashMapImplementation$();
  var eventListeners = $.index(this._eventListenersMap, type);
  eventListeners = eventListeners == null ? $.ListImplementation_List(null) : $.ListImplementation_List$from(eventListeners);
  $.add$1(eventListeners, eventListener);
  $.indexSet(this._eventListenersMap, type, eventListeners);
  $._EventDispatcherCatalog_addEventDispatcher(type, this);
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 addEventListener$2: function(type,listener) {
  return this.addEventListener$3(type,listener,false)
},
 dispatchEvent$1: function(event$) {
  this._invokeEventListeners$4(event$, this, this, 2);
},
 _invokeEventListeners$4: function(event$, target, currentTarget, eventPhase) {
  var t1 = this._eventListenersMap;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._invokeEventListeners$4$bailout(1, event$, target, currentTarget, eventPhase, t1, 0, 0, 0);
  var t2 = event$.get$type();
  if (t2 !== (t2 | 0))
    throw $.iae(t2);
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  var eventListeners = t1[t2];
  if (!(eventListeners == null))
    for (t1 = $.iterator(eventListeners), t2 = eventPhase === 1; t1.hasNext$0() === true;) {
      var t3 = t1.next$0();
      if (t2) {
        var t4 = t3.get$useCapture();
        if (typeof t4 !== 'boolean')
          return this._invokeEventListeners$4$bailout(2, event$, target, currentTarget, eventPhase, t4, t3, t1, t2);
        t4 = !t4;
      } else
        t4 = false;
      if (t4)
        continue;
      event$.set$_target(target);
      event$.set$_currentTarget(currentTarget);
      event$.set$_eventPhase(eventPhase);
      t3.listener$1(event$);
      if (event$.get$stopsImmediatePropagation() === true)
        break;
    }
},
 _invokeEventListeners$4$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state) {
    case 1:
      var event$ = env0;
      var target = env1;
      var currentTarget = env2;
      var eventPhase = env3;
      t1 = env4;
      break;
    case 2:
      event$ = env0;
      target = env1;
      currentTarget = env2;
      eventPhase = env3;
      t4 = env4;
      t3 = env5;
      t1 = env6;
      t2 = env7;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._eventListenersMap;
    case 1:
      state = 0;
    case 2:
      if (state === 2 || state === 0 && !(t1 == null))
        switch (state) {
          case 0:
            var eventListeners = $.index(t1, event$.get$type());
          case 2:
            if (state === 2 || state === 0 && !(eventListeners == null))
              switch (state) {
                case 0:
                  t1 = $.iterator(eventListeners);
                  var t2 = eventPhase === 1;
                case 2:
                  L0:
                    while (true)
                      switch (state) {
                        case 0:
                          if (!(t1.hasNext$0() === true))
                            break L0;
                        case 2:
                          c$0: {
                            switch (state) {
                              case 0:
                                var t3 = t1.next$0();
                              case 2:
                                if (state === 2 || state === 0 && t2)
                                  switch (state) {
                                    case 0:
                                      var t4 = t3.get$useCapture();
                                    case 2:
                                      state = 0;
                                      t4 = $.eqB(t4, false);
                                  }
                                else
                                  t4 = false;
                                if (t4)
                                  break c$0;
                                event$.set$_target(target);
                                event$.set$_currentTarget(currentTarget);
                                event$.set$_eventPhase(eventPhase);
                                t3.listener$1(event$);
                                if (event$.get$stopsImmediatePropagation() === true)
                                  break L0;
                            }
                          }
                      }
              }
        }
  }
}
};

$$._EventListener = {"":
 ["listener", "useCapture?"],
 "super": "Object",
 listener$1: function(arg0) { return this.listener.call$1(arg0); }
};

$$.EnterFrameEvent = {"":
 ["_passedTime", "_lib1_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 get$captures: function() {
  return false;
},
 EnterFrameEvent$1: function(passedTime) {
  this._passedTime = passedTime;
}
};

$$.MouseEvent = {"":
 ["_localX", "_localY", "_stageX", "_stageY", "_buttonDown", "_altKey", "_controlKey", "_ctrlKey", "_shiftKey", "_clickCount", "_delta", "_isRelatedObjectInaccessible", "_relatedObject", "_lib1_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 get$localX: function() {
  return this._localX;
},
 get$localY: function() {
  return this._localY;
},
 get$buttonDown: function() {
  return this._buttonDown;
},
 get$altKey: function() {
  return this._altKey;
},
 get$ctrlKey: function() {
  return this._ctrlKey;
},
 get$shiftKey: function() {
  return this._shiftKey;
}
};

$$.KeyboardEvent = {"":
 ["_altKey", "_ctrlKey", "_shiftKey", "_commandKey", "_controlKey", "_charCode", "_keyCode", "_keyLocation", "_lib1_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event",
 get$altKey: function() {
  return this._altKey;
},
 get$ctrlKey: function() {
  return this._ctrlKey;
},
 get$shiftKey: function() {
  return this._shiftKey;
},
 get$charCode: function() {
  return this._charCode;
},
 get$keyCode: function() {
  return this._keyCode;
},
 get$keyLocation: function() {
  return this._keyLocation;
}
};

$$.TextEvent = {"":
 ["_text", "_lib1_type", "_bubbles", "_eventPhase", "_target", "_currentTarget", "_stopsPropagation", "_stopsImmediatePropagation"],
 "super": "Event"
};

$$.DisplayObject = {"":
 ["_alpha?", "_lib1_parent?", "mask="],
 "super": "EventDispatcher",
 get$x: function() {
  return this._x;
},
 get$y: function() {
  return this._y;
},
 get$pivotX: function() {
  return this._pivotX;
},
 get$pivotY: function() {
  return this._pivotY;
},
 get$scaleX: function() {
  return this._scaleX;
},
 get$scaleY: function() {
  return this._scaleY;
},
 get$rotation: function() {
  return this._rotation;
},
 get$alpha: function() {
  return this._alpha;
},
 get$visible: function() {
  return this._visible;
},
 get$name: function() {
  return this._name;
},
 get$parent: function() {
  return this._lib1_parent;
},
 get$root: function() {
  for (var currentObject = this; currentObject0 = currentObject.get$_lib1_parent(), !(currentObject0 == null);)
    currentObject = currentObject0;
  return currentObject;
  var currentObject0;
},
 get$stage: function() {
  var root = this.get$root();
  if (typeof root === 'object' && root !== null && !!root.is$Stage)
    return root;
  return;
},
 set$x: function(value) {
  this._x = value;
  this._transformationMatrixRefresh = true;
},
 set$y: function(value) {
  this._y = value;
  this._transformationMatrixRefresh = true;
},
 set$pivotX: function(value) {
  this._pivotX = value;
  this._transformationMatrixRefresh = true;
},
 set$pivotY: function(value) {
  this._pivotY = value;
  this._transformationMatrixRefresh = true;
},
 set$scaleX: function(value) {
  this._scaleX = value;
  this._transformationMatrixRefresh = true;
},
 set$scaleY: function(value) {
  this._scaleY = value;
  this._transformationMatrixRefresh = true;
},
 set$rotation: function(value) {
  this._rotation = value;
  this._transformationMatrixRefresh = true;
},
 set$alpha: function(value) {
  this._alpha = value;
  this._transformationMatrixRefresh = true;
},
 get$width: function() {
  return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$width();
},
 get$height: function() {
  return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$height();
},
 set$width: function(value) {
  this.set$scaleX(1);
  var normalWidth = this.get$width();
  this.set$scaleX(!$.eqB(normalWidth, 0) ? $.div(value, normalWidth) : 1);
},
 set$height: function(value) {
  this.set$scaleY(1);
  var normalHeight = this.get$height();
  this.set$scaleY(!$.eqB(normalHeight, 0) ? $.div(value, normalHeight) : 1);
},
 removeFromParent$0: function() {
  var t1 = this._lib1_parent;
  if (!(t1 == null))
    t1.removeChild$1(this);
},
 get$_transformationMatrix: function() {
  if (this._transformationMatrixRefresh === true) {
    this._transformationMatrixRefresh = false;
    var t1 = $.eqB(this._rotation, 0);
    var t2 = this._transformationMatrixPrivate;
    if (t1) {
      t1 = this._scaleX;
      t2.setTo$6(t1, 0, 0, this._scaleY, $.sub(this._x, $.mul(this._pivotX, t1)), $.sub(this._y, $.mul(this._pivotY, this._scaleY)));
    } else {
      var cosR = $.cos(this._rotation);
      var sinR = $.sin(this._rotation);
      var a = $.mul(this._scaleX, cosR);
      var b = $.mul(this._scaleX, sinR);
      var c = $.mul($.neg(this._scaleY), sinR);
      var d = $.mul(this._scaleY, cosR);
      t2.setTo$6(a, b, c, d, $.sub($.sub(this._x, $.mul(this._pivotX, a)), $.mul(this._pivotY, c)), $.sub($.sub(this._y, $.mul(this._pivotX, b)), $.mul(this._pivotY, d)));
    }
  }
  return this._transformationMatrixPrivate;
},
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  returnRectangle.set$x(matrix.get$tx());
  returnRectangle.set$y(matrix.get$ty());
  returnRectangle.set$width(0);
  returnRectangle.set$height(0);
  return returnRectangle;
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  if ($.contains$2(this.getBoundsTransformed$1(this._tmpMatrixIdentity), localX, localY) === true)
    return this;
  return;
},
 globalToLocal$1: function(globalPoint) {
  var t1 = this._tmpMatrix;
  t1.identity$0();
  for (var displayObject = this; !(displayObject == null); displayObject = displayObject.get$_lib1_parent())
    $.concat(t1, displayObject.get$_transformationMatrix());
  t1.invert$0();
  return t1.transformPoint$1(globalPoint);
},
 dispatchEvent$1: function(event$) {
  if (event$.get$captures() === true || event$.get$bubbles() === true) {
    for (var ancestor = this._lib1_parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_lib1_parent())
      if (ancestor.hasEventListener$1(event$.get$type()) === true) {
        if (ancestors == null)
          ancestors = $.ListImplementation_List(null);
        $.add$1(ancestors, ancestor);
      }
  } else
    ancestors = null;
  if (event$.get$captures() === true && !(ancestors == null)) {
    var t1 = $.get$length(ancestors);
    if (typeof t1 !== 'number')
      return this.dispatchEvent$1$bailout(1, event$, t1, ancestors, 0);
    var i = t1 - 1;
    for (; i >= 0; --i) {
      t1 = event$.get$stopsPropagation();
      if (typeof t1 !== 'boolean')
        return this.dispatchEvent$1$bailout(2, event$, i, t1, ancestors);
      if (!t1)
        $.index(ancestors, i)._invokeEventListeners$4(event$, this, $.index(ancestors, i), 1);
    }
  }
  t1 = event$.get$stopsPropagation();
  if (typeof t1 !== 'boolean')
    return this.dispatchEvent$1$bailout(3, event$, t1, ancestors, 0);
  if (!t1)
    this._invokeEventListeners$4(event$, this, this, 2);
  if (event$.get$bubbles() === true && !(ancestors == null)) {
    i = 0;
    while (true) {
      t1 = $.get$length(ancestors);
      if (typeof t1 !== 'number')
        return this.dispatchEvent$1$bailout(4, i, event$, t1, ancestors);
      if (!(i < t1))
        break;
      t1 = event$.get$stopsPropagation();
      if (typeof t1 !== 'boolean')
        return this.dispatchEvent$1$bailout(5, i, event$, t1, ancestors);
      if (!t1)
        $.index(ancestors, i)._invokeEventListeners$4(event$, this, $.index(ancestors, i), 3);
      ++i;
    }
  }
},
 dispatchEvent$1$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var event$ = env0;
      t1 = env1;
      ancestors = env2;
      break;
    case 2:
      event$ = env0;
      i = env1;
      t1 = env2;
      ancestors = env3;
      break;
    case 3:
      event$ = env0;
      t1 = env1;
      ancestors = env2;
      break;
    case 4:
      i = env0;
      event$ = env1;
      t1 = env2;
      ancestors = env3;
      break;
    case 5:
      i = env0;
      event$ = env1;
      t1 = env2;
      ancestors = env3;
      break;
  }
  switch (state) {
    case 0:
      if (event$.get$captures() === true || event$.get$bubbles() === true) {
        for (var ancestor = this._lib1_parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_lib1_parent())
          if (ancestor.hasEventListener$1(event$.get$type()) === true) {
            if (ancestors == null)
              ancestors = $.ListImplementation_List(null);
            $.add$1(ancestors, ancestor);
          }
      } else
        ancestors = null;
    default:
      if (state === 2 || state === 1 || state === 0 && event$.get$captures() === true && !(ancestors == null))
        switch (state) {
          case 0:
            var t1 = $.get$length(ancestors);
          case 1:
            state = 0;
            var i = $.sub(t1, 1);
          case 2:
            L0:
              while (true)
                switch (state) {
                  case 0:
                    if (!$.geB(i, 0))
                      break L0;
                    t1 = event$.get$stopsPropagation();
                  case 2:
                    state = 0;
                    if ($.eqB(t1, false))
                      $.index(ancestors, i)._invokeEventListeners$4(event$, this, $.index(ancestors, i), 1);
                    i = $.sub(i, 1);
                }
        }
      t1 = event$.get$stopsPropagation();
    case 3:
      state = 0;
      if ($.eqB(t1, false))
        this._invokeEventListeners$4(event$, this, this, 2);
    case 4:
    case 5:
      if (state === 5 || state === 4 || state === 0 && event$.get$bubbles() === true && !(ancestors == null))
        switch (state) {
          case 0:
            i = 0;
          default:
            L1:
              while (true)
                switch (state) {
                  case 0:
                    t1 = $.get$length(ancestors);
                  case 4:
                    state = 0;
                    if (!$.ltB(i, t1))
                      break L1;
                    t1 = event$.get$stopsPropagation();
                  case 5:
                    state = 0;
                    if ($.eqB(t1, false))
                      $.index(ancestors, i)._invokeEventListeners$4(event$, this, $.index(ancestors, i), 3);
                    ++i;
                }
        }
  }
},
 _setParent$1: function(value) {
  for (var ancestor = value; !(ancestor == null); ancestor = ancestor.get$_lib1_parent())
    if ($.eqB(ancestor, this))
      throw $.$$throw($.IllegalArgumentException$('Error #2150: An object cannot be added as a child to one of it\'s children (or children\'s children, etc.).'));
  this._lib1_parent = value;
},
 DisplayObject$0: function() {
  this._transformationMatrixPrivate = $.Matrix$fromIdentity();
  this._transformationMatrixRefresh = true;
  this._tmpMatrix = $.Matrix$fromIdentity();
  this._tmpMatrixIdentity = $.Matrix$fromIdentity();
}
};

$$.InteractiveObject = {"":
 ["doubleClickEnabled?", "mouseEnabled!"],
 "super": "DisplayObject",
 is$InteractiveObject: true
};

$$.DisplayObjectContainer = {"":
 [],
 "super": "InteractiveObject",
 addChild$1: function(child) {
  var t1 = $.eqB(child.get$parent(), this);
  var t2 = this._children;
  if (t1) {
    $.removeRange(t2, $.indexOf$1(t2, child), 1);
    t2.push(child);
  } else
    this.addChildAt$2(child, t2.length);
  return child;
},
 addChildAt$2: function(child, index) {
  if ($.ltB(index, 0) && $.gtB(index, this._children.length))
    throw $.$$throw($.IllegalArgumentException$('Error #2006: The supplied index is out of bounds.'));
  if ($.eqB(child, this))
    throw $.$$throw($.IllegalArgumentException$('Error #2024: An object cannot be added as a child of itself.'));
  var t1 = $.eqB(child.get$parent(), this);
  var t2 = this._children;
  if (t1) {
    $.removeRange(t2, $.indexOf$1(t2, child), 1);
    if ($.gtB(index, t2.length))
      index = $.sub(index, 1);
    $.insertRange$3(t2, index, 1, child);
  } else {
    child.removeFromParent$0();
    child._setParent$1(this);
    $.insertRange$3(t2, index, 1, child);
    child.dispatchEvent$1($.Event$('added', true));
    if (!(this.get$stage() == null))
      this._dispatchEventOnChildren$2(child, $.Event$('addedToStage', false));
  }
  return child;
},
 removeChild$1: function(child) {
  var childIndex = $.indexOf$1(this._children, child);
  if ($.eqB(childIndex, -1))
    throw $.$$throw($.IllegalArgumentException$('Error #2025: The supplied DisplayObject must be a child of the caller.'));
  return this.removeChildAt$1(childIndex);
},
 removeChildAt$1: function(index) {
  if ($.ltB(index, 0) && $.geB(index, this._children.length))
    throw $.$$throw($.IllegalArgumentException$('Error #2006: The supplied index is out of bounds.'));
  var t1 = this._children;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  var child = t1[index];
  child.dispatchEvent$1($.Event$('removed', true));
  if (!(this.get$stage() == null))
    this._dispatchEventOnChildren$2(child, $.Event$('removedFromStage', false));
  child._setParent$1(null);
  $.removeRange(t1, index, 1);
  return child;
},
 contains$1: function(child) {
  for (; !(child == null); child = child.get$_lib1_parent())
    if ($.eqB(child, this))
      return true;
  return false;
},
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  var t1 = this._children;
  var t2 = t1.length;
  if (t2 === 0)
    return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
  for (var t3 = this._tmpMatrix, left = (1/0), bottom = (-1/0), right = (-1/0), top$ = (1/0), i = 0; i < t2; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    t3.copyFromAndConcat$2(t1[i].get$_transformationMatrix(), matrix);
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var rectangle = t1[i].getBoundsTransformed$2(t3, returnRectangle);
    var t4 = rectangle.get$left();
    if (typeof t4 !== 'number')
      return this.getBoundsTransformed$2$bailout(1, matrix, t3, left, bottom, right, top$, i, returnRectangle, t2, rectangle, t1, t4);
    if (t4 < left) {
      left = rectangle.get$left();
      if (typeof left !== 'number')
        return this.getBoundsTransformed$2$bailout(2, matrix, t3, t2, left, bottom, right, top$, i, rectangle, t1, returnRectangle, 0);
    }
    t4 = rectangle.get$top();
    if (typeof t4 !== 'number')
      return this.getBoundsTransformed$2$bailout(3, matrix, t3, t2, bottom, right, left, top$, t4, i, returnRectangle, rectangle, t1);
    if (t4 < top$) {
      top$ = rectangle.get$top();
      if (typeof top$ !== 'number')
        return this.getBoundsTransformed$2$bailout(4, matrix, t3, t1, bottom, right, left, i, t2, rectangle, top$, returnRectangle, 0);
    }
    t4 = rectangle.get$right();
    if (typeof t4 !== 'number')
      return this.getBoundsTransformed$2$bailout(5, matrix, t3, t2, bottom, right, left, i, returnRectangle, top$, t4, rectangle, t1);
    if (t4 > right) {
      right = rectangle.get$right();
      if (typeof right !== 'number')
        return this.getBoundsTransformed$2$bailout(6, matrix, top$, t3, t2, bottom, left, right, i, rectangle, t1, returnRectangle, 0);
    }
    t4 = rectangle.get$bottom();
    if (typeof t4 !== 'number')
      return this.getBoundsTransformed$2$bailout(7, matrix, t3, t4, bottom, t2, left, i, returnRectangle, top$, right, t1, rectangle);
    if (t4 > bottom) {
      bottom = rectangle.get$bottom();
      if (typeof bottom !== 'number')
        return this.getBoundsTransformed$2$bailout(8, matrix, top$, bottom, t2, t3, left, i, right, t1, returnRectangle, 0, 0);
    }
  }
  returnRectangle.set$x(left);
  returnRectangle.set$y(top$);
  returnRectangle.set$width(right - left);
  returnRectangle.set$height(bottom - top$);
  return returnRectangle;
},
 getBoundsTransformed$2$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
  switch (state) {
    case 1:
      var matrix = env0;
      t2 = env1;
      left = env2;
      bottom = env3;
      right = env4;
      top$ = env5;
      i = env6;
      returnRectangle = env7;
      childrenLength = env8;
      rectangle = env9;
      t1 = env10;
      t3 = env11;
      break;
    case 2:
      matrix = env0;
      t2 = env1;
      childrenLength = env2;
      left = env3;
      bottom = env4;
      right = env5;
      top$ = env6;
      i = env7;
      rectangle = env8;
      t1 = env9;
      returnRectangle = env10;
      break;
    case 3:
      matrix = env0;
      t2 = env1;
      childrenLength = env2;
      bottom = env3;
      right = env4;
      left = env5;
      top$ = env6;
      t3 = env7;
      i = env8;
      returnRectangle = env9;
      rectangle = env10;
      t1 = env11;
      break;
    case 4:
      matrix = env0;
      t2 = env1;
      t1 = env2;
      bottom = env3;
      right = env4;
      left = env5;
      i = env6;
      childrenLength = env7;
      rectangle = env8;
      top$ = env9;
      returnRectangle = env10;
      break;
    case 5:
      matrix = env0;
      t2 = env1;
      childrenLength = env2;
      bottom = env3;
      right = env4;
      left = env5;
      i = env6;
      returnRectangle = env7;
      top$ = env8;
      t3 = env9;
      rectangle = env10;
      t1 = env11;
      break;
    case 6:
      matrix = env0;
      top$ = env1;
      t2 = env2;
      childrenLength = env3;
      bottom = env4;
      left = env5;
      right = env6;
      i = env7;
      rectangle = env8;
      t1 = env9;
      returnRectangle = env10;
      break;
    case 7:
      matrix = env0;
      t2 = env1;
      t3 = env2;
      bottom = env3;
      childrenLength = env4;
      left = env5;
      i = env6;
      returnRectangle = env7;
      top$ = env8;
      right = env9;
      t1 = env10;
      rectangle = env11;
      break;
    case 8:
      matrix = env0;
      top$ = env1;
      bottom = env2;
      childrenLength = env3;
      t2 = env4;
      left = env5;
      i = env6;
      right = env7;
      t1 = env8;
      returnRectangle = env9;
      break;
  }
  switch (state) {
    case 0:
      if (returnRectangle == null)
        var returnRectangle = $.Rectangle$zero();
      var t1 = this._children;
      if (t1.length === 0)
        return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
      var childrenLength = t1.length;
      var t2 = this._tmpMatrix;
      var left = (1/0);
      var bottom = (-1/0);
      var right = (-1/0);
      var top$ = (1/0);
      var i = 0;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(i < childrenLength))
                break L0;
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              t2.copyFromAndConcat$2(t1[i].get$_transformationMatrix(), matrix);
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              var rectangle = t1[i].getBoundsTransformed$2(t2, returnRectangle);
              var t3 = rectangle.get$left();
            case 1:
              state = 0;
            case 2:
              if (state === 2 || state === 0 && $.ltB(t3, left))
                switch (state) {
                  case 0:
                    left = rectangle.get$left();
                  case 2:
                    state = 0;
                }
              t3 = rectangle.get$top();
            case 3:
              state = 0;
            case 4:
              if (state === 4 || state === 0 && $.ltB(t3, top$))
                switch (state) {
                  case 0:
                    top$ = rectangle.get$top();
                  case 4:
                    state = 0;
                }
              t3 = rectangle.get$right();
            case 5:
              state = 0;
            case 6:
              if (state === 6 || state === 0 && $.gtB(t3, right))
                switch (state) {
                  case 0:
                    right = rectangle.get$right();
                  case 6:
                    state = 0;
                }
              t3 = rectangle.get$bottom();
            case 7:
              state = 0;
            case 8:
              if (state === 8 || state === 0 && $.gtB(t3, bottom))
                switch (state) {
                  case 0:
                    bottom = rectangle.get$bottom();
                  case 8:
                    state = 0;
                }
              ++i;
          }
      returnRectangle.set$x(left);
      returnRectangle.set$y(top$);
      returnRectangle.set$width($.sub(right, left));
      returnRectangle.set$height($.sub(bottom, top$));
      return returnRectangle;
  }
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  if (typeof localX !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  if (typeof localY !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  for (var t1 = this._children, i = t1.length - 1, t2 = this._mouseChildren, hit = null; i >= 0; --i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var child = t1[i];
    if (child.get$visible() === true) {
      var matrix = child.get$_transformationMatrix();
      var t3 = matrix.get$tx();
      if (typeof t3 !== 'number')
        return this.hitTestInput$2$bailout(2, t2, i, matrix, localX, localY, t3, t1, child, hit, 0, 0, 0);
      var deltaX = localX - t3;
      t3 = matrix.get$ty();
      if (typeof t3 !== 'number')
        return this.hitTestInput$2$bailout(3, t2, i, matrix, localX, deltaX, t3, localY, t1, child, hit, 0, 0);
      var deltaY = localY - t3;
      t3 = matrix.get$d();
      if (typeof t3 !== 'number')
        return this.hitTestInput$2$bailout(4, t2, i, matrix, localX, deltaX, deltaY, t3, t1, localY, child, hit, 0);
      t3 *= deltaX;
      var t7 = matrix.get$c();
      if (typeof t7 !== 'number')
        return this.hitTestInput$2$bailout(5, localX, matrix, localY, deltaX, deltaY, t1, t3, t7, hit, t2, i, child);
      t3 -= t7 * deltaY;
      var t9 = matrix.get$det();
      if (typeof t9 !== 'number')
        return this.hitTestInput$2$bailout(6, localX, matrix, localY, deltaX, deltaY, t1, hit, t2, i, t3, t9, child);
      var childX = t3 / t9;
      t9 = matrix.get$a();
      if (typeof t9 !== 'number')
        return this.hitTestInput$2$bailout(7, localX, matrix, localY, deltaX, deltaY, t1, hit, t2, i, childX, t9, child);
      t9 *= deltaY;
      var t11 = matrix.get$b();
      if (typeof t11 !== 'number')
        return this.hitTestInput$2$bailout(8, localX, matrix, localY, deltaX, t1, hit, t2, i, childX, t9, t11, child);
      t9 -= t11 * deltaX;
      var t13 = matrix.get$det();
      if (typeof t13 !== 'number')
        return this.hitTestInput$2$bailout(9, t2, i, childX, localX, localY, t1, t9, t13, child, hit, 0, 0);
      var displayObject = child.hitTestInput$2(childX, t9 / t13);
      if (!(displayObject == null)) {
        if (typeof displayObject === 'object' && displayObject !== null && !!displayObject.is$InteractiveObject)
          if (displayObject.mouseEnabled === true)
            return t2 ? displayObject : this;
        hit = this;
      }
    }
  }
  return hit;
},
 hitTestInput$2$bailout: function(state, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
  switch (state) {
    case 1:
      var localX = env0;
      var localY = env1;
      break;
    case 2:
      t2 = env0;
      i = env1;
      matrix = env2;
      localX = env3;
      localY = env4;
      t3 = env5;
      t1 = env6;
      child = env7;
      hit = env8;
      break;
    case 3:
      t2 = env0;
      i = env1;
      matrix = env2;
      localX = env3;
      deltaX = env4;
      t3 = env5;
      localY = env6;
      t1 = env7;
      child = env8;
      hit = env9;
      break;
    case 4:
      t2 = env0;
      i = env1;
      matrix = env2;
      localX = env3;
      deltaX = env4;
      deltaY = env5;
      t3 = env6;
      t1 = env7;
      localY = env8;
      child = env9;
      hit = env10;
      break;
    case 5:
      localX = env0;
      matrix = env1;
      localY = env2;
      deltaX = env3;
      deltaY = env4;
      t1 = env5;
      t3 = env6;
      t7 = env7;
      hit = env8;
      t2 = env9;
      i = env10;
      child = env11;
      break;
    case 6:
      localX = env0;
      matrix = env1;
      localY = env2;
      deltaX = env3;
      deltaY = env4;
      t1 = env5;
      hit = env6;
      t2 = env7;
      i = env8;
      t3 = env9;
      t9 = env10;
      child = env11;
      break;
    case 7:
      localX = env0;
      matrix = env1;
      localY = env2;
      deltaX = env3;
      deltaY = env4;
      t1 = env5;
      hit = env6;
      t2 = env7;
      i = env8;
      childX = env9;
      t9 = env10;
      child = env11;
      break;
    case 8:
      localX = env0;
      matrix = env1;
      localY = env2;
      deltaX = env3;
      t1 = env4;
      hit = env5;
      t2 = env6;
      i = env7;
      childX = env8;
      t9 = env9;
      t11 = env10;
      child = env11;
      break;
    case 9:
      t2 = env0;
      i = env1;
      childX = env2;
      localX = env3;
      localY = env4;
      t1 = env5;
      t9 = env6;
      t13 = env7;
      child = env8;
      hit = env9;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this._children;
      var i = t1.length - 1;
      var t2 = this._mouseChildren === true;
      var hit = null;
    default:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!(i >= 0))
                break L0;
              if (i < 0 || i >= t1.length)
                throw $.ioore(i);
              var child = t1[i];
            default:
              if (state === 9 || state === 8 || state === 7 || state === 6 || state === 5 || state === 4 || state === 3 || state === 2 || state === 0 && child.get$visible() === true)
                switch (state) {
                  case 0:
                    var matrix = child.get$_transformationMatrix();
                    var t3 = matrix.get$tx();
                  case 2:
                    state = 0;
                    var deltaX = $.sub(localX, t3);
                    t3 = matrix.get$ty();
                  case 3:
                    state = 0;
                    var deltaY = $.sub(localY, t3);
                    t3 = matrix.get$d();
                  case 4:
                    state = 0;
                    t3 = $.mul(t3, deltaX);
                    var t7 = matrix.get$c();
                  case 5:
                    state = 0;
                    t3 = $.sub(t3, $.mul(t7, deltaY));
                    var t9 = matrix.get$det();
                  case 6:
                    state = 0;
                    var childX = $.div(t3, t9);
                    t9 = matrix.get$a();
                  case 7:
                    state = 0;
                    t9 = $.mul(t9, deltaY);
                    var t11 = matrix.get$b();
                  case 8:
                    state = 0;
                    t9 = $.sub(t9, $.mul(t11, deltaX));
                    var t13 = matrix.get$det();
                  case 9:
                    state = 0;
                    var displayObject = child.hitTestInput$2(childX, $.div(t9, t13));
                    if (!(displayObject == null)) {
                      if (typeof displayObject === 'object' && displayObject !== null && !!displayObject.is$InteractiveObject)
                        if (displayObject.mouseEnabled === true)
                          return t2 ? displayObject : this;
                      hit = this;
                    }
                }
              --i;
          }
      return hit;
  }
},
 render$1: function(renderState) {
  var t1 = this._children;
  var childrenLength = t1.length;
  for (var i = 0; i < childrenLength; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var child = t1[i];
    if (child.get$visible() === true)
      renderState.renderDisplayObject$1(child);
  }
},
 _dispatchEventOnChildren$2: function(displayObject, event$) {
  displayObject.dispatchEvent$1(event$);
  if (typeof displayObject === 'object' && displayObject !== null && !!displayObject.is$DisplayObjectContainer) {
    var children = $.ListImplementation_List$from(displayObject._children);
    var childrenLength = children.length;
    for (var i = 0; i < childrenLength; ++i) {
      if (i < 0 || i >= children.length)
        throw $.ioore(i);
      this._dispatchEventOnChildren$2(children[i], event$);
    }
  }
},
 DisplayObjectContainer$0: function() {
  this._children = $.ListImplementation_List(null);
},
 is$DisplayObjectContainer: true
};

$$.Stage = {"":
 ["_canvas", "_context", "_focus", "_renderState", "_renderMode", "_mouseCursor", "_buttonState", "_clickTarget", "_clickTime", "_clickCount", "_mouseDownEventTypes", "_mouseUpEventTypes", "_mouseClickEventTypes", "_mouseDoubleClickEventTypes", "_mouseOverTarget", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "DisplayObjectContainer",
 get$focus: function() {
  return this._focus;
},
 focus$0: function() { return this.get$focus().call$0(); },
 set$renderMode: function(value) {
  this._renderMode = value;
},
 _throwStageException$0: function() {
  throw $.$$throw($.ExceptionImplementation$('Error #2071: The Stage class does not implement this property or method.'));
},
 set$x: function(value) {
  this._throwStageException$0();
},
 set$y: function(value) {
  this._throwStageException$0();
},
 set$pivotX: function(value) {
  this._throwStageException$0();
},
 set$pivotY: function(value) {
  this._throwStageException$0();
},
 set$scaleX: function(value) {
  this._throwStageException$0();
},
 set$scaleY: function(value) {
  this._throwStageException$0();
},
 set$rotation: function(value) {
  this._throwStageException$0();
},
 set$alpha: function(value) {
  this._throwStageException$0();
},
 set$width: function(value) {
  this._throwStageException$0();
},
 set$height: function(value) {
  this._throwStageException$0();
},
 materialize$0: function() {
  var t1 = this._renderMode;
  if (typeof t1 !== 'string')
    return this.materialize$0$bailout(1, t1);
  if (!(t1 === 'auto'))
    t1 = t1 === 'once';
  else
    t1 = true;
  if (t1) {
    t1 = this._renderState;
    t1.reset$0();
    this.render$1(t1);
    t1 = this._renderMode;
    if (typeof t1 !== 'string')
      return this.materialize$0$bailout(3, t1);
    if (t1 === 'once')
      this._renderMode = 'stop';
  }
},
 materialize$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._renderMode;
    case 1:
      state = 0;
    case 2:
      if (state === 2 || state === 0 && !$.eqB(t1, 'auto'))
        switch (state) {
          case 0:
            t1 = this._renderMode;
          case 2:
            state = 0;
            t1 = $.eqB(t1, 'once');
        }
      else
        t1 = true;
    case 3:
      if (state === 3 || state === 0 && t1)
        switch (state) {
          case 0:
            t1 = this._renderState;
            t1.reset$0();
            this.render$1(t1);
            t1 = this._renderMode;
          case 3:
            state = 0;
            if ($.eqB(t1, 'once'))
              this._renderMode = 'stop';
        }
  }
},
 _onMouseCursorChanged$1: function(event$) {
  var t1 = $.Mouse__getCssStyle(this._mouseCursor);
  this._canvas.get$style().set$cursor(t1);
},
 get$_onMouseCursorChanged: function() { return new $.BoundClosure(this, '_onMouseCursorChanged$1'); },
 _onMouseEvent$1: function(event$) {
  event$.preventDefault$0();
  var time = $.DateImplementation$now().millisecondsSinceEpoch;
  var button = event$.get$button();
  if ($.ltB(button, 0) || $.gtB(button, 2))
    return;
  var stagePoint = $.Point$(event$.get$offsetX(), event$.get$offsetY());
  var target = !$.eqB(event$.get$type(), 'mouseout') ? $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), 'is$InteractiveObject') : null;
  if (typeof target === 'object' && target !== null && !!target.is$Sprite)
    var mouseCursor = target.useHandCursor === true ? 'button' : 'arrow';
  else
    mouseCursor = 'arrow';
  if (typeof target === 'object' && target !== null && !!target.is$SimpleButton)
    if (target.useHandCursor === true)
      mouseCursor = 'button';
  if (!(this._mouseCursor === mouseCursor)) {
    this._mouseCursor = mouseCursor;
    var t1 = $.Mouse__getCssStyle(mouseCursor);
    this._canvas.get$style().set$cursor(t1);
  }
  t1 = this._mouseOverTarget;
  if (!(t1 == null) && !$.eqB(t1, target)) {
    var localPoint = !(this._mouseOverTarget.get$stage() == null) ? this._mouseOverTarget.globalToLocal$1(stagePoint) : $.Point$zero();
    var mouseEvent = $.MouseEvent$('mouseOut', true);
    mouseEvent._localX = localPoint.get$x();
    mouseEvent._localY = localPoint.get$y();
    mouseEvent._stageX = stagePoint.x;
    mouseEvent._stageY = stagePoint.y;
    t1 = this._buttonState;
    if (button !== (button | 0))
      throw $.iae(button);
    if (button < 0 || button >= t1.length)
      throw $.ioore(button);
    mouseEvent._buttonDown = t1[button];
    this._mouseOverTarget.dispatchEvent$1(mouseEvent);
    this._mouseOverTarget = null;
  }
  t1 = !(target == null);
  if (t1 && !$.eqB(target, this._mouseOverTarget)) {
    localPoint = target.globalToLocal$1(stagePoint);
    mouseEvent = $.MouseEvent$('mouseOver', true);
    mouseEvent._localX = localPoint.get$x();
    mouseEvent._localY = localPoint.get$y();
    mouseEvent._stageX = stagePoint.x;
    mouseEvent._stageY = stagePoint.y;
    var t2 = this._buttonState;
    if (button !== (button | 0))
      throw $.iae(button);
    if (button < 0 || button >= t2.length)
      throw $.ioore(button);
    mouseEvent._buttonDown = t2[button];
    this._mouseOverTarget = target;
    this._mouseOverTarget.dispatchEvent$1(mouseEvent);
  }
  t2 = this._clickCount;
  if (button !== (button | 0))
    throw $.iae(button);
  if (button < 0 || button >= t2.length)
    throw $.ioore(button);
  var clickCount = t2[button];
  if ($.eqB(event$.get$type(), 'mousedown')) {
    var t3 = this._mouseDownEventTypes;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    var mouseEventType = t3[button];
    t3 = this._buttonState;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    t3[button] = true;
    t3 = this._clickTarget;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    if ($.eqB(target, t3[button])) {
      var t4 = this._clickTime;
      if (button < 0 || button >= t4.length)
        throw $.ioore(button);
      var t5 = $.gtB(time, $.add(t4[button], 500));
      t4 = t5;
    } else
      t4 = true;
    if (t4)
      clickCount = 0;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    t3[button] = target;
    t3 = this._clickTime;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    t3[button] = time;
    clickCount = $.add(clickCount, 1);
    if (button < 0 || button >= t2.length)
      throw $.ioore(button);
    t2[button] = clickCount;
  } else
    mouseEventType = null;
  if ($.eqB(event$.get$type(), 'mouseup')) {
    t3 = this._mouseUpEventTypes;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    mouseEventType = t3[button];
    t3 = this._buttonState;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    t3[button] = false;
    t3 = this._clickTarget;
    if (button < 0 || button >= t3.length)
      throw $.ioore(button);
    var isClick = $.eq(t3[button], target);
    if (isClick === true) {
      if (button < 0 || button >= t2.length)
        throw $.ioore(button);
      if ($.isEven(t2[button]) === true) {
        t2 = this._clickTime;
        if (button < 0 || button >= t2.length)
          throw $.ioore(button);
        t3 = $.ltB(time, $.add(t2[button], 500));
        var isDoubleClick = t3;
      } else
        isDoubleClick = false;
    } else
      isDoubleClick = false;
  } else {
    isDoubleClick = false;
    isClick = false;
  }
  if ($.eqB(event$.get$type(), 'mousemove')) {
    mouseEventType = 'mouseMove';
    clickCount = 0;
  }
  if (!(mouseEventType == null) && t1) {
    localPoint = target.globalToLocal$1(stagePoint);
    mouseEvent = $.MouseEvent$(mouseEventType, true);
    mouseEvent._localX = localPoint.get$x();
    mouseEvent._localY = localPoint.get$y();
    mouseEvent._stageX = stagePoint.x;
    mouseEvent._stageY = stagePoint.y;
    t1 = this._buttonState;
    if (button < 0 || button >= t1.length)
      throw $.ioore(button);
    mouseEvent._buttonDown = t1[button];
    mouseEvent._clickCount = clickCount;
    target.dispatchEvent$1(mouseEvent);
    if (isClick === true) {
      isDoubleClick = isDoubleClick && target.get$doubleClickEnabled() === true;
      if (isDoubleClick) {
        t2 = this._mouseDoubleClickEventTypes;
        if (button < 0 || button >= t2.length)
          throw $.ioore(button);
        mouseEventType = t2[button];
      } else {
        t2 = this._mouseClickEventTypes;
        if (button < 0 || button >= t2.length)
          throw $.ioore(button);
        mouseEventType = t2[button];
      }
      mouseEvent = $.MouseEvent$(mouseEventType, true);
      mouseEvent._localX = localPoint.get$x();
      mouseEvent._localY = localPoint.get$y();
      mouseEvent._stageX = stagePoint.x;
      mouseEvent._stageY = stagePoint.y;
      if (button < 0 || button >= t1.length)
        throw $.ioore(button);
      mouseEvent._buttonDown = t1[button];
      target.dispatchEvent$1(mouseEvent);
    }
  }
},
 get$_onMouseEvent: function() { return new $.BoundClosure(this, '_onMouseEvent$1'); },
 _onMouseWheel$1: function(event$) {
  var target = this.hitTestInput$2(event$.get$offsetX(), event$.get$offsetY());
  if (!(target == null)) {
    var stagePoint = $.Point$(event$.get$offsetX(), event$.get$offsetY());
    var localPoint = target.globalToLocal$1(stagePoint);
    var mouseEvent = $.MouseEvent$('mouseWheel', true);
    mouseEvent._localX = localPoint.get$x();
    mouseEvent._localY = localPoint.get$y();
    mouseEvent._stageX = stagePoint.x;
    mouseEvent._stageY = stagePoint.y;
    mouseEvent._delta = event$.get$wheelDelta();
    target.dispatchEvent$1(mouseEvent);
  }
},
 get$_onMouseWheel: function() { return new $.BoundClosure(this, '_onMouseWheel$1'); },
 _onKeyEvent$1: function(event$) {
  event$.preventDefault$0();
  var keyboardEventType = $.eqB(event$.get$type(), 'keyup') ? 'keyUp' : null;
  if ($.eqB(event$.get$type(), 'keydown'))
    keyboardEventType = 'keyDown';
  var keyboardEvent = $.KeyboardEvent$(keyboardEventType, true);
  keyboardEvent._altKey = event$.get$altKey();
  keyboardEvent._ctrlKey = event$.get$ctrlKey();
  keyboardEvent._shiftKey = event$.get$shiftKey();
  keyboardEvent._charCode = event$.get$charCode();
  keyboardEvent._keyCode = event$.get$keyCode();
  keyboardEvent._keyLocation = 0;
  if ($.eqB(event$.get$keyLocation(), 1))
    keyboardEvent._keyLocation = 1;
  if ($.eqB(event$.get$keyLocation(), 2))
    keyboardEvent._keyLocation = 2;
  if ($.eqB(event$.get$keyLocation(), 3))
    keyboardEvent._keyLocation = 3;
  if ($.eqB(event$.get$keyLocation(), 5))
    keyboardEvent._keyLocation = 4;
  if ($.eqB(event$.get$keyLocation(), 4))
    keyboardEvent._keyLocation = 4;
  var t1 = this._focus;
  if (!(t1 == null))
    t1.dispatchEvent$1(keyboardEvent);
},
 get$_onKeyEvent: function() { return new $.BoundClosure(this, '_onKeyEvent$1'); },
 _onTextEvent$1: function(event$) {
  var charCode = !$.eqB(event$.get$charCode(), 0) ? event$.get$charCode() : event$.get$keyCode();
  var textEvent = $.TextEvent$('textInput', true);
  textEvent._text = $.StringImplementation_String$fromCharCodes([charCode]);
  var t1 = this._focus;
  if (!(t1 == null))
    t1.dispatchEvent$1(textEvent);
},
 get$_onTextEvent: function() { return new $.BoundClosure(this, '_onTextEvent$1'); },
 Stage$2: function(name$, canvas) {
  this._name = name$;
  this._canvas = canvas;
  var t1 = this._canvas;
  t1.get$style().set$outline('none');
  t1.focus$0();
  this._context = canvas.get$context2d();
  this._renderState = $.RenderState$fromCanvasRenderingContext2D(this._context);
  this._renderMode = 'auto';
  this._mouseCursor = 'arrow';
  this._buttonState = [false, false, false];
  this._clickTarget = [null, null, null];
  this._clickTime = [0, 0, 0];
  this._clickCount = [0, 0, 0];
  this._mouseDownEventTypes = ['mouseDown', 'middleMouseDown', 'rightMouseDown'];
  this._mouseUpEventTypes = ['mouseUp', 'middleMouseUp', 'rightMouseUp'];
  this._mouseClickEventTypes = ['click', 'middleClick', 'rightClick'];
  this._mouseDoubleClickEventTypes = ['doubleClick', 'middleClick', 'rightClick'];
  this._mouseOverTarget = null;
  $.add$1(t1.get$on().get$mouseDown(), this.get$_onMouseEvent());
  $.add$1(t1.get$on().get$mouseUp(), this.get$_onMouseEvent());
  $.add$1(t1.get$on().get$mouseMove(), this.get$_onMouseEvent());
  $.add$1(t1.get$on().get$mouseOut(), this.get$_onMouseEvent());
  $.add$1(t1.get$on().get$mouseWheel(), this.get$_onMouseWheel());
  $.add$1(t1.get$on().get$keyDown(), this.get$_onKeyEvent());
  $.add$1(t1.get$on().get$keyUp(), this.get$_onKeyEvent());
  $.add$1(t1.get$on().get$keyPress(), this.get$_onTextEvent());
  $.Mouse__eventDispatcher().addEventListener$2('mouseCursorChanged', this.get$_onMouseCursorChanged());
},
 is$Stage: true
};

$$.Sprite = {"":
 ["buttonMode", "useHandCursor", "_children", "_mouseChildren", "_tabChildren", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "DisplayObjectContainer",
 is$Sprite: true
};

$$.Bitmap = {"":
 ["bitmapData=", "pixelSnapping", "smoothing", "clipRectangle=", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "DisplayObject",
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  var t1 = this.bitmapData;
  if (!(t1 == null)) {
    t1 = t1.get$width();
    if (typeof t1 !== 'number')
      return this.getBoundsTransformed$2$bailout(1, matrix, returnRectangle, t1, 0);
    var width = t1;
  } else
    width = 0;
  t1 = this.bitmapData;
  if (!(t1 == null)) {
    t1 = t1.get$height();
    if (typeof t1 !== 'number')
      return this.getBoundsTransformed$2$bailout(2, matrix, returnRectangle, width, t1);
    var height = t1;
  } else
    height = 0;
  return $._getBoundsTransformedHelper(matrix, width, height, returnRectangle);
},
 getBoundsTransformed$2$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var matrix = env0;
      var returnRectangle = env1;
      t1 = env2;
      break;
    case 2:
      matrix = env0;
      returnRectangle = env1;
      width = env2;
      t1 = env3;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this.bitmapData;
    case 1:
      if (state === 1 || state === 0 && !(t1 == null))
        switch (state) {
          case 0:
            t1 = t1.get$width();
          case 1:
            state = 0;
            var width = t1;
        }
      else
        width = 0;
      t1 = this.bitmapData;
    case 2:
      if (state === 2 || state === 0 && !(t1 == null))
        switch (state) {
          case 0:
            t1 = t1.get$height();
          case 2:
            state = 0;
            var height = t1;
        }
      else
        height = 0;
      return $._getBoundsTransformedHelper(matrix, width, height, returnRectangle);
  }
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  if (typeof localX !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0);
  if (typeof localY !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0);
  var t1 = this.bitmapData;
  if (!(t1 == null))
    if (localX >= 0)
      if (localY >= 0) {
        t1 = t1.get$width();
        if (typeof t1 !== 'number')
          return this.hitTestInput$2$bailout(2, localX, localY, t1);
        if (localX < t1) {
          t1 = this.bitmapData.get$height();
          if (typeof t1 !== 'number')
            return this.hitTestInput$2$bailout(3, localY, t1, 0);
          t1 = localY < t1;
        } else
          t1 = false;
      } else
        t1 = false;
    else
      t1 = false;
  else
    t1 = false;
  if (t1)
    return this;
  return;
},
 hitTestInput$2$bailout: function(state, env0, env1, env2) {
  switch (state) {
    case 1:
      var localX = env0;
      var localY = env1;
      break;
    case 2:
      localX = env0;
      localY = env1;
      t1 = env2;
      break;
    case 3:
      localY = env0;
      t1 = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    default:
      if (state === 3 || state === 2 || state === 0 && !(this.bitmapData == null))
        switch (state) {
          case 0:
          default:
            if (state === 3 || state === 2 || state === 0 && $.geB(localX, 0))
              switch (state) {
                case 0:
                default:
                  if (state === 3 || state === 2 || state === 0 && $.geB(localY, 0))
                    switch (state) {
                      case 0:
                        var t1 = this.bitmapData.get$width();
                      case 2:
                        state = 0;
                      case 3:
                        if (state === 3 || state === 0 && $.ltB(localX, t1))
                          switch (state) {
                            case 0:
                              t1 = this.bitmapData.get$height();
                            case 3:
                              state = 0;
                              t1 = $.ltB(localY, t1);
                          }
                        else
                          t1 = false;
                    }
                  else
                    t1 = false;
              }
            else
              t1 = false;
        }
      else
        t1 = false;
      if (t1)
        return this;
      return;
  }
},
 render$1: function(renderState) {
  var t1 = this.bitmapData;
  if (!(t1 == null)) {
    var t2 = this.clipRectangle;
    if (t2 == null)
      t1.render$1(renderState);
    else
      t1.renderClipped$2(renderState, t2);
  }
},
 Bitmap$3: function(bitmapData, pixelSnapping, smoothing) {
  this.clipRectangle = null;
}
};

$$.BitmapData = {"":
 ["_width", "_height", "_transparent", "_htmlElement", "_context", "_frameMode", "_frameOffsetX", "_frameOffsetY", "_frameX", "_frameY", "_frameWidth", "_frameHeight"],
 "super": "Object",
 get$width: function() {
  return this._width;
},
 get$height: function() {
  return this._height;
},
 render$1: function(renderState) {
  switch (this._frameMode) {
    case 0:
      renderState.get$context().drawImage$3(this._htmlElement, 0, 0);
      break;
    case 1:
      var t1 = renderState.get$context();
      var t2 = this._htmlElement;
      var t3 = this._frameX;
      var t4 = this._frameY;
      var t5 = this._frameWidth;
      var t6 = this._frameHeight;
      t1.drawImage$9(t2, t3, t4, t5, t6, this._frameOffsetX, this._frameOffsetY, t5, t6);
      break;
    case 2:
      t1 = renderState.get$context();
      t2 = this._frameOffsetX;
      t3 = this._frameOffsetY;
      t4 = this._frameHeight;
      t1.transform$6(0, -1, 1, 0, t2, $.add(t3, t4));
      t2 = renderState.get$context();
      t1 = this._htmlElement;
      t5 = this._frameX;
      t6 = this._frameY;
      var t7 = this._frameWidth;
      t2.drawImage$9(t1, t5, t6, t4, t7, 0, 0, t4, t7);
      break;
  }
},
 renderClipped$2: function(renderState, clipRectangle) {
  if ($.leB(clipRectangle.get$width(), 0) || $.leB(clipRectangle.get$height(), 0))
    return;
  switch (this._frameMode) {
    case 0:
      renderState.get$context().drawImage$9(this._htmlElement, clipRectangle.get$x(), clipRectangle.get$y(), clipRectangle.get$width(), clipRectangle.get$height(), clipRectangle.get$x(), clipRectangle.get$y(), clipRectangle.get$width(), clipRectangle.get$height());
      break;
    case 1:
      var fLeft = this._frameX;
      var fTop = this._frameY;
      var fRight = $.add(fLeft, this._frameWidth);
      var fBottom = $.add(fTop, this._frameHeight);
      var t1 = this._frameOffsetX;
      var cLeft = $.add($.sub(fLeft, t1), clipRectangle.get$x());
      var t2 = this._frameOffsetY;
      var cTop = $.add($.sub(fTop, t2), clipRectangle.get$y());
      var cRight = $.add(cLeft, clipRectangle.get$width());
      var cBottom = $.add(cTop, clipRectangle.get$height());
      var iLeft = $.gtB(fLeft, cLeft) ? fLeft : cLeft;
      var iTop = $.gtB(fTop, cTop) ? fTop : cTop;
      var iRight = $.ltB(fRight, cRight) ? fRight : cRight;
      var iBottom = $.ltB(fBottom, cBottom) ? fBottom : cBottom;
      var iOffsetX = $.add($.sub(t1, fLeft), iLeft);
      var iOffsetY = $.add($.sub(t2, fTop), iTop);
      var iWidth = $.sub(iRight, iLeft);
      var iHeight = $.sub(iBottom, iTop);
      if ($.gtB(iWidth, 0) && $.gtB(iHeight, 0))
        renderState.get$context().drawImage$9(this._htmlElement, iLeft, iTop, iWidth, iHeight, iOffsetX, iOffsetY, iWidth, iHeight);
      break;
    case 2:
      fLeft = this._frameX;
      fTop = this._frameY;
      t1 = this._frameHeight;
      fRight = $.add(fLeft, t1);
      fBottom = $.add(fTop, this._frameWidth);
      t2 = this._frameOffsetY;
      cLeft = $.sub($.add($.sub($.add(fLeft, t2), clipRectangle.get$y()), t1), clipRectangle.get$height());
      var t3 = this._frameOffsetX;
      cTop = $.add($.sub(fTop, t3), clipRectangle.get$x());
      cRight = $.add(cLeft, clipRectangle.get$height());
      cBottom = $.add(cTop, clipRectangle.get$width());
      iLeft = $.gtB(fLeft, cLeft) ? fLeft : cLeft;
      iTop = $.gtB(fTop, cTop) ? fTop : cTop;
      iRight = $.ltB(fRight, cRight) ? fRight : cRight;
      iBottom = $.ltB(fBottom, cBottom) ? fBottom : cBottom;
      iOffsetX = $.add($.sub(t3, fTop), iTop);
      iOffsetY = $.sub($.add(t2, fRight), iRight);
      iWidth = $.sub(iBottom, iTop);
      iHeight = $.sub(iRight, iLeft);
      if ($.gtB(iWidth, 0) && $.gtB(iHeight, 0)) {
        renderState.get$context().transform$6(0, -1, 1, 0, iOffsetX, $.add(iOffsetY, iHeight));
        renderState.get$context().drawImage$9(this._htmlElement, iLeft, iTop, iHeight, iWidth, 0, 0, iHeight, iWidth);
      }
      break;
  }
},
 BitmapData$fromTextureAtlasFrame$1: function(textureAtlasFrame) {
  this._width = textureAtlasFrame.get$originalWidth();
  this._height = textureAtlasFrame.get$originalHeight();
  this._transparent = true;
  this._htmlElement = textureAtlasFrame.get$textureAtlas().get$imageElement();
  this._frameMode = textureAtlasFrame.get$rotated() === true ? 2 : 1;
  this._frameOffsetX = $.toDouble(textureAtlasFrame.get$offsetX());
  this._frameOffsetY = $.toDouble(textureAtlasFrame.get$offsetY());
  this._frameX = $.toDouble(textureAtlasFrame.get$frameX());
  this._frameY = $.toDouble(textureAtlasFrame.get$frameY());
  this._frameWidth = $.toDouble(textureAtlasFrame.get$frameWidth());
  this._frameHeight = $.toDouble(textureAtlasFrame.get$frameHeight());
},
 BitmapData$4: function(width, height, transparent, fillColor) {
  this._width = width;
  this._height = height;
  this._transparent = transparent;
  var canvas = $._Elements_CanvasElement(this._width, this._height);
  this._context = canvas.get$context2d();
  var t1 = this._transparent === true ? $._color2rgba(fillColor) : $._color2rgb(fillColor);
  var t2 = this._context;
  t2.set$fillStyle(t1);
  t2.fillRect$4(0, 0, width, height);
  this._htmlElement = canvas;
  this._frameMode = 0;
},
 BitmapData$fromImageElement$1: function(imageElement) {
  this._width = imageElement.get$naturalWidth();
  this._height = imageElement.get$naturalHeight();
  this._transparent = true;
  this._htmlElement = imageElement;
  this._frameMode = 0;
}
};

$$.SimpleButton = {"":
 ["upState", "overState", "downState", "hitTestState", "useHandCursor", "enabled", "_currentState", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "InteractiveObject",
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  var t1 = this._currentState;
  if (!(t1 == null)) {
    var t2 = this._tmpMatrix;
    t2.copyFromAndConcat$2(t1.get$_transformationMatrix(), matrix);
    return this._currentState.getBoundsTransformed$2(t2, returnRectangle);
  }
  return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  if (typeof localX !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0, 0, 0, 0);
  if (typeof localY !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0, 0, 0, 0);
  var t1 = this.hitTestState;
  var matrix = t1.get$_transformationMatrix();
  var t2 = matrix.get$tx();
  if (typeof t2 !== 'number')
    return this.hitTestInput$2$bailout(2, localX, localY, t1, matrix, t2, 0);
  var deltaX = localX - t2;
  t2 = matrix.get$ty();
  if (typeof t2 !== 'number')
    return this.hitTestInput$2$bailout(3, deltaX, localY, t2, t1, matrix, 0);
  var deltaY = localY - t2;
  t2 = matrix.get$d();
  if (typeof t2 !== 'number')
    return this.hitTestInput$2$bailout(4, deltaX, t1, deltaY, t2, matrix, 0);
  t2 *= deltaX;
  var t6 = matrix.get$c();
  if (typeof t6 !== 'number')
    return this.hitTestInput$2$bailout(5, deltaX, deltaY, t2, t6, t1, matrix);
  t2 -= t6 * deltaY;
  var t8 = matrix.get$det();
  if (typeof t8 !== 'number')
    return this.hitTestInput$2$bailout(6, deltaX, deltaY, t1, t2, t8, matrix);
  var childX = t2 / t8;
  t8 = matrix.get$a();
  if (typeof t8 !== 'number')
    return this.hitTestInput$2$bailout(7, t8, deltaX, deltaY, t1, matrix, childX);
  t8 *= deltaY;
  var t10 = matrix.get$b();
  if (typeof t10 !== 'number')
    return this.hitTestInput$2$bailout(8, deltaX, t8, t10, t1, matrix, childX);
  t8 -= t10 * deltaX;
  var t12 = matrix.get$det();
  if (typeof t12 !== 'number')
    return this.hitTestInput$2$bailout(9, t12, t1, childX, t8, 0, 0);
  if (!(t1.hitTestInput$2(childX, t8 / t12) == null))
    return this;
  return;
},
 hitTestInput$2$bailout: function(state, env0, env1, env2, env3, env4, env5) {
  switch (state) {
    case 1:
      var localX = env0;
      var localY = env1;
      break;
    case 2:
      localX = env0;
      localY = env1;
      t1 = env2;
      matrix = env3;
      t2 = env4;
      break;
    case 3:
      deltaX = env0;
      localY = env1;
      t2 = env2;
      t1 = env3;
      matrix = env4;
      break;
    case 4:
      deltaX = env0;
      t1 = env1;
      deltaY = env2;
      t2 = env3;
      matrix = env4;
      break;
    case 5:
      deltaX = env0;
      deltaY = env1;
      t2 = env2;
      t6 = env3;
      t1 = env4;
      matrix = env5;
      break;
    case 6:
      deltaX = env0;
      deltaY = env1;
      t1 = env2;
      t2 = env3;
      t8 = env4;
      matrix = env5;
      break;
    case 7:
      t8 = env0;
      deltaX = env1;
      deltaY = env2;
      t1 = env3;
      matrix = env4;
      childX = env5;
      break;
    case 8:
      deltaX = env0;
      t8 = env1;
      t10 = env2;
      t1 = env3;
      matrix = env4;
      childX = env5;
      break;
    case 9:
      t12 = env0;
      t1 = env1;
      childX = env2;
      t8 = env3;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this.hitTestState;
    default:
      if (state === 9 || state === 8 || state === 7 || state === 6 || state === 5 || state === 4 || state === 3 || state === 2 || state === 0 && !(t1 === null))
        switch (state) {
          case 0:
            var matrix = t1.get$_transformationMatrix();
            var t2 = matrix.get$tx();
          case 2:
            state = 0;
            var deltaX = $.sub(localX, t2);
            t2 = matrix.get$ty();
          case 3:
            state = 0;
            var deltaY = $.sub(localY, t2);
            t2 = matrix.get$d();
          case 4:
            state = 0;
            t2 = $.mul(t2, deltaX);
            var t6 = matrix.get$c();
          case 5:
            state = 0;
            t2 = $.sub(t2, $.mul(t6, deltaY));
            var t8 = matrix.get$det();
          case 6:
            state = 0;
            var childX = $.div(t2, t8);
            t8 = matrix.get$a();
          case 7:
            state = 0;
            t8 = $.mul(t8, deltaY);
            var t10 = matrix.get$b();
          case 8:
            state = 0;
            t8 = $.sub(t8, $.mul(t10, deltaX));
            var t12 = matrix.get$det();
          case 9:
            state = 0;
            if (!(t1.hitTestInput$2(childX, $.div(t8, t12)) == null))
              return this;
        }
      return;
  }
},
 render$1: function(renderState) {
  var t1 = this._currentState;
  if (!(t1 == null))
    renderState.renderDisplayObject$1(t1);
},
 _onMouseEvent$1: function(mouseEvent) {
  var over = $.eqB(this.hitTestInput$2(mouseEvent.get$localX(), mouseEvent.get$localY()), this) && !$.eqB(mouseEvent.get$type(), 'mouseOut');
  var down = mouseEvent.get$buttonDown();
  this._currentState = this.upState;
  if (over && down === true)
    this._currentState = this.downState;
  if (over && down !== true)
    this._currentState = this.overState;
},
 get$_onMouseEvent: function() { return new $.BoundClosure(this, '_onMouseEvent$1'); },
 SimpleButton$4: function(upState, overState, downState, hitTestState) {
  this.addEventListener$2('mouseOver', this.get$_onMouseEvent());
  this.addEventListener$2('mouseOut', this.get$_onMouseEvent());
  this.addEventListener$2('mouseDown', this.get$_onMouseEvent());
  this.addEventListener$2('mouseUp', this.get$_onMouseEvent());
  this._currentState = this.upState;
},
 is$SimpleButton: true
};

$$.Mask = {"":
 ["_lib1_type", "_rectangle", "_circle", "_lib1_points="],
 "super": "Object",
 render$1: function(renderState) {
  var context = renderState.get$context();
  context.beginPath$0();
  switch (this._lib1_type) {
    case 0:
      var t1 = this._rectangle;
      context.rect$4(t1.get$x(), t1.get$y(), t1.get$width(), t1.get$height());
      break;
    case 1:
      t1 = this._circle;
      context.arc$6(t1.get$x(), t1.get$y(), t1.get$radius(), 0, 6.283185307179586, false);
      break;
    case 2:
      context.moveTo$2($.index(this._lib1_points, 0).get$x(), $.index(this._lib1_points, 0).get$y());
      for (var i = 1; $.ltB(i, $.get$length(this._lib1_points)); ++i)
        context.lineTo$2($.index(this._lib1_points, i).get$x(), $.index(this._lib1_points, i).get$y());
      break;
  }
  context.clip$0();
},
 Mask$rectangle$4: function(x, y, width, height) {
  this._lib1_type = 0;
  this._rectangle = $.Rectangle$(x, y, width, height);
}
};

$$.Sound = {"":
 [],
 "super": "Object"
};

$$.SoundChannel = {"":
 [],
 "super": "EventDispatcher"
};

$$.SoundTransform = {"":
 ["volume=", "pan", "leftToLeft", "leftToRight", "rightToRight", "rightToLeft"],
 "super": "Object"
};

$$.AudioElementSound = {"":
 ["_audio?", "_audioPool", "_loadCompleter?", "_soundChannels", "_audioCanPlayThroughHandler", "_audioErrorHandler", "_audioEndedHandler"],
 "super": "Sound",
 load$1: function(url) {
  this._loadCompleter = $.CompleterImpl$();
  this._audio = $._AudioElementFactoryProvider_AudioElement($.Sound_adaptAudioUrl(url));
  $.add$1(this._audio.get$on().get$canPlayThrough(), this._audioCanPlayThroughHandler);
  $.add$1(this._audio.get$on().get$error(), this._audioErrorHandler);
  $.add$1(this._audio.get$on().get$ended(), this._audioEndedHandler);
  this._audio.load$0();
  $.add$1($.document().get$body().get$elements(), this._audio);
  this._audioPool = $.ListImplementation_List(null);
  $.add$1(this._audioPool, this._audio);
  return this._loadCompleter.get$future();
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 get$length: function() {
  return this._audio.get$duration();
},
 play$2: function(loop, soundTransform) {
  if (soundTransform == null)
    soundTransform = $.SoundTransform$(1, 0);
  return $.AudioElementSoundChannel$(this, loop, soundTransform);
},
 play$0: function() {
  return this.play$2(false,null)
},
 _getAudioElement$1: function(soundChannel) {
  if ($.eqB($.get$length(this._audioPool), 0)) {
    var audio = this._audio.clone$1(true);
    $.add$1(audio.get$on().get$ended(), this.get$_onAudioEnded());
  } else {
    audio = $.index(this._audioPool, 0);
    $.removeRange(this._audioPool, 0, 1);
  }
  this._soundChannels.push(soundChannel);
  return audio;
},
 _releaseAudioElement$1: function(soundChannel) {
  var audio = soundChannel._audio;
  var t1 = this._soundChannels;
  $.removeRange(t1, $.indexOf$1(t1, soundChannel), 1);
  $.add$1(this._audioPool, audio);
  if ($.gtB(this._audio.get$currentTime(), 0) && $.eqB(this._audio.get$ended(), false))
    this._audio.set$currentTime(0);
},
 _onAudioEnded$1: function(event$) {
  var audio = event$.get$target();
  var t1 = this._soundChannels;
  var soundChannel = null;
  var i = 0;
  while (true) {
    if (!(i < t1.length && soundChannel == null))
      break;
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    if ($.eqB(t1[i].get$_audio(), audio)) {
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      soundChannel = t1[i];
    }
    ++i;
  }
  if (!(soundChannel == null))
    soundChannel.stop$0();
},
 get$_onAudioEnded: function() { return new $.BoundClosure(this, '_onAudioEnded$1'); },
 _onAudioCanPlayThrough$1: function(event$) {
  this._audio.get$on().get$canPlayThrough().remove$1(this._audioCanPlayThroughHandler);
  this._audio.get$on().get$error().remove$1(this._audioErrorHandler);
  if ($.eqB(this._loadCompleter.get$future().get$isComplete(), false))
    this._loadCompleter.complete$1(this);
},
 get$_onAudioCanPlayThrough: function() { return new $.BoundClosure(this, '_onAudioCanPlayThrough$1'); },
 _onAudioError$1: function(event$) {
  this._audio.get$on().get$canPlayThrough().remove$1(this._audioCanPlayThroughHandler);
  this._audio.get$on().get$error().remove$1(this._audioErrorHandler);
  if ($.eqB(this._loadCompleter.get$future().get$isComplete(), false))
    this._loadCompleter.completeException$1('Failed to load audio.');
},
 get$_onAudioError: function() { return new $.BoundClosure(this, '_onAudioError$1'); },
 AudioElementSound$0: function() {
  this._soundChannels = $.ListImplementation_List(null);
  this._audioCanPlayThroughHandler = this.get$_onAudioCanPlayThrough();
  this._audioErrorHandler = this.get$_onAudioError();
  this._audioEndedHandler = this.get$_onAudioEnded();
}
};

$$.AudioElementSoundChannel = {"":
 ["_audioElementSound", "_audio?", "_loop", "_soundTransform", "_eventListenersMap"],
 "super": "SoundChannel",
 get$soundTransform: function() {
  return this._soundTransform;
},
 set$soundTransform: function(value) {
  this._soundTransform = value;
  var t1 = this._audio;
  if (!(t1 == null)) {
    var t2 = this._soundTransform;
    t1.set$volume(!(t2 == null) ? t2.get$volume() : 1);
  }
},
 stop$0: function() {
  var t1 = this._audio;
  if (!(t1 == null)) {
    if ($.eqB(t1.get$ended(), false))
      this._audio.pause$0();
    this._audioElementSound._releaseAudioElement$1(this);
    this._audio = null;
  }
},
 AudioElementSoundChannel$3: function(audioElementSound, loop, soundTransform) {
  this._audioElementSound = audioElementSound;
  this._loop = loop;
  this._soundTransform = soundTransform;
  this._audio = audioElementSound._getAudioElement$1(this);
  var t1 = this._loop;
  this._audio.set$loop(t1);
  this.set$soundTransform(soundTransform);
  this._audio.play$0();
}
};

$$.WebAudioApiSound = {"":
 ["_audioContext?", "_lib1_buffer?", "_loadCompleter?"],
 "super": "Sound",
 load$1: function(url) {
  this._audioContext = $.SoundMixer__audioContext();
  if (this._audioContext == null)
    throw $.$$throw('This browser does not support Web Audio API.');
  this._loadCompleter = $.CompleterImpl$();
  var request = $._HttpRequestFactoryProvider_HttpRequest();
  request.open$3('GET', $.Sound_adaptAudioUrl(url), true);
  request.set$responseType('arraybuffer');
  $.add$1(request.get$on().get$load(), new $.WebAudioApiSound_load_anon(this, request));
  $.add$1(request.get$on().get$error(), new $.WebAudioApiSound_load_anon0(this));
  request.send$0();
  return this._loadCompleter.get$future();
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 get$length: function() {
  return this._lib1_buffer.get$duration();
},
 play$2: function(loop, soundTransform) {
  if (soundTransform == null)
    soundTransform = $.SoundTransform$(1, 0);
  return $.WebAudioApiSoundChannel$(this, loop, soundTransform);
},
 play$0: function() {
  return this.play$2(false,null)
},
 _audioBufferLoaded$1: function(buffer) {
  this._lib1_buffer = buffer;
  if ($.eqB(this._loadCompleter.get$future().get$isComplete(), false))
    this._loadCompleter.complete$1(this);
  return true;
},
 get$_audioBufferLoaded: function() { return new $.BoundClosure(this, '_audioBufferLoaded$1'); },
 _audioBufferError$1: function(error) {
  if ($.eqB(this._loadCompleter.get$future().get$isComplete(), false))
    this._loadCompleter.completeException$1('Failed to decode audio.');
  return true;
},
 get$_audioBufferError: function() { return new $.BoundClosure(this, '_audioBufferError$1'); }
};

$$.WebAudioApiSoundChannel = {"":
 ["_webAudioApiSound", "_gainNode", "_sourceNode", "_loop", "_soundTransform", "_eventListenersMap"],
 "super": "SoundChannel",
 get$soundTransform: function() {
  return this._soundTransform;
},
 set$soundTransform: function(value) {
  this._soundTransform = value;
  var t1 = this._soundTransform;
  t1 = !(t1 == null) ? $.pow(t1.get$volume(), 2) : 1;
  this._gainNode.get$gain().set$value(t1);
},
 stop$0: function() {
  this._sourceNode.noteOff$1(0);
},
 WebAudioApiSoundChannel$3: function(webAudioApiSound, loop, soundTransform) {
  this._webAudioApiSound = webAudioApiSound;
  this._loop = loop;
  var t1 = this._webAudioApiSound;
  var context = t1.get$_audioContext();
  this._gainNode = context.createGainNode$0();
  var t2 = this._gainNode;
  t2.connect$3(context.get$destination(), 0, 0);
  this.set$soundTransform(soundTransform);
  this._sourceNode = context.createBufferSource$0();
  t1 = t1.get$_lib1_buffer();
  var t3 = this._sourceNode;
  t3.set$buffer(t1);
  t3.set$loop(loop);
  t3.connect$3(t2, 0, 0);
  t3.noteOn$1(0);
}
};

$$.MockSound = {"":
 [],
 "super": "Sound",
 load$1: function(url) {
  var loadCompleter = $.CompleterImpl$();
  $.window().setTimeout$2(new $.MockSound_load_anon(this, loadCompleter), 1);
  return loadCompleter.get$future();
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 get$length: function() {
  return (0/0);
},
 play$2: function(loop, soundTransform) {
  if (soundTransform == null)
    soundTransform = $.SoundTransform$(1, 0);
  return $.MockSoundChannel$(this, loop, soundTransform);
},
 play$0: function() {
  return this.play$2(false,null)
}
};

$$.MockSoundChannel = {"":
 ["_loop", "_soundTransform", "_eventListenersMap"],
 "super": "SoundChannel",
 get$soundTransform: function() {
  return this._soundTransform;
},
 set$soundTransform: function(value) {
  this._soundTransform = value;
},
 stop$0: function() {
},
 MockSoundChannel$3: function(mockSound, loop, soundTransform) {
  this._loop = loop;
  this._soundTransform = soundTransform;
}
};

$$.TextField = {"":
 ["_text", "_textColor", "_defaultTextFormat", "_autoSize", "_gridFitType", "_lib1_type", "_wordWrap", "_background", "_backgroundColor", "_border", "_borderColor", "_textWidth", "_textHeight", "_linesText", "_linesMetrics", "_canvasRefreshPending", "_canvasWidth", "_canvasHeight", "_canvas", "_context", "doubleClickEnabled", "mouseEnabled", "tabEnabled", "tabIndex", "_x", "_y", "_pivotX", "_pivotY", "_scaleX", "_scaleY", "_rotation", "_transformationMatrixPrivate", "_transformationMatrixRefresh", "_alpha", "_visible", "_name", "_lib1_parent", "mask", "_tmpMatrix", "_tmpMatrixIdentity", "_eventListenersMap"],
 "super": "InteractiveObject",
 get$type: function() {
  return this._lib1_type;
},
 get$width: function() {
  return this._canvasWidth;
},
 get$height: function() {
  return this._canvasHeight;
},
 set$text: function(value) {
  this._text = value;
  this._canvasRefreshPending = true;
},
 set$defaultTextFormat: function(value) {
  this._defaultTextFormat = value;
  this._textColor = this._defaultTextFormat.get$color();
  this._canvasRefreshPending = true;
},
 set$wordWrap: function(value) {
  this._wordWrap = value;
  this._canvasRefreshPending = true;
},
 set$width: function(value) {
  this._canvasWidth = value;
  this._canvasRefreshPending = true;
},
 set$height: function(value) {
  this._canvasHeight = value;
  this._canvasRefreshPending = true;
},
 get$textWidth: function() {
  this._canvasRefresh$0();
  return this._textWidth;
},
 get$textHeight: function() {
  this._canvasRefresh$0();
  return this._textHeight;
},
 getBoundsTransformed$2: function(matrix, returnRectangle) {
  return $._getBoundsTransformedHelper(matrix, this._canvasWidth, this._canvasHeight, returnRectangle);
},
 getBoundsTransformed$1: function(matrix) {
  return this.getBoundsTransformed$2(matrix,null)
},
 hitTestInput$2: function(localX, localY) {
  if (typeof localX !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0);
  if (typeof localY !== 'number')
    return this.hitTestInput$2$bailout(1, localX, localY, 0);
  if (localX >= 0)
    if (localY >= 0) {
      var t1 = this._canvasWidth;
      if (typeof t1 !== 'number')
        return this.hitTestInput$2$bailout(2, localX, localY, t1);
      if (localX < t1) {
        t1 = this._canvasHeight;
        if (typeof t1 !== 'number')
          return this.hitTestInput$2$bailout(3, localY, t1, 0);
        t1 = localY < t1;
      } else
        t1 = false;
    } else
      t1 = false;
  else
    t1 = false;
  if (t1)
    return this;
  return;
},
 hitTestInput$2$bailout: function(state, env0, env1, env2) {
  switch (state) {
    case 1:
      var localX = env0;
      var localY = env1;
      break;
    case 2:
      localX = env0;
      localY = env1;
      t1 = env2;
      break;
    case 3:
      localY = env0;
      t1 = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    default:
      if (state === 3 || state === 2 || state === 0 && $.geB(localX, 0))
        switch (state) {
          case 0:
          default:
            if (state === 3 || state === 2 || state === 0 && $.geB(localY, 0))
              switch (state) {
                case 0:
                  var t1 = this._canvasWidth;
                case 2:
                  state = 0;
                case 3:
                  if (state === 3 || state === 0 && $.ltB(localX, t1))
                    switch (state) {
                      case 0:
                        t1 = this._canvasHeight;
                      case 3:
                        state = 0;
                        t1 = $.ltB(localY, t1);
                    }
                  else
                    t1 = false;
              }
            else
              t1 = false;
        }
      else
        t1 = false;
      if (t1)
        return this;
      return;
  }
},
 render$1: function(renderState) {
  this._canvasRefresh$0();
  renderState._context.drawImage$3(this._canvas, 0, 0);
},
 _processTextLines$0: function() {
  var t1 = this._linesText;
  $.clear(t1);
  var t2 = this._linesMetrics;
  $.clear(t2);
  if ($.eqB(this._wordWrap, false))
    t1.push(this._text);
  else {
    var lineBuffer = $.StringBufferImpl$('');
    for (var t3 = $.iterator($.split(this._text, ' ')), line = null, previousLength = null; t3.hasNext$0() === true;) {
      var word = t3.next$0();
      previousLength = $.get$length(lineBuffer);
      lineBuffer.add$1($.gtB(previousLength, 0) ? ' ' + $.S(word) : word);
      line = lineBuffer.toString$0();
      if ($.gtB(this._context.measureText$1(line).get$width(), this._canvasWidth)) {
        if ($.gtB(previousLength, 0))
          line = $.substring$2(line, 0, previousLength);
        else
          word = '';
        t1.push(line);
        lineBuffer.clear$0();
        lineBuffer.add$1(word);
      }
    }
    if ($.eqB(lineBuffer.isEmpty$0(), false))
      t1.push(lineBuffer.toString$0());
  }
  this._textWidth = 0;
  this._textHeight = 0;
  for (t1 = $.iterator(t1); t1.hasNext$0() === true;) {
    t3 = t1.next$0();
    var metrics = this._context.measureText$1(t3);
    var offsetX = $.eqB(this._defaultTextFormat.get$align(), 'center') || $.eqB(this._defaultTextFormat.get$align(), 'justify') ? $.div($.sub(this._canvasWidth, metrics.get$width()), 2) : 0;
    if ($.eqB(this._defaultTextFormat.get$align(), 'right') || $.eqB(this._defaultTextFormat.get$align(), 'end'))
      offsetX = $.sub(this._canvasWidth, metrics.get$width());
    var textLineMetrics = $.TextLineMetrics$(offsetX, metrics.get$width(), this._defaultTextFormat.get$size(), 0, 0, 0);
    t2.push(textLineMetrics);
    this._textWidth = $.max(this._textWidth, textLineMetrics.width);
    this._textHeight = $.add(this._textHeight, textLineMetrics.height);
  }
},
 _canvasRefresh$0: function() {
  if (this._canvasRefreshPending === true) {
    this._canvasRefreshPending = false;
    var canvasWidthInt = $.toInt($.ceil(this._canvasWidth));
    var canvasHeightInt = $.toInt($.ceil(this._canvasHeight));
    if (this._canvas == null) {
      this._canvas = $._Elements_CanvasElement(canvasWidthInt, canvasHeightInt);
      this._context = this._canvas.get$context2d();
    }
    if (!$.eqB(this._canvas.get$width(), canvasWidthInt))
      this._canvas.set$width(canvasWidthInt);
    if (!$.eqB(this._canvas.get$height(), canvasHeightInt))
      this._canvas.set$height(canvasHeightInt);
    var fontStyle = $.StringBufferImpl$('');
    fontStyle.add$1(this._defaultTextFormat.get$italic() === true ? 'italic ' : 'normal ');
    fontStyle.add$1('normal ');
    fontStyle.add$1(this._defaultTextFormat.get$bold() === true ? 'bold ' : 'normal ');
    fontStyle.add$1($.S(this._defaultTextFormat.get$size()) + 'px ');
    fontStyle.add$1($.S(this._defaultTextFormat.get$font()) + ',sans-serif');
    var t1 = fontStyle.toString$0();
    this._context.set$font(t1);
    this._context.set$textAlign('start');
    this._context.set$textBaseline('top');
    t1 = $._color2rgb(this._textColor);
    this._context.set$fillStyle(t1);
    this._processTextLines$0();
    if (this._background === true) {
      t1 = $._color2rgb(this._backgroundColor);
      this._context.set$fillStyle(t1);
      this._context.fillRect$4(0, 0, this._canvasWidth, this._canvasHeight);
    } else
      this._context.clearRect$4(0, 0, this._canvasWidth, this._canvasHeight);
    for (var t1 = this._linesText, t2 = this._linesMetrics, offsetY = 0, i = 0; i < t1.length; ++i) {
      if (i < 0 || i >= t2.length)
        throw $.ioore(i);
      var metrics = t2[i];
      var t3 = $._color2rgb(this._textColor);
      this._context.set$fillStyle(t3);
      t3 = this._context;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      t3.fillText$3(t1[i], metrics.get$x(), offsetY);
      t3 = metrics.get$height();
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      offsetY += t3;
    }
    if (this._border === true) {
      t1 = $._color2rgb(this._borderColor);
      this._context.set$strokeStyle(t1);
      this._context.set$lineWidth(1);
      this._context.strokeRect$4(0, 0, this._canvasWidth, this._canvasHeight);
    }
  }
},
 TextField$0: function() {
  this._defaultTextFormat = $.TextFormat$(null, 12, 0, false, false, false, null, null, 'left', 0, 0, 0, 0);
  this._linesText = $.ListImplementation_List(null);
  this._linesMetrics = $.ListImplementation_List(null);
}
};

$$.TextFormat = {"":
 ["font=", "size?", "color=", "bold?", "italic?", "underline", "url", "target?", "align?", "leftMargin", "rightMargin", "indent", "leading", "letterSpacing", "blockIndent", "bullet", "kerning"],
 "super": "Object"
};

$$.TextLineMetrics = {"":
 ["ascent", "descent", "height=", "leading", "width=", "x="],
 "super": "Object"
};

$$.Resource = {"":
 ["_images?", "_sounds?", "_textureAtlases?", "_texts", "_loader", "_loaderPendingCount=", "_loaderErrorCount="],
 "super": "Object",
 addImage$2: function(name$, url) {
  var future = $.BitmapData_loadImage(url);
  this._loaderPendingCount = $.add(this._loaderPendingCount, 1);
  future.then$1(new $.Resource_addImage_anon(this, name$));
  future.handleException$1(new $.Resource_addImage_anon0(this));
},
 addSound$2: function(name$, url) {
  var future = $.Sound_loadAudio(url);
  this._loaderPendingCount = $.add(this._loaderPendingCount, 1);
  future.then$1(new $.Resource_addSound_anon(this, name$));
  future.handleException$1(new $.Resource_addSound_anon0(this));
},
 addTextureAtlas$3: function(name$, url, textureAtlasFormat) {
  var future = $.TextureAtlas_load(url, textureAtlasFormat);
  this._loaderPendingCount = $.add(this._loaderPendingCount, 1);
  future.then$1(new $.Resource_addTextureAtlas_anon(this, name$));
  future.handleException$1(new $.Resource_addTextureAtlas_anon0(this));
},
 addText$2: function(name$, text) {
  $.indexSet(this._texts, name$, text);
},
 load$0: function() {
  this._loader = $.CompleterImpl$();
  this._loaderCheck$0();
  return this._loader.get$future();
},
 get$load: function() { return new $.BoundClosure0(this, 'load$0'); },
 getBitmapData$1: function(name$) {
  var t1 = this._images;
  var t2 = t1.containsKey$1(name$);
  if (typeof t2 !== 'boolean')
    return this.getBitmapData$1$bailout(1, name$, t2, t1);
  if (!t2)
    throw $.$$throw('Resource not found: \'' + $.S(name$) + '\'');
  return t1.operator$index$1(name$);
},
 getBitmapData$1$bailout: function(state, name$, t2, t1) {
  if ($.eqB(t2, false))
    throw $.$$throw('Resource not found: \'' + $.S(name$) + '\'');
  return $.index(t1, name$);
},
 getSound$1: function(name$) {
  var t1 = this._sounds;
  var t2 = t1.containsKey$1(name$);
  if (typeof t2 !== 'boolean')
    return this.getSound$1$bailout(1, name$, t2, t1);
  if (!t2)
    throw $.$$throw('Resource not found: \'' + name$ + '\'');
  return t1.operator$index$1(name$);
},
 getSound$1$bailout: function(state, name$, t2, t1) {
  if ($.eqB(t2, false))
    throw $.$$throw('Resource not found: \'' + name$ + '\'');
  return $.index(t1, name$);
},
 getTextureAtlas$1: function(name$) {
  var t1 = this._textureAtlases;
  if ($.eqB(t1.containsKey$1(name$), false))
    throw $.$$throw('Resource not found: \'' + name$ + '\'');
  return $.index(t1, name$);
},
 getText$1: function(name$) {
  var t1 = this._texts;
  if ($.eqB(t1.containsKey$1(name$), false))
    return '[[' + name$ + ']]';
  return $.index(t1, name$);
},
 _loaderCheck$0: function() {
  if (!(this._loader == null) && $.eqB(this._loaderPendingCount, 0)) {
    var t1 = $.eqB(this._loaderErrorCount, 0);
    var t2 = this._loader;
    if (t1)
      t2.complete$1(this);
    else
      t2.completeException$1(this);
  }
},
 Resource$0: function() {
  this._images = $.HashMapImplementation$();
  this._sounds = $.HashMapImplementation$();
  this._textureAtlases = $.HashMapImplementation$();
  this._texts = $.HashMapImplementation$();
  this._loader = null;
  this._loaderPendingCount = 0;
  this._loaderErrorCount = 0;
}
};

$$.TextureAtlas = {"":
 ["_imageElement?", "_frames?"],
 "super": "Object",
 get$imageElement: function() {
  return this._imageElement;
},
 getBitmapData$1: function(name$) {
  var t1 = this._frames;
  var bitmapData = null;
  var i = 0;
  while (true) {
    if (!(i < t1.length && bitmapData == null))
      break;
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    if ($.eqB(t1[i].get$name(), name$)) {
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      bitmapData = $.BitmapData$fromTextureAtlasFrame(t1[i]);
    }
    ++i;
  }
  if (bitmapData == null)
    throw $.$$throw('TextureAtlasFrame not found: \'' + $.S(name$) + '\'');
  return bitmapData;
},
 TextureAtlas$0: function() {
  this._imageElement = $._Elements_ImageElement(null, null, null);
  this._frames = $.ListImplementation_List(null);
}
};

$$.TextureAtlasFrame = {"":
 ["_name", "_textureAtlas", "_frameX", "_frameY", "_frameWidth", "_frameHeight", "_lib1_offsetX?", "_lib1_offsetY?", "_originalWidth", "_originalHeight", "_rotated"],
 "super": "Object",
 get$textureAtlas: function() {
  return this._textureAtlas;
},
 get$name: function() {
  return this._name;
},
 get$frameX: function() {
  return this._frameX;
},
 get$frameY: function() {
  return this._frameY;
},
 get$frameWidth: function() {
  return this._frameWidth;
},
 get$frameHeight: function() {
  return this._frameHeight;
},
 get$offsetX: function() {
  return this._lib1_offsetX;
},
 get$offsetY: function() {
  return this._lib1_offsetY;
},
 get$originalWidth: function() {
  return this._originalWidth;
},
 get$originalHeight: function() {
  return this._originalHeight;
},
 get$rotated: function() {
  return this._rotated;
},
 TextureAtlasFrame$2: function(name$, textureAtlas) {
  this._name = name$;
  this._textureAtlas = textureAtlas;
}
};

$$.main_anon = {"":
 [],
 "super": "Closure",
 call$1: function(bitmapData) {
  $.loadingBitmap = $.Bitmap$(bitmapData, 'auto', false);
  $.loadingBitmap.set$pivotX(20);
  $.loadingBitmap.set$pivotY(20);
  $.loadingBitmap.set$x(400);
  $.loadingBitmap.set$y(270);
  $.stageForeground.addChild$1($.loadingBitmap);
  $.loadingBitmapTween = $.Tween$($.loadingBitmap, 100, $.Transitions_linear);
  $.loadingBitmapTween.animate$2('rotation', 628.3185307179587);
  $.add$1($.Juggler_instance(), $.loadingBitmapTween);
  $.loadingTextField = $.TextField$();
  var t1 = $.TextFormat$('Arial', 20, 10526880, true, false, false, null, null, 'left', 0, 0, 0, 0);
  $.loadingTextField.set$defaultTextFormat(t1);
  $.loadingTextField.set$width(240);
  $.loadingTextField.set$height(40);
  $.loadingTextField.set$text('... loading ...');
  t1 = $.div($.loadingTextField.get$textWidth(), 2);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t1 = 400 - t1;
  $.loadingTextField.set$x(t1);
  $.loadingTextField.set$y(320);
  $.loadingTextField.set$mouseEnabled(false);
  $.stageForeground.addChild$1($.loadingTextField);
  $.loadGame();
}
};

$$.BitmapData_loadImage_anon = {"":
 ["image_1", "completer_0"],
 "super": "Closure",
 call$1: function(event$) {
  return this.completer_0.complete$1($.BitmapData$fromImageElement(this.image_1));
}
};

$$.BitmapData_loadImage_anon0 = {"":
 ["completer_2"],
 "super": "Closure",
 call$1: function(event$) {
  return this.completer_2.completeException$1('Failed to load image.');
}
};

$$.Maps__emitMap_anon = {"":
 ["result_3", "box_0", "visiting_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_3, ', ');
  t1.first_1 = false;
  t1 = this.result_3;
  var t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"":
 ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t1.push(value);
  this.copies_3.push(null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"":
 ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  var t1 = this.copies_4;
  if (i !== (i | 0))
    throw $.iae(i);
  if (i < 0 || i >= t1.length)
    throw $.ioore(i);
  return t1[i];
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"":
 ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  var t1 = this.copies_5;
  if (i !== (i | 0))
    throw $.iae(i);
  if (i < 0 || i >= t1.length)
    throw $.ioore(i);
  t1[i] = x;
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"":
 [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"":
 ["findSlot_8", "readSlot_7", "writeSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.CTC4);
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.CTC5);
  if (typeof e === 'object' && e !== null && e.is$_FileImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$File())
    throw $.$$throw($.CTC6);
  if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    throw $.$$throw($.CTC7);
  if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$FileList())
    throw $.$$throw($.CTC8);
  if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    throw $.$$throw($.CTC8);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    throw $.$$throw($.CTC9);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    throw $.$$throw($.CTC10);
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    var slot = this.findSlot_8.call$1(e);
    t1.copy_1 = this.readSlot_7.call$1(slot);
    var t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_6.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e, 0, 0, 0, 0, 0, 0);
    var length$ = e.length;
    slot = this.findSlot_8.call$1(e);
    t2 = this.readSlot_7;
    var copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_6.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    var t3 = this.writeSlot_6;
    if (t1) {
      t3.call$2(slot, true);
      for (var i = 0; i < length$; ++i) {
        if (i < 0 || i >= e.length)
          throw $.ioore(i);
        var element = e[i];
        var elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, copy, elementCopy, t3, e, length$, i, slot);
          for (var j = 0; j < i; ++j) {
            if (j < 0 || j >= e.length)
              throw $.ioore(j);
            t1 = e[j];
            if (j < 0 || j >= copy.length)
              throw $.ioore(j);
            copy[j] = t1;
          }
          if (i < 0 || i >= copy.length)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, i, copy, e, length$, 0, 0, 0);
    for (; i < length$; ++i) {
      if (i < 0 || i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i < 0 || i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.CTC11);
},
 call$1$bailout: function(state, env0, env1, env2, env3, env4, env5, env6) {
  switch (state) {
    case 1:
      var e = env0;
      break;
    case 2:
      copy = env0;
      elementCopy = env1;
      t3 = env2;
      e = env3;
      length$ = env4;
      i = env5;
      slot = env6;
      break;
    case 3:
      i = env0;
      copy = env1;
      e = env2;
      length$ = env3;
      break;
  }
  switch (state) {
    case 0:
      var t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.CTC4);
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.CTC5);
      if (typeof e === 'object' && e !== null && e.is$_FileImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$File())
        throw $.$$throw($.CTC6);
      if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        throw $.$$throw($.CTC7);
      if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$FileList())
        throw $.$$throw($.CTC8);
      if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        throw $.$$throw($.CTC8);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        throw $.$$throw($.CTC9);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        throw $.$$throw($.CTC10);
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        var slot = this.findSlot_8.call$1(e);
        t1.copy_1 = this.readSlot_7.call$1(slot);
        var t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_6.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      if (state === 3 || state === 2 || state === 1 || state === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state) {
          case 0:
          case 1:
            state = 0;
            var length$ = $.get$length(e);
            slot = this.findSlot_8.call$1(e);
            t2 = this.readSlot_7;
            var copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_6.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            var t3 = this.writeSlot_6;
          case 2:
            if (state === 2 || state === 0 && t1)
              switch (state) {
                case 0:
                  t3.call$2(slot, true);
                  var i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          var element = $.index(e, i);
                          var elementCopy = this.call$1(element);
                        case 2:
                          if (state === 2 || state === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state = 0;
                                for (var j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.CTC11);
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"":
 ["walk_9", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.invokeClosure_anon = {"":
 ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":
 ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":
 ["closure_5", "arg1_4", "arg2_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_5.call$2(this.arg1_4, this.arg2_3);
}
};

$$.DateImplementation_toString_fourDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  var absN = $.abs(n);
  var sign = $.ltB(n, 0) ? '-' : '';
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + '0' + $.S(absN);
  if ($.geB(absN, 10))
    return sign + '00' + $.S(absN);
  return sign + '000' + $.S(absN);
}
};

$$.DateImplementation_toString_threeDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return '0' + $.S(n);
  return '00' + $.S(n);
}
};

$$.DateImplementation_toString_twoDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return '0' + $.S(n);
}
};

$$.loadGame_anon = {"":
 ["resource_0"],
 "super": "Closure",
 call$1: function(res) {
  $.stageForeground.removeChild$1($.loadingBitmap);
  $.stageForeground.removeChild$1($.loadingTextField);
  $.Juggler_instance().remove$1($.loadingBitmapTween);
  var t1 = this.resource_0;
  $.Grafix_resource = t1;
  $.Sounds_resource = t1;
  $.Texts_resource = t1;
  var backgroundBitmap = $.Bitmap$($.Grafix_resource.getBitmapData$1('Background'), 'auto', false);
  $.stageBackground.addChild$1(backgroundBitmap);
  $.stageBackground.set$renderMode('once');
  var game = $.Game$();
  $.stageForeground.addChild$1(game);
  game.start$0();
}
};

$$.Resource_addSound_anon = {"":
 ["this_1", "name_0"],
 "super": "Closure",
 call$1: function(sound) {
  var t1 = this.this_1;
  $.indexSet(t1.get$_sounds(), this.name_0, sound);
  t1.set$_loaderPendingCount($.sub(t1.get$_loaderPendingCount(), 1));
  t1._loaderCheck$0();
}
};

$$.Resource_addSound_anon0 = {"":
 ["this_2"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.this_2;
  t1.set$_loaderErrorCount($.add(t1.get$_loaderErrorCount(), 1));
  t1.set$_loaderPendingCount($.sub(t1.get$_loaderPendingCount(), 1));
  t1._loaderCheck$0();
}
};

$$.WebAudioApiSound_load_anon = {"":
 ["this_1", "request_0"],
 "super": "Closure",
 call$1: function(event$) {
  var t1 = this.this_1;
  t1.get$_audioContext().decodeAudioData$3(this.request_0.get$response(), t1.get$_audioBufferLoaded(), t1.get$_audioBufferError());
}
};

$$.WebAudioApiSound_load_anon0 = {"":
 ["this_2"],
 "super": "Closure",
 call$1: function(event$) {
  var t1 = this.this_2;
  if ($.eqB(t1.get$_loadCompleter().get$future().get$isComplete(), false))
    t1.get$_loadCompleter().completeException$1('Failed to load audio.');
}
};

$$.FilteredElementList__filtered_anon = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._ChildrenElementList_filter_anon = {"":
 ["f_1", "output_0"],
 "super": "Closure",
 call$1: function(element) {
  if (this.f_1.call$1(element) === true)
    this.output_0.push(element);
}
};

$$.FilteredElementList_removeRange_anon = {"":
 [],
 "super": "Closure",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.MockSound_load_anon = {"":
 ["this_1", "loadCompleter_0"],
 "super": "Closure",
 call$0: function() {
  return this.loadCompleter_0.complete$1(this.this_1);
}
};

$$.Resource_addTextureAtlas_anon = {"":
 ["this_1", "name_0"],
 "super": "Closure",
 call$1: function(textureAtlas) {
  var t1 = this.this_1;
  $.indexSet(t1.get$_textureAtlases(), this.name_0, textureAtlas);
  t1.set$_loaderPendingCount($.sub(t1.get$_loaderPendingCount(), 1));
  t1._loaderCheck$0();
}
};

$$.Resource_addTextureAtlas_anon0 = {"":
 ["this_2"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.this_2;
  t1.set$_loaderErrorCount($.add(t1.get$_loaderErrorCount(), 1));
  t1.set$_loaderPendingCount($.sub(t1.get$_loaderPendingCount(), 1));
  t1._loaderCheck$0();
}
};

$$.TextureAtlas_load_anon = {"":
 ["completer_3", "url_2", "textureAtlas_1", "request_0"],
 "super": "Closure",
 call$1: function(event$) {
  var t1 = this.textureAtlas_1;
  var t2 = new $.TextureAtlas_load_parseFrame(t1);
  var data = $.JSON_parse(this.request_0.get$responseText());
  var frames$ = $.index(data, 'frames');
  var meta = $.index(data, 'meta');
  if (typeof frames$ === 'object' && frames$ !== null && (frames$.constructor === Array || frames$.is$List())) {
    for (var t3 = $.iterator(frames$); t3.hasNext$0() === true;) {
      var t4 = t3.next$0();
      t2.call$2($.index(t4, 'filename'), t4);
    }
    frames$ = frames$;
  }
  if (typeof frames$ === 'object' && frames$ !== null && frames$.is$Map())
    for (t3 = $.iterator(frames$.getKeys$0()); t3.hasNext$0() === true;) {
      t4 = t3.next$0();
      t2.call$2(t4, frames$.operator$index$1(t4));
    }
  t2 = t1.get$_imageElement().get$on().get$load();
  t3 = this.completer_3;
  $.add$1(t2, new $.TextureAtlas_load_anon1(t3, t1));
  $.add$1(t1.get$_imageElement().get$on().get$error(), new $.TextureAtlas_load_anon2(t3));
  t2 = $.TextureAtlas__replaceFilename(this.url_2, $.index(meta, 'image'));
  t1.get$_imageElement().set$src(t2);
}
};

$$.TextureAtlas_load_parseFrame = {"":
 ["textureAtlas_4"],
 "super": "Closure",
 call$2: function(filename, frame) {
  var frameName = $.TextureAtlas__getFilenameWithoutExtension(filename);
  var t1 = this.textureAtlas_4;
  var taf = $.TextureAtlasFrame$(frameName, t1);
  taf._frameX = $.toInt($.index($.index(frame, 'frame'), 'x'));
  taf._frameY = $.toInt($.index($.index(frame, 'frame'), 'y'));
  taf._frameWidth = $.toInt($.index($.index(frame, 'frame'), 'w'));
  taf._frameHeight = $.toInt($.index($.index(frame, 'frame'), 'h'));
  taf._lib1_offsetX = $.toInt($.index($.index(frame, 'spriteSourceSize'), 'x'));
  taf._lib1_offsetY = $.toInt($.index($.index(frame, 'spriteSourceSize'), 'y'));
  taf._originalWidth = $.toInt($.index($.index(frame, 'sourceSize'), 'w'));
  taf._originalHeight = $.toInt($.index($.index(frame, 'sourceSize'), 'h'));
  taf._rotated = $.boolTypeCast($.index(frame, 'rotated'), 'is$bool');
  $.add$1(t1.get$_frames(), taf);
}
};

$$.TextureAtlas_load_anon1 = {"":
 ["completer_6", "textureAtlas_5"],
 "super": "Closure",
 call$1: function(e) {
  return this.completer_6.complete$1(this.textureAtlas_5);
}
};

$$.TextureAtlas_load_anon2 = {"":
 ["completer_7"],
 "super": "Closure",
 call$1: function(e) {
  return this.completer_7.completeException$1('Failed to load image.');
}
};

$$.TextureAtlas_load_anon0 = {"":
 ["completer_8"],
 "super": "Closure",
 call$1: function(event$) {
  return this.completer_8.completeException$1('Failed to load json file.');
}
};

$$._StorageImpl_getKeys_anon = {"":
 ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return this.keys_0.push(k);
}
};

$$.HashMapImplementation_getKeys__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = key;
}
};

$$.DoubleLinkedQueue_length__ = {"":
 ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"":
 ["copies_1", "values_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_0;
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t1.push(value);
  this.copies_1.push(null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"":
 ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  var t1 = this.copies_2;
  if (i !== (i | 0))
    throw $.iae(i);
  if (i < 0 || i >= t1.length)
    throw $.ioore(i);
  return t1[i];
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"":
 ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  var t1 = this.copies_3;
  if (i !== (i | 0))
    throw $.iae(i);
  if (i < 0 || i >= t1.length)
    throw $.ioore(i);
  t1[i] = x;
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"":
 ["findSlot_6", "readSlot_5", "writeSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e, 0, 0);
  if (e instanceof Date)
    throw $.$$throw($.CTC4);
  if (e instanceof RegExp)
    throw $.$$throw($.CTC5);
  if ($._isJavaScriptSimpleObject(e)) {
    var slot = this.findSlot_6.call$1(e);
    var copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, slot, copy);
    this.writeSlot_4.call$2(slot, copy);
    for (var t1 = $.iterator(Object.keys(e)); t1.hasNext$0() === true;) {
      var t2 = t1.next$0();
      var t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    this.writeSlot_4.call$2(slot, e);
    var length$ = e.length;
    for (var i = 0; i < length$; ++i) {
      if (i < 0 || i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i < 0 || i >= e.length)
        throw $.ioore(i);
      e[i] = t1;
    }
    return e;
  }
  return e;
},
 call$1$bailout: function(state, env0, env1, env2) {
  switch (state) {
    case 1:
      var e = env0;
      break;
    case 2:
      e = env0;
      slot = env1;
      copy = env2;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.CTC4);
      if (e instanceof RegExp)
        throw $.$$throw($.CTC5);
    case 2:
      if (state === 2 || state === 0 && $._isJavaScriptSimpleObject(e))
        switch (state) {
          case 0:
            var slot = this.findSlot_6.call$1(e);
            var copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (var t1 = $.iterator(Object.keys(e)); t1.hasNext$0() === true;) {
              var t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
      if (e instanceof Array) {
        slot = this.findSlot_6.call$1(e);
        copy = this.readSlot_5.call$1(slot);
        if (!(copy == null))
          return copy;
        this.writeSlot_4.call$2(slot, e);
        var length$ = $.get$length(e);
        for (var i = 0; $.ltB(i, length$); ++i)
          $.indexSet(e, i, this.call$1($.index(e, i)));
        return e;
      }
      return e;
  }
}
};

$$.LinkedHashMapImplementation_getKeys__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  t2 = entry.get$key();
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = t2;
}
};

$$._convertNativeToDart_IDBKey_containsDate = {"":
 [],
 "super": "Closure",
 call$1: function(object) {
  if (object instanceof Date)
    return true;
  if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, object);
    for (var i = 0; t1 = object.length, i < t1; ++i) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      if (this.call$1(object[i]) === true)
        return true;
    }
  }
  return false;
  var t1;
},
 call$1$bailout: function(state, env0) {
  switch (state) {
    case 1:
      var object = env0;
      break;
  }
  switch (state) {
    case 0:
      if (object instanceof Date)
        return true;
    case 1:
      if (state === 1 || state === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
        switch (state) {
          case 0:
          case 1:
            state = 0;
            for (var i = 0; $.ltB(i, $.get$length(object)); ++i)
              if (this.call$1($.index(object, i)) === true)
                return true;
        }
      return false;
  }
}
};

$$.LinkedHashMapImplementation_forEach__ = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.Resource_addImage_anon = {"":
 ["this_1", "name_0"],
 "super": "Closure",
 call$1: function(bitmapData) {
  var t1 = this.this_1;
  $.indexSet(t1.get$_images(), this.name_0, bitmapData);
  t1.set$_loaderPendingCount($.sub(t1.get$_loaderPendingCount(), 1));
  t1._loaderCheck$0();
}
};

$$.Resource_addImage_anon0 = {"":
 ["this_2"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.this_2;
  t1.set$_loaderErrorCount($.add(t1.get$_loaderErrorCount(), 1));
  t1.set$_loaderPendingCount($.sub(t1.get$_loaderPendingCount(), 1));
  t1._loaderCheck$0();
}
};

$$.Game_start_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  return this.this_0.get$_head().nod$1(21);
}
};

$$.Game_start_anon0 = {"":
 ["this_1"],
 "super": "Closure",
 call$0: function() {
  return $.Juggler_instance().delayCall$2(new $.Game_start_anon1(this.this_1), 0.5);
}
};

$$.Game_start_anon1 = {"":
 ["this_2"],
 "super": "Closure",
 call$0: function() {
  return this.this_2._nextLevel$0();
}
};

$$.MessageBox_show_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = $.Juggler_instance();
  var t2 = this.this_0;
  t1 = t1.delayCall$2(t2.get$_hide(), 10);
  t2.set$_showTimeout(t1);
  return t1;
}
};

$$.MessageBox__hide_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_0;
  return t1.get$parent().removeChild$1(t1);
}
};

$$.Game__nextLevel_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_0;
  t1.get$_board().set$mouseEnabled(true);
  t1.get$_timeGauge().start$0();
  if (!(t1.get$_introSound() == null)) {
    var tween2 = $.Tween$(null, 4, $.Transitions_linear);
    tween2.animateValue$3(new $.Game__nextLevel_anon0(t1), 1, 0);
    tween2.set$onComplete(new $.Game__nextLevel_anon1(t1));
    $.add$1($.Juggler_instance(), tween2);
    t1.set$_introSound(null);
  }
}
};

$$.Game__nextLevel_anon0 = {"":
 ["this_1"],
 "super": "Closure",
 call$1: function(volume) {
  var t1 = this.this_1;
  t1.get$_introSoundChannel().get$soundTransform().set$volume(volume);
  var t2 = t1.get$_introSoundChannel().get$soundTransform();
  t1.get$_introSoundChannel().set$soundTransform(t2);
}
};

$$.Game__nextLevel_anon1 = {"":
 ["this_2"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_2;
  t1.get$_introSoundChannel().stop$0();
  t1.get$_head().nodStop$0();
}
};

$$.Game__onBoardEventTimeouted_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = $.Juggler_instance();
  var t2 = this.this_0;
  t1.delayCall$2(new $.Game__onBoardEventTimeouted_anon2(t2), 0.5);
  var tween = $.Tween$(t2.get$_infoBox(), 0.5, $.Transitions_easeOutCubic);
  tween.animate$2('y', -210);
  $.add$1($.Juggler_instance(), tween);
}
};

$$.Game__onBoardEventTimeouted_anon2 = {"":
 ["this_1"],
 "super": "Closure",
 call$0: function() {
  return this.this_1._nextLevel$0();
}
};

$$.Game__onBoardEventTimeouted_anon0 = {"":
 ["this_2"],
 "super": "Closure",
 call$0: function() {
  var t1 = $.Juggler_instance();
  var t2 = this.this_2;
  t1.delayCall$2(new $.Game__onBoardEventTimeouted_anon1(t2), 0.5);
  var tween = $.Tween$(t2.get$_infoBox(), 0.5, $.Transitions_easeOutCubic);
  tween.animate$2('y', -210);
  $.add$1($.Juggler_instance(), tween);
}
};

$$.Game__onBoardEventTimeouted_anon1 = {"":
 ["this_3"],
 "super": "Closure",
 call$0: function() {
  return this.this_3._gameOver$0();
}
};

$$._ElementImpl_rect_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  return $._ElementRectImpl$(this.this_0);
}
};

$$._maybeScheduleMeasurementFrame_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return $._completeMeasurementFutures();
}
};

$$._DocumentFragmentImpl_rect_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  return $.CTC25;
}
};

$$.Game__gameOver_anon = {"":
 ["laugh_0"],
 "super": "Closure",
 call$0: function() {
  return this.laugh_0.play$0();
}
};

$$.Game__gameOver_anon0 = {"":
 ["this_1"],
 "super": "Closure",
 call$0: function() {
  return this.this_1._exitGame$1(true);
}
};

$$.Game__gameOver_anon1 = {"":
 ["this_2"],
 "super": "Closure",
 call$1: function(me) {
  return this.this_2._exitGame$1(true);
}
};

$$.Game__onBoardEventFinalized_anon = {"":
 ["this_1", "levelUp_0"],
 "super": "Closure",
 call$0: function() {
  this.this_1.get$_board().dropFields$0();
  this.levelUp_0.play$0();
}
};

$$.Game__onBoardEventFinalized_anon0 = {"":
 ["this_2"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_2;
  var timePoints = $.toInt($.mul(t1.get$_timeGauge().get$restTime(), 1000));
  var timeBonus = $.Bonus$(timePoints);
  timeBonus.set$x(704);
  timeBonus.set$y(360);
  t1.get$_gameLayer().addChild$1(timeBonus);
  t1.set$_points($.add(t1.get$_points(), timePoints));
  var t2 = $.S(t1.get$_points());
  t1.get$_pointsTextField().set$text(t2);
}
};

$$.Game__onBoardEventFinalized_anon1 = {"":
 ["this_4", "levelUpAnimation_3"],
 "super": "Closure",
 call$0: function() {
  this.this_4.get$_gameLayer().removeChild$1(this.levelUpAnimation_3);
}
};

$$.Game__onBoardEventFinalized_anon2 = {"":
 ["this_5"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_5;
  t1.set$_level($.add(t1.get$_level(), 1));
  t1._nextLevel$0();
}
};

$$.anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  if (typeof value !== 'number')
    throw $.iae(value);
  var t1 = 1 - value;
  var t2 = this.this_0;
  t2.get$_textFieldContainer().set$alpha(t1);
  t1 = -value * 50;
  t2.get$_textFieldContainer().set$y(t1);
  t1 = value * 10;
  var t3 = 1 + 0.1 * $.sin(t1);
  t2.get$_textFieldContainer().set$scaleX(t3);
  t3 = 1 + 0.1 * $.cos(t1);
  t2.get$_textFieldContainer().set$scaleY(t3);
}
};

$$.anon0 = {"":
 ["this_1"],
 "super": "Closure",
 call$0: function() {
  return this.this_1.removeFromParent$0();
}
};

$$.anon1 = {"":
 ["this_1", "completeCounter_0"],
 "super": "Closure",
 call$0: function() {
  if ($.eqB(this.completeCounter_0.increment$0(), 100)) {
    var t1 = this.this_1;
    t1._updateLinks$0();
    t1.set$_animationRunning(false);
    $.clear(t1.get$_mouseBuffer());
    t1.set$mask(null);
  }
}
};

$$.Board_shuffleField_anon = {"":
 ["field_0"],
 "super": "Closure",
 call$1: function(v) {
  this.field_0.set$sinScale(v);
  return v;
}
};

$$.Board_shuffleField_anon0 = {"":
 ["this_2", "field_1"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.field_1;
  var t2 = this.this_2;
  t1.updateDisplayObjects$3(t2.get$_chainLayer(), t2.get$_linkLayer(), t2.get$_specialLayer());
}
};

$$.Board_shuffleField_anon1 = {"":
 ["this_4", "completeCounter_3"],
 "super": "Closure",
 call$0: function() {
  if ($.eqB(this.completeCounter_3.increment$0(), 100)) {
    var t1 = this.this_4;
    t1._updateLinks$0();
    t1._processCombinations$0();
    $.clear(t1.get$_mouseBuffer());
  }
}
};

$$.Board__processCombinationsExplosion_anon = {"":
 ["field_4", "this_3", "py_2", "px_1", "animationCounter_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.field_4;
  t1.set$empty(true);
  var t2 = this.this_3;
  t1.updateDisplayObjects$3(t2.get$_chainLayer(), t2.get$_linkLayer(), t2.get$_specialLayer());
  $.Sounds_resource.getSound$1('ChainBlast').play$0();
  var explosion = $.Explosion$(t1.get$color(), t1.get$direction());
  explosion.set$x(this.px_1 * 50);
  explosion.set$y(this.py_2 * 50);
  $.add$1($.Juggler_instance(), explosion);
  t2.get$_explosionLayer().addChild$1(explosion);
  t2.processSpecial$1(t1);
  if ($.eqB(this.animationCounter_0.decrement$0(), 0))
    t2._fillEmptyFields$0();
}
};

$$.Board__fillEmptyFields_anon = {"":
 ["this_1", "animationCounter_0"],
 "super": "Closure",
 call$0: function() {
  if ($.eqB(this.animationCounter_0.decrement$0(), 0)) {
    var t1 = this.this_1;
    t1._updateLinks$0();
    t1._processCombinations$0();
    t1._checkMouseBuffer$0();
  }
}
};

$$.anon2 = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return $.add$1($.Juggler_instance(), this.this_0);
}
};

$$.anon3 = {"":
 ["this_1"],
 "super": "Closure",
 call$1: function(e) {
  return $.Juggler_instance().remove$1(this.this_1);
}
};

$$.anon4 = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return $.add$1($.Juggler_instance(), this.this_0);
}
};

$$.anon5 = {"":
 ["this_1"],
 "super": "Closure",
 call$1: function(e) {
  return $.Juggler_instance().remove$1(this.this_1);
}
};

$$.anon6 = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return $.add$1($.Juggler_instance(), this.this_0);
}
};

$$.anon7 = {"":
 ["this_1"],
 "super": "Closure",
 call$1: function(e) {
  return $.Juggler_instance().remove$1(this.this_1);
}
};

$$.Board_processSpecial_anon = {"":
 ["this_1", "special_0"],
 "super": "Closure",
 call$0: function() {
  return this.this_1.removeChild$1(this.special_0);
}
};

$$.Board_processSpecial_anon0 = {"":
 ["this_3", "lockNumber_2"],
 "super": "Closure",
 call$0: function() {
  return this.this_3.openLock$1(this.lockNumber_2);
}
};

$$.Board_openLock_anon = {"":
 ["this_3", "lockNumber_2", "box_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_3;
  return $.index(t1.get$_locks(), $.mod($.add(this.box_0.i_10, this.lockNumber_2), $.get$length(t1.get$_locks()))).showHappy$0();
}
};

$$.Board_openLock_anon0 = {"":
 ["this_4"],
 "super": "Closure",
 call$0: function() {
  return this.this_4.dispatchEvent$1($.BoardEvent$('Unlocked', $.makeLiteralMap(['Type', 'All', 'Position', $.Point$(280, 550)]), false));
}
};

$$.Lock_showHappy_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = 1 + 0.2 * $.sin($.mul($.mul(value, 4), 3.141592653589793));
  var t2 = this.this_0;
  t2.set$scaleY(t1);
  t2.set$scaleX(t1);
  return t1;
}
};

$$.Lock_showHappy_anon0 = {"":
 ["this_1"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_1;
  return t1.showLocked$1(t1.get$_locked());
}
};

$$.Alarm_start_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  var frame = $.mod($.toInt(value), 8);
  var t1 = $.leB(frame, 4);
  var t2 = this.this_0;
  if (t1) {
    t1 = $.index(t2.get$_alarmBitmapDatas(), $.add(frame, 1));
    t2.get$_alarmBitmap().set$bitmapData(t1);
  } else {
    t1 = t2.get$_alarmBitmapDatas();
    if (typeof frame !== 'number')
      throw $.iae(frame);
    t1 = $.index(t1, 8 - frame);
    t2.get$_alarmBitmap().set$bitmapData(t1);
  }
}
};

$$.Head_nod_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.this_0;
  var t2 = t1.get$_headBitmapDatas();
  t2 = $.index(t2, $.toInt($.mod($.mul(value, $.get$length(t2)), $.get$length(t1.get$_headBitmapDatas()))));
  t1.get$_headBitmap().set$bitmapData(t2);
  t2 = $.sin($.mul($.mul(value, 2), 3.141592653589793)) * 3;
  var t3 = $.div(t1.get$_headBitmap().get$height(), 2);
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t3 = t2 - t3;
  t1.get$_headBitmap().set$y(t3);
}
};

$$.TimeGauge_ratio_anon = {"":
 ["this_1", "oldRatio_0"],
 "super": "Closure",
 call$2: function(alarmName, alarmRatio) {
  if ($.ltB(alarmRatio, this.oldRatio_0) && $.geB(alarmRatio, this.this_1.get$ratio()))
    this.this_1.dispatchEvent$1($.Event$(alarmName, false));
}
};

$$.Game__onExitButtonClick_anon = {"":
 ["this_2", "dark_1", "exitBox_0"],
 "super": "Closure",
 call$1: function(exit) {
  var t1 = this.this_2;
  t1.get$_exitLayer().removeChild$1(this.exitBox_0);
  if ($.eqB(exit, false))
    t1.get$_exitLayer().removeChild$1(this.dark_1);
  else
    t1._exitGame$1(false);
}
};

$$.anon8 = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return $.add$1($.Juggler_instance(), this.this_0.get$_timeGauge());
}
};

$$.anon9 = {"":
 ["this_1"],
 "super": "Closure",
 call$1: function(e) {
  return $.Juggler_instance().remove$1(this.this_1.get$_timeGauge());
}
};

$$.startRootIsolate_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._BaseSendPort_call_anon = {"":
 ["port_1", "completer_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  this.port_1.close$0();
  var t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  var t2 = this.completer_0;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"":
 ["message_2", "this_1", "replyTo_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_1;
  var t2 = this.replyTo_0;
  t1._checkReplyTo$1(t2);
  var workerMessage = $._serializeMessage($.makeLiteralMap(['command', 'message', 'port', t1, 'msg', this.message_2, 'replyTo', t2]));
  if ($._globalState().get$isWorker() === true)
    $._globalState().get$mainManager().postMessage$1(workerMessage);
  else
    $.index($._globalState().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"":
 ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$.Futures_wait_anon = {"":
 ["result_5", "pos_4", "completer_3", "box_0", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  var t2 = this.pos_4;
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  t1[t2] = value;
  t2 = this.box_0;
  var remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_5.get$isComplete() !== true)
    this.completer_3.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"":
 ["result_8", "completer_7", "future_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_8.get$isComplete() !== true)
    this.completer_7.completeException$2(exception, this.future_6.get$stackTrace());
  return true;
}
};

$$._PendingSendPortFinder_visitList_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._PendingSendPortFinder_visitMap_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._StorageImpl_getValues_anon = {"":
 ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return this.values_0.push(v);
}
};

$$.HashMapImplementation_getValues__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_11;
  t2.i_11 = $.add(t3, 1);
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = value;
}
};

$$.LinkedHashMapImplementation_getValues__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  t2 = entry.get$value();
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = t2;
}
};

$$._NativeJsSendPort_send_anon = {"":
 ["message_5", "this_4", "replyTo_3"],
 "super": "Closure",
 call$0: function() {
  var t1 = {};
  var t2 = this.this_4;
  var t3 = this.replyTo_3;
  t2._checkReplyTo$1(t3);
  var isolate = $.index($._globalState().get$isolates(), t2.get$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_receivePort().get$_callback() == null)
    return;
  var shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_isolateId());
  var msg = this.message_5;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send_anon0(t2, t1, shouldSerialize), 'receive ' + $.S(msg));
}
};

$$._NativeJsSendPort_send_anon0 = {"":
 ["this_7", "box_0", "shouldSerialize_6"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_7;
  if (!(t1.get$_receivePort().get$_callback() == null)) {
    if (this.shouldSerialize_6 === true) {
      var t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_receivePort();
    t2 = this.box_0;
    t1._callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$._Copier_visitMap_anon = {"":
 ["this_2", "box_0"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1 = this.box_0.copy_10;
  var t2 = this.this_2;
  $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
}
};

$$._EventLoop__runHelper_next = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.anon10 = {"":
 ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.anon11 = {"":
 ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.BoundClosure = {'':
 ['self', 'target'],
 'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure0 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$.MockSound$ = function() {
  return new $.MockSound();
};

$.floor = function(receiver) {
  return Math.floor(receiver);
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$._convertNativeToDart_AcceptStructuredClone = function(object) {
  var values = [];
  var copies = [];
  return new $._convertNativeToDart_AcceptStructuredClone_walk(new $._convertNativeToDart_AcceptStructuredClone_findSlot(copies, values), new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.Collections__containsRef = function(c, ref) {
  for (var t1 = $.iterator(c); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.Rectangle$zero = function() {
  return new $.Rectangle(0, 0, 0, 0);
};

$.indexSet$slow = function(a, index, value) {
  if ($.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.IllegalArgumentException$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.HashMapImplementation__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string'))
    return receiver.allMatches$1(str);
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.ExplosionParticle$ = function() {
  return new $.ExplosionParticle(null, null, null, null, null, null);
};

$._Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$.TextLineMetrics$ = function(x, width, height, ascent, descent, leading) {
  return new $.TextLineMetrics(ascent, descent, height, leading, width, x);
};

$.WebAudioApiSound$ = function() {
  return new $.WebAudioApiSound(null, null, null);
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$._IDBOpenDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBOpenDBRequestEventsImpl(_ptr);
};

$.InfoBox$ = function() {
  var t1 = new $.InfoBox(null, null, null, null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.InfoBox$0();
  return t1;
};

$.TextFormat$ = function(font, size, color, bold, italic, underline, url, target, align, leftMargin, rightMargin, indent, leading) {
  return new $.TextFormat(font, size, color, bold, italic, underline, url, target, align, leftMargin, rightMargin, indent, leading, 0, 0, false, false);
};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.removeRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.removeRange$2(start, length$);
  $.checkGrowable(receiver, 'removeRange');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.IllegalArgumentException$(start));
  if (length$ < 0)
    throw $.$$throw($.IllegalArgumentException$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  var t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.set$length(receiver, t2);
};

$.Mouse__eventDispatcher = function() {
  if ($.Mouse___eventDispatcher == null)
    $.Mouse___eventDispatcher = $.EventDispatcher$();
  return $.Mouse___eventDispatcher;
};

$.MouseEvent$ = function(type, bubbles) {
  var t1 = new $.MouseEvent(0, 0, 0, 0, false, false, false, false, false, 0, 0, false, null, null, null, null, null, null, false, false);
  t1.Event$2(type, bubbles);
  return t1;
};

$.JSSyntaxRegExp$ = function(pattern, multiLine, ignoreCase) {
  return new $.JSSyntaxRegExp(ignoreCase, multiLine, pattern);
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.Transitions_easeOutCubic = function(ratio) {
  if (typeof ratio !== 'number')
    throw $.iae(ratio);
  ratio = 1 - ratio;
  return 1 - ratio * ratio * ratio;
};

$.TextureAtlas_load = function(url, textureAtlasFormat) {
  var completer = $.CompleterImpl$();
  var textureAtlas = $.TextureAtlas$();
  switch (textureAtlasFormat) {
    case 'json':
    case 'jsonarray':
      var request = $._HttpRequestFactoryProvider_HttpRequest();
      request.open$3('GET', url, true);
      $.add$1(request.get$on().get$load(), new $.TextureAtlas_load_anon(completer, url, textureAtlas, request));
      $.add$1(request.get$on().get$error(), new $.TextureAtlas_load_anon0(completer));
      request.send$0();
      break;
  }
  return completer.get$future();
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.IllegalArgumentException$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$2(startIndex, endIndex);
  $.checkNum(startIndex);
  var length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.IndexOutOfRangeException$(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.indexSet = function(a, index, value) {
  if (a.constructor === Array && !a.immutable$list) {
    var key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.ExceptionImplementation$ = function(msg) {
  return new $.ExceptionImplementation(msg);
};

$.StringMatch$ = function(_start, str, pattern) {
  return new $.StringMatch(_start, str, pattern);
};

$.Rectangle$ = function(x, y, width, height) {
  return new $.Rectangle(x, y, width, height);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.SoundMixer__audioContext = function() {
  if ($.SoundMixer__audioContextPrivate == null)
    try {
      $.SoundMixer__audioContextPrivate = $._AudioContextFactoryProvider_AudioContext();
    } catch (exception) {
      $.unwrapException(exception);
      $.SoundMixer__audioContextPrivate = null;
    }

  return $.SoundMixer__audioContextPrivate;
};

$.StringImplementation_String$fromCharCodes = function(charCodes) {
  return $.StringImplementation__fromCharCodes(charCodes);
};

$._createMeasurementFuture = function(computeValue, completer) {
  if ($._pendingRequests == null) {
    $._pendingRequests = [];
    $._maybeScheduleMeasurementFrame();
  }
  $.add$1($._pendingRequests, $._MeasurementRequest$(computeValue, completer));
  return completer.get$future();
};

$._DOMWindowCrossFrameImpl__postMessage2 = function(win, message, targetOrigin) {
    win.postMessage(message, targetOrigin);

};

$.filter = function(receiver, predicate) {
  if (!$.isJsArray(receiver))
    return receiver.filter$1(predicate);
  else
    return $.Collections_filter(receiver, [], predicate);
};

$.Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Grafix_getHeads = function() {
  var textureAtlas = $.Grafix_resource.getTextureAtlas$1('Head');
  var tmp = $.ListImplementation_List(null);
  tmp.push(textureAtlas.getBitmapData$1('Head1'));
  tmp.push(textureAtlas.getBitmapData$1('Head2'));
  tmp.push(textureAtlas.getBitmapData$1('Head3'));
  tmp.push(textureAtlas.getBitmapData$1('Head2'));
  tmp.push(textureAtlas.getBitmapData$1('Head1'));
  return tmp;
};

$._Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.buildDynamicMetadata = function(inputTable) {
  var result = [];
  for (var i = 0; i < inputTable.length; ++i) {
    var tag = inputTable[i][0];
    var array = inputTable[i];
    var tags = array[1];
    var set = {};
    var tagNames = tags.split('|');
    for (var j = 0, index = 1; j < tagNames.length; ++j) {
      $.propertySet(set, tagNames[j], true);
      index = j;
      array = tagNames;
    }
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$._getBoundsTransformedHelper = function(matrix, width, height, returnRectangle) {
  var x2 = $.mul(width, matrix.get$a());
  var y2 = $.mul(width, matrix.get$b());
  var x3 = $.add($.mul(width, matrix.get$a()), $.mul(height, matrix.get$c()));
  var y3 = $.add($.mul(width, matrix.get$b()), $.mul(height, matrix.get$d()));
  var x4 = $.mul(height, matrix.get$c());
  var y4 = $.mul(height, matrix.get$d());
  var left = $.gtB(0, x2) ? x2 : 0;
  if ($.gtB(left, x3))
    left = x3;
  if ($.gtB(left, x4))
    left = x4;
  var top$ = $.gtB(0, y2) ? y2 : 0;
  if ($.gtB(top$, y3))
    top$ = y3;
  if ($.gtB(top$, y4))
    top$ = y4;
  var right = $.ltB(0, x2) ? x2 : 0;
  if ($.ltB(right, x3))
    right = x3;
  if ($.ltB(right, x4))
    right = x4;
  var bottom = $.ltB(0, y2) ? y2 : 0;
  if ($.ltB(bottom, y3))
    bottom = y3;
  if ($.ltB(bottom, y4))
    bottom = y4;
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  returnRectangle.set$x($.add(matrix.get$tx(), left));
  returnRectangle.set$y($.add(matrix.get$ty(), top$));
  returnRectangle.set$width($.sub(right, left));
  returnRectangle.set$height($.sub(bottom, top$));
  return returnRectangle;
};

$.MockSoundChannel$ = function(mockSound, loop, soundTransform) {
  var t1 = new $.MockSoundChannel(null, null, null);
  t1.MockSoundChannel$3(mockSound, loop, soundTransform);
  return t1;
};

$.Primitives_parseInt = function(string) {
  $.checkString(string);
  var match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  var base = !($.index(match, 1) == null) ? 16 : 10;
  var result = parseInt(string, base);
  if ($.isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$._NotificationEventsImpl$ = function(_ptr) {
  return new $._NotificationEventsImpl(_ptr);
};

$.Grafix_getChain = function(color, direction) {
  var bitmap = $.Bitmap$($.Grafix_resource.getTextureAtlas$1('Elements').getBitmapData$1('Chain' + $.S(color) + $.S(direction)), 'auto', false);
  bitmap.set$pivotX(25);
  bitmap.set$pivotY(25);
  return bitmap;
};

$.Sound_loadAudio = function(url) {
  switch ($.SoundMixer_engine()) {
    case 'WebAudioApi':
      var sound = $.WebAudioApiSound$();
      break;
    case 'AudioElement':
      sound = $.AudioElementSound$();
      break;
    default:
      sound = $.MockSound$();
      break;
  }
  return sound.load$1(url);
};

$._MessageTraverser_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$._Deserializer_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.Collections__emitCollection = function(c, result, visiting) {
  $.add$1(visiting, c);
  var isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (var t1 = $.iterator(c), first = true; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
    first = false;
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$._convertNativeToDart_IDBKey = function(nativeKey) {
  if (new $._convertNativeToDart_IDBKey_containsDate().call$1(nativeKey) === true)
    throw $.$$throw($.CTC20);
  return nativeKey;
};

$._PeerConnection00EventsImpl$ = function(_ptr) {
  return new $._PeerConnection00EventsImpl(_ptr);
};

$._WorkerContextEventsImpl$ = function(_ptr) {
  return new $._WorkerContextEventsImpl(_ptr);
};

$.$$throw = function(ex) {
  if (ex == null)
    ex = $.CTC0;
  var jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$._DocumentEventsImpl$ = function(_ptr) {
  return new $._DocumentEventsImpl(_ptr);
};

$.Alarm$ = function() {
  var t1 = new $.Alarm(null, null, null, null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Alarm$0();
  return t1;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$._convertNativeToDart_IDBAny = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object);
};

$._color2rgba = function(color) {
  var a = $.and($.shr(color, 24), 255);
  var r = $.and($.shr(color, 16), 255);
  var g = $.and($.shr(color, 8), 255);
  var b = $.and($.shr(color, 0), 255);
  return 'rgba(' + $.S(r) + ',' + $.S(g) + ',' + $.S(b) + ',' + $.S($.div(a, 255)) + ')';
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.boolTypeCast = function(value) {
  if (typeof value === 'boolean' || value == null)
    return value;
  throw $.$$throw($.CastExceptionImplementation$($.Primitives_objectTypeName(value), 'bool'));
};

$.Sprite$ = function() {
  var t1 = new $.Sprite(false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  return t1;
};

$.stringSplitUnchecked = function(receiver, pattern) {
  return receiver.split(pattern);
};

$._SpeechRecognitionEventsImpl$ = function(_ptr) {
  return new $._SpeechRecognitionEventsImpl(_ptr);
};

$._SVGElementInstanceEventsImpl$ = function(_ptr) {
  return new $._SVGElementInstanceEventsImpl(_ptr);
};

$.Futures_wait = function(futures) {
  var t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.isEmpty(futures) === true)
    return $.FutureImpl_FutureImpl$immediate($.CTC1);
  var completer = $.CompleterImpl$();
  var result = completer.get$future();
  t1.remaining_1 = futures.length;
  var values = $.ListImplementation_List(futures.length);
  for (var i = 0; t2 = futures.length, i < t2; ++i) {
    if (i < 0 || i >= t2)
      throw $.ioore(i);
    var future = futures[i];
    future.then$1(new $.Futures_wait_anon(result, i, completer, t1, values));
    future.handleException$1(new $.Futures_wait_anon0(result, completer, future));
  }
  return result;
  var t2;
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMinutes() : $.Primitives_lazyAsJsDate(receiver).getMinutes();
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$.window = function() {
return window;
};

$._MatchImplementation$ = function(pattern, str, _start, _end, _groups) {
  return new $._MatchImplementation(pattern, str, _start, _end, _groups);
};

$.Primitives_objectTypeName = function(object) {
  var name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    var decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.isNegative = function(receiver) {
  return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
};

$._DOMWindowCrossFrameImpl$ = function(_window) {
  return new $._DOMWindowCrossFrameImpl(_window);
};

$.mod = function(a, b) {
  if ($.checkNumbers(a, b)) {
    var result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$._JavaScriptAudioNodeEventsImpl$ = function(_ptr) {
  return new $._JavaScriptAudioNodeEventsImpl(_ptr);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o == null ? 'null' : o);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(result, t1, visiting));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$.TextureAtlas__getFilenameWithoutExtension = function(filename) {
  return $.CTC21.firstMatch$1(filename).group$1(1);
};

$.Grafix_getLevelUpAnimation = function() {
  var sprite = $.Sprite$();
  var textureAtlas = $.Grafix_resource.getTextureAtlas$1('Levelup');
  for (var offset = 0, i = 0; i < 7; ++i) {
    var bitmap = $.Bitmap$(textureAtlas.getBitmapData$1('LevelUp' + $.S(i)), 'auto', false);
    bitmap.set$x($.div($.neg(bitmap.get$width()), 2));
    bitmap.set$y($.div($.neg(bitmap.get$height()), 2));
    var subSprite = $.Sprite$();
    subSprite.addChild$1(bitmap);
    var t1 = $.div(bitmap.get$width(), 2);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    subSprite.set$x(offset + t1);
    subSprite.set$scaleX(0);
    subSprite.set$scaleY(0);
    sprite.addChild$1(subSprite);
    var tween1 = $.Tween$(subSprite, 2, $.Transitions_easeOutElastic);
    tween1.animate$2('scaleX', 1);
    tween1.animate$2('scaleY', 1);
    tween1.set$delay(i * 0.05);
    var tween2 = $.Tween$(subSprite, 0.4, $.Transitions_linear);
    tween2.animate$2('scaleX', 0);
    tween2.animate$2('scaleY', 0);
    tween2.set$delay(3);
    $.add$1($.Juggler_instance(), tween1);
    $.add$1($.Juggler_instance(), tween2);
    var t2 = offset + 5;
    var t3 = bitmap.get$width();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    offset = t2 + t3;
  }
  return sprite;
};

$._SimpleClientRect$ = function(left, top$, width, height) {
  return new $._SimpleClientRect(left, top$, width, height);
};

$.Bonus$ = function(points) {
  var t1 = new $.Bonus(null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Bonus$1(points);
  return t1;
};

$.addLast = function(receiver, value) {
  if (!$.isJsArray(receiver))
    return receiver.addLast$1(value);
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$._AnimateValue$ = function(tweenFunction, startValue, targetValue) {
  return new $._AnimateValue(tweenFunction, startValue, targetValue);
};

$._FileReaderEventsImpl$ = function(_ptr) {
  return new $._FileReaderEventsImpl(_ptr);
};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$.concat = function(receiver, other) {
  if (!(typeof receiver === 'string'))
    return receiver.concat$1(other);
  if (!(typeof other === 'string'))
    throw $.$$throw($.IllegalArgumentException$(other));
  return receiver + other;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCFullYear() : $.Primitives_lazyAsJsDate(receiver).getFullYear();
};

$.Grafix_getJokerLink = function(direction) {
  var textureAtlas = $.Grafix_resource.getTextureAtlas$1('Elements');
  var tmp = $.ListImplementation_List(null);
  tmp.push(textureAtlas.getBitmapData$1('JokerLink' + $.S(direction) + '0'));
  tmp.push(textureAtlas.getBitmapData$1('JokerLink' + $.S(direction) + '1'));
  tmp.push(textureAtlas.getBitmapData$1('JokerLink' + $.S(direction) + '2'));
  tmp.push(textureAtlas.getBitmapData$1('JokerLink' + $.S(direction) + '3'));
  tmp.push(textureAtlas.getBitmapData$1('JokerLink' + $.S(direction) + '4'));
  return tmp;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._ElementFactoryProvider_Element$tag = function(tag) {
return document.createElement(tag)
};

$._FrameSetElementEventsImpl$ = function(_ptr) {
  return new $._FrameSetElementEventsImpl(_ptr);
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.ListImplementation_List$from = function(other) {
  var result = $.ListImplementation_List(null);
  for (var t1 = $.iterator(other); t1.hasNext$0() === true;)
    result.push(t1.next$0());
  return result;
};

$.main = function() {
  $.stageBackground = $.Stage$('StageBackground', $.query('#stageBackground'));
  $.stageForeground = $.Stage$('StageForeground', $.query('#stageForeground'));
  $.renderLoop = $.RenderLoop$();
  $.renderLoop.addStage$1($.stageBackground);
  $.renderLoop.addStage$1($.stageForeground);
  $.BitmapData_loadImage('images/Loading.png').then$1(new $.main_anon());
};

$.SoundMixer_engine = function() {
  if ($.SoundMixer__engine == null) {
    $.SoundMixer__engine = !($.SoundMixer__audioContext() == null) ? 'WebAudioApi' : 'AudioElement';
    var ua = $.document().get$window().get$navigator().get$userAgent();
    if ($.contains$1(ua, 'IEMobile') === true && $.contains$1(ua, '9.0') === true)
      $.SoundMixer__engine = 'Mock';
    if ($.contains$1(ua, 'iPhone') === true || $.contains$1(ua, 'iPad') === true)
      var t1 = $.contains$1(ua, 'OS 3') === true || $.contains$1(ua, 'OS 4') === true || $.contains$1(ua, 'OS 5') === true;
    else
      t1 = false;
    if (t1)
      $.SoundMixer__engine = 'Mock';
  }
  return $.SoundMixer__engine;
};

$._RTCPeerConnectionEventsImpl$ = function(_ptr) {
  return new $._RTCPeerConnectionEventsImpl(_ptr);
};

$.TextEvent$ = function(type, bubbles) {
  var t1 = new $.TextEvent('', null, null, null, null, null, false, false);
  t1.Event$2(type, bubbles);
  return t1;
};

$.IllegalArgumentException$ = function(arg) {
  return new $.IllegalArgumentException(arg);
};

$.SpecialWobble$ = function(special) {
  var t1 = new $.SpecialWobble(null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.SpecialWobble$1(special);
  return t1;
};

$.BitmapData$ = function(width, height, transparent, fillColor) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$4(width, height, transparent, fillColor);
  return t1;
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.propertyTypeCastError = function(value, property) {
  throw $.$$throw($.CastExceptionImplementation$($.Primitives_objectTypeName(value), $.substring$2(property, 3, $.get$length(property))));
};

$.TextureAtlas$ = function() {
  var t1 = new $.TextureAtlas(null, null);
  t1.TextureAtlas$0();
  return t1;
};

$.FutureImpl$ = function() {
  return new $.FutureImpl(false, null, null, null, false, [], [], []);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.Juggler$ = function() {
  var t1 = new $.Juggler(null, null, null);
  t1.Juggler$0();
  return t1;
};

$.isInfinite = function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
};

$._AnimateProperty$ = function(name$, startValue, targetValue) {
  return new $._AnimateProperty(name$, startValue, targetValue);
};

$.Explosion$ = function(color, direction) {
  var t1 = new $.Explosion(null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Explosion$2(color, direction);
  return t1;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result = $.ListImplementation_List(null);
  var length$ = $.get$length(haystack);
  var patternLength = needle.length;
  for (var startIndex = 0; true;) {
    var position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    var endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$.TextureAtlasFrame$ = function(name$, textureAtlas) {
  var t1 = new $.TextureAtlasFrame(null, null, null, null, null, null, null, null, null, null, null);
  t1.TextureAtlasFrame$2(name$, textureAtlas);
  return t1;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.Grafix_getLock = function(color) {
  var textureAtlas = $.Grafix_resource.getTextureAtlas$1('Locks');
  var tmp = $.ListImplementation_List(null);
  tmp.push(textureAtlas.getBitmapData$1('Lock' + $.S(color) + '0'));
  tmp.push(textureAtlas.getBitmapData$1('Lock' + $.S(color) + '1'));
  tmp.push(textureAtlas.getBitmapData$1('Lock' + $.S(color) + '2'));
  tmp.push(textureAtlas.getBitmapData$1('Lock' + $.S(color) + '3'));
  tmp.push(textureAtlas.getBitmapData$1('Lock' + $.S(color) + '4'));
  return tmp;
};

$.Sound_adaptAudioUrl = function(url) {
  if ($.Sound__supportedTypes == null) {
    $.Sound__supportedTypes = $.ListImplementation_List(null);
    var audio = $._AudioElementFactoryProvider_AudioElement(null);
    var valid = ['maybe', 'probably'];
    if (!$.eqB($.indexOf$1(valid, audio.canPlayType$2('audio/ogg', '')), -1))
      $.add$1($.Sound__supportedTypes, 'ogg');
    if (!$.eqB($.indexOf$1(valid, audio.canPlayType$2('audio/mp3', '')), -1))
      $.add$1($.Sound__supportedTypes, 'mp3');
    if (!$.eqB($.indexOf$1(valid, audio.canPlayType$2('audio/wav', '')), -1))
      $.add$1($.Sound__supportedTypes, 'wav');
  }
  var match = $.CTC15.firstMatch$1(url);
  if (match == null)
    throw $.$$throw('Unsupported file extension');
  var fileType = $.toLowerCase(match.group$1(1));
  return $.eqB($.indexOf$1($.Sound__supportedTypes, fileType), -1) && $.gtB($.get$length($.Sound__supportedTypes), 0) ? $.S($.substring$2(url, 0, url.length - 3)) + $.S($.index($.Sound__supportedTypes, 0)) : url;
};

$.endsWith = function(receiver, other) {
  $.checkString(other);
  var receiverLength = receiver.length;
  var otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() : $.Primitives_lazyAsJsDate(receiver).getMilliseconds();
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.IllegalArgumentException$(value));
  }
  return value;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$._HttpRequestFactoryProvider_HttpRequest = function() {
return new XMLHttpRequest();
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$.getRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.getRange$2(start, length$);
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.IllegalArgumentException$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.IllegalArgumentException$(length$));
  var t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.IllegalArgumentException$(length$));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.IndexOutOfRangeException$(length$));
  if (t1)
    throw $.$$throw($.IllegalArgumentException$(length$));
  return receiver.slice(start, end);
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.IllegalArgumentException$('length'));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  var end = start + length$;
  if (end > a.length)
    throw $.$$throw($.IndexOutOfRangeException$(end));
  for (var i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.pow = function(value, exponent) {
  $.checkNum(value);
  $.checkNum(exponent);
  return Math.pow(value, exponent);
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.IllegalArgumentException$(value));
  return res;
};

$._TextTrackListEventsImpl$ = function(_ptr) {
  return new $._TextTrackListEventsImpl(_ptr);
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$._fillStatics = function(context) {
  $globals = context.isolateStatics;
  $static_init();

};

$._DOMWindowCrossFrameImpl__focus = function(win) {
win.focus()
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCSeconds() : $.Primitives_lazyAsJsDate(receiver).getSeconds();
};

$._EventDispatcherCatalog_dispatchEvent = function(event$) {
  if (!($._EventDispatcherCatalog__eventDispatcherMap == null)) {
    var eventDispatchers = $.index($._EventDispatcherCatalog__eventDispatcherMap, event$.get$type());
    if (typeof eventDispatchers !== 'object' || eventDispatchers === null || (eventDispatchers.constructor !== Array || !!eventDispatchers.immutable$list) && !eventDispatchers.is$JavaScriptIndexingBehavior())
      return $._EventDispatcherCatalog_dispatchEvent$bailout(1, event$, eventDispatchers);
    var eventDispatchersLength = eventDispatchers.length;
    for (var c = 0, i = 0; i < eventDispatchersLength; ++i) {
      if (i < 0 || i >= eventDispatchers.length)
        throw $.ioore(i);
      var eventDispatcher = eventDispatchers[i];
      if (!(eventDispatcher == null)) {
        eventDispatcher.dispatchEvent$1(event$);
        if (!(c === i)) {
          if (c < 0 || c >= eventDispatchers.length)
            throw $.ioore(c);
          eventDispatchers[c] = eventDispatcher;
        }
        ++c;
      }
    }
    for (i = eventDispatchersLength; t1 = eventDispatchers.length, i < t1; ++i) {
      var c0 = c + 1;
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      var t2 = eventDispatchers[i];
      if (c < 0 || c >= t1)
        throw $.ioore(c);
      eventDispatchers[c] = t2;
      c = c0;
    }
    $.set$length(eventDispatchers, c);
  }
  var t1;
};

$._WindowEventsImpl$ = function(_ptr) {
  return new $._WindowEventsImpl(_ptr);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.IllegalArgumentException$(b));
    }
  return false;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCHours() : $.Primitives_lazyAsJsDate(receiver).getHours();
};

$.Matrix$fromIdentity = function() {
  return new $.Matrix(1, 0, 0, 1, 0, 0, 1);
};

$._globalState = function() {
return $globalState;
};

$._globalState0 = function(val) {
$globalState = val;
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.SoundTransform$ = function(volume, pan) {
  return new $.SoundTransform(volume, pan, 1, 0, 1, 0);
};

$.SpecialJokerLink$ = function(direction) {
  var t1 = new $.SpecialJokerLink(null, null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.SpecialJokerLink$1(direction);
  return t1;
};

$.StringImplementation__toJsStringArray = function(strings) {
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.StringImplementation__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  var length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (var i = 0; i < length$; ++i) {
      if (i < 0 || i >= strings.length)
        throw $.ioore(i);
      var string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.IllegalArgumentException$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i < 0 || i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.IllegalArgumentException$(string));
      if (i < 0 || i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.Grafix_getSpecial = function(special) {
  var bitmap = $.Bitmap$($.Grafix_resource.getTextureAtlas$1('Elements').getBitmapData$1(special), 'auto', false);
  bitmap.set$pivotX(25);
  bitmap.set$pivotY(25);
  return bitmap;
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (!(typeof index === 'number'))
      throw $.$$throw($.IllegalArgumentException$(index));
    if (index < 0)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    if (index >= receiver.length)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$._AudioContextFactoryProvider_AudioContext = function() {
    var constructor = window.AudioContext || window.webkitAudioContext;
    return new constructor();

};

$._MediaStreamTrackListEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackListEventsImpl(_ptr);
};

$.toInt = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  var truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.DoubleLinkedQueue$());
};

$.KeyValuePair$ = function(key, value) {
  return new $.KeyValuePair(key, value);
};

$.Grafix_getAlarms = function() {
  var textureAtlas = $.Grafix_resource.getTextureAtlas$1('Alarm');
  var tmp = $.ListImplementation_List(null);
  tmp.push(textureAtlas.getBitmapData$1('Alarm0'));
  tmp.push(textureAtlas.getBitmapData$1('Alarm1'));
  tmp.push(textureAtlas.getBitmapData$1('Alarm2'));
  tmp.push(textureAtlas.getBitmapData$1('Alarm3'));
  tmp.push(textureAtlas.getBitmapData$1('Alarm4'));
  tmp.push(textureAtlas.getBitmapData$1('Alarm5'));
  return tmp;
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicFunction = function(name$) {
  var f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  var methods = {};
  var dartMethod = Object.getPrototypeOf($.CTC28)[name$];
  if (!(dartMethod == null))
    $.propertySet(methods, 'Object', dartMethod);
  var bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.IllegalArgumentException$(value));
  }
  return value;
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.isNegative(b) === true || $.isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.IllegalArgumentException$(b));
  }
  throw $.$$throw($.IllegalArgumentException$(a));
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag = $.getTypeNameOf(obj);
  var method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (var i = 0; i < $._dynamicMetadata0().length; ++i) {
      var entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  var proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$.index = function(a, index) {
  if (typeof a == "string" || a.constructor === Array) {
    var key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.Juggler_instance = function() {
  if ($.Juggler__instance == null)
    $.Juggler__instance = $.Juggler$();
  return $.Juggler__instance;
};

$.toLowerCase = function(receiver) {
  if (!(typeof receiver === 'string'))
    return receiver.toLowerCase$0();
  return receiver.toLowerCase();
};

$.toDouble = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.toDouble$0();
  return receiver;
};

$._DOMWindowCrossFrameImpl__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrameImpl$(w);
};

$.SimpleButton$ = function(upState, overState, downState, hitTestState) {
  var t1 = new $.SimpleButton(upState, overState, downState, hitTestState, true, true, null, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.SimpleButton$4(upState, overState, downState, hitTestState);
  return t1;
};

$.insertRange$3 = function(receiver, start, length$, initialValue) {
  if (!$.isJsArray(receiver))
    return receiver.insertRange$3(start, length$, initialValue);
  return $.listInsertRange(receiver, start, length$, initialValue);
};

$.query = function(selector) {
  return $._document().query$1(selector);
};

$.StackOverflowException$ = function() {
  return new $.StackOverflowException();
};

$.AudioElementSoundChannel$ = function(audioElementSound, loop, soundTransform) {
  var t1 = new $.AudioElementSoundChannel(null, null, null, null, null);
  t1.AudioElementSoundChannel$3(audioElementSound, loop, soundTransform);
  return t1;
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.NoSuchMethodError$ = function(_receiver, _functionName, _arguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _functionName, _arguments, existingArgumentNames);
};

$.Head$ = function() {
  var t1 = new $.Head(null, null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Head$0();
  return t1;
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.IllegalArgumentException$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.document = function() {
return document;
};

$._FileWriterEventsImpl$ = function(_ptr) {
  return new $._FileWriterEventsImpl(_ptr);
};

$.ceil = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.ceil$0();
  return Math.ceil(receiver);
};

$.MessageBox$ = function(text) {
  var t1 = new $.MessageBox(null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.MessageBox$1(text);
  return t1;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$._HttpRequestUploadEventsImpl$ = function(_ptr) {
  return new $._HttpRequestUploadEventsImpl(_ptr);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.startRootIsolate = function(entry) {
  var t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  var rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $._fillStatics(rootContext);
  $._globalState().set$currentContext(rootContext);
  if (!($._window() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$._AudioContextEventsImpl$ = function(_ptr) {
  return new $._AudioContextEventsImpl(_ptr);
};

$._completeMeasurementFutures = function() {
  if ($.eqB($._nextMeasurementFrameScheduled, false))
    return;
  $._nextMeasurementFrameScheduled = false;
  if (!($._pendingRequests == null))
    for (var t1 = $.iterator($._pendingRequests); t1.hasNext$0() === true;) {
      var request = t1.next$0();
      try {
        var t2 = request.computeValue$0();
        request.set$value(t2);
      } catch (exception) {
        t2 = $.unwrapException(exception);
        var e = t2;
        t2 = e;
        request.set$value(t2);
        request.set$exception(true);
      }

    }
  var completedRequests = $._pendingRequests;
  var readyMeasurementFrameCallbacks = $._pendingMeasurementFrameCallbacks;
  $._pendingRequests = null;
  $._pendingMeasurementFrameCallbacks = null;
  if (!(completedRequests == null))
    for (t1 = $.iterator(completedRequests); t1.hasNext$0() === true;) {
      t2 = t1.next$0();
      var t3 = t2.get$exception() === true;
      var t4 = t2.get$completer();
      if (t3)
        t4.completeException$1(t2.get$value());
      else
        t4.complete$1(t2.get$value());
    }
  if (!(readyMeasurementFrameCallbacks == null))
    for (t1 = $.iterator(readyMeasurementFrameCallbacks); t1.hasNext$0() === true;)
      t1.next$0().call$0();
};

$._NodeListWrapper$ = function(list) {
  return new $._NodeListWrapper(list);
};

$._isJavaScriptSimpleObject = function(value) {
  return Object.getPrototypeOf(value) === Object.prototype;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$._Elements_CanvasElement = function(width, height) {
  var _e = $._document().$dom_createElement$1('canvas');
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.DateImplementation$now = function() {
  var t1 = new $.DateImplementation($.Primitives_dateNow(), false);
  t1.DateImplementation$now$0();
  return t1;
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$._JsonParser$ = function(json) {
  var t1 = new $._JsonParser(json, $.get$length(json), 0);
  t1._JsonParser$1(json);
  return t1;
};

$.CastExceptionImplementation$ = function(actualType, expectedType) {
  return new $.CastExceptionImplementation(actualType, expectedType);
};

$.FutureImpl_FutureImpl$immediate = function(value) {
  var res = $.FutureImpl$();
  res._setValue$1(value);
  return res;
};

$._EventListener$ = function(listener, useCapture) {
  return new $._EventListener(listener, useCapture);
};

$.Point$zero = function() {
  return new $.Point(0, 0);
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.constructorNameFallback = function(obj) {
  var constructor$ = obj.constructor;
  if (typeof(constructor$) === 'function') {
    var name$ = constructor$.name;
    if (typeof name$ === 'string')
      var t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  var string = Object.prototype.toString.call(obj);
  return string.substring(8, string.length - 1);
};

$.BoardEvent$ = function(type, info, bubbles) {
  var t1 = new $.BoardEvent(null, null, null, null, null, null, false, false);
  t1.Event$2(type, bubbles);
  t1.BoardEvent$3(type, info, bubbles);
  return t1;
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.IllegalArgumentException$(b));
  }
  throw $.$$throw($.IllegalArgumentException$(a));
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$.sqrt = function(value) {
  return Math.sqrt($.checkNum(value));
};

$.BitmapData$fromImageElement = function(imageElement) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$fromImageElement$1(imageElement);
  return t1;
};

$.Board$ = function(chains, locks, jokers, blocks, doubles, quints, colors) {
  var t1 = new $.Board(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Board$7(chains, locks, jokers, blocks, doubles, quints, colors);
  return t1;
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  if (from === '')
    if (receiver === '')
      return to;
    else {
      var result = $.StringBufferImpl$('');
      var length$ = receiver.length;
      result.add$1(to);
      for (var i = 0; i < length$; ++i) {
        if (i < 0 || i >= length$)
          throw $.ioore(i);
        result.add$1(receiver[i]);
        result.add$1(to);
      }
      return result.toString$0();
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC22, true), "\\$&"), false, false), true), to);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$.SpecialJokerChain$ = function(direction) {
  var t1 = new $.SpecialJokerChain(null, null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.SpecialJokerChain$1(direction);
  return t1;
};

$._DOMApplicationCacheEventsImpl$ = function(_ptr) {
  return new $._DOMApplicationCacheEventsImpl(_ptr);
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($.ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.last$0();
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.BitmapData$fromTextureAtlasFrame = function(textureAtlasFrame) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$fromTextureAtlasFrame$1(textureAtlasFrame);
  return t1;
};

$._maybeScheduleMeasurementFrame = function() {
  if ($._nextMeasurementFrameScheduled === true)
    return;
  $._nextMeasurementFrameScheduled = true;
  if ($._firstMeasurementRequest === true) {
    $.add$1($.window().get$on().get$message(), new $._maybeScheduleMeasurementFrame_anon());
    $._firstMeasurementRequest = false;
  }
  $.window().postMessage$2('DART-MEASURE', '*');
};

$.propertySet = function(object, property, value) {
  object[property] = value;
};

$.contains$1 = function(receiver, other) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$1(other);
  return $.contains$2(receiver, other, 0);
};

$._EventSourceEventsImpl$ = function(_ptr) {
  return new $._EventSourceEventsImpl(_ptr);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.TimeGauge$ = function(time, bitmapData, direction) {
  var t1 = new $.TimeGauge(false, 0, 0, null, true, null, null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Gauge$2(bitmapData, direction);
  t1.TimeGauge$3(time, bitmapData, direction);
  return t1;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$.TextureAtlas__replaceFilename = function(url, filename) {
  var path = $.CTC18.firstMatch$1(url).group$1(1);
  return path == null ? filename : $.S(path) + $.S(filename);
};

$._EventDispatcherCatalog_addEventDispatcher = function(eventType, eventDispatcher) {
  if (!(eventType === 'enterFrame'))
    return;
  if ($._EventDispatcherCatalog__eventDispatcherMap == null)
    $._EventDispatcherCatalog__eventDispatcherMap = $.HashMapImplementation$();
  var eventDispatchers = $.index($._EventDispatcherCatalog__eventDispatcherMap, eventType);
  if (eventDispatchers == null) {
    var t1 = $._EventDispatcherCatalog__eventDispatcherMap;
    eventDispatchers = $.ListImplementation_List(null);
    $.indexSet(t1, eventType, eventDispatchers);
  }
  $.add$1(eventDispatchers, eventDispatcher);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$._DOMWindowCrossFrameImpl__close = function(win) {
win.close()
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var re = $.JSSyntaxRegExp$(other.get$pattern(), other.get$multiLine(), other.get$ignoreCase());
  $.regExpAttachGlobalNative(re);
  return re;
};

$._ElementList$ = function(list) {
  return new $._ElementList(list);
};

$.isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.isEmpty$0();
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCDate() : $.Primitives_lazyAsJsDate(receiver).getDate();
};

$._EventsImpl$ = function(_ptr) {
  return new $._EventsImpl(_ptr);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.Tween$ = function(target, time, transitionFunction) {
  var t1 = new $.Tween(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Tween$3(target, time, transitionFunction);
  return t1;
};

$._IDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBRequestEventsImpl(_ptr);
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$._MediaStreamTrackEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackEventsImpl(_ptr);
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$.Grafix_getLink = function(color, direction) {
  var bitmap = $.Bitmap$($.Grafix_resource.getTextureAtlas$1('Elements').getBitmapData$1('Link' + $.S(color) + $.S(direction)), 'auto', false);
  bitmap.set$pivotX(25);
  bitmap.set$pivotY(25);
  return bitmap;
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result === null)
    return;
  return result;
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.AudioElementSound$ = function() {
  var t1 = new $.AudioElementSound(null, null, null, null, null, null, null);
  t1.AudioElementSound$0();
  return t1;
};

$.contains = function(userAgent, name$) {
  return !(userAgent.indexOf(name$) === -1);
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string')
    return !($.indexOf$2(receiver, other, startIndex) === -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).hasNext$0();
};

$.Game$ = function() {
  var t1 = new $.Game(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, false, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Game$0();
  return t1;
};

$.ObjectNotClosureException$ = function() {
  return new $.ObjectNotClosureException();
};

$.Mouse__getCssStyle = function(mouseCursor) {
  var cursor = !$.eqB($.Mouse__customCursor, 'auto') ? $.Mouse__customCursor : mouseCursor;
  var style = 'auto';
  switch (cursor) {
    case 'auto':
      style = 'auto';
      break;
    case 'arrow':
      style = 'default';
      break;
    case 'button':
      style = 'pointer';
      break;
    case 'hand':
      style = 'move';
      break;
    case 'ibeam':
      style = 'text';
      break;
    case 'wait':
      style = 'wait';
      break;
  }
  return $.Mouse__isCursorHidden === true ? 'none' : style;
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern = regExp.get$pattern();
  var multiLine = regExp.get$multiLine();
  var ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  var sb = $.StringBufferImpl$('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global)
    $.add$1(sb, 'g');
  try {
    return new RegExp(pattern, $.toString(sb));
  } catch (exception) {
    var t1 = $.unwrapException(exception);
    var e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBufferImpl$('');
  $.Maps__emitMap(m, result, $.ListImplementation_List(null));
  return result.toString$0();
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.DelayedCall$ = function(action, delay) {
  var t1 = new $.DelayedCall(0, 0, 1, null);
  t1.DelayedCall$2(action, delay);
  return t1;
};

$._IDBDatabaseEventsImpl$ = function(_ptr) {
  return new $._IDBDatabaseEventsImpl(_ptr);
};

$.EnterFrameEvent$ = function(passedTime) {
  var t1 = new $.EnterFrameEvent(null, null, null, null, null, null, false, false);
  t1.Event$2('enterFrame', false);
  t1.EnterFrameEvent$1(passedTime);
  return t1;
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$._MeasurementRequest$ = function(computeValue, completer) {
  return new $._MeasurementRequest(computeValue, completer, null, false);
};

$._TextTrackCueEventsImpl$ = function(_ptr) {
  return new $._TextTrackCueEventsImpl(_ptr);
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.UnsupportedOperationException$ = function(_message) {
  return new $.UnsupportedOperationException(_message);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.IllegalArgumentException$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.IllegalArgumentException$(start));
    if (!(typeof element === 'string'))
      throw $.$$throw($.IllegalArgumentException$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.Field$ = function(color, direction) {
  var t1 = new $.Field(null, null, null, null, null, null, null, null, null, null, null);
  t1.Field$2(color, direction);
  return t1;
};

$._DedicatedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._DedicatedWorkerContextEventsImpl(_ptr);
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.NoMoreElementsException$ = function() {
  return new $.NoMoreElementsException();
};

$.Primitives_newList = function(length$) {
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.IllegalArgumentException$(length$));
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$._AbstractWorkerEventsImpl$ = function(_ptr) {
  return new $._AbstractWorkerEventsImpl(_ptr);
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.HashMapImplementation__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._convertDartToNative_SerializedScriptValue = function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
};

$._MediaElementEventsImpl$ = function(_ptr) {
  return new $._MediaElementEventsImpl(_ptr);
};

$._IDBTransactionEventsImpl$ = function(_ptr) {
  return new $._IDBTransactionEventsImpl(_ptr);
};

$._BodyElementEventsImpl$ = function(_ptr) {
  return new $._BodyElementEventsImpl(_ptr);
};

$.iae = function(argument) {
  throw $.$$throw($.IllegalArgumentException$(argument));
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$.isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.isNaN$0();
};

$.Resource$ = function() {
  var t1 = new $.Resource(null, null, null, null, null, null, null);
  t1.Resource$0();
  return t1;
};

$.round = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.round$0();
  if (receiver < 0)
    return -Math.round(-receiver);
  else
    return Math.round(receiver);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      var t1 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= dst.length)
        throw $.ioore(j);
      dst[j] = t1;
    }
  else
    for (t1 = srcStart + count, i = srcStart, j = dstStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      var t2 = src[i];
      if (j < 0 || j >= dst.length)
        throw $.ioore(j);
      dst[j] = t2;
    }
};

$.Transitions_easeOutElastic = function(ratio) {
  if ($.eqB(ratio, 0) || $.eqB(ratio, 1))
    return ratio;
  if (typeof ratio !== 'number')
    throw $.iae(ratio);
  return $.pow(2, -10 * ratio) * $.sin((ratio - 0.075) * 6.283185307179586 / 0.3) + 1;
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values = [];
  var copies = [];
  var t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  var t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  var t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  var t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  var copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t1, t2, t3).call$1(value);
  t4.call$0();
  return copy;
};

$._DOMWindowCrossFrameImpl__top = function(win) {
return win.top;
};

$.Transitions_easeInCubic = function(ratio) {
  return $.mul($.mul(ratio, ratio), ratio);
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$._WorkerEventsImpl$ = function(_ptr) {
  return new $._WorkerEventsImpl(_ptr);
};

$.EventDispatcher$ = function() {
  return new $.EventDispatcher(null);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.convertDartClosureToJS = function(closure, arity) {
  if (closure == null)
    return;
  var function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.JSON_parse = function(json) {
  return $._JsonParser$(json).parseToplevel$0();
};

$._FixedSizeListIterator$ = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), array, 0);
};

$.double_parse = function(string) {
  return $.Primitives_parseDouble(string);
};

$.int_parse = function(string) {
  return $.Primitives_parseInt(string);
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.split = function(receiver, pattern) {
  if (!(typeof receiver === 'string'))
    return receiver.split$1(pattern);
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
};

$.WebAudioApiSoundChannel$ = function(webAudioApiSound, loop, soundTransform) {
  var t1 = new $.WebAudioApiSoundChannel(null, null, null, null, null, null);
  t1.WebAudioApiSoundChannel$3(webAudioApiSound, loop, soundTransform);
  return t1;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._InputElementEventsImpl$ = function(_ptr) {
  return new $._InputElementEventsImpl(_ptr);
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.Lock$ = function(color) {
  var t1 = new $.Lock(null, null, null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Lock$1(color);
  return t1;
};

$.LinkedHashMapImplementation$ = function() {
  var t1 = new $.LinkedHashMapImplementation(null, null);
  t1.LinkedHashMapImplementation$0();
  return t1;
};

$.Random_Random = function(seed) {
  return $.CTC27;
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC1));
  return object;
};

$.CompleterImpl$ = function() {
  return new $.CompleterImpl($.FutureImpl$());
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$._EventListenerListImpl$ = function(_ptr, _type) {
  return new $._EventListenerListImpl(_ptr, _type);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.loadGame = function() {
  var resource = $.Resource$();
  resource.addImage$2('Background', 'images/Background.jpg');
  resource.addImage$2('ExitBox', 'images/ExitBox.png');
  resource.addImage$2('ExitButtonNormal', 'images/ExitButtonNormal.png');
  resource.addImage$2('ExitButtonPressed', 'images/ExitButtonPressed.png');
  resource.addImage$2('ExitGauge', 'images/ExitGauge.png');
  resource.addImage$2('ExitNoButtonNormal', 'images/ExitNoButtonNormal.png');
  resource.addImage$2('ExitNoButtonPressed', 'images/ExitNoButtonPressed.png');
  resource.addImage$2('ExitYesButtonNormal', 'images/ExitYesButtonNormal.png');
  resource.addImage$2('ExitYesButtonPressed', 'images/ExitYesButtonPressed.png');
  resource.addImage$2('InfoBox', 'images/InfoBox.png');
  resource.addImage$2('MessageBox', 'images/MessageBox.png');
  resource.addImage$2('ShuffleButtonNormal', 'images/ShuffleButtonNormal.png');
  resource.addImage$2('ShuffleButtonPressed', 'images/ShuffleButtonPressed.png');
  resource.addImage$2('TimeGauge', 'images/TimeGauge.png');
  resource.addTextureAtlas$3('Alarm', 'images/AlarmTextureAtlas.json', 'jsonarray');
  resource.addTextureAtlas$3('Head', 'images/HeadTextureAtlas.json', 'jsonarray');
  resource.addTextureAtlas$3('Elements', 'images/ElementsTextureAtlas.json', 'jsonarray');
  resource.addTextureAtlas$3('Levelup', 'images/LevelupTextureAtlas.json', 'jsonarray');
  resource.addTextureAtlas$3('Locks', 'images/LocksTextureAtlas.json', 'jsonarray');
  resource.addSound$2('BonusAllUnlock', 'sounds/BonusAllUnlock.mp3');
  resource.addSound$2('BonusUniversal', 'sounds/BonusUniversal.mp3');
  resource.addSound$2('ChainBlast', 'sounds/ChainBlast.mp3');
  resource.addSound$2('ChainBlastSpecial', 'sounds/ChainBlastSpecial.mp3');
  resource.addSound$2('ChainError', 'sounds/ChainError.mp3');
  resource.addSound$2('ChainFall', 'sounds/ChainFall.mp3');
  resource.addSound$2('ChainHelp', 'sounds/ChainHelp.mp3');
  resource.addSound$2('ChainLink', 'sounds/ChainLink.mp3');
  resource.addSound$2('ChainRotate', 'sounds/ChainRotate.mp3');
  resource.addSound$2('Click', 'sounds/Click.mp3');
  resource.addSound$2('GameOver', 'sounds/GameOver.mp3');
  resource.addSound$2('Laugh', 'sounds/Laugh.mp3');
  resource.addSound$2('LevelUp', 'sounds/LevelUp.mp3');
  resource.addSound$2('PointsCounter', 'sounds/PointsCounter.mp3');
  resource.addSound$2('Unlock', 'sounds/Unlock.mp3');
  resource.addSound$2('Warning', 'sounds/Warning.mp3');
  resource.addSound$2('Intro', 'sounds/Intro.mp3');
  resource.addText$2('ESCAPE_INS_AIM_0', 'Connect at least 3 chain links of the same colour to a horizontal or vertical chain.');
  resource.addText$2('ESCAPE_INS_DES_0', 'You can change the direction of a chain link by touching it.');
  resource.addText$2('ESCAPE_INS_TIP_0', 'Earn extra points for connecting chain links displaying a key symbol.');
  resource.addText$2('ESCBlockErrorHint', 'Sorry but block chains can\xb4t be twisted!');
  resource.addText$2('ESCLevelBoxText', 'Connect {0} chain links and help the crook to escape!');
  resource.addText$2('ESCNoActionHint', 'Press on the chain links to twist them.');
  resource.addText$2('ESCNoComboHint', 'You have to connect at least 3 chain links of the same colour.');
  resource.addText$2('ESCStartText', 'Form horizontal or vertical same-colour chains and become an escape agent!');
  resource.addText$2('ESCtogo', 'Chain links:');
  resource.addText$2('GENexitquery', 'Do you really want to quit the game?');
  resource.addText$2('GEN2ndchancetime', 'Time is up. Second chance!');
  resource.addText$2('GENtimeup', 'Sorry! Your time is up.');
  resource.addText$2('GENgameover', 'Game Over');
  resource.load$0().then$1(new $.loadGame_anon(resource));
};

$.Stage$ = function(name$, canvas) {
  var t1 = new $.Stage(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Stage$2(name$, canvas);
  return t1;
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.index$slow = function(a, index) {
  if (typeof a === 'string' || $.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.IllegalArgumentException$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.IllegalArgumentException$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.BitmapData_loadImage = function(url) {
  var completer = $.CompleterImpl$();
  var image = $._Elements_ImageElement(url, null, null);
  $.add$1(image.get$on().get$load(), new $.BitmapData_loadImage_anon(image, completer));
  $.add$1(image.get$on().get$error(), new $.BitmapData_loadImage_anon0(completer));
  return completer.get$future();
};

$.Transitions_linear = function(ratio) {
  return ratio;
};

$.RenderState$fromCanvasRenderingContext2D = function(context) {
  var t1 = new $.RenderState(null, null, null, null);
  t1.RenderState$fromCanvasRenderingContext2D$1(context);
  return t1;
};

$.isEven = function(receiver) {
  if (!(typeof receiver === 'number' && Math.floor(receiver) === receiver))
    return receiver.isEven$0();
  return (receiver & 1) === 0;
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.get$length(receiver) === 0)
      throw $.$$throw($.IndexOutOfRangeException$(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$._DOMWindowCrossFrameImpl__postMessage3 = function(win, message, targetOrigin, messagePorts) {
    win.postMessage(message, targetOrigin, messagePorts);

};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$._HttpRequestEventsImpl$ = function(_ptr) {
  return new $._HttpRequestEventsImpl(_ptr);
};

$.listInsertRange = function(receiver, start, length$, initialValue) {
  if (typeof receiver !== 'object' || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.is$JavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, length$, initialValue);
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (length$ < 0)
    throw $.$$throw($.IllegalArgumentException$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.IllegalArgumentException$(start));
  var receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  var t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (var i = start; i < t2; ++i) {
      if (i < 0 || i >= receiver.length)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.set$length(receiver, t1);
};

$._Elements_ImageElement = function(src, width, height) {
  var _e = $._document().$dom_createElement$1('img');
  if (!(src == null))
    _e.set$src(src);
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$.IndexOutOfRangeException$ = function(_value) {
  return new $.IndexOutOfRangeException(_value);
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$._TextTrackEventsImpl$ = function(_ptr) {
  return new $._TextTrackEventsImpl(_ptr);
};

$._BatteryManagerEventsImpl$ = function(_ptr) {
  return new $._BatteryManagerEventsImpl(_ptr);
};

$._ElementRectImpl$ = function(element) {
  return new $._ElementRectImpl($._SimpleClientRect$(element.get$$$dom_clientLeft(), element.get$$$dom_clientTop(), element.get$$$dom_clientWidth(), element.get$$$dom_clientHeight()), $._SimpleClientRect$(element.get$$$dom_offsetLeft(), element.get$$$dom_offsetTop(), element.get$$$dom_offsetWidth(), element.get$$$dom_offsetHeight()), $._SimpleClientRect$(element.get$$$dom_scrollLeft(), element.get$$$dom_scrollTop(), element.get$$$dom_scrollWidth(), element.get$$$dom_scrollHeight()), element.$dom_getBoundingClientRect$0(), element.$dom_getClientRects$0());
};

$.Mask$rectangle = function(x, y, width, height) {
  var t1 = new $.Mask(null, null, null, null);
  t1.Mask$rectangle$4(x, y, width, height);
  return t1;
};

$._WebSocketEventsImpl$ = function(_ptr) {
  return new $._WebSocketEventsImpl(_ptr);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBufferImpl$('');
  $.Collections__emitCollection(c, result, $.ListImplementation_List(null));
  return result.toString$0();
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._MediaStreamEventsImpl$ = function(_ptr) {
  return new $._MediaStreamEventsImpl(_ptr);
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._AudioElementFactoryProvider_AudioElement = function(src) {
      if (src == null) return new Audio();
      return new Audio(src);
    
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$.DateImplementation$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateImplementation(millisecondsSinceEpoch, isUtc);
  t1.DateImplementation$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  for (var t1 = $.iterator(charCodes); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.IllegalArgumentException$(t2));
  }
  return String.fromCharCode.apply(null, charCodes);
};

$.Grafix_getJokerChain = function(direction) {
  var textureAtlas = $.Grafix_resource.getTextureAtlas$1('Elements');
  var tmp = $.ListImplementation_List(null);
  tmp.push(textureAtlas.getBitmapData$1('JokerChain' + $.S(direction) + '0'));
  tmp.push(textureAtlas.getBitmapData$1('JokerChain' + $.S(direction) + '1'));
  tmp.push(textureAtlas.getBitmapData$1('JokerChain' + $.S(direction) + '2'));
  tmp.push(textureAtlas.getBitmapData$1('JokerChain' + $.S(direction) + '3'));
  tmp.push(textureAtlas.getBitmapData$1('JokerChain' + $.S(direction) + '4'));
  return tmp;
};

$.StringImplementation__fromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  if (!$.isJsArray(charCodes))
    charCodes = $.ListImplementation_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.IllegalArgumentException$(newLength));
    if (newLength < 0)
      throw $.$$throw($.IndexOutOfRangeException$(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'FormData')
    return 'DOMFormData';
  return name$;
};

$.ioore = function(index) {
  throw $.$$throw($.IndexOutOfRangeException$(index));
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.Bitmap$ = function(bitmapData, pixelSnapping, smoothing) {
  var t1 = new $.Bitmap(bitmapData, pixelSnapping, smoothing, null, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.Bitmap$3(bitmapData, pixelSnapping, smoothing);
  return t1;
};

$._color2rgb = function(color) {
  var r = $.and($.shr(color, 16), 255);
  var g = $.and($.shr(color, 8), 255);
  var b = $.and($.shr(color, 0), 255);
  return 'rgb(' + $.S(r) + ',' + $.S(g) + ',' + $.S(b) + ')';
};

$._DOMWindowCrossFrameImpl__parent = function(win) {
return win.parent;
};

$.hashCode = function(receiver) {
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (!(typeof receiver === 'string'))
    return receiver.hashCode$0();
  var length$ = receiver.length;
  for (var hash = 0, i = 0; i < length$; ++i) {
    var hash0 = 536870911 & hash + receiver.charCodeAt(i);
    var hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
    hash = hash1;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator = $.iterator(keyValuePairs);
  var result = $.LinkedHashMapImplementation$();
  for (; iterator.hasNext$0() === true;)
    result.operator$indexSet$2(iterator.next$0(), iterator.next$0());
  return result;
};

$.startsWith = function(receiver, other) {
  $.checkString(other);
  var length$ = other.length;
  if (length$ > receiver.length)
    return false;
  return other == receiver.substring(0, length$);
};

$.ExitBox$ = function() {
  var t1 = new $.ExitBox(null, null, null, null, false, false, null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.ExitBox$0();
  return t1;
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$._MessagePortEventsImpl$ = function(_ptr) {
  return new $._MessagePortEventsImpl(_ptr);
};

$._document = function() {
return document;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if ($.contains(userAgent, 'Chrome') || $.contains(userAgent, 'DumpRenderTree'))
    return $.typeNameInChrome;
  else if ($.contains(userAgent, 'Firefox'))
    return $.typeNameInFirefox;
  else if ($.contains(userAgent, 'MSIE'))
    return $.typeNameInIE;
  else if ($.contains(userAgent, 'Opera'))
    return $.typeNameInOpera;
  else if ($.contains(userAgent, 'Safari'))
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$._ElementEventsImpl$ = function(_ptr) {
  return new $._ElementEventsImpl(_ptr);
};

$.TextField$ = function() {
  var t1 = new $.TextField('', 0, null, 'none', 'pixel', 'dynamic', false, false, 0, false, 0, 0, 0, null, null, true, 100, 100, null, null, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, '', null, null, null, null, null);
  t1.DisplayObject$0();
  t1.TextField$0();
  return t1;
};

$.sin = function(value) {
  return Math.sin($.checkNum(value));
};

$.Primitives_parseDouble = function(string) {
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  var result = parseFloat(string);
  if ($.isNaN(result) === true && !$.eqB(string, 'NaN'))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.ListImplementation_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.Event$ = function(type, bubbles) {
  var t1 = new $.Event(null, null, null, null, null, false, false);
  t1.Event$2(type, bubbles);
  return t1;
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.IllegalArgumentException$(element));
    return receiver.indexOf(element);
  }
  return receiver.indexOf$1(element);
};

$.RenderLoop$ = function() {
  var t1 = new $.RenderLoop(null, null, (0/0));
  t1.RenderLoop$0();
  return t1;
};

$.ValueCounter$ = function() {
  return new $.ValueCounter(0);
};

$.StringBufferImpl$ = function(content$) {
  var t1 = new $.StringBufferImpl(null, null);
  t1.StringBufferImpl$1(content$);
  return t1;
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.HashMapImplementation$ = function() {
  var t1 = new $.HashMapImplementation(null, null, null, null, null);
  t1.HashMapImplementation$0();
  return t1;
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.KeyboardEvent$ = function(type, bubbles) {
  var t1 = new $.KeyboardEvent(false, false, false, false, false, 0, 0, 0, null, null, null, null, null, false, false);
  t1.Event$2(type, bubbles);
  return t1;
};

$.Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$._SharedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._SharedWorkerContextEventsImpl(_ptr);
};

$._IDBVersionChangeRequestEventsImpl$ = function(_ptr) {
  return new $._IDBVersionChangeRequestEventsImpl(_ptr);
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.unwrapException = function(ex) {
  if ("dartException" in ex)
    return ex.dartException;
  var message = ex.message;
  if (ex instanceof TypeError) {
    var type = ex.type;
    var name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NullPointerException$(null, $.CTC1);
    else if ($.eqB(type, 'undefined_method'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NoSuchMethodError$('', name$, [], null);
    var ieErrorCode = ex.number & 0xffff;
    var ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC1);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          var t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], null);
      }
    return $.ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowException$();
    return $.IllegalArgumentException$('');
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowException$();
  return ex;
};

$.cos = function(value) {
  return Math.cos($.checkNum(value));
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$._Lists_indexOf$bailout = function(state, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (var i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Arrays_indexOf$bailout = function(state, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Futures_wait$bailout = function(state, futures, t1) {
  if ($.isEmpty(futures) === true)
    return $.FutureImpl_FutureImpl$immediate($.CTC1);
  var completer = $.CompleterImpl$();
  var result = completer.get$future();
  t1.remaining_1 = $.get$length(futures);
  var values = $.ListImplementation_List($.get$length(futures));
  for (var i = 0; $.ltB(i, $.get$length(futures)); ++i) {
    var future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(result, i, completer, t1, values));
    future.handleException$1(new $.Futures_wait_anon0(result, completer, future));
  }
  return result;
};

$._EventDispatcherCatalog_dispatchEvent$bailout = function(state, env0, env1) {
  switch (state) {
    case 1:
      var event$ = env0;
      eventDispatchers = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      if (state === 1 || state === 0 && !($._EventDispatcherCatalog__eventDispatcherMap == null))
        switch (state) {
          case 0:
            var eventDispatchers = $.index($._EventDispatcherCatalog__eventDispatcherMap, event$.get$type());
          case 1:
            state = 0;
            if (!(eventDispatchers == null)) {
              var eventDispatchersLength = $.get$length(eventDispatchers);
              for (var c = 0, i = 0; $.ltB(i, eventDispatchersLength); ++i) {
                var eventDispatcher = $.index(eventDispatchers, i);
                if (!(eventDispatcher == null)) {
                  eventDispatcher.dispatchEvent$1(event$);
                  if (!(c === i))
                    $.indexSet(eventDispatchers, c, eventDispatcher);
                  ++c;
                }
              }
              for (i = eventDispatchersLength; $.ltB(i, $.get$length(eventDispatchers)); i = $.add(i, 1)) {
                var c0 = c + 1;
                $.indexSet(eventDispatchers, c, $.index(eventDispatchers, i));
                c = c0;
              }
              $.set$length(eventDispatchers, c);
            }
        }
  }
};

$.Arrays_copy$bailout = function(state, src, srcStart, dst, dstStart, count) {
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (var t1 = srcStart + count, i = srcStart, j = dstStart; i < t1; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$.listInsertRange$bailout = function(state, receiver, start, length$, initialValue) {
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (length$ < 0)
    throw $.$$throw($.IllegalArgumentException$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.IllegalArgumentException$(start));
  var receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  var t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (var i = start; i < t2; ++i)
      $.indexSet(receiver, i, initialValue);
  $.set$length(receiver, t1);
};

$._Lists_getRange$bailout = function(state, a, start, length$, accumulator) {
  if ($.ltB(length$, 0))
    throw $.$$throw($.IllegalArgumentException$('length'));
  if ($.ltB(start, 0))
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var end = $.add(start, length$);
  if ($.gtB(end, $.get$length(a)))
    throw $.$$throw($.IndexOutOfRangeException$(end));
  for (var i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.StringImplementation__toJsStringArray$bailout = function(state, strings) {
  $.checkNull(strings);
  var length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (var i = 0; $.ltB(i, length$); ++i) {
      var string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.IllegalArgumentException$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.IllegalArgumentException$(string));
      if (i < 0 || i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.Transitions_linear.call$1 = $.Transitions_linear;
$.Transitions_linear.$name = "Transitions_linear";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.Transitions_easeInCubic.call$1 = $.Transitions_easeInCubic;
$.Transitions_easeInCubic.$name = "Transitions_easeInCubic";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.Transitions_easeOutElastic.call$1 = $.Transitions_easeOutElastic;
$.Transitions_easeOutElastic.$name = "Transitions_easeOutElastic";
$.Transitions_easeOutCubic.call$1 = $.Transitions_easeOutCubic;
$.Transitions_easeOutCubic.$name = "Transitions_easeOutCubic";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC1 = Isolate.makeConstantList([]);
$.CTC29 = 0;
$.CTC30 = new Isolate.$isolateProperties._SimpleClientRect(0, 0, 0, 0);
$.CTC25 = new Isolate.$isolateProperties.EmptyElementRect(Isolate.$isolateProperties.CTC30, Isolate.$isolateProperties.CTC30, Isolate.$isolateProperties.CTC30, Isolate.$isolateProperties.CTC30, Isolate.$isolateProperties.CTC1);
$.CTC31 = '';
$.CTC16 = new Isolate.$isolateProperties.UnsupportedOperationException('');
$.CTC27 = new Isolate.$isolateProperties._Random();
$.CTC32 = 'structured clone of ArrayBufferView';
$.CTC10 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBufferView');
$.CTC33 = null;
$.CTC24 = new Isolate.$isolateProperties.NotImplementedException(null);
$.CTC13 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC34 = 'structured clone of FileList';
$.CTC8 = new Isolate.$isolateProperties.NotImplementedException('structured clone of FileList');
$.CTC35 = 'structured clone of other type';
$.CTC11 = new Isolate.$isolateProperties.NotImplementedException('structured clone of other type');
$.CTC28 = new Isolate.$isolateProperties.Object();
$.CTC36 = false;
$.CTC37 = '^#[_a-zA-Z]\\w*$';
$.CTC12 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '^#[_a-zA-Z]\\w*$');
$.CTC38 = true;
$.CTC39 = '(.+?)(\\.[^.]*$|$)';
$.CTC21 = new Isolate.$isolateProperties.JSSyntaxRegExp(true, false, '(.+?)(\\.[^.]*$|$)');
$.CTC40 = 'Invalid list length';
$.CTC17 = new Isolate.$isolateProperties.IllegalArgumentException('Invalid list length');
$.CTC41 = '[-[\\]{}()*+?.,\\\\^$|#\\s]';
$.CTC22 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '[-[\\]{}()*+?.,\\\\^$|#\\s]');
$.CTC42 = 'IDBKey containing Date';
$.CTC20 = new Isolate.$isolateProperties.NotImplementedException('IDBKey containing Date');
$.CTC43 = 'structured clone of File';
$.CTC6 = new Isolate.$isolateProperties.NotImplementedException('structured clone of File');
$.CTC44 = 'structured clone of RegExp';
$.CTC5 = new Isolate.$isolateProperties.NotImplementedException('structured clone of RegExp');
$.CTC45 = 'Cannot removeLast on immutable List.';
$.CTC3 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeLast on immutable List.');
$.CTC46 = 'structured clone of Date';
$.CTC4 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Date');
$.CTC47 = '\\.(ogg|mp3|wav)$';
$.CTC15 = new Isolate.$isolateProperties.JSSyntaxRegExp(true, false, '\\.(ogg|mp3|wav)$');
$.CTC48 = 'Cannot removeRange on immutable List.';
$.CTC23 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeRange on immutable List.');
$.CTC49 = 'structured clone of ArrayBuffer';
$.CTC9 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBuffer');
$.CTC50 = 'Cannot insertRange on immutable List.';
$.CTC26 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot insertRange on immutable List.');
$.CTC51 = 'structured clone of Blob';
$.CTC7 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Blob');
$.CTC52 = 'offsetX is only supported on elements';
$.CTC14 = new Isolate.$isolateProperties.UnsupportedOperationException('offsetX is only supported on elements');
$.CTC0 = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC1);
$.CTC19 = new Isolate.$isolateProperties.EmptyQueueException();
$.CTC53 = 'Cannot add to immutable List.';
$.CTC = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot add to immutable List.');
$.CTC2 = new Isolate.$isolateProperties.NoMoreElementsException();
$.CTC54 = '^(.*/)?(?:$|(.+?)(?:(\\.[^.]*$)|$))';
$.CTC18 = new Isolate.$isolateProperties.JSSyntaxRegExp(true, false, '^(.*/)?(?:$|(.+?)(?:(\\.[^.]*$)|$))');
$._pendingRequests = null;
$.double_NAN = (0/0);
$.HashMapImplementation__INITIAL_CAPACITY = 8;
$._JsonParser_TAB = 9;
$.Gauge_DIRECTION_UP = 'DIRECTION_UP';
$.Mouse___eventDispatcher = null;
$.StageRenderMode_AUTO = 'auto';
$.MouseCursor_AUTO = 'auto';
$.MouseEvent_MOUSE_UP = 'mouseUp';
$.Special_Quint = 'Quint';
$.Sound__supportedTypes = null;
$.double_NEGATIVE_INFINITY = (-1/0);
$._JsonParser_DOT = 46;
$._JsonParser_CHAR_B = 98;
$._JsonParser_TRUE_LITERAL = 116;
$.TextEvent_TEXT_INPUT = 'textInput';
$.Event_ADDED = 'added';
$._JsonParser_BACKSLASH = 92;
$.KeyLocation_MOBILE = 4;
$._JsonParser_CARRIAGE_RETURN = 13;
$.KeyboardEvent_KEY_UP = 'keyUp';
$._JsonParser_FORM_FEED = 12;
$._JsonParser_CHAR_E = 101;
$._JsonParser_CHAR_T = 116;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.Special_Block = 'Block';
$.EventPhase_BUBBLING_PHASE = 3;
$.KeyLocation_STANDARD = 0;
$.BoardEvent_Finalized = 'Finalized';
$._JsonParser_CHAR_3 = 51;
$._JsonParser_CHAR_7 = 55;
$._JsonParser_NULL_LITERAL = 110;
$._JsonParser_BACKSPACE = 8;
$.BoardStatus_Playing = 1;
$._JsonParser_COMMA = 44;
$._JsonParser_CHAR_0 = 48;
$._getTypeNameOf = null;
$.KeyLocation_D_PAD = 4;
$.MouseEvent_MIDDLE_MOUSE_DOWN = 'middleMouseDown';
$._JsonParser_LAST_ASCII = 125;
$.StageRenderMode_ONCE = 'once';
$.BoardStatus_Finalizing = 2;
$.KeyLocation_NUMPAD = 3;
$.BoardEvent_Explosion = 'Explosion';
$.Mouse__customCursor = 'auto';
$.MouseEvent_RIGHT_MOUSE_UP = 'rightMouseUp';
$.Special_None = 'None';
$.TextFormatAlign_JUSTIFY = 'justify';
$._cachedBrowserPrefix = null;
$._JsonParser_RBRACKET = 93;
$._TimerFactory__factory = null;
$._firstMeasurementRequest = true;
$.KeyLocation_LEFT = 1;
$.KeyLocation_LEFT0 = 1;
$._JsonParser_FALSE_STRING = 'false';
$.loadingBitmap = null;
$._JsonParser_CHAR_CAPITAL_E = 69;
$.TextFormatAlign_END = 'end';
$._EventDispatcherCatalog__eventDispatcherMap = null;
$._JsonParser_QUOTE = 34;
$.TextureAtlasFormat_JSON = 'json';
$.loadingTextField = null;
$.TimeGauge_TIME_OUT = 'TIME_OUT';
$.KeyLocation_RIGHT = 2;
$.KeyLocation_RIGHT0 = 2;
$.TextFormatAlign_RIGHT = 'right';
$._ReceivePortImpl__nextFreeId = 1;
$.TextFieldAutoSize_NONE = 'none';
$._JsonParser_LBRACKET = 91;
$.EventPhase_AT_TARGET = 2;
$._JsonParser_CHAR_9 = 57;
$.KeyLocation_JOYSTICK = 5;
$._JsonParser_PLUS = 43;
$._JsonParser_FALSE_LITERAL = 102;
$.SoundMixer__audioContextPrivate = null;
$._JsonParser_COLON = 58;
$._JsonParser_CHAR_2 = 50;
$.MouseEvent_MOUSE_MOVE = 'mouseMove';
$.stageForeground = null;
$._JsonParser_CHAR_6 = 54;
$.Gauge_DIRECTION_LEFT = 'DIRECTION_LEFT';
$.MouseCursor_BUTTON = 'button';
$.MouseEvent_MOUSE_OVER = 'mouseOver';
$.Event_REMOVED_FROM_STAGE = 'removedFromStage';
$.TextFieldType_DYNAMIC = 'dynamic';
$.Event_REMOVED = 'removed';
$.Grafix_resource = null;
$.Texts_resource = null;
$.Sounds_resource = null;
$.EventPhase_CAPTURING_PHASE = 1;
$._JsonParser_NEW_LINE = 10;
$._MEASUREMENT_MESSAGE = 'DART-MEASURE';
$.KeyLocation_NUM_PAD = 3;
$.PI = 3.141592653589793;
$.MouseEvent_MIDDLE_MOUSE_UP = 'middleMouseUp';
$._JsonParser_tokens = null;
$._JsonParser_CHAR_1 = 49;
$._JsonParser_NULL_STRING = 'null';
$.MouseCursor_IBEAM = 'ibeam';
$._JsonParser_MINUS = 45;
$._JsonParser_SLASH = 47;
$._JsonParser_CHAR_N = 110;
$.HashMapImplementation__DELETED_KEY = Isolate.$isolateProperties.CTC13;
$.Mouse__isCursorHidden = false;
$._JsonParser_CHAR_R = 114;
$.GridFitType_PIXEL = 'pixel';
$.TextureAtlasFormat_JSONARRAY = 'jsonarray';
$.loadingBitmapTween = null;
$.Special_Joker = 'Joker';
$._JsonParser_SPACE = 32;
$.MouseEvent_MIDDLE_CLICK = 'middleClick';
$.Gauge_DIRECTION_DOWN = 'DIRECTION_DOWN';
$.MouseEvent_MOUSE_WHEEL = 'mouseWheel';
$.TextFormatAlign_CENTER = 'center';
$._JsonParser_STRING_LITERAL = 34;
$.BoardEvent_Unlocked = 'Unlocked';
$.MouseEvent_RIGHT_CLICK = 'rightClick';
$.MouseEvent_DOUBLE_CLICK = 'doubleClick';
$.MouseEvent_MOUSE_DOWN = 'mouseDown';
$._JsonParser_CHAR_5 = 53;
$._JsonParser_CHAR_4 = 52;
$._JsonParser_CHAR_U = 117;
$.StageRenderMode_STOP = 'stop';
$._nextMeasurementFrameScheduled = false;
$.double_INFINITY = (1/0);
$.KeyboardEvent_KEY_DOWN = 'keyDown';
$.stageBackground = null;
$._pendingMeasurementFrameCallbacks = null;
$.MouseCursor_ARROW = 'arrow';
$.MouseCursor_HAND = 'hand';
$._JsonParser_TRUE_STRING = 'true';
$._JsonParser_LBRACE = 123;
$.Gauge_DIRECTION_RIGHT = 'DIRECTION_RIGHT';
$.Event_ADDED_TO_STAGE = 'addedToStage';
$.SoundMixer__engine = null;
$.MouseCursor_WAIT = 'wait';
$.Juggler__instance = null;
$.DateImplementation__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.MouseEvent_CLICK = 'click';
$.MouseEvent_RIGHT_MOUSE_DOWN = 'rightMouseDown';
$._JsonParser_RBRACE = 125;
$._JsonParser_NUMBER_LITERAL = 45;
$._JsonParser_CHAR_F = 102;
$.BoardEvent_Timeouted = 'Timeouted';
$._JsonParser_CHAR_8 = 56;
$.Event_ENTER_FRAME = 'enterFrame';
$.renderLoop = null;
$.BoardStatus_Timeouting = 3;
$.MouseEvent_MOUSE_OUT = 'mouseOut';
$._JsonParser_WHITESPACE = 32;
$.Special_Double = 'Double';
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, fields, methods) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], methods);
  }
  for (var method in methods) {
    $.dynamicFunction(method)[cls] = methods[method];
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$FileList: function() { return false; },
 is$_FileImpl: function() { return false; },
 is$Element: function() { return false; },
 is$_ImageDataImpl: function() { return false; },
 is$_FileListImpl: function() { return false; },
 is$_ArrayBufferViewImpl: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Collection: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$_BlobImpl: function() { return false; },
 is$ImageData: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$List: function() { return false; },
 is$Map: function() { return false; },
 is$_ArrayBufferImpl: function() { return false; },
 is$File: function() { return false; },
 is$Blob: function() { return false; }
});

$.$defineNativeClass('AbstractWorker', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._AbstractWorkerEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLAnchorElement', ["name?", "target?", "type?"], {
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimation', ["direction?", "duration?", "ended?", "name?"], {
 pause$0: function() {
  return this.pause();
},
 play$0: function() {
  return this.play();
}
});

$.$defineNativeClass('WebKitAnimationList', ["length?"], {
});

$.$defineNativeClass('HTMLAppletElement', ["align?", "height=", "name?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', ["target?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', [], {
 is$_ArrayBufferImpl: function() { return true; },
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', [], {
 is$_ArrayBufferViewImpl: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', ["name?", "value="], {
});

$.$defineNativeClass('AudioBuffer', ["duration?", "gain?", "length?"], {
});

$.$defineNativeClass('AudioBufferSourceNode', ["buffer!", "gain?", "loop!"], {
 noteOff$1: function(when) {
  return this.noteOff(when);
},
 noteOn$1: function(when) {
  return this.noteOn(when);
}
});

$.$defineNativeClass('AudioContext', ["currentTime?", "destination?"], {
 get$on: function() {
  return $._AudioContextEventsImpl$(this);
},
 listener$1: function(arg0) { return this.listener.call$1(arg0); },
 createBufferSource$0: function() {
  return this.createBufferSource();
},
 createGainNode$0: function() {
  return this.createGainNode();
},
 decodeAudioData$3: function(audioData, successCallback, errorCallback) {
  return this.decodeAudioData(audioData,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
}
});

$.$defineNativeClass('HTMLAudioElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('AudioGainNode', ["gain?"], {
});

$.$defineNativeClass('AudioNode', [], {
 connect$3: function(destination, output, input) {
  return this.connect(destination,output,input);
}
});

$.$defineNativeClass('AudioParam', ["name?", "value="], {
});

$.$defineNativeClass('HTMLBRElement', [], {
 clear$0: function() { return this.clear.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('BarInfo', ["visible?"], {
});

$.$defineNativeClass('HTMLBaseElement', ["target?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', ["color=", "size?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', [], {
 get$on: function() {
  return $._BatteryManagerEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BiquadFilterNode', ["gain?", "type?"], {
});

$.$defineNativeClass('Blob', ["size?", "type?"], {
 is$_BlobImpl: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', [], {
 get$on: function() {
  return $._BodyElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', ["name?", "type?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('CSSFontFaceRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSKeyframeRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSKeyframesRule', ["name?"], {
});

$.$defineNativeClass('WebKitCSSMatrix', ["a?", "b?", "c?", "d?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSPageRule', ["style?"], {
});

$.$defineNativeClass('CSSRule', ["type?"], {
});

$.$defineNativeClass('CSSRuleList', ["length?"], {
});

$.$defineNativeClass('CSSStyleDeclaration', ["length?"], {
 getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 setProperty$3: function(propertyName, value, priority) {
  return this.setProperty(propertyName,value,priority);
},
 get$bottom: function() {
  return this.getPropertyValue$1('bottom');
},
 set$bottom: function(value) {
  this.setProperty$3('bottom', value, '');
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 get$clip: function() {
  return this.getPropertyValue$1('clip');
},
 clip$0: function() { return this.get$clip().call$0(); },
 get$color: function() {
  return this.getPropertyValue$1('color');
},
 set$color: function(value) {
  this.setProperty$3('color', value, '');
},
 set$cursor: function(value) {
  this.setProperty$3('cursor', value, '');
},
 get$direction: function() {
  return this.getPropertyValue$1('direction');
},
 set$direction: function(value) {
  this.setProperty$3('direction', value, '');
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 get$font: function() {
  return this.getPropertyValue$1('font');
},
 set$font: function(value) {
  this.setProperty$3('font', value, '');
},
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 get$left: function() {
  return this.getPropertyValue$1('left');
},
 set$left: function(value) {
  this.setProperty$3('left', value, '');
},
 get$mask: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'mask');
},
 set$mask: function(value) {
  this.setProperty$3($.S($._browserPrefix()) + 'mask', value, '');
},
 set$outline: function(value) {
  this.setProperty$3('outline', value, '');
},
 get$right: function() {
  return this.getPropertyValue$1('right');
},
 set$right: function(value) {
  this.setProperty$3('right', value, '');
},
 get$size: function() {
  return this.getPropertyValue$1('size');
},
 set$src: function(value) {
  this.setProperty$3('src', value, '');
},
 set$textAlign: function(value) {
  this.setProperty$3('text-align', value, '');
},
 get$top: function() {
  return this.getPropertyValue$1('top');
},
 set$top: function(value) {
  this.setProperty$3('top', value, '');
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'transform');
},
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
},
 set$wordWrap: function(value) {
  this.setProperty$3('word-wrap', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', ["style?"], {
});

$.$defineNativeClass('CSSValueList', ["length?"], {
});

$.$defineNativeClass('HTMLCanvasElement', ["height=", "width="], {
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1('2d');
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasRenderingContext', ["canvas?"], {
});

$.$defineNativeClass('CanvasRenderingContext2D', ["fillStyle!", "font=", "globalAlpha!", "lineWidth!", "strokeStyle!", "textAlign!", "textBaseline!"], {
 arc$6: function(x, y, radius, startAngle, endAngle, anticlockwise) {
  return this.arc(x,y,radius,startAngle,endAngle,anticlockwise);
},
 beginPath$0: function() {
  return this.beginPath();
},
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 clip$0: function() {
  return this.clip();
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y);
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 fillText$4: function(text, x, y, maxWidth) {
  return this.fillText(text,x,y,maxWidth);
},
 fillText$3: function(text,x,y) {
  return this.fillText(text,x,y);
},
 lineTo$2: function(x, y) {
  return this.lineTo(x,y);
},
 measureText$1: function(text) {
  return this.measureText(text);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 rect$4: function(x, y, width, height) {
  return this.rect(x,y,width,height);
},
 restore$0: function() {
  return this.restore();
},
 save$0: function() {
  return this.save();
},
 setTransform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.setTransform(m11,m12,m21,m22,dx,dy);
},
 strokeRect$5: function(x, y, width, height, lineWidth) {
  return this.strokeRect(x,y,width,height,lineWidth);
},
 strokeRect$4: function(x,y,width,height) {
  return this.strokeRect(x,y,width,height);
},
 transform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.transform(m11,m12,m21,m22,dx,dy);
}
});

$.$defineNativeClass('CharacterData', ["length?"], {
});

$.$defineNativeClass('ClientRect', ["bottom?", "height?", "left?", "right?", "top?", "width?"], {
});

$.$defineNativeClass('ClientRectList', ["length?"], {
});

_ConsoleImpl = (typeof console == 'undefined' ? {} : console);
_ConsoleImpl.info$1 = function(arg) {
  return this.info(arg);
};
_ConsoleImpl.get$info = function() { return new $.BoundClosure(this, 'info$1'); };
_ConsoleImpl.group$1 = function(arg) {
  return this.group(arg);
};
_ConsoleImpl.error$1 = function(arg) {
  return this.error(arg);
};
_ConsoleImpl.get$error = function() { return new $.BoundClosure(this, 'error$1'); };
$.$defineNativeClass('HTMLContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', ["buffer!"], {
});

$.$defineNativeClass('HTMLDListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', [], {
 get$on: function() {
  return $._DOMApplicationCacheEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMError', ["name?"], {
});

$.$defineNativeClass('DOMException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', ["name?"], {
});

$.$defineNativeClass('DOMFileSystemSync', ["name?"], {
});

$.$defineNativeClass('DOMMimeType', ["type?"], {
});

$.$defineNativeClass('DOMMimeTypeArray', ["length?"], {
});

$.$defineNativeClass('DOMPlugin', ["length?", "name?"], {
});

$.$defineNativeClass('DOMPluginArray', ["length?"], {
});

$.$defineNativeClass('DOMSelection', ["type?"], {
 empty$0: function() {
  return this.empty();
},
 get$empty: function() { return new $.BoundClosure0(this, 'empty$0'); },
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', ["value="], {
});

$.$defineNativeClass('DOMStringList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('DOMTokenList', ["length?"], {
 add$1: function(token) {
  return this.add(token);
},
 contains$1: function(token) {
  return this.contains(token);
},
 remove$1: function(token) {
  return this.remove(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItem', ["type?"], {
});

$.$defineNativeClass('DataTransferItemList', ["length?"], {
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', [], {
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('DedicatedWorkerContext', [], {
 get$on: function() {
  return $._DedicatedWorkerContextEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 postMessage$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('HTMLDetailsElement', [], {
 open$3: function(arg0, arg1, arg2) { return this.open.call$3(arg0, arg1, arg2); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('DeviceOrientationEvent', ["alpha?"], {
});

$.$defineNativeClass('HTMLDirectoryElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDivElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', ["body?"], {
 get$on: function() {
  return $._DocumentEventsImpl$(this);
},
 get$window: function() {
return this.defaultView;
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.CTC12.hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentFragment', [], {
 get$elements: function() {
  if (this._elements == null)
    this._elements = $.FilteredElementList$(this);
  return this._elements;
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$rect: function() {
  return $._createMeasurementFuture(new $._DocumentFragmentImpl_rect_anon(), $.CompleterImpl$());
},
 rect$4: function(arg0, arg1, arg2, arg3) { return this.get$rect().call$4(arg0, arg1, arg2, arg3); },
 get$id: function() {
  return '';
},
 get$parent: function() {
  return;
},
 get$style: function() {
  return $._ElementFactoryProvider_Element$tag('div').get$style();
},
 focus$0: function() {
},
 get$on: function() {
  return $._ElementEventsImpl$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentType', ["name?"], {
});

$.$defineNativeClass('DynamicsCompressorNode', ["ratio?"], {
});

$.$defineNativeClass('Element', ["id?", "style?"], {
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
  {
  return $._ChildrenElementList$_wrap(this);
}
  } else {
    return Object.prototype.get$elements.call(this);
  }

},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$rect: function() {
  return $._createMeasurementFuture(new $._ElementImpl_rect_anon(this), $.CompleterImpl$());
},
 rect$4: function(arg0, arg1, arg2, arg3) { return this.get$rect().call$4(arg0, arg1, arg2, arg3); },
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._ElementEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$$$dom_children: function() {
return this.children;
},
 get$$$dom_clientHeight: function() {
return this.clientHeight;
},
 get$$$dom_clientLeft: function() {
return this.clientLeft;
},
 get$$$dom_clientTop: function() {
return this.clientTop;
},
 get$$$dom_clientWidth: function() {
return this.clientWidth;
},
 get$$$dom_firstElementChild: function() {
return this.firstElementChild;
},
 get$$$dom_lastElementChild: function() {
return this.lastElementChild;
},
 get$$$dom_offsetHeight: function() {
return this.offsetHeight;
},
 get$$$dom_offsetLeft: function() {
return this.offsetLeft;
},
 get$$$dom_offsetTop: function() {
return this.offsetTop;
},
 get$$$dom_offsetWidth: function() {
return this.offsetWidth;
},
 get$$$dom_scrollHeight: function() {
return this.scrollHeight;
},
 get$$$dom_scrollLeft: function() {
return this.scrollLeft;
},
 get$$$dom_scrollTop: function() {
return this.scrollTop;
},
 get$$$dom_scrollWidth: function() {
return this.scrollWidth;
},
 focus$0: function() {
  return this.focus();
},
 $dom_getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 $dom_getClientRects$0: function() {
  return this.getClientRects();
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', ["align?", "height=", "name?", "src!", "type?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Entry', ["name?"], {
 moveTo$4: function(parent, name, successCallback, errorCallback) {
  return this.moveTo(parent,name,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 moveTo$2: function(parent$,name$) {
  return this.moveTo(parent$,name$);
},
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntryArray', ["length?"], {
});

$.$defineNativeClass('EntryArraySync', ["length?"], {
});

$.$defineNativeClass('EntrySync', ["name?"], {
 moveTo$2: function(parent, name) {
  return this.moveTo(parent,name);
},
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', ["message?"], {
});

$.$defineNativeClass('Event', ["bubbles?", "target?", "type?"], {
 preventDefault$0: function() {
  return this.preventDefault();
}
});

$.$defineNativeClass('EventException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventSource', [], {
 get$on: function() {
  return $._EventSourceEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._EventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', ["elements?", "name?", "type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('File', ["name?"], {
 is$_FileImpl: function() { return true; },
 is$File: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('FileException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileListImpl: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('FileReader', ["error?"], {
 get$on: function() {
  return $._FileReaderEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriter', ["error?", "length?"], {
 get$on: function() {
  return $._FileWriterEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', ["length?"], {
});

$.$defineNativeClass('Float32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Float64Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', ["color=", "size?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', ["length?", "name?", "target?"], {
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', ["height?", "name?", "src!", "width?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', [], {
 get$on: function() {
  return $._FrameSetElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Gamepad', ["id?"], {
});

$.$defineNativeClass('GamepadList', ["length?"], {
});

$.$defineNativeClass('HTMLHRElement', ["align?", "size?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', ["length?"], {
});

$.$defineNativeClass('HTMLCollection', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', [], {
 get$length: function() {
return this.length;
},
 set$length: function(value) {
this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLHeadElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', ["length?"], {
});

$.$defineNativeClass('HTMLHtmlElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequest', ["response?", "responseText?", "responseType!"], {
 get$on: function() {
  return $._HttpRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 open$5: function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
},
 open$3: function(method,url,async) {
  return this.open(method,url,async);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
},
 send$0: function() {
  return this.send();
}
});

$.$defineNativeClass('XMLHttpRequestException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestUpload', [], {
 get$on: function() {
  return $._HttpRequestUploadEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBCursor', ["direction?"], {
 get$key: function() {
  return $._convertNativeToDart_IDBKey(this.get$_key());
},
 get$_key: function() {
return this.key;
}
});

$.$defineNativeClass('IDBCursorWithValue', [], {
 get$value: function() {
  return $._convertNativeToDart_IDBAny(this.get$_lib_value());
},
 get$_lib_value: function() {
return this.value;
}
});

$.$defineNativeClass('IDBDatabase', ["name?"], {
 get$on: function() {
  return $._IDBDatabaseEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBDatabaseException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBIndex', ["name?"], {
});

$.$defineNativeClass('IDBObjectStore', ["name?"], {
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_SerializedScriptValue(value), key);
  return this._add_2$1($._convertDartToNative_SerializedScriptValue(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('IDBOpenDBRequest', [], {
 get$on: function() {
  return $._IDBOpenDBRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBRequest', ["error?"], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._IDBRequestEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('IDBTransaction', ["error?"], {
 get$on: function() {
  return $._IDBTransactionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeRequest', [], {
 get$on: function() {
  return $._IDBVersionChangeRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLIFrameElement', ["align?", "height=", "name?", "src!", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ImageData', ["height?", "width?"], {
 is$_ImageDataImpl: function() { return true; },
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', ["align?", "height=", "name?", "naturalHeight?", "naturalWidth?", "src!", "width=", "x?", "y?"], {
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', ["align?", "height=", "name?", "pattern?", "size?", "src!", "type?", "value=", "width="], {
 get$on: function() {
  return $._InputElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('JavaScriptAudioNode', [], {
 get$on: function() {
  return $._JavaScriptAudioNodeEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('JavaScriptCallFrame', ["type?"], {
});

$.$defineNativeClass('KeyboardEvent', ["altKey?", "ctrlKey?", "keyLocation?", "shiftKey?"], {
});

$.$defineNativeClass('HTMLKeygenElement', ["name?", "type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', ["type?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', ["target?", "type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('LocalMediaStream', [], {
 stop$0: function() {
  return this.stop();
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Location', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLMapElement', ["name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', ["direction=", "height=", "loop!", "width="], {
 start$0: function() {
  return this.start();
},
 stop$0: function() {
  return this.stop();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', ["currentTime=", "duration?", "volume="], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 pause$0: function() {
  return this.pause();
},
 play$0: function() {
  return this.play();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', ["currentTime=", "duration?", "ended?", "error?", "loop!", "src!", "volume="], {
 get$on: function() {
  return $._MediaElementEventsImpl$(this);
},
 canPlayType$2: function(type, keySystem) {
  return this.canPlayType(type,keySystem);
},
 load$0: function() {
  return this.load();
},
 get$load: function() { return new $.BoundClosure0(this, 'load$0'); },
 pause$0: function() {
  return this.pause();
},
 play$0: function() {
  return this.play();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaKeyEvent', ["message?"], {
});

$.$defineNativeClass('MediaList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('MediaSource', ["duration?"], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', [], {
 get$on: function() {
  return $._MediaStreamEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('MediaStreamList', ["length?"], {
});

$.$defineNativeClass('MediaStreamTrack', [], {
 get$on: function() {
  return $._MediaStreamTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackList', ["length?"], {
 get$on: function() {
  return $._MediaStreamTrackListEventsImpl$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMenuElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageEvent', ["ports?"], {
});

$.$defineNativeClass('MessagePort', [], {
 get$on: function() {
  return $._MessagePortEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 postMessage$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 postMessage$1: function(message) {
  return this.postMessage(message);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
}
});

$.$defineNativeClass('HTMLMetaElement', ["name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Metadata', ["size?"], {
});

$.$defineNativeClass('HTMLMeterElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', ["altKey?", "button?", "ctrlKey?", "shiftKey?", "x?", "y?"], {
 get$offsetX: function() {
  if (!!this.offsetX)
    return this.get$_offsetX();
  else {
    var target = this.target;
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.CTC14);
    return $.sub(this.clientX, target.$dom_getBoundingClientRect$0().get$left());
  }
},
 get$offsetY: function() {
  if (!!this.offsetY)
    return this.get$_offsetY();
  else {
    var target = this.target;
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.CTC14);
    return $.sub(this.clientY, target.$dom_getBoundingClientRect$0().get$top());
  }
},
 get$_offsetX: function() {
return this.offsetX
},
 get$_offsetY: function() {
return this.offsetY
}
});

$.$defineNativeClass('MutationRecord', ["target?", "type?"], {
});

$.$defineNativeClass('NamedNodeMap', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Navigator', ["userAgent?"], {
});

$.$defineNativeClass('Node', [], {
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (!(this.get$parent() == null))
    this.get$parent().$dom_removeChild$1(this);
  return this;
},
 replaceWith$1: function(otherNode) {
  try {
    var parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 get$$$dom_childNodes: function() {
return this.childNodes;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
this.textContent = value;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 clone$1: function(deep) {
  if (Object.getPrototypeOf(this).hasOwnProperty('clone$1')) {
  {
  return this.cloneNode(deep);
}
  } else {
    return Object.prototype.clone$1.call(this, deep);
  }

},
 contains$1: function(other) {
  return this.contains(other);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeIterator', [], {
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('NodeList', ["_parent?", "length?"], {
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._parent.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._parent.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot removeRange on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot insertRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 operator$index$1: function(index) {
return this[index];
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Notification', [], {
 get$on: function() {
  return $._NotificationEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLOListElement', ["type?"], {
 start$0: function() { return this.start.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', ["align?", "height=", "name?", "type?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptGroupElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Oscillator', ["type?"], {
 noteOff$1: function(when) {
  return this.noteOff(when);
},
 noteOn$1: function(when) {
  return this.noteOn(when);
}
});

$.$defineNativeClass('HTMLOutputElement', ["name?", "type?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParagraphElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', ["name?", "type?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', [], {
 get$on: function() {
  return $._PeerConnection00EventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('PerformanceNavigation', ["type?"], {
});

$.$defineNativeClass('WebKitPoint', ["x=", "y="], {
});

$.$defineNativeClass('PositionError', ["message?"], {
});

$.$defineNativeClass('HTMLPreElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProcessingInstruction', ["target?"], {
});

$.$defineNativeClass('HTMLProgressElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLQuoteElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('RTCPeerConnection', [], {
 get$on: function() {
  return $._RTCPeerConnectionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', ["type?"], {
});

$.$defineNativeClass('RadioNodeList', ["value="], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Range', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RangeException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', ["bottom?", "left?", "right?", "top?"], {
});

$.$defineNativeClass('SQLError', ["message?"], {
});

$.$defineNativeClass('SQLException', ["message?"], {
});

$.$defineNativeClass('SQLResultSetRowList', ["length?"], {
});

$.$defineNativeClass('SVGAElement', ["target?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphDefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphItemElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAngle', ["value="], {
});

$.$defineNativeClass('SVGAnimateColorElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateMotionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateTransformElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCircleElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGClipPathElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCursorElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDefsElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDescElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDocument', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElement', [], {
 get$elements: function() {
  return $.FilteredElementList$(this);
},
 get$id: function() {
return this.id;
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElementInstance', [], {
 get$on: function() {
  return $._SVGElementInstanceEventsImpl$(this);
}
});

$.$defineNativeClass('SVGElementInstanceList', ["length?"], {
});

$.$defineNativeClass('SVGEllipseElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEColorMatrixElement', ["type?", "height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEComponentTransferElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFECompositeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDisplacementMapElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDistantLightElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDropShadowElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFloodElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncAElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncBElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncGElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncRElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEGaussianBlurElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEImageElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeNodeElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMorphologyElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEOffsetElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEPointLightElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpecularLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpotLightElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETileElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETurbulenceElement', ["type?", "height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFilterElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceFormatElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceNameElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceSrcElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceUriElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGForeignObjectElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphRefElement', ["x=", "y="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGHKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGImageElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLength', ["value="], {
});

$.$defineNativeClass('SVGLengthList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGLineElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLinearGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMarkerElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMaskElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMatrix', ["a?", "b?", "c?", "d?"], {
});

$.$defineNativeClass('SVGMetadataElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMissingGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGNumber', ["value="], {
});

$.$defineNativeClass('SVGNumberList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPathElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPathSegArcAbs', ["angle?", "x=", "y="], {
});

$.$defineNativeClass('SVGPathSegArcRel', ["angle?", "x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegLinetoAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', ["x="], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', ["x="], {
});

$.$defineNativeClass('SVGPathSegLinetoRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', ["y="], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', ["y="], {
});

$.$defineNativeClass('SVGPathSegList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPathSegMovetoAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegMovetoRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPatternElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPoint', ["x=", "y="], {
});

$.$defineNativeClass('SVGPointList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPolylineElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPreserveAspectRatio', ["align?"], {
});

$.$defineNativeClass('SVGRadialGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRect', ["height=", "width=", "x=", "y="], {
});

$.$defineNativeClass('SVGRectElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSVGElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGScriptElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSetElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStopElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStringList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGStyleElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSwitchElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSymbolElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTRefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPositioningElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTransform', ["angle?", "type?"], {
});

$.$defineNativeClass('SVGTransformList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGUseElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGVKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewSpec', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('Screen', ["height?", "width?"], {
});

$.$defineNativeClass('HTMLScriptElement', ["src!", "type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ScriptProfileNode', ["visible?"], {
});

$.$defineNativeClass('HTMLSelectElement', ["length=", "name?", "size?", "type?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLShadowElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', [], {
 clone$1: function(deep) {
  return this.cloneNode(deep);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('SharedWorkerContext', ["name?"], {
 get$on: function() {
  return $._SharedWorkerContextEventsImpl$(this);
}
});

$.$defineNativeClass('SourceBufferList', ["length?"], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLSourceElement', ["src!", "type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', ["src!"], {
});

$.$defineNativeClass('SpeechGrammarList', ["length?"], {
});

$.$defineNativeClass('SpeechInputResultList', ["length?"], {
});

$.$defineNativeClass('SpeechRecognition', [], {
 get$on: function() {
  return $._SpeechRecognitionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('SpeechRecognitionError', ["message?"], {
});

$.$defineNativeClass('SpeechRecognitionResult', ["length?"], {
});

$.$defineNativeClass('SpeechRecognitionResultList', ["length?"], {
});

$.$defineNativeClass('Storage', [], {
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  for (var i = 0; true; ++i) {
    var key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 getKeys$0: function() {
  var keys = [];
  this.forEach$1(new $._StorageImpl_getKeys_anon(keys));
  return keys;
},
 getValues$0: function() {
  var values = [];
  this.forEach$1(new $._StorageImpl_getValues_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 isEmpty$0: function() {
  return this.$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', ["key?"], {
});

$.$defineNativeClass('HTMLStyleElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleMedia', ["type?"], {
});

$.$defineNativeClass('StyleSheet', ["type?"], {
});

$.$defineNativeClass('StyleSheetList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTableCaptionElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', ["align?", "height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', ["align?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', ["align?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', ["align?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', ["name?", "type?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextMetrics', ["width?"], {
});

$.$defineNativeClass('TextTrack', [], {
 get$on: function() {
  return $._TextTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCue', ["align?", "id?", "size?", "text!"], {
 get$on: function() {
  return $._TextTrackCueEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', ["length?"], {
});

$.$defineNativeClass('TextTrackList', ["length?"], {
 get$on: function() {
  return $._TextTrackListEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TimeRanges', ["length?"], {
});

$.$defineNativeClass('HTMLTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Touch', ["target?"], {
});

$.$defineNativeClass('TouchEvent', ["altKey?", "ctrlKey?", "shiftKey?"], {
});

$.$defineNativeClass('TouchList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', ["src!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TreeWalker', [], {
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('UIEvent', ["charCode?", "keyCode?"], {
});

$.$defineNativeClass('HTMLUListElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC23);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebGLActiveInfo', ["name?", "size?", "type?"], {
});

$.$defineNativeClass('WebGLContextAttributes', ["alpha="], {
});

$.$defineNativeClass('WebGLRenderingContext', [], {
 lineWidth$1: function(width) {
  return this.lineWidth(width);
}
});

$.$defineNativeClass('WebKitNamedFlow', ["name?"], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', [], {
 get$on: function() {
  return $._WebSocketEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WheelEvent', ["wheelDelta?"], {
});

$.$defineNativeClass('DOMWindow', ["length?", "name?", "navigator?", "parent?", "window?"], {
 get$_top: function() {
return this.top;
},
 get$top: function() {
  return $._DOMWindowCrossFrameImpl__createSafe(this.get$_top());
},
 _open3$3: function(url, name, options) {
return this.open(url, name, options);
},
 open$3: function(url, name$, options) {
  return $._DOMWindowCrossFrameImpl__createSafe(this._open3$3(url, name$, options));
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !this.requestAnimationFrame; ++i) {
     this.requestAnimationFrame = this[vendors[i] + 'RequestAnimationFrame'];
     this.cancelAnimationFrame =
         this[vendors[i]+'CancelAnimationFrame'] ||
         this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   this.requestAnimationFrame = function(callback) {
       return window.setTimeout(callback, 16 /* 16ms ~= 60fps */);
   };
   this.cancelAnimationFrame = function(id) { clearTimeout(id); }

},
 get$on: function() {
  return $._WindowEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 focus$0: function() {
  return this.focus();
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  return this.postMessage(message,targetOrigin,messagePorts);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('Worker', [], {
 get$on: function() {
  return $._WorkerEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 postMessage$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerContext', ["navigator?"], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._WorkerContextEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('WorkerLocation', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', ["userAgent?"], {
});

$.$defineNativeClass('XPathException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XSLTProcessor', [], {
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('Worker', [], {
 get$id: function() {
return this.id;
},
 postMessage$1: function(msg) {
return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', [], {
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
}
});

// 373 dynamic classes.
// 431 classes
// 38 !leaf
(function(){
  var v0/*class(_SVGTextPositioningElementImpl)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v1/*class(_Uint8ArrayImpl)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v2/*class(_MouseEventImpl)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v3/*class(_SVGTextContentElementImpl)*/ = [v0/*class(_SVGTextPositioningElementImpl)*/,v0/*class(_SVGTextPositioningElementImpl)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v4/*class(_SVGGradientElementImpl)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v5/*class(_SVGComponentTransferFunctionElementImpl)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v6/*class(_SVGAnimationElementImpl)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v7/*class(_SVGElementImpl)*/ = [v3/*class(_SVGTextContentElementImpl)*/,v4/*class(_SVGGradientElementImpl)*/,v5/*class(_SVGComponentTransferFunctionElementImpl)*/,v6/*class(_SVGAnimationElementImpl)*/,v3/*class(_SVGTextContentElementImpl)*/,v4/*class(_SVGGradientElementImpl)*/,v5/*class(_SVGComponentTransferFunctionElementImpl)*/,v6/*class(_SVGAnimationElementImpl)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v8/*class(_MediaElementImpl)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v9/*class(_UIEventImpl)*/ = [v2/*class(_MouseEventImpl)*/,v2/*class(_MouseEventImpl)*/,'UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent'].join('|');
  var v10/*class(_ElementImpl)*/ = [v7/*class(_SVGElementImpl)*/,v8/*class(_MediaElementImpl)*/,v7/*class(_SVGElementImpl)*/,v8/*class(_MediaElementImpl)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v11/*class(_DocumentFragmentImpl)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v12/*class(_DocumentImpl)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v13/*class(_CharacterDataImpl)*/ = 'CharacterData|Text|CDATASection|CDATASection|Comment|Text|CDATASection|CDATASection|Comment';
  var v14/*class(_WorkerContextImpl)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v15/*class(_NodeImpl)*/ = [v10/*class(_ElementImpl)*/,v11/*class(_DocumentFragmentImpl)*/,v12/*class(_DocumentImpl)*/,v13/*class(_CharacterDataImpl)*/,v10/*class(_ElementImpl)*/,v11/*class(_DocumentFragmentImpl)*/,v12/*class(_DocumentImpl)*/,v13/*class(_CharacterDataImpl)*/,'Node|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr'].join('|');
  var v16/*class(_MediaStreamImpl)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v17/*class(_IDBRequestImpl)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v18/*class(_AbstractWorkerImpl)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['SVGGradientElement', v4/*class(_SVGGradientElementImpl)*/],
    ['SVGTextPositioningElement', v0/*class(_SVGTextPositioningElementImpl)*/],
    ['SVGTextContentElement', v3/*class(_SVGTextContentElementImpl)*/],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet|CSSStyleSheet'],
    ['AbstractWorker', v18/*class(_AbstractWorkerImpl)*/],
    ['Uint8Array', v1/*class(_Uint8ArrayImpl)*/],
    ['ArrayBufferView', [v1/*class(_Uint8ArrayImpl)*/,v1/*class(_Uint8ArrayImpl)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['AudioNode', 'AudioNode|WaveShaperNode|RealtimeAnalyserNode|JavaScriptAudioNode|DynamicsCompressorNode|DelayNode|ConvolverNode|BiquadFilterNode|AudioSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|AudioPannerNode|AudioGainNode|AudioDestinationNode|AudioChannelSplitter|AudioChannelMerger|WaveShaperNode|RealtimeAnalyserNode|JavaScriptAudioNode|DynamicsCompressorNode|DelayNode|ConvolverNode|BiquadFilterNode|AudioSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|AudioPannerNode|AudioGainNode|AudioDestinationNode|AudioChannelSplitter|AudioChannelMerger'],
    ['AudioParam', 'AudioParam|AudioGain|AudioGain'],
    ['MouseEvent', v2/*class(_MouseEventImpl)*/],
    ['UIEvent', v9/*class(_UIEventImpl)*/],
    ['Blob', 'Blob|File|File'],
    ['CSSRule', 'CSSRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule'],
    ['CSSValueList', 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue'],
    ['CanvasRenderingContext', 'CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext|CanvasRenderingContext2D'],
    ['CharacterData', v13/*class(_CharacterDataImpl)*/],
    ['WorkerContext', v14/*class(_WorkerContextImpl)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['HTMLDocument', v12/*class(_DocumentImpl)*/],
    ['DocumentFragment', v11/*class(_DocumentFragmentImpl)*/],
    ['SVGComponentTransferFunctionElement', v5/*class(_SVGComponentTransferFunctionElementImpl)*/],
    ['SVGAnimationElement', v6/*class(_SVGAnimationElementImpl)*/],
    ['SVGElement', v7/*class(_SVGElementImpl)*/],
    ['HTMLMediaElement', v8/*class(_MediaElementImpl)*/],
    ['Element', v10/*class(_ElementImpl)*/],
    ['Entry', 'Entry|FileEntry|DirectoryEntry|FileEntry|DirectoryEntry'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync|FileEntrySync|DirectoryEntrySync'],
    ['Event', [v9/*class(_UIEventImpl)*/,v9/*class(_UIEventImpl)*/,'Event|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBUpgradeNeededEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBUpgradeNeededEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['Node', v15/*class(_NodeImpl)*/],
    ['MediaStream', v16/*class(_MediaStreamImpl)*/],
    ['IDBRequest', v17/*class(_IDBRequestImpl)*/],
    ['EventTarget', [v14/*class(_WorkerContextImpl)*/,v15/*class(_NodeImpl)*/,v16/*class(_MediaStreamImpl)*/,v17/*class(_IDBRequestImpl)*/,v18/*class(_AbstractWorkerImpl)*/,v14/*class(_WorkerContextImpl)*/,v15/*class(_NodeImpl)*/,v16/*class(_MediaStreamImpl)*/,v17/*class(_IDBRequestImpl)*/,v18/*class(_AbstractWorkerImpl)*/,'EventTarget|DOMWindow|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|DOMWindow|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue|IDBCursorWithValue'],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList']];
$.dynamicSetMetadata(table);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  for (var cls in collectedClasses) {
    if (Object.prototype.hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    if (finishedClasses[cls]) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=escape.dart.js.map