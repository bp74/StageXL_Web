// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.getInterceptor(dartException).toString$0(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    return !(t1 == null) ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;actualType,expectedType",
  toString$0: function() {
    return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_liblib1$_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1, matchEnd;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.getInterceptor$JSStringJSArray(m).operator$index$1(m, 0);
    t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    matchEnd = matchStart + t1;
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._liblib1$_pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  is$JSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  group$1: function(index) {
    var t1 = this._groups;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
  },
  operator$index$1: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.operator$index$1$bailout1(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  operator$index$1$bailout1: function(state0, index, t1) {
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    this._liblib1$_current = this._re.firstMatch$1(this._str);
    return !(this._liblib1$_current == null);
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  operator$index$1: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if (!$.eqB(group_, 0))
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  }
};

$$._DateImpl = {"": "Object;millisecondsSinceEpoch>,isUtc",
  operator$eq$1: function(other) {
    if (!(typeof other === "object" && other !== null && !!other.is$Date))
      return false;
    return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$lt$1: function(other) {
    return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$le$1: function(other) {
    return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$gt$1: function(other) {
    return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$ge$1: function(other) {
    return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function() {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function() {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $._DateImpl_toString_fourDigits();
    t2 = new $._DateImpl_toString_threeDigits();
    t3 = new $._DateImpl_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(duration) {
    var ms, t2;
    ms = this.millisecondsSinceEpoch;
    if (typeof ms !== "number")
      return this.add$1$bailout0(1, duration, ms);
    t2 = duration.get$inMilliseconds();
    if (typeof t2 !== "number")
      return this.add$1$bailout0(2, ms, t2);
    return $.Date_Date$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
  },
  add$1$bailout0: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        ms = env1;
        duration = env0;
        break;
      case 2:
        t2 = env1;
        ms = env0;
        break;
    }
    switch (state0) {
      case 0:
        ms = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t2 = duration.get$inMilliseconds();
      case 2:
        var ms, duration, t2;
        state0 = 0;
        return $.Date_Date$fromMillisecondsSinceEpoch($.getInterceptor$JSNumber(ms).operator$add$1(ms, t2), this.isUtc);
    }
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  _DateImpl$now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
    var t1 = this.millisecondsSinceEpoch;
    if ($.gtB($.getInterceptor$JSNumber(t1).abs$0(t1), 8640000000000000))
      throw $.$$throw($.ArgumentError$(t1));
    t1 = this.isUtc;
    if (t1 == null)
      throw $.$$throw($.ArgumentError$(t1));
  },
  is$Date: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (!(t1 == null))
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.toString$0$bailout(1, t1, t2);
    for (; $.ltB(t1.i_1, t2.length); t3 = t1.i_1, t1.i_1 = $.getInterceptor$JSNumber(t3).operator$add$1(t3, 1)) {
      if ($.gtB(t1.i_1, 0)) {
        t3 = t1.sb_0;
        $.getInterceptor$JSArray(t3).add$1(t3, ", ");
      }
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      t5 = $.Error_safeToString(t2[t4]);
      $.getInterceptor$JSArray(t3).add$1(t3, t5);
    }
    t2 = this._namedArguments;
    if (!(t2 == null)) {
      t3 = new $.NoSuchMethodError_toString_anon(t1);
      $.getInterceptor$JSArray(t2).forEach$1(t2, t3);
    }
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.toString$0$bailout(2, t1, t2);
    t3 = t1.sb_0;
    actualParameters = $.getInterceptor(t3).toString$0(t3);
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0) {
        t3 = t1.sb_0;
        $.getInterceptor$JSArray(t3).add$1(t3, ", ");
      }
      t3 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      t4 = t2[i];
      $.getInterceptor$JSArray(t3).add$1(t3, t4);
    }
    t1 = t1.sb_0;
    formalParameters = $.getInterceptor(t1).toString$0(t1);
    t1 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
  },
  toString$0$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t2 = env1;
        t1 = env0;
        break;
      case 2:
        t2 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSStringJSArray(t2); $.ltB(t1.i_1, t3.get$length(t2)); t4 = t1.i_1, t1.i_1 = $.getInterceptor$JSNumber(t4).operator$add$1(t4, 1)) {
            if ($.gtB(t1.i_1, 0)) {
              t4 = t1.sb_0;
              $.getInterceptor$JSArray(t4).add$1(t4, ", ");
            }
            t4 = t1.sb_0;
            t5 = $.Error_safeToString(t3.operator$index$1(t2, t1.i_1));
            $.getInterceptor$JSArray(t4).add$1(t4, t5);
          }
        t2 = this._namedArguments;
        if (!(t2 == null)) {
          t3 = new $.NoSuchMethodError_toString_anon(t1);
          $.getInterceptor$JSArray(t2).forEach$1(t2, t3);
        }
        t2 = this._existingArgumentNames;
      case 2:
        var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          t3 = t1.sb_0;
          actualParameters = $.getInterceptor(t3).toString$0(t3);
          t1.sb_0 = $.StringBuffer_StringBuffer("");
          for (t3 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.ltB(i, t3.get$length(t2)); ++i) {
            if (i > 0) {
              t4 = t1.sb_0;
              $.getInterceptor$JSArray(t4).add$1(t4, ", ");
            }
            t4 = t1.sb_0;
            t5 = t3.operator$index$1(t2, i);
            $.getInterceptor$JSArray(t4).add$1(t4, t5);
          }
          t1 = t1.sb_0;
          formalParameters = $.getInterceptor(t1).toString$0(t1);
          t1 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message>",
  toString$0: function() {
    return "Unsupported operation: " + $.S(this.get$message());
  }
};

$$.UnimplementedError = {"": "Object;message>",
  toString$0: function() {
    var t1 = this.message;
    return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  is$Exception: true
};

$$.FormatException = {"": "Object;message",
  toString$0: function() {
    return "FormatException: " + $.S(this.message);
  },
  is$Exception: true
};

$$.IllegalJSRegExpException = {"": "Object;_pattern,_errmsg",
  toString$0: function() {
    return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
  },
  is$Exception: true
};

$$.Iterable = {"": "Object;",
  contains$1: function(element) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      if ($.eqB(t1.get$current(), element))
        return true;
    return false;
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$length: function() {
    var it, count;
    it = $.getInterceptor$JSArray(this).get$iterator(this);
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function() {
    return $.getInterceptor$JSArray(this).get$iterator(this).moveNext$0() !== true;
  }
};

$$.Iterator = {"": "Object;"};

$$._HashMapImpl = {"": "Object;_keys>,_values>,_loadLimit,_numberOfEntries,_numberOfDeleted",
  _probeForAdding$1: function(key) {
    var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.getInterceptor(key).get$hashCode(key);
    if (t1 !== (t1 | 0))
      return this._probeForAdding$1$bailout(1, key, t1);
    hash = (t1 & this._keys.length - 1) >>> 0;
    for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null) {
        if (insertionIndex < 0)
          return hash;
        return insertionIndex;
      } else if ($.eqB(existingKey, key))
        return hash;
      else if (insertionIndex < 0 && existingKey === $.CONSTANT5)
        insertionIndex = hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
      if (hash !== (hash | 0))
        return this._probeForAdding$1$bailout(2, hash, key, numberOfProbes0, insertionIndex);
    }
  },
  _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env1;
        key = env0;
        break;
      case 2:
        insertionIndex = env3;
        numberOfProbes0 = env2;
        key = env1;
        hash = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (key == null)
          throw $.$$throw($.ArgumentError$(null));
        t1 = $.getInterceptor(key).get$hashCode(key);
      case 1:
        state0 = 0;
        t3 = this._keys.length - 1;
        hash = $.getInterceptor$JSNumber(t1).operator$and$1(t1, t3);
        numberOfProbes = 1;
        insertionIndex = -1;
      case 2:
        var t1, key, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
                t1 = this._keys;
                if (hash !== (hash | 0))
                  throw $.iae(hash);
                if (hash < 0 || hash >= t1.length)
                  throw $.ioore(hash);
                existingKey = t1[hash];
                if (existingKey == null) {
                  if (insertionIndex < 0)
                    return hash;
                  return insertionIndex;
                } else if ($.eqB(existingKey, key))
                  return hash;
                else if (insertionIndex < 0 && existingKey === $.CONSTANT5)
                  insertionIndex = hash;
                numberOfProbes0 = numberOfProbes + 1;
                hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
              case 2:
                state0 = 0;
                numberOfProbes = numberOfProbes0;
            }
    }
  },
  _probeForLookup$1: function(key) {
    var t1, t2, hash, numberOfProbes, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.getInterceptor(key).get$hashCode(key);
    t2 = this._keys.length - 1;
    hash = $.getInterceptor$JSNumber(t1).operator$and$1(t1, t2);
    if (hash !== (hash | 0))
      return this._probeForLookup$1$bailout(1, key, hash);
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.eqB(existingKey, key))
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _probeForLookup$1$bailout: function(state0, key, hash) {
    var numberOfProbes, t1, existingKey, numberOfProbes0;
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.eqB(existingKey, key))
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _ensureCapacity$0: function() {
    var t1, newNumberOfEntries, capacity, numberOfFreeOrDeleted;
    t1 = this._numberOfEntries;
    newNumberOfEntries = $.getInterceptor$JSNumber(t1).operator$add$1(t1, 1);
    if ($.geB(newNumberOfEntries, this._loadLimit)) {
      this._grow$1(this._keys.length * 2);
      return;
    }
    capacity = this._keys.length;
    if (typeof newNumberOfEntries !== "number")
      throw $.iae(newNumberOfEntries);
    numberOfFreeOrDeleted = capacity - newNumberOfEntries;
    t1 = this._numberOfDeleted;
    if (t1 > numberOfFreeOrDeleted - t1)
      this._grow$1(capacity);
  },
  _grow$1: function(newCapacity) {
    var capacity, t1, oldKeys, oldValues, i, key, value, newIndex;
    capacity = this._keys.length;
    t1 = $.getInterceptor$JSNumber(newCapacity).operator$mul$1(newCapacity, 3);
    this._loadLimit = $.getInterceptor$JSNumber(t1).operator$tdiv$1(t1, 4);
    oldKeys = this._keys;
    oldValues = this._values;
    this._keys = $.List_List$fixedLength(newCapacity, null);
    this._values = $.List_List$fixedLength(newCapacity, null);
    for (i = 0; i < capacity; ++i) {
      if (i >= oldKeys.length)
        throw $.ioore(i);
      key = oldKeys[i];
      if (key == null || key === $.CONSTANT5)
        continue;
      if (i >= oldValues.length)
        throw $.ioore(i);
      value = oldValues[i];
      newIndex = this._probeForAdding$1(key);
      t1 = this._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = key;
      t1 = this._values;
      if (newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = value;
    }
    this._numberOfDeleted = 0;
  },
  clear$0: function() {
    var t1, length$, t2, t3, i;
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    t1 = this._keys;
    length$ = t1.length;
    for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
      t1[i] = null;
      if (i >= t3)
        throw $.ioore(i);
      t2[i] = null;
    }
  },
  operator$indexSet$2: function(key, value) {
    var index, t1;
    this._ensureCapacity$0();
    index = this._probeForAdding$1(key);
    t1 = this._keys;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1 = t1[index];
    if (t1 == null || t1 === $.CONSTANT5) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.operator$indexSet$2$bailout0(1, key, value, index, t1);
      this._numberOfEntries = t1 + 1;
    }
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = key;
    t1 = this._values;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  operator$indexSet$2$bailout0: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env3;
        index = env2;
        value = env1;
        key = env0;
        break;
    }
    switch (state0) {
      case 0:
        this._ensureCapacity$0();
        index = this._probeForAdding$1(key);
        t1 = this._keys;
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t1.length)
          throw $.ioore(index);
        t1 = t1[index];
      case 1:
        var index, t1, value, key;
        if (state0 === 1 || state0 === 0 && (t1 == null || t1 === $.CONSTANT5))
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 1:
              state0 = 0;
              this._numberOfEntries = $.getInterceptor$JSNumber(t1).operator$add$1(t1, 1);
          }
        t1 = this._keys;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = key;
        t1 = this._values;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = value;
    }
  },
  operator$index$1: function(key) {
    var index, t1;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.operator$index$1$bailout0(1, index);
    if (index < 0)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  operator$index$1$bailout0: function(state0, index) {
    var t1;
    if ($.ltB(index, 0))
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  remove$1: function(key) {
    var index, t1, t3, value;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.remove$1$bailout(1, index);
    if (index >= 0) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.remove$1$bailout(2, index, t1);
      this._numberOfEntries = t1 - 1;
      t3 = this._values;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t3.length)
        throw $.ioore(index);
      value = t3[index];
      t3[index] = null;
      t3 = this._keys;
      if (index >= t3.length)
        throw $.ioore(index);
      t3[index] = $.CONSTANT5;
      this._numberOfDeleted = this._numberOfDeleted + 1;
      return value;
    }
    return;
  },
  remove$1$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        index = env0;
        break;
      case 2:
        t1 = env1;
        index = env0;
        break;
    }
    switch (state0) {
      case 0:
        index = this._probeForLookup$1(key);
      case 1:
        state0 = 0;
      case 2:
        var index, t1, t3, value;
        if (state0 === 2 || state0 === 0 && $.geB(index, 0))
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 2:
              state0 = 0;
              this._numberOfEntries = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, 1);
              t3 = this._values;
              if (index !== (index | 0))
                throw $.iae(index);
              if (index < 0 || index >= t3.length)
                throw $.ioore(index);
              value = t3[index];
              t3[index] = null;
              t3 = this._keys;
              if (index >= t3.length)
                throw $.ioore(index);
              t3[index] = $.CONSTANT5;
              this._numberOfDeleted = this._numberOfDeleted + 1;
              return value;
          }
        return;
    }
  },
  get$isEmpty: function() {
    return $.eq(this._numberOfEntries, 0);
  },
  get$length: function() {
    return this._numberOfEntries;
  },
  forEach$1: function(f) {
    var it, t1, t2, t3;
    it = $._HashMapImplIndexIterator$(this);
    for (; it.moveNext$0() === true;) {
      t1 = this._keys;
      t2 = it.get$current();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t2 = t1[t2];
      t1 = this._values;
      t3 = it.get$current();
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      f.call$2(t2, t1[t3]);
    }
  },
  get$keys: function() {
    return $._HashMapImplKeyIterable$(this);
  },
  get$values: function() {
    return $._HashMapImplValueIterable$(this);
  },
  containsKey$1: function(key) {
    return !$.eqB(this._probeForLookup$1(key), -1);
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _HashMapImpl$0: function() {
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
    this._keys = $.List_List$fixedLength(8, null);
    this._values = $.List_List$fixedLength(8, null);
  },
  is$Map: function() {
    return true;
  }
};

$$._HashMapImplKeyIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplKeyIterator$(this._map);
  }
};

$$._HashMapImplValueIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplValueIterator$(this._map);
  }
};

$$._HashMapImplIterator = {"": "Object;",
  moveNext$0: function() {
    var t1, t2, length$, t3, newIndex, key;
    t1 = this._map;
    t2 = t1.get$_keys();
    length$ = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
    if (typeof length$ !== "number")
      return this.moveNext$0$bailout(1, length$, t1);
    t3 = this._index;
    if (typeof t3 !== "number")
      return this.moveNext$0$bailout(2, length$, t1, t3);
    newIndex = t3 + 1;
    for (t2 = t1.get$_keys(); newIndex < length$;) {
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, length$, t2, newIndex, t1);
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t2.length)
        throw $.ioore(newIndex);
      key = t2[newIndex];
      if (!(key == null) && !(key === $.CONSTANT5)) {
        this._current = this._computeCurrentFromIndex$3(newIndex, t2, t1.get$_values());
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = length$;
    this._current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env1;
        length$ = env0;
        break;
      case 2:
        t3 = env2;
        t1 = env1;
        length$ = env0;
        break;
      case 3:
        t1 = env3;
        newIndex = env2;
        t2 = env1;
        length$ = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._map;
        t2 = t1.get$_keys();
        length$ = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
      case 1:
        state0 = 0;
        t3 = this._index;
      case 2:
        state0 = 0;
        newIndex = $.getInterceptor$JSNumber(t3).operator$add$1(t3, 1);
      case 3:
        var t1, t2, length$, t3, newIndex, key;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.ltB(newIndex, length$))
                  break L0;
                t2 = t1.get$_keys();
              case 3:
                state0 = 0;
                key = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, newIndex);
                if (!(key == null) && !(key === $.CONSTANT5)) {
                  this._current = this._computeCurrentFromIndex$3(newIndex, t1.get$_keys(), t1.get$_values());
                  this._index = newIndex;
                  return true;
                }
                newIndex = $.getInterceptor$JSNumber(newIndex).operator$add$1(newIndex, 1);
            }
        this._index = length$;
        this._current = null;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$._HashMapImplKeyIterator = {"": "_HashMapImplIterator;_map,_index,_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.getInterceptor$JSStringJSArray(keys).operator$index$1(keys, index);
  }
};

$$._HashMapImplValueIterator = {"": "_HashMapImplIterator;_map,_index,_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.getInterceptor$JSStringJSArray(values).operator$index$1(values, index);
  }
};

$$._HashMapImplIndexIterator = {"": "_HashMapImplIterator;_map,_index,_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return index;
  }
};

$$._DeletedKeySentinel = {"": "Object;"};

$$._KeyValuePair = {"": "Object;key>,value="};

$$._LinkedHashMapImpl = {"": "Object;_list,_map",
  operator$indexSet$2: function(key, value) {
    var t1, t3;
    if (this._map.containsKey$1(key) === true) {
      t1 = this._map;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.operator$indexSet$2$bailout(1, key, value, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key].get$element().set$value(value);
    } else {
      this._list.addLast$1($._KeyValuePair$(key, value));
      t1 = this._map;
      if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.operator$indexSet$2$bailout(2, t1, key);
      t3 = this._list.lastEntry$0();
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key] = t3;
    }
  },
  operator$indexSet$2$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        t1 = env2;
        value = env1;
        key = env0;
        break;
      case 2:
        key = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
      default:
        var t1, value, key, t3;
        if (state0 === 1 || state0 === 0 && this._map.containsKey$1(key) === true)
          switch (state0) {
            case 0:
              t1 = this._map;
            case 1:
              state0 = 0;
              $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key).get$element().set$value(value);
          }
        else
          switch (state0) {
            case 0:
              this._list.addLast$1($._KeyValuePair$(key, value));
              t1 = this._map;
            case 2:
              state0 = 0;
              t3 = this._list.lastEntry$0();
              $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, key, t3);
          }
    }
  },
  operator$index$1: function(key) {
    var t1, entry;
    t1 = this._map;
    entry = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key);
    if (entry == null)
      return;
    return entry.get$element().get$value();
  },
  remove$1: function(key) {
    var t1, entry;
    t1 = this._map;
    entry = $.getInterceptor$JSArray(t1).remove$1(t1, key);
    if (entry == null)
      return;
    entry.remove$0();
    return entry.get$element().get$value();
  },
  get$keys: function() {
    return $.MappedIterable$(this._list, new $._LinkedHashMapImpl_keys_anon());
  },
  get$values: function() {
    return $.MappedIterable$(this._list, new $._LinkedHashMapImpl_values_anon());
  },
  forEach$1: function(f) {
    this._list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
  },
  containsKey$1: function(key) {
    return this._map.containsKey$1(key);
  },
  get$length: function() {
    var t1 = this._map;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  clear$0: function() {
    var t1 = this._map;
    $.getInterceptor$JSArray(t1).clear$0(t1);
    this._list.clear$0();
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _LinkedHashMapImpl$0: function() {
    this._map = $.HashMap_HashMap();
    this._list = $.DoubleLinkedQueue$();
  },
  is$Map: function() {
    return true;
  }
};

$$.Object = {"": ";",
  operator$eq$1: function(other) {
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.DoubleLinkedQueueEntry = {"": "Object;_previous=,_next=,_element",
  _link$2: function(p, n) {
    this._next = n;
    this._previous = p;
    p.set$_next(this);
    n.set$_previous(this);
  },
  prepend$1: function(e) {
    $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
  },
  remove$0: function() {
    var t1 = this._next;
    this._previous.set$_next(t1);
    t1 = this._previous;
    this._next.set$_previous(t1);
    this._next = null;
    this._previous = null;
    return this._element;
  },
  _asNonSentinelEntry$0: function() {
    return this;
  },
  previousEntry$0: function() {
    return this._previous._asNonSentinelEntry$0();
  },
  nextEntry$0: function() {
    return this._next._asNonSentinelEntry$0();
  },
  get$element: function() {
    return this._element;
  },
  DoubleLinkedQueueEntry$1: function(e) {
    this._element = e;
  }
};

$$._DoubleLinkedQueueEntrySentinel = {"": "DoubleLinkedQueueEntry;_previous,_next,_element",
  remove$0: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _asNonSentinelEntry$0: function() {
    return;
  },
  get$element: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _DoubleLinkedQueueEntrySentinel$0: function() {
    this._link$2(this, this);
  }
};

$$.DoubleLinkedQueue = {"": "Iterable;_sentinel",
  addLast$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  add$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  removeLast$0: function() {
    return this._sentinel._previous.remove$0();
  },
  removeFirst$0: function() {
    return this._sentinel._next.remove$0();
  },
  remove$1: function(o) {
    var entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel);) {
      if ($.eqB(entry.get$element(), o)) {
        entry.remove$0();
        return;
      }
      entry = entry.get$_next();
    }
  },
  lastEntry$0: function() {
    return this._sentinel.previousEntry$0();
  },
  get$isEmpty: function() {
    var t1 = this._sentinel;
    return t1._next === t1;
  },
  clear$0: function() {
    var t1 = this._sentinel;
    t1._next = t1;
    t1 = this._sentinel;
    t1._previous = t1;
  },
  get$iterator: function() {
    return $._DoubleLinkedQueueIterator$(this._sentinel);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  DoubleLinkedQueue$0: function() {
    this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
  },
  is$Collection: function() {
    return true;
  }
};

$$._DoubleLinkedQueueIterator = {"": "Object;_sentinel,_currentEntry,_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._currentEntry;
    if (t1 == null)
      return false;
    this._currentEntry = t1.get$_next();
    t1 = this._currentEntry;
    t2 = this._sentinel;
    if (t1 == null ? t2 == null : t1 === t2) {
      this._currentEntry = null;
      this._current = null;
      this._sentinel = null;
      return false;
    }
    this._current = t1.get$element();
    return true;
  },
  get$current: function() {
    return this._current;
  }
};

$$._StringBufferImpl = {"": "Object;_buffer,_length",
  get$length: function() {
    return this._length;
  },
  get$isEmpty: function() {
    return $.eq(this._length, 0);
  },
  add$1: function(obj) {
    var str, t1, t2;
    str = $.getInterceptor(obj).toString$0(obj);
    if (!(typeof str === "string"))
      throw $.$$throw($.ArgumentError$("toString() did not return a string"));
    if ($.CONSTANT2.get$isEmpty(str) === true)
      return;
    t1 = this._buffer;
    $.getInterceptor$JSArray(t1).add$1(t1, str);
    t1 = this._length;
    t2 = str.length;
    this._length = $.getInterceptor$JSNumber(t1).operator$add$1(t1, t2);
  },
  clear$0: function() {
    this._buffer = $.List_List(0);
    this._length = 0;
  },
  toString$0: function() {
    var t1, result;
    t1 = this._buffer;
    if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
      return "";
    t1 = this._buffer;
    if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1)) {
      t1 = this._buffer;
      return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, 0);
    }
    result = $.Strings__toJsStringArray(this._buffer).join("");
    t1 = this._buffer;
    $.getInterceptor$JSArray(t1).clear$0(t1);
    t1 = this._buffer;
    $.getInterceptor$JSArray(t1).add$1(t1, result);
    return result;
  },
  _StringBufferImpl$1: function(content$) {
    this.clear$0();
    this.add$1(content$);
  }
};

$$.MappedIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    var t1 = this._iterable;
    return $.MappedIterator$($.getInterceptor$JSArray(t1).get$iterator(t1), this._f);
  },
  get$length: function() {
    var t1 = this._iterable;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  get$isEmpty: function() {
    var t1 = this._iterable;
    return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
  }
};

$$.MappedIterator = {"": "Iterator;_liblib3$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib3$_current = this._f$1(t1.get$current());
      return true;
    } else {
      this._liblib3$_current = null;
      return false;
    }
  },
  get$current: function() {
    return this._liblib3$_current;
  }
};

$$.ObjectInterceptor = {"": "Object;",
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  operator$add$1: function(receiver, a0) {
    return receiver.operator$add$1(a0);
  },
  operator$indexSet$2: function(receiver, a0, a1) {
    return receiver.operator$indexSet$2(a0, a1);
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  insertRange$3: function(receiver, a0, a1, a2) {
    return receiver.insertRange$3(a0, a1, a2);
  },
  clear$0: function(receiver) {
    return receiver.clear$0();
  },
  operator$or$1: function(receiver, a0) {
    return receiver.operator$or$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  toInt$0: function(receiver) {
    return receiver.toInt$0();
  },
  operator$mul$1: function(receiver, a0) {
    return receiver.operator$mul$1(a0);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  operator$sub$1: function(receiver, a0) {
    return receiver.operator$sub$1(a0);
  },
  contains$2: function(receiver, a0, a1) {
    return receiver.contains$2(a0, a1);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  get$isEven: function(receiver) {
    return receiver.get$isEven();
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  operator$mod$1: function(receiver, a0) {
    return receiver.operator$mod$1(a0);
  },
  operator$negate$0: function(receiver) {
    return receiver.operator$negate$0();
  },
  operator$shr$1: function(receiver, a0) {
    return receiver.operator$shr$1(a0);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase$0();
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  operator$and$1: function(receiver, a0) {
    return receiver.operator$and$1(a0);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  concat$1: function(receiver, a0) {
    return receiver.concat$1(a0);
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  operator$index$1: function(receiver, a0) {
    return receiver.operator$index$1(a0);
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  operator$shl$1: function(receiver, a0) {
    return receiver.operator$shl$1(a0);
  },
  removeAt$1: function(receiver, a0) {
    return receiver.removeAt$1(a0);
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  operator$tdiv$1: function(receiver, a0) {
    return receiver.operator$tdiv$1(a0);
  },
  get$isInfinite: function(receiver) {
    return receiver.get$isInfinite();
  },
  operator$div$1: function(receiver, a0) {
    return receiver.operator$div$1(a0);
  },
  operator$xor$1: function(receiver, a0) {
    return receiver.operator$xor$1(a0);
  },
  indexOf$1: function(receiver, a0) {
    return receiver.indexOf$1(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  is$bool: true
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeAt$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    $.checkGrowable(receiver, "removeAt");
    return receiver.splice(index, 1)[0];
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.eqB(receiver[i], element)) {
        receiver.splice(i, 1);
        return;
      }
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  insertRange$3: function(receiver, start, length$, initialValue) {
    return $.listInsertRange(receiver, start, length$, initialValue);
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = receiver.length, i = 0; i < t1; ++i)
      if (other === receiver[i])
        return true;
    return false;
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.Collections_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    return $.List_List$from(receiver);
  },
  get$iterator: function(receiver) {
    return $._ArrayIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  operator$index$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  operator$indexSet$2: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  }
};

$$._ArrayIterator = {"": "Object;_liblib0$_list,_liblib0$_position,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var t1, nextPosition, length$;
    t1 = this._liblib0$_position;
    if (t1 !== (t1 | 0))
      return this.moveNext$0$bailout1(1, t1);
    nextPosition = t1 + 1;
    t1 = this._liblib0$_list;
    length$ = t1.length;
    if (nextPosition < length$) {
      this._liblib0$_position = nextPosition;
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib0$_current = t1[nextPosition];
      return true;
    }
    this._liblib0$_position = length$;
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout1: function(state0, t1) {
    var nextPosition, length$;
    nextPosition = $.getInterceptor$JSNumber(t1).operator$add$1(t1, 1);
    t1 = this._liblib0$_list;
    length$ = t1.length;
    if ($.ltB(nextPosition, length$)) {
      this._liblib0$_position = nextPosition;
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib0$_current = t1[nextPosition];
      return true;
    }
    this._liblib0$_position = length$;
    this._liblib0$_current = null;
    return false;
  }
};

$$.JSNumber = {"": "Object;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver) === true)
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver) === true)
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = this.truncate$0(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  operator$negate$0: function(receiver) {
    return -receiver;
  },
  operator$add$1: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  operator$sub$1: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  operator$div$1: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver / other;
  },
  operator$mul$1: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  operator$mod$1: function(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  operator$tdiv$1: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  operator$shl$1: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  operator$shr$1: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  operator$and$1: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  operator$or$1: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  operator$xor$1: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  }
};

$$.JSInt = {"": "JSNumber;",
  get$isEven: function(receiver) {
    return (receiver & 1) === 0;
  }
};

$$.JSDouble = {"": "JSNumber;"};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    if (!(typeof index === "number"))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  concat$1: function(receiver, other) {
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    if ($.ltB(startIndex, 0))
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.gtB(startIndex, endIndex))
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.gtB(endIndex, receiver.length))
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var i, hash, hash0, hash1;
    for (i = 0, hash = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  operator$index$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  is$String: true
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId=,nextManagerId=,currentContext=,rootContext=,topEventLoop>,fromCommandLine>,isWorker>,supportsWorkers,isolates>,mainManager>,managers>",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, isWorkerDefined, t2;
    t1 = $.get$globalWindow() == null;
    isWorkerDefined = !($.get$globalWorker() == null);
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = isWorkerDefined && !($.get$IsolateNatives_thisScript() == null);
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var function$ = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = function$;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true) {
      var t1 = this.isolates;
      t1 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true && $.eqB(this.topEventLoop.get$activeTimerCount(), 0);
    } else
      t1 = false;
    if (t1)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id=,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result, t1;
    old = $globalState.get$currentContext();
    $globalState.set$currentContext(this);
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      t1 = old;
      $globalState.set$currentContext(t1);
      if (!(old == null))
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, portId);
  },
  register$2: function(portId, port) {
    var t1, t2;
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($.Exception_Exception("Registry: ports must be registered only once."));
    t1 = this.ports;
    $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, portId, port);
    t1 = $globalState.get$isolates();
    t2 = this.id;
    $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, t2, this);
  },
  unregister$1: function(portId) {
    var t1, t2;
    t1 = this.ports;
    $.getInterceptor$JSArray(t1).remove$1(t1, portId);
    t1 = this.ports;
    if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true) {
      t1 = $globalState.get$isolates();
      t2 = this.id;
      $.getInterceptor$JSArray(t1).remove$1(t1, t2);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.getInterceptor$JSNumber(t2).operator$add$1(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount=",
  enqueue$3: function(isolate, fn, msg) {
    var t1, t2;
    t1 = this.events;
    t2 = $._IsolateEvent$(isolate, fn, msg);
    $.getInterceptor$JSArray(t1).addLast$1(t1, t2);
  },
  dequeue$0: function() {
    var t1 = this.events;
    if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    var t1, t2;
    if (!($globalState.get$rootContext() == null))
      if ($globalState.get$isolates().containsKey$1($globalState.get$rootContext().get$id()) === true)
        if ($globalState.get$fromCommandLine() === true) {
          t1 = $globalState.get$rootContext().get$ports();
          t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true;
          t1 = t2;
        } else
          t1 = false;
      else
        t1 = false;
    else
      t1 = false;
    if (t1)
      throw $.$$throw($.Exception_Exception("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var event$ = this.dequeue$0();
    if (event$ == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    event$.process$0();
    return true;
  },
  _runHelper$0: function() {
    if (!($.get$globalWindow() == null))
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0() === true;)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.get$isWorker() !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  set$id: function(i) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  set$onmessage: function(f) {
    throw $.$$throw($.Exception_Exception("onmessage should not be set on MainManagerStub"));
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (!(replyTo == null) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.is$_BufferingSendPort))
      throw $.$$throw($.Exception_Exception("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $.Completer_Completer();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.get$future();
  },
  is$SendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  operator$eq$1: function(other) {
    return typeof other === "object" && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
  },
  get$hashCode: function() {
    return this._receivePort.get$_id();
  },
  is$_NativeJsSendPort: true,
  is$SendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  operator$eq$1: function(other) {
    var t1;
    if (typeof other === "object" && other !== null && !!other.is$_WorkerSendPort)
      t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    var t1, t2;
    t1 = this._workerId;
    t1 = $.getInterceptor$JSNumber(t1).operator$shl$1(t1, 16);
    t2 = this._isolateId;
    t2 = $.getInterceptor$JSNumber(t2).operator$shl$1(t2, 8);
    t2 = $.getInterceptor$JSNumber(t1).operator$xor$1(t1, t2);
    t1 = this._receivePortId;
    return $.getInterceptor$JSNumber(t2).operator$xor$1(t2, t1);
  },
  is$_WorkerSendPort: true,
  is$SendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_callback>",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function() {
    this._callback = null;
    $globalState.get$currentContext().unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $globalState.get$currentContext().get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (!($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, list) == null))
      return;
    t1 = this._visited;
    $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, list, true);
    t1 = new $._PendingSendPortFinder_visitList_anon(this);
    $.getInterceptor$JSArray(list).forEach$1(list, t1);
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = this._visited;
    if (!($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, map) == null))
      return;
    t1 = this._visited;
    $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, map, true);
    t1 = map.get$values();
    t2 = new $._PendingSendPortFinder_visitMap_anon(this);
    $.getInterceptor$JSArray(t1).forEach$1(t1, t2);
  },
  visitSendPort$1: function(port) {
    if (!!port.is$_BufferingSendPort && port._port == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.is$_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.is$_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.is$_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.is$_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.is$_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.is$_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$JSStringJSArray(x);
    managerId = t1.operator$index$1(x, 1);
    isolateId = t1.operator$index$1(x, 2);
    receivePortId = t1.operator$index$1(x, 3);
    if ($.eqB(managerId, $globalState.get$currentManagerId())) {
      t1 = $globalState.get$isolates();
      isolate = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  operator$index$1: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  operator$indexSet$2: function(object, info) {
    var t1 = this.tagged;
    $.getInterceptor$JSArray(t1).add$1(t1, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    this.tagged = $.List_List(0);
  },
  cleanup$0: function() {
    var t1, length$, i;
    t1 = this.tagged;
    length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    if (typeof length$ !== "number")
      return this.cleanup$0$bailout(1, length$);
    i = 0;
    for (; i < length$; ++i) {
      t1 = this.tagged;
      $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i)['__MessageTraverser__attached_info__'] = null;
    }
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, length$) {
    var i, t1;
    i = 0;
    for (; $.ltB(i, length$); ++i) {
      t1 = this.tagged;
      $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i)['__MessageTraverser__attached_info__'] = null;
    }
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  operator$index$1: function(object) {
    return;
  },
  operator$indexSet$2: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.is$List()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && x.is$Map())
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.is$SendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.is$SendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, i;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
      return this.visitList$1$bailout(1, list);
    t1 = this._visited;
    copy = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, list);
    if (!(copy == null))
      return copy;
    len = list.length;
    copy = $.List_List(len);
    t1 = this._visited;
    $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        list = env0;
        break;
      case 2:
        len = env2;
        list = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._visited;
        copy = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, list);
        if (!(copy == null))
          return copy;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var list, t1, copy, len, t3, i, t2;
        state0 = 0;
        copy = $.List_List(len);
        t3 = this._visited;
        $.getInterceptor$JSArray(t3).operator$indexSet$2(t3, list, copy);
        for (i = 0; $.ltB(i, len); ++i) {
          t2 = this._dispatch$1(t1.operator$index$1(list, i));
          if (i >= copy.length)
            throw $.ioore(i);
          copy[i] = t2;
        }
        return copy;
    }
  },
  visitMap$1: function(map) {
    var t1, t2, t3;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, map);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = $.Map_Map();
    t2 = this._visited;
    t3 = t1.copy_0;
    $.getInterceptor$JSArray(t2).operator$indexSet$2(t2, map, t3);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, list);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id, keys, t2;
    t1 = this._visited;
    copyId = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, map);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, map, id);
    t1 = map.get$keys();
    keys = this._serializeList$1($.getInterceptor$JSArray(t1).toList$0(t1));
    t2 = map.get$values();
    return ["map", id, keys, this._serializeList$1($.getInterceptor$JSArray(t2).toList$0(t2))];
  },
  _serializeList$1: function(list) {
    var len, result, i, t1;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        list = env0;
        break;
      case 2:
        len = env2;
        t1 = env1;
        list = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var list, t1, len, result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        for (i = 0; $.ltB(i, len); ++i) {
          t2 = this._dispatch$1(t1.operator$index$1(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap_HashMap();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.getInterceptor$JSStringJSArray(x).operator$index$1(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var id, t1;
    id = $.getInterceptor$JSStringJSArray(x).operator$index$1(x, 1);
    t1 = this._deserialized;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, id);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, t2, len, i;
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.operator$index$1(x, 1);
    dartList = t1.operator$index$1(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    t2 = this._deserialized;
    $.getInterceptor$JSArray(t2).operator$indexSet$2(t2, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        id = env1;
        dartList = env0;
        break;
      case 2:
        len = env2;
        t2 = env1;
        dartList = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.operator$index$1(x, 1);
        dartList = t1.operator$index$1(x, 2);
      case 1:
        state0 = 0;
        t2 = this._deserialized;
        $.getInterceptor$JSArray(t2).operator$indexSet$2(t2, id, dartList);
        t2 = $.getInterceptor$JSStringJSArray(dartList);
        len = t2.get$length(dartList);
      case 2:
        var t1, id, dartList, t2, len, i;
        state0 = 0;
        for (i = 0; $.ltB(i, len); ++i)
          t2.operator$indexSet$2(dartList, i, this._deserializeHelper$1(t2.operator$index$1(dartList, i)));
        return dartList;
    }
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i, key;
    result = $.Map_Map();
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.operator$index$1(x, 1);
    t2 = this._deserialized;
    $.getInterceptor$JSArray(t2).operator$indexSet$2(t2, id, result);
    keys = t1.operator$index$1(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.operator$index$1(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, values, result, keys);
    len = keys.length;
    for (t1 = $.getInterceptor$JSArray(result), i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      t1.operator$indexSet$2(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        t1 = env3;
        keys = env2;
        result = env1;
        x = env0;
        break;
      case 2:
        keys = env2;
        result = env1;
        values = env0;
        break;
      case 3:
        keys = env4;
        result = env3;
        len = env2;
        t3 = env1;
        values = env0;
        break;
    }
    switch (state0) {
      case 0:
        result = $.Map_Map();
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.operator$index$1(x, 1);
        t2 = this._deserialized;
        $.getInterceptor$JSArray(t2).operator$indexSet$2(t2, id, result);
        keys = t1.operator$index$1(x, 2);
      case 1:
        state0 = 0;
        values = t1.operator$index$1(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(keys);
        len = t3.get$length(keys);
      case 3:
        var result, t1, id, t2, keys, x, values, t3, len, i;
        state0 = 0;
        for (t1 = $.getInterceptor$JSStringJSArray(values), t2 = $.getInterceptor$JSArray(result), i = 0; $.ltB(i, len); ++i)
          t2.operator$indexSet$2(result, this._deserializeHelper$1(t3.operator$index$1(keys, i)), this._deserializeHelper$1(t1.operator$index$1(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle<",
  cancel$0: function() {
    var t1, t2;
    if (!($.get$globalThis().setTimeout == null)) {
      if (this._inEventLoop === true)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      t1 = $globalState.get$topEventLoop();
      t2 = t1.get$activeTimerCount();
      t1.set$activeTimerCount($.getInterceptor$JSNumber(t2).operator$sub$1(t2, 1));
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1, t2;
    if ($.eqB(milliseconds, 0))
      t1 = !$.hasTimer() || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), new $.anon(this, callback), "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer()) {
      t1 = $._globalState().get$topEventLoop();
      t2 = t1.get$activeTimerCount();
      t1.set$activeTimerCount($.getInterceptor$JSNumber(t2).operator$add$1(t2, 1));
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer) {
    var message, t1, t2, exception;
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "'");
    message = null;
    try {
      t2 = this.error;
      message = $.getInterceptor(t2).toString$0(t2);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    t1.add$1(buffer, message);
    t1.add$1(buffer, "'\n");
    t2 = this.stackTrace;
    if (!(t2 == null)) {
      t1.add$1(buffer, "Stack trace:\n");
      t1.add$1(buffer, $.getInterceptor(t2).toString$0(t2));
      t1.add$1(buffer, "\n");
    }
  },
  toString$0: function() {
    var buffer, t1, cause;
    buffer = $.StringBuffer_StringBuffer("");
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; !(cause == null);) {
      t1.add$1(buffer, "Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return t1.toString$0(buffer);
  },
  is$AsyncError: true
};

$$._CompleterImpl = {"": "Object;future>,_isComplete>",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.is$AsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future>,_nextListener=",
  _sendValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state,_resultOrListeners>",
  get$_isComplete: function() {
    return !$.eqB(this._state, 0);
  },
  get$_hasValue: function() {
    return $.eq(this._state, 1);
  },
  get$_hasError: function() {
    var t1 = this._state;
    return !$.eqB($.getInterceptor$JSNumber(t1).operator$and$1(t1, 2), 0);
  },
  get$_hasUnhandledError: function() {
    var t1 = this._state;
    return !$.eqB($.getInterceptor$JSNumber(t1).operator$and$1(t1, 4), 0);
  },
  _clearUnhandledError$0: function() {
    var t1 = this._state;
    this._state = $.getInterceptor$JSNumber(t1).operator$and$1(t1, 4294967291);
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (!(onError == null))
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_Timer(0, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._clearUnhandledError$0();
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_Timer(0, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; !(listeners == null); listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_setValue: function() {
    return new $.BoundClosure(this, "_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (!(listeners0 == null)) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    var t1 = this._state;
    this._state = $.getInterceptor$JSNumber(t1).operator$or$1(t1, 4);
    $.Timer_Timer(0, new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; !(current == null); prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue() === true)
      future._setValue$1(this._resultOrListeners);
    else {
      this._clearUnhandledError$0();
      future._setError$1(this._resultOrListeners);
    }
  },
  _asListener$0: function() {
    return $._FutureListener__FutureListener$wrap(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  is$_FutureImpl: true,
  is$Future: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.is$Future)
      if (!!result.is$_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.is$AsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (!(this._test == null)) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.is$AsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.is$AsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function(function$, onError) {
    return this._future.then$2$onError(function$, onError);
  },
  then$1: function(function$) {
    return this.then$2$onError(function$, null);
  },
  catchError$2$test: function(function$, test) {
    return this._future.catchError$2$test(function$, test);
  },
  catchError$1: function(function$) {
    return this.catchError$2$test(function$, null);
  },
  is$Future: true
};

$$.Stream = {"": "Object;",
  contains$1: function(match) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_contains_anon(t1, match, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_contains_anon0(future), t3, true);
    return future;
  },
  get$length: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  },
  get$isEmpty: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_isEmpty_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_isEmpty_anon0(future), t3, true);
    return future;
  },
  toList$0: function() {
    var result, future, t1, t2;
    result = [];
    future = $._FutureImpl$();
    t1 = new $.Stream_toList_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toList_anon0(result, future), t2, true);
    return future;
  }
};

$$.StreamSubscription = {"": "Object;"};

$$._EventStream = {"": "Stream;_target,_eventType,_useCapture",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (!(t1 == null))
      this._target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    this._target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._target == null;
  },
  onError$1: function(handleError) {
  },
  get$onError: function() {
    return new $.BoundClosure(this, "onError$1");
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    if (!(this._onData == null) && this.get$_paused() !== true)
      this._target.$$dom_addEventListener$3(this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._CustomEventStreamProvider = {"": "Object;_eventTypeGetter",
  _eventTypeGetter$1: function(arg0) {
    return this._eventTypeGetter.call$1(arg0);
  },
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventTypeGetter$1(e), useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$parent: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.parent);
  },
  get$top: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.top);
  },
  close$0: function() {
    return this._window.close();
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_liblib$_length,_position,_liblib$_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout0(1, t1);
    nextPosition = t1 + 1;
    t1 = this._liblib$_length;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout0(2, t1, nextPosition);
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout0(3, nextPosition, t1);
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._liblib$_current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout0: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        nextPosition = env1;
        t1 = env0;
        break;
      case 3:
        t1 = env1;
        nextPosition = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.getInterceptor$JSNumber(t1).operator$add$1(t1, 1);
        t1 = this._liblib$_length;
      case 2:
        state0 = 0;
      case 3:
        var t1, nextPosition;
        if (state0 === 3 || state0 === 0 && $.ltB(nextPosition, t1))
          switch (state0) {
            case 0:
              t1 = this._array;
            case 3:
              state0 = 0;
              this._liblib$_current = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._liblib$_current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.JsonListener = {"": "Object;",
  handleString$1: function(value) {
  },
  handleNumber$1: function(value) {
  },
  handleBool$1: function(value) {
  },
  handleNull$0: function() {
  },
  beginObject$0: function() {
  },
  propertyName$0: function() {
  },
  propertyValue$0: function() {
  },
  endObject$0: function() {
  },
  beginArray$0: function() {
  },
  arrayElement$0: function() {
  },
  endArray$0: function() {
  },
  fail$3: function(source, position, message) {
  }
};

$$.BuildJsonListener = {"": "JsonListener;stack,currentContainer,key>,value=",
  pushContainer$0: function() {
    var t1 = this.currentContainer;
    if (typeof t1 === "object" && t1 !== null && t1.is$Map())
      this.stack.push(this.key);
    this.stack.push(this.currentContainer);
  },
  popContainer$0: function() {
    var t1, t2;
    this.value = this.currentContainer;
    t1 = this.stack;
    if (0 >= t1.length)
      throw $.ioore(0);
    this.currentContainer = t1.pop();
    t2 = this.currentContainer;
    if (typeof t2 === "object" && t2 !== null && t2.is$Map()) {
      if (0 >= t1.length)
        throw $.ioore(0);
      this.key = t1.pop();
    }
  },
  handleString$1: function(value) {
    this.value = value;
  },
  handleNumber$1: function(value) {
    this.value = value;
  },
  handleBool$1: function(value) {
    this.value = value;
  },
  handleNull$0: function() {
    this.value = this.value;
  },
  beginObject$0: function() {
    this.pushContainer$0();
    this.currentContainer = $.makeLiteralMap([]);
  },
  propertyName$0: function() {
    this.key = this.value;
    this.value = null;
  },
  propertyValue$0: function() {
    var map, t1, t2;
    map = this.currentContainer;
    t1 = this.key;
    t2 = this.value;
    $.getInterceptor$JSArray(map).operator$indexSet$2(map, t1, t2);
    this.value = null;
    this.key = null;
  },
  endObject$0: function() {
    this.popContainer$0();
  },
  beginArray$0: function() {
    this.pushContainer$0();
    this.currentContainer = [];
  },
  arrayElement$0: function() {
    var list, t1;
    list = this.currentContainer;
    t1 = this.value;
    $.getInterceptor$JSArray(list).add$1(list, t1);
    this.value = null;
  },
  endArray$0: function() {
    this.popContainer$0();
  },
  get$result: function() {
    return this.value;
  }
};

$$.ReviverJsonListener = {"": "BuildJsonListener;reviver,stack,currentContainer,key,value",
  reviver$2: function(arg0, arg1) {
    return this.reviver.call$2(arg0, arg1);
  },
  arrayElement$0: function() {
    var list = this.currentContainer;
    this.value = this.reviver$2($.getInterceptor$JSStringJSArray(list).get$length(list), this.value);
    $.BuildJsonListener.prototype.arrayElement$0.call(this);
  },
  propertyValue$0: function() {
    this.value = this.reviver$2(this.key, this.value);
    $.BuildJsonListener.prototype.propertyValue$0.call(this);
  },
  get$result: function() {
    return this.reviver$2("", this.value);
  }
};

$$.JsonParser = {"": "Object;source>,listener>",
  parse$0: function() {
    var states, t1, length$, t2, t3, position, state, char$, t4, position0;
    states = [];
    t1 = this.source;
    length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    for (t2 = $.getInterceptor$JSString(t1), t3 = this.listener, position = 0, state = 0; $.ltB(position, length$);) {
      char$ = t2.charCodeAt$1(t1, position);
      switch (char$) {
        case 32:
        case 13:
        case 10:
        case 9:
          position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
          break;
        case 34:
          t4 = $.getInterceptor$JSNumber(state);
          if (!$.eqB(t4.operator$and$1(state, 8), 0))
            this.fail$1(position);
          position0 = this.parseString$1($.getInterceptor$JSNumber(position).operator$add$1(position, 1));
          state = t4.operator$or$1(state, 28);
          position = position0;
          break;
        case 91:
          if (!$.eqB($.getInterceptor$JSNumber(state).operator$and$1(state, 4), 0))
            this.fail$1(position);
          t3.beginArray$0();
          states.push(state);
          position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
          state = 1;
          break;
        case 123:
          if (!$.eqB($.getInterceptor$JSNumber(state).operator$and$1(state, 4), 0))
            this.fail$1(position);
          t3.beginObject$0();
          states.push(state);
          position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
          state = 6;
          break;
        case 110:
          t4 = $.getInterceptor$JSNumber(state);
          if (!$.eqB(t4.operator$and$1(state, 4), 0))
            this.fail$1(position);
          position = this.parseNull$1(position);
          state = t4.operator$or$1(state, 28);
          break;
        case 102:
          t4 = $.getInterceptor$JSNumber(state);
          if (!$.eqB(t4.operator$and$1(state, 4), 0))
            this.fail$1(position);
          position = this.parseFalse$1(position);
          state = t4.operator$or$1(state, 28);
          break;
        case 116:
          t4 = $.getInterceptor$JSNumber(state);
          if (!$.eqB(t4.operator$and$1(state, 4), 0))
            this.fail$1(position);
          position = this.parseTrue$1(position);
          state = t4.operator$or$1(state, 28);
          break;
        case 58:
          if (!$.eqB(state, 30))
            this.fail$1(position);
          t3.propertyName$0();
          position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
          state = 19;
          break;
        case 44:
          if ($.eqB(state, 31)) {
            t3.propertyValue$0();
            position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
            state = 22;
          } else if ($.eqB(state, 29)) {
            t3.arrayElement$0();
            position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
            state = 17;
          } else
            this.fail$1(position);
          break;
        case 93:
          if ($.eqB(state, 1))
            t3.endArray$0();
          else if ($.eqB(state, 29)) {
            t3.arrayElement$0();
            t3.endArray$0();
          } else
            this.fail$1(position);
          if (0 >= states.length)
            throw $.ioore(0);
          t4 = states.pop();
          state = $.getInterceptor$JSNumber(t4).operator$or$1(t4, 28);
          position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
          break;
        case 125:
          if ($.eqB(state, 6))
            t3.endObject$0();
          else if ($.eqB(state, 31)) {
            t3.propertyValue$0();
            t3.endObject$0();
          } else
            this.fail$1(position);
          if (0 >= states.length)
            throw $.ioore(0);
          t4 = states.pop();
          state = $.getInterceptor$JSNumber(t4).operator$or$1(t4, 28);
          position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
          break;
        default:
          t4 = $.getInterceptor$JSNumber(state);
          if (!$.eqB(t4.operator$and$1(state, 4), 0))
            this.fail$1(position);
          position = this.parseNumber$2(char$, position);
          state = t4.operator$or$1(state, 28);
          break;
      }
    }
    if (!$.eqB(state, 28))
      this.fail$1(position);
  },
  parseTrue$1: function(position) {
    var t1, t2, t3, t5;
    if (typeof position !== "number")
      return this.parseTrue$1$bailout(1, position);
    t1 = this.source;
    t2 = $.getInterceptor$JSStringJSArray(t1);
    t3 = t2.get$length(t1);
    if (typeof t3 !== "number")
      return this.parseTrue$1$bailout(2, position, t1, t3);
    t5 = position + 4;
    if (t3 < t5)
      this.fail$2(position, "Unexpected identifier");
    t3 = t2.charCodeAt$1(t1, position + 1);
    if (typeof t3 !== "number")
      return this.parseTrue$1$bailout(3, position, $.CONSTANT7, t2, t1, t3);
    if (t3 === 114) {
      t3 = t2.charCodeAt$1(t1, position + 2);
      if (typeof t3 !== "number")
        return this.parseTrue$1$bailout(4, position, $.CONSTANT7, t2, t1, t3);
      if (t3 === 117) {
        t1 = t2.charCodeAt$1(t1, position + 3);
        if (typeof t1 !== "number")
          return this.parseTrue$1$bailout(5, position, $.CONSTANT7, t1);
        t3 = !(t1 === 101);
        t1 = t3;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      this.fail$1(position);
    this.listener.handleBool$1(true);
    return t5;
  },
  parseTrue$1$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        position = env0;
        break;
      case 2:
        t2 = env2;
        t1 = env1;
        position = env0;
        break;
      case 3:
        t2 = env4;
        t1 = env3;
        t3 = env2;
        t4 = env1;
        position = env0;
        break;
      case 4:
        t2 = env4;
        t1 = env3;
        t3 = env2;
        t4 = env1;
        position = env0;
        break;
      case 5:
        t1 = env2;
        t4 = env1;
        position = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(position);
        if ($.ltB(t2, t4.operator$add$1(position, 4)))
          this.fail$2(position, "Unexpected identifier");
        t2 = t4.operator$add$1(position, 1);
        t3 = $.getInterceptor$JSString(t1);
        t2 = t3.charCodeAt$1(t1, t2);
      case 3:
        state0 = 0;
      default:
        var position, t1, t2, t4, t3;
        if (state0 === 5 || state0 === 4 || state0 === 0 && $.eqB(t2, 114))
          switch (state0) {
            case 0:
              t2 = t3.charCodeAt$1(t1, t4.operator$add$1(position, 2));
            case 4:
              state0 = 0;
            case 5:
              if (state0 === 5 || state0 === 0 && $.eqB(t2, 117))
                switch (state0) {
                  case 0:
                    t1 = t3.charCodeAt$1(t1, t4.operator$add$1(position, 3));
                  case 5:
                    state0 = 0;
                    t3 = !$.eqB(t1, 101);
                    t1 = t3;
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          this.fail$1(position);
        this.listener.handleBool$1(true);
        return t4.operator$add$1(position, 4);
    }
  },
  parseFalse$1: function(position) {
    var t1, t2, t3, t5;
    if (typeof position !== "number")
      return this.parseFalse$1$bailout(1, position);
    t1 = this.source;
    t2 = $.getInterceptor$JSStringJSArray(t1);
    t3 = t2.get$length(t1);
    if (typeof t3 !== "number")
      return this.parseFalse$1$bailout(2, position, t1, t3);
    t5 = position + 5;
    if (t3 < t5)
      this.fail$2(position, "Unexpected identifier");
    t3 = t2.charCodeAt$1(t1, position + 1);
    if (typeof t3 !== "number")
      return this.parseFalse$1$bailout(3, position, t1, $.CONSTANT7, t3, t2);
    if (t3 === 97) {
      t3 = t2.charCodeAt$1(t1, position + 2);
      if (typeof t3 !== "number")
        return this.parseFalse$1$bailout(4, position, t1, $.CONSTANT7, t3, t2);
      if (t3 === 108) {
        t3 = t2.charCodeAt$1(t1, position + 3);
        if (typeof t3 !== "number")
          return this.parseFalse$1$bailout(5, position, t1, $.CONSTANT7, t3, t2);
        if (t3 === 115) {
          t1 = t2.charCodeAt$1(t1, position + 4);
          if (typeof t1 !== "number")
            return this.parseFalse$1$bailout(6, position, $.CONSTANT7, t1);
          t3 = !(t1 === 101);
          t1 = t3;
        } else
          t1 = true;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      this.fail$1(position);
    this.listener.handleBool$1(false);
    return t5;
  },
  parseFalse$1$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        position = env0;
        break;
      case 2:
        t2 = env2;
        t1 = env1;
        position = env0;
        break;
      case 3:
        t3 = env4;
        t2 = env3;
        t4 = env2;
        t1 = env1;
        position = env0;
        break;
      case 4:
        t3 = env4;
        t2 = env3;
        t4 = env2;
        t1 = env1;
        position = env0;
        break;
      case 5:
        t3 = env4;
        t2 = env3;
        t4 = env2;
        t1 = env1;
        position = env0;
        break;
      case 6:
        t1 = env2;
        t4 = env1;
        position = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(position);
        if ($.ltB(t2, t4.operator$add$1(position, 5)))
          this.fail$2(position, "Unexpected identifier");
        t2 = t4.operator$add$1(position, 1);
        t3 = $.getInterceptor$JSString(t1);
        t2 = t3.charCodeAt$1(t1, t2);
      case 3:
        state0 = 0;
      default:
        var position, t1, t2, t4, t3;
        if (state0 === 6 || state0 === 5 || state0 === 4 || state0 === 0 && $.eqB(t2, 97))
          switch (state0) {
            case 0:
              t2 = t3.charCodeAt$1(t1, t4.operator$add$1(position, 2));
            case 4:
              state0 = 0;
            default:
              if (state0 === 6 || state0 === 5 || state0 === 0 && $.eqB(t2, 108))
                switch (state0) {
                  case 0:
                    t2 = t3.charCodeAt$1(t1, t4.operator$add$1(position, 3));
                  case 5:
                    state0 = 0;
                  case 6:
                    if (state0 === 6 || state0 === 0 && $.eqB(t2, 115))
                      switch (state0) {
                        case 0:
                          t1 = t3.charCodeAt$1(t1, t4.operator$add$1(position, 4));
                        case 6:
                          state0 = 0;
                          t3 = !$.eqB(t1, 101);
                          t1 = t3;
                      }
                    else
                      t1 = true;
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          this.fail$1(position);
        this.listener.handleBool$1(false);
        return t4.operator$add$1(position, 5);
    }
  },
  parseNull$1: function(position) {
    var t1, t2, t3, t5;
    if (typeof position !== "number")
      return this.parseNull$1$bailout(1, position);
    t1 = this.source;
    t2 = $.getInterceptor$JSStringJSArray(t1);
    t3 = t2.get$length(t1);
    if (typeof t3 !== "number")
      return this.parseNull$1$bailout(2, position, t1, t3);
    t5 = position + 4;
    if (t3 < t5)
      this.fail$2(position, "Unexpected identifier");
    t3 = t2.charCodeAt$1(t1, position + 1);
    if (typeof t3 !== "number")
      return this.parseNull$1$bailout(3, position, $.CONSTANT7, t1, t3, t2);
    if (t3 === 117) {
      t3 = t2.charCodeAt$1(t1, position + 2);
      if (typeof t3 !== "number")
        return this.parseNull$1$bailout(4, position, $.CONSTANT7, t1, t3, t2);
      if (t3 === 108) {
        t1 = t2.charCodeAt$1(t1, position + 3);
        if (typeof t1 !== "number")
          return this.parseNull$1$bailout(5, position, $.CONSTANT7, t1);
        t3 = !(t1 === 108);
        t1 = t3;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      this.fail$1(position);
    this.listener.handleNull$0();
    return t5;
  },
  parseNull$1$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        position = env0;
        break;
      case 2:
        t2 = env2;
        t1 = env1;
        position = env0;
        break;
      case 3:
        t3 = env4;
        t2 = env3;
        t1 = env2;
        t4 = env1;
        position = env0;
        break;
      case 4:
        t3 = env4;
        t2 = env3;
        t1 = env2;
        t4 = env1;
        position = env0;
        break;
      case 5:
        t1 = env2;
        t4 = env1;
        position = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(position);
        if ($.ltB(t2, t4.operator$add$1(position, 4)))
          this.fail$2(position, "Unexpected identifier");
        t2 = t4.operator$add$1(position, 1);
        t3 = $.getInterceptor$JSString(t1);
        t2 = t3.charCodeAt$1(t1, t2);
      case 3:
        state0 = 0;
      default:
        var position, t1, t2, t4, t3;
        if (state0 === 5 || state0 === 4 || state0 === 0 && $.eqB(t2, 117))
          switch (state0) {
            case 0:
              t2 = t3.charCodeAt$1(t1, t4.operator$add$1(position, 2));
            case 4:
              state0 = 0;
            case 5:
              if (state0 === 5 || state0 === 0 && $.eqB(t2, 108))
                switch (state0) {
                  case 0:
                    t1 = t3.charCodeAt$1(t1, t4.operator$add$1(position, 3));
                  case 5:
                    state0 = 0;
                    t3 = !$.eqB(t1, 108);
                    t1 = t3;
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          this.fail$1(position);
        this.listener.handleNull$0();
        return t4.operator$add$1(position, 4);
    }
  },
  parseString$1: function(position) {
    var t1, t2, t3, t4, position0, char$, firstEscape, chars, hexStart, value, i, t5, result;
    t1 = this.source;
    t2 = $.getInterceptor$JSString(t1);
    t3 = $.getInterceptor$JSNumber(position);
    t4 = $.getInterceptor$JSStringJSArray(t1);
    position0 = position;
    do {
      if ($.eqB(position0, t4.get$length(t1)))
        this.fail$2(t3.operator$sub$1(position, 1), "Unterminated string");
      char$ = t2.charCodeAt$1(t1, position0);
      if ($.eqB(char$, 34)) {
        this.listener.handleString$1(t2.substring$2(t1, position, position0));
        return $.getInterceptor$JSNumber(position0).operator$add$1(position0, 1);
      }
      if ($.ltB(char$, 32))
        this.fail$2(position0, "Control character in string");
      position0 = $.getInterceptor$JSNumber(position0).operator$add$1(position0, 1);
    } while (!$.eqB(char$, 92));
    firstEscape = $.getInterceptor$JSNumber(position0).operator$sub$1(position0, 1);
    chars = [];
    for (; true;) {
      if ($.eqB(position0, t4.get$length(t1)))
        this.fail$2(t3.operator$sub$1(position, 1), "Unterminated string");
      char$ = t2.charCodeAt$1(t1, position0);
      switch (char$) {
        case 98:
          char$ = 8;
          break;
        case 102:
          char$ = 12;
          break;
        case 110:
          char$ = 10;
          break;
        case 114:
          char$ = 13;
          break;
        case 116:
          char$ = 9;
          break;
        case 47:
        case 92:
        case 34:
          break;
        case 117:
          hexStart = $.getInterceptor$JSNumber(position0).operator$sub$1(position0, 1);
          for (value = 0, i = 0; i < 4; ++i) {
            position0 = $.getInterceptor$JSNumber(position0).operator$add$1(position0, 1);
            if ($.eqB(position0, t4.get$length(t1)))
              this.fail$2(t3.operator$sub$1(position, 1), "Unterminated string");
            char$ = t2.charCodeAt$1(t1, position0);
            char$ = $.getInterceptor$JSNumber(char$).operator$sub$1(char$, 48);
            if ($.ltB(char$, 0))
              this.fail$2(hexStart, "Invalid unicode escape");
            if ($.ltB(char$, 10)) {
              t5 = value * 16;
              if (typeof char$ !== "number")
                throw $.iae(char$);
              value = t5 + char$;
            } else {
              t5 = $.getInterceptor$JSNumber(char$).operator$or$1(char$, 32);
              char$ = $.getInterceptor$JSNumber(t5).operator$sub$1(t5, 49);
              if ($.ltB(char$, 0) || $.gtB(char$, 5))
                this.fail$2(hexStart, "Invalid unicode escape");
              t5 = value * 16;
              if (typeof char$ !== "number")
                throw $.iae(char$);
              value = t5 + char$ + 10;
            }
          }
          char$ = value;
          break;
        default:
          if ($.ltB(char$, 32))
            this.fail$2(position0, "Control character in string");
          this.fail$2(position0, "Unrecognized string escape");
      }
      do {
        chars.push(char$);
        position0 = $.getInterceptor$JSNumber(position0).operator$add$1(position0, 1);
        if ($.eqB(position0, t4.get$length(t1)))
          this.fail$2(t3.operator$sub$1(position, 1), "Unterminated string");
        char$ = t2.charCodeAt$1(t1, position0);
        if ($.eqB(char$, 34)) {
          result = $.String_String$fromCharCodes(chars);
          if ($.ltB(position, firstEscape))
            result = $.S(t2.substring$2(t1, position, firstEscape)) + $.S(result);
          this.listener.handleString$1(result);
          return $.getInterceptor$JSNumber(position0).operator$add$1(position0, 1);
        }
        if ($.ltB(char$, 32))
          this.fail$2(position0, "Control character in string");
      } while (!$.eqB(char$, 92));
      position0 = $.getInterceptor$JSNumber(position0).operator$add$1(position0, 1);
    }
  },
  parseNumber$2: function(char$, position) {
    var t1, t2, t3, length$, position0, t4;
    t1 = {};
    if (typeof char$ !== "number")
      return this.parseNumber$2$bailout(1, char$, position, t1);
    if (typeof position !== "number")
      return this.parseNumber$2$bailout(1, char$, position, t1);
    t2 = this.source;
    t3 = $.getInterceptor$JSStringJSArray(t2);
    length$ = t3.get$length(t2);
    t1.isDouble_0 = false;
    if (char$ === 45) {
      position0 = position + 1;
      if (position0 === length$)
        this.fail$2(position0, "Missing expected digit");
      char$ = t3.charCodeAt$1(t2, position0);
      if (typeof char$ !== "number")
        return this.parseNumber$2$bailout(2, t2, t1, position0, position, length$, char$);
    } else
      position0 = position;
    if (char$ < 48 || char$ > 57)
      this.fail$2(position0, "Missing expected digit");
    t4 = new $.JsonParser_parseNumber_handleLiteral(t1, this, position);
    if (char$ === 48) {
      position = position0 + 1;
      if (position === length$)
        return t4.call$1(position);
      char$ = t3.charCodeAt$1(t2, position);
      if (typeof char$ !== "number")
        return this.parseNumber$2$bailout(3, position, t2, t1, length$, t4, char$);
      if (48 <= char$ && char$ <= 57)
        this.fail$1(position);
    } else {
      position = position0;
      do {
        ++position;
        if (position === length$)
          return t4.call$1(position);
        char$ = t3.charCodeAt$1(t2, position);
        if (typeof char$ !== "number")
          return this.parseNumber$2$bailout(4, t2, t1, char$, t3, position, length$, t4);
      } while (48 <= char$ && char$ <= 57);
    }
    if (char$ === 46) {
      t1.isDouble_0 = true;
      ++position;
      if (position === length$)
        this.fail$2(position, "Missing expected digit");
      char$ = t3.charCodeAt$1(t2, position);
      if (typeof char$ !== "number")
        return this.parseNumber$2$bailout(5, t2, t1, position, length$, t4, t3, char$);
      if (char$ < 48 || char$ > 57)
        this.fail$1(position);
      do {
        ++position;
        if (position === length$)
          return t4.call$1(position);
        char$ = t3.charCodeAt$1(t2, position);
        if (typeof char$ !== "number")
          return this.parseNumber$2$bailout(6, t2, t1, char$, length$, position, t4, t3);
      } while (48 <= char$ && char$ <= 57);
    }
    if (char$ === 101 || char$ === 69) {
      t1.isDouble_0 = true;
      ++position;
      if (position === length$)
        this.fail$2(position, "Missing expected digit");
      char$ = t3.charCodeAt$1(t2, position);
      if (typeof char$ !== "number")
        return this.parseNumber$2$bailout(7, t2, position, length$, t4, t3, char$);
      if (char$ === 43 || char$ === 45) {
        ++position;
        if (position === length$)
          this.fail$2(position, "Missing expected digit");
        char$ = t3.charCodeAt$1(t2, position);
        if (typeof char$ !== "number")
          return this.parseNumber$2$bailout(8, t2, length$, t4, char$, t3, position);
      }
      if (char$ < 48 || char$ > 57)
        this.fail$2(position, "Missing expected digit");
      do {
        ++position;
        if (position === length$)
          return t4.call$1(position);
        char$ = t3.charCodeAt$1(t2, position);
        if (typeof char$ !== "number")
          return this.parseNumber$2$bailout(9, t2, char$, length$, t4, position, t3);
      } while (48 <= char$ && char$ <= 57);
    }
    return t4.call$1(position);
  },
  parseNumber$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
    switch (state0) {
      case 1:
        t1 = env2;
        position = env1;
        char$ = env0;
        break;
      case 2:
        char$ = env5;
        length$ = env4;
        position = env3;
        position0 = env2;
        t1 = env1;
        t2 = env0;
        break;
      case 3:
        char$ = env5;
        t3 = env4;
        length$ = env3;
        t1 = env2;
        t2 = env1;
        position = env0;
        break;
      case 4:
        t3 = env6;
        length$ = env5;
        position = env4;
        t4 = env3;
        char$ = env2;
        t1 = env1;
        t2 = env0;
        break;
      case 5:
        char$ = env6;
        t4 = env5;
        t3 = env4;
        length$ = env3;
        position = env2;
        t1 = env1;
        t2 = env0;
        break;
      case 6:
        t4 = env6;
        t3 = env5;
        position = env4;
        length$ = env3;
        char$ = env2;
        t1 = env1;
        t2 = env0;
        break;
      case 7:
        char$ = env5;
        t1 = env4;
        t3 = env3;
        length$ = env2;
        position = env1;
        t2 = env0;
        break;
      case 8:
        position = env5;
        t1 = env4;
        char$ = env3;
        t3 = env2;
        length$ = env1;
        t2 = env0;
        break;
      case 9:
        t1 = env5;
        position = env4;
        t3 = env3;
        length$ = env2;
        char$ = env1;
        t2 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = {};
      case 1:
        state0 = 0;
        t2 = this.source;
        length$ = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
        t1.isDouble_0 = false;
      case 2:
        if (state0 === 2 || state0 === 0 && $.eqB(char$, 45))
          switch (state0) {
            case 0:
              position0 = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
              if ($.eqB(position0, length$))
                this.fail$2(position0, "Missing expected digit");
              char$ = $.getInterceptor$JSString(t2).charCodeAt$1(t2, position0);
            case 2:
              state0 = 0;
          }
        else
          position0 = position;
        if ($.ltB(char$, 48) || $.gtB(char$, 57))
          this.fail$2(position0, "Missing expected digit");
        t3 = new $.JsonParser_parseNumber_handleLiteral(t1, this, position);
      default:
        if (state0 === 3 || state0 === 0 && $.eqB(char$, 48))
          switch (state0) {
            case 0:
              position = $.getInterceptor$JSNumber(position0).operator$add$1(position0, 1);
              if ($.eqB(position, length$))
                return t3.call$1(position);
              char$ = $.getInterceptor$JSString(t2).charCodeAt$1(t2, position);
            case 3:
              state0 = 0;
              if ($.leB(48, char$) && $.leB(char$, 57))
                this.fail$1(position);
          }
        else
          switch (state0) {
            case 0:
              t4 = $.getInterceptor$JSString(t2);
              position = position0;
            case 4:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
                      if ($.eqB(position, length$))
                        return t3.call$1(position);
                      char$ = t4.charCodeAt$1(t2, position);
                    case 4:
                      state0 = 0;
                      if (!($.leB(48, char$) && $.leB(char$, 57)))
                        break L0;
                  }
          }
      case 5:
      case 6:
        if (state0 === 6 || state0 === 5 || state0 === 0 && $.eqB(char$, 46))
          switch (state0) {
            case 0:
              t1.isDouble_0 = true;
              position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
              if ($.eqB(position, length$))
                this.fail$2(position, "Missing expected digit");
              t4 = $.getInterceptor$JSString(t2);
              char$ = t4.charCodeAt$1(t2, position);
            case 5:
              state0 = 0;
              if ($.ltB(char$, 48) || $.gtB(char$, 57))
                this.fail$1(position);
            case 6:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
                      if ($.eqB(position, length$))
                        return t3.call$1(position);
                      char$ = t4.charCodeAt$1(t2, position);
                    case 6:
                      state0 = 0;
                      if (!($.leB(48, char$) && $.leB(char$, 57)))
                        break L1;
                  }
          }
      case 7:
      case 8:
      case 9:
        var t1, position, char$, t2, length$, position0, t3, t4;
        if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 0 && ($.eqB(char$, 101) || $.eqB(char$, 69)))
          switch (state0) {
            case 0:
              t1.isDouble_0 = true;
              position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
              if ($.eqB(position, length$))
                this.fail$2(position, "Missing expected digit");
              t1 = $.getInterceptor$JSString(t2);
              char$ = t1.charCodeAt$1(t2, position);
            case 7:
              state0 = 0;
            case 8:
              if (state0 === 8 || state0 === 0 && ($.eqB(char$, 43) || $.eqB(char$, 45)))
                switch (state0) {
                  case 0:
                    position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
                    if ($.eqB(position, length$))
                      this.fail$2(position, "Missing expected digit");
                    char$ = t1.charCodeAt$1(t2, position);
                  case 8:
                    state0 = 0;
                }
              if ($.ltB(char$, 48) || $.gtB(char$, 57))
                this.fail$2(position, "Missing expected digit");
            case 9:
              L2:
                while (true)
                  switch (state0) {
                    case 0:
                      position = $.getInterceptor$JSNumber(position).operator$add$1(position, 1);
                      if ($.eqB(position, length$))
                        return t3.call$1(position);
                      char$ = t1.charCodeAt$1(t2, position);
                    case 9:
                      state0 = 0;
                      if (!($.leB(48, char$) && $.leB(char$, 57)))
                        break L2;
                  }
          }
        return t3.call$1(position);
    }
  },
  fail$2: function(position, message) {
    var t1, t2, sliceEnd, t3, slice;
    if (typeof position !== "number")
      return this.fail$2$bailout(1, position, message);
    if (typeof message !== "string")
      return this.fail$2$bailout(1, position, message);
    t1 = this.listener;
    t2 = this.source;
    t1.fail$3(t2, position, message);
    sliceEnd = position + 20;
    t1 = $.getInterceptor$JSStringJSArray(t2);
    t3 = t1.get$length(t2);
    if (typeof t3 !== "number")
      return this.fail$2$bailout(2, position, t2, sliceEnd, t3);
    slice = sliceEnd > t3 ? "'" + $.S(t1.substring$1(t2, position)) + "'" : "'" + $.S(t1.substring$2(t2, position, sliceEnd)) + "...'";
    throw $.$$throw($.FormatException$("Unexpected character at " + $.S(position) + ": " + slice));
  },
  fail$2$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        message = env1;
        position = env0;
        break;
      case 2:
        t1 = env3;
        sliceEnd = env2;
        t2 = env1;
        position = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if (message == null)
          message = "Unexpected character";
        t1 = this.listener;
        t2 = this.source;
        t1.fail$3(t2, position, message);
        sliceEnd = $.getInterceptor$JSNumber(position).operator$add$1(position, 20);
        t1 = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
      case 2:
        var message, position, t1, t2, sliceEnd, t4, slice;
        state0 = 0;
        t1 = $.gtB(sliceEnd, t1);
        t4 = $.getInterceptor$JSString(t2);
        slice = t1 ? "'" + $.S(t4.substring$1(t2, position)) + "'" : "'" + $.S(t4.substring$2(t2, position, sliceEnd)) + "...'";
        throw $.$$throw($.FormatException$("Unexpected character at " + $.S(position) + ": " + slice));
    }
  },
  fail$1: function(position) {
    return this.fail$2(position, null);
  }
};

$$.Juggler = {"": "Object;_animatables,_animatablesCount,_elapsedTime",
  add$1: function(animatable) {
    var t1, t3, t4;
    if (animatable == null)
      return;
    t1 = this._animatablesCount;
    if (typeof t1 !== "number")
      return this.add$1$bailout(1, animatable, t1);
    t3 = this._animatables;
    t4 = t3.length;
    if (t1 >= t4)
      t3.push(animatable);
    else {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      t3[t1] = animatable;
    }
    t1 = this._animatablesCount;
    if (typeof t1 !== "number")
      return this.add$1$bailout(2, t1);
    this._animatablesCount = t1 + 1;
  },
  add$1$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t1 = env1;
        animatable = env0;
        break;
      case 2:
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (animatable == null)
          return;
        t1 = this._animatablesCount;
      case 1:
        state0 = 0;
        t1 = $.geB(t1, this._animatables.length);
        t3 = this._animatables;
        if (t1)
          t3.push(animatable);
        else {
          t1 = this._animatablesCount;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          t3[t1] = animatable;
        }
        t1 = this._animatablesCount;
      case 2:
        var t1, animatable, t3;
        state0 = 0;
        this._animatablesCount = $.getInterceptor$JSNumber(t1).operator$add$1(t1, 1);
    }
  },
  remove$1: function(animatable) {
    var i, t1;
    if (animatable == null)
      return;
    i = 0;
    while (true) {
      t1 = this._animatablesCount;
      if (typeof t1 !== "number")
        return this.remove$1$bailout0(1, animatable, t1, i);
      if (!(i < t1))
        break;
      t1 = this._animatables;
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.eqB(t1[i], animatable)) {
        t1 = this._animatables;
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i] = null;
      }
      ++i;
    }
  },
  remove$1$bailout0: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        i = env2;
        t1 = env1;
        animatable = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (animatable == null)
          return;
        i = 0;
      case 1:
        var i, t1, animatable;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this._animatablesCount;
              case 1:
                state0 = 0;
                if (!$.ltB(i, t1))
                  break L0;
                t1 = this._animatables;
                if (i >= t1.length)
                  throw $.ioore(i);
                if ($.eqB(t1[i], animatable)) {
                  t1 = this._animatables;
                  if (i >= t1.length)
                    throw $.ioore(i);
                  t1[i] = null;
                }
                ++i;
            }
    }
  },
  advanceTime$1: function(time) {
    var t1, animatablesCount, i, c, animatable, t2, t3, c0;
    if (typeof time !== "number")
      return this.advanceTime$1$bailout(1, time);
    t1 = this._elapsedTime;
    if (typeof t1 !== "number")
      return this.advanceTime$1$bailout(2, time, t1);
    this._elapsedTime = t1 + time;
    animatablesCount = this._animatablesCount;
    if (animatablesCount !== (animatablesCount | 0))
      return this.advanceTime$1$bailout(3, time, animatablesCount);
    for (i = 0, c = 0; i < animatablesCount; ++i) {
      t1 = this._animatables;
      if (i >= t1.length)
        throw $.ioore(i);
      animatable = t1[i];
      if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
        if (c !== i) {
          t1 = this._animatables;
          if (c >= t1.length)
            throw $.ioore(c);
          t1[c] = animatable;
        }
        ++c;
      }
    }
    t1 = this._animatables;
    t2 = t1.length;
    i = animatablesCount;
    while (true) {
      t3 = this._animatablesCount;
      if (typeof t3 !== "number")
        return this.advanceTime$1$bailout(4, c, t3, i);
      if (!(i < t3))
        break;
      c0 = c + 1;
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t3 = t1[i];
      if (c >= t2)
        throw $.ioore(c);
      t1[c] = t3;
      ++i;
      c = c0;
    }
    for (i = c; i < t3; ++i) {
      if (i >= t2)
        throw $.ioore(i);
      t1[i] = null;
    }
    this._animatablesCount = c;
    return true;
  },
  advanceTime$1$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        time = env0;
        break;
      case 2:
        t1 = env1;
        time = env0;
        break;
      case 3:
        animatablesCount = env1;
        time = env0;
        break;
      case 4:
        i = env2;
        t1 = env1;
        c = env0;
        break;
      case 5:
        t1 = env2;
        c = env1;
        i = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._elapsedTime;
      case 2:
        state0 = 0;
        this._elapsedTime = $.getInterceptor$JSNumber(t1).operator$add$1(t1, time);
        animatablesCount = this._animatablesCount;
      case 3:
        state0 = 0;
        for (i = 0, c = 0; $.ltB(i, animatablesCount); ++i) {
          t1 = this._animatables;
          if (i >= t1.length)
            throw $.ioore(i);
          animatable = t1[i];
          if (!(animatable == null) && animatable.advanceTime$1(time) === true) {
            if (c !== i) {
              t1 = this._animatables;
              if (c >= t1.length)
                throw $.ioore(c);
              t1[c] = animatable;
            }
            ++c;
          }
        }
        i = animatablesCount;
      case 4:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this._animatablesCount;
              case 4:
                state0 = 0;
                if (!$.ltB(i, t1))
                  break L0;
                t1 = this._animatables;
                c0 = c + 1;
                if (i !== (i | 0))
                  throw $.iae(i);
                t2 = t1.length;
                if (i < 0 || i >= t2)
                  throw $.ioore(i);
                t3 = t1[i];
                if (c >= t2)
                  throw $.ioore(c);
                t1[c] = t3;
                ++i;
                c = c0;
            }
        i = c;
      case 5:
        var time, t1, animatablesCount, i, c, animatable, c0, t2, t3;
        L1:
          while (true)
            switch (state0) {
              case 0:
                t1 = this._animatablesCount;
              case 5:
                state0 = 0;
                if (!$.ltB(i, t1))
                  break L1;
                t1 = this._animatables;
                if (i >= t1.length)
                  throw $.ioore(i);
                t1[i] = null;
                ++i;
            }
        this._animatablesCount = c;
        return true;
    }
  },
  Juggler$0: function() {
    this._elapsedTime = 0;
    this._animatables = $.List_List(0);
    this._animatablesCount = 0;
  },
  is$Animatable: true
};

$$.Point = {"": "Object;x=,y=",
  get$length: function() {
    var t1, t2;
    t1 = this.x;
    t1 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, t1);
    t2 = this.y;
    t2 = $.getInterceptor$JSNumber(t2).operator$mul$1(t2, t2);
    return $.sqrt($.getInterceptor$JSNumber(t1).operator$add$1(t1, t2));
  },
  add$1: function(p) {
    var t1, t3, t6;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.add$1$bailout1(1, p, t1);
    t3 = p.get$x();
    if (typeof t3 !== "number")
      return this.add$1$bailout1(2, p, t3, t1);
    t3 = t1 + t3;
    t1 = this.y;
    if (typeof t1 !== "number")
      return this.add$1$bailout1(3, t1, p, t3);
    t6 = p.get$y();
    if (typeof t6 !== "number")
      return this.add$1$bailout1(4, t1, t6, t3);
    return $.Point$(t3, t1 + t6);
  },
  add$1$bailout1: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        t1 = env1;
        p = env0;
        break;
      case 2:
        t1 = env2;
        t3 = env1;
        p = env0;
        break;
      case 3:
        t3 = env2;
        p = env1;
        t1 = env0;
        break;
      case 4:
        t3 = env2;
        t6 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = p.get$x();
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSNumber(t1).operator$add$1(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t6 = p.get$y();
      case 4:
        var t1, p, t3, t6;
        state0 = 0;
        return $.Point$(t3, $.getInterceptor$JSNumber(t1).operator$add$1(t1, t6));
    }
  },
  copyFrom$1: function(p) {
    this.x = p.get$x();
    this.y = p.get$y();
  },
  equals$1: function(p) {
    return $.eqB(this.x, p.x) && $.eqB(this.y, p.y);
  }
};

$$.Rectangle = {"": "Object;x=,y=,width=,height=",
  get$left: function() {
    return this.x;
  },
  get$top: function() {
    return this.y;
  },
  get$right: function() {
    var t1, t2;
    t1 = this.x;
    t2 = this.width;
    return $.getInterceptor$JSNumber(t1).operator$add$1(t1, t2);
  },
  get$bottom: function() {
    var t1, t2;
    t1 = this.y;
    t2 = this.height;
    return $.getInterceptor$JSNumber(t1).operator$add$1(t1, t2);
  },
  contains$2: function(px, py) {
    return $.leB(this.x, px) && $.leB(this.y, py) && $.geB(this.get$right(), px) && $.geB(this.get$bottom(), py);
  },
  equals$1: function(r) {
    return $.eqB(this.x, r.x) && $.eqB(this.y, r.y) && $.eqB(this.width, r.get$width()) && $.eqB(this.height, r.get$height());
  },
  get$isEmpty: function() {
    return $.eqB(this.width, 0) && $.eqB(this.height, 0);
  },
  copyFrom$1: function(r) {
    this.x = r.get$x();
    this.y = r.get$y();
    this.width = r.get$width();
    this.height = r.get$height();
  }
};

$$.Matrix = {"": "Object;_a,_b,_c,_d,_tx,_ty,_det",
  get$a: function() {
    return this._a;
  },
  get$b: function() {
    return this._b;
  },
  get$c: function() {
    return this._c;
  },
  get$d: function() {
    return this._d;
  },
  get$tx: function() {
    return this._tx;
  },
  get$ty: function() {
    return this._ty;
  },
  get$det: function() {
    return this._det;
  },
  transformPoint$1: function(p) {
    var t1, t2, t3, t4;
    t1 = p.x;
    t2 = this._a;
    t2 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, t2);
    t1 = p.y;
    t3 = this._c;
    t3 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, t3);
    t3 = $.getInterceptor$JSNumber(t2).operator$add$1(t2, t3);
    t2 = this._tx;
    t2 = $.getInterceptor$JSNumber(t3).operator$add$1(t3, t2);
    t3 = p.x;
    t1 = this._b;
    t1 = $.getInterceptor$JSNumber(t3).operator$mul$1(t3, t1);
    t3 = p.y;
    t4 = this._d;
    t4 = $.getInterceptor$JSNumber(t3).operator$mul$1(t3, t4);
    t4 = $.getInterceptor$JSNumber(t1).operator$add$1(t1, t4);
    t1 = this._ty;
    return $.Point$(t2, $.getInterceptor$JSNumber(t4).operator$add$1(t4, t1));
  },
  concat$1: function(matrix) {
    var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
    a1 = this._a;
    if (typeof a1 !== "number")
      return this.concat$1$bailout(1, matrix, a1);
    b1 = this._b;
    if (typeof b1 !== "number")
      return this.concat$1$bailout(2, matrix, a1, b1);
    c1 = this._c;
    if (typeof c1 !== "number")
      return this.concat$1$bailout(3, matrix, a1, b1, c1);
    d1 = this._d;
    if (typeof d1 !== "number")
      return this.concat$1$bailout(4, matrix, a1, b1, c1, d1);
    tx1 = this._tx;
    if (typeof tx1 !== "number")
      return this.concat$1$bailout(5, matrix, a1, b1, c1, d1, tx1);
    ty1 = this._ty;
    if (typeof ty1 !== "number")
      return this.concat$1$bailout(6, matrix, a1, b1, c1, d1, tx1, ty1);
    det1 = this._det;
    if (typeof det1 !== "number")
      return this.concat$1$bailout(7, matrix, a1, b1, c1, d1, tx1, ty1, det1);
    a2 = matrix.get$a();
    if (typeof a2 !== "number")
      return this.concat$1$bailout(8, matrix, a1, b1, c1, d1, tx1, ty1, det1, a2);
    b2 = matrix.get$b();
    if (typeof b2 !== "number")
      return this.concat$1$bailout(9, matrix, a1, b1, c1, d1, tx1, ty1, det1, b2, a2);
    c2 = matrix.get$c();
    if (typeof c2 !== "number")
      return this.concat$1$bailout(10, matrix, a1, b1, c1, d1, tx1, ty1, det1, b2, c2, a2);
    d2 = matrix.get$d();
    if (typeof d2 !== "number")
      return this.concat$1$bailout(11, matrix, a1, b1, c1, d1, tx1, ty1, det1, b2, c2, d2, a2);
    tx2 = matrix.get$tx();
    if (typeof tx2 !== "number")
      return this.concat$1$bailout(12, matrix, a1, b1, c1, d1, tx1, ty1, det1, b2, c2, d2, tx2, a2);
    ty2 = matrix.get$ty();
    if (typeof ty2 !== "number")
      return this.concat$1$bailout(13, matrix, a1, b1, c1, d1, tx1, ty1, det1, b2, c2, d2, tx2, ty2, a2);
    det2 = matrix.get$det();
    if (typeof det2 !== "number")
      return this.concat$1$bailout(14, a1, b1, c1, d1, tx1, ty1, det1, b2, c2, d2, tx2, ty2, det2, a2);
    this._a = a1 * a2 + b1 * c2;
    this._b = a1 * b2 + b1 * d2;
    this._c = c1 * a2 + d1 * c2;
    this._d = c1 * b2 + d1 * d2;
    this._tx = tx1 * a2 + ty1 * c2 + tx2;
    this._ty = tx1 * b2 + ty1 * d2 + ty2;
    this._det = det1 * det2;
  },
  concat$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
    switch (state0) {
      case 1:
        a1 = env1;
        matrix = env0;
        break;
      case 2:
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 3:
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 4:
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 5:
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 6:
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 7:
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 8:
        a2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 9:
        a2 = env9;
        b2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 10:
        a2 = env10;
        c2 = env9;
        b2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 11:
        a2 = env11;
        d2 = env10;
        c2 = env9;
        b2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 12:
        a2 = env12;
        tx2 = env11;
        d2 = env10;
        c2 = env9;
        b2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 13:
        a2 = env13;
        ty2 = env12;
        tx2 = env11;
        d2 = env10;
        c2 = env9;
        b2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        matrix = env0;
        break;
      case 14:
        a2 = env13;
        det2 = env12;
        ty2 = env11;
        tx2 = env10;
        d2 = env9;
        c2 = env8;
        b2 = env7;
        det1 = env6;
        ty1 = env5;
        tx1 = env4;
        d1 = env3;
        c1 = env2;
        b1 = env1;
        a1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        a1 = this._a;
      case 1:
        state0 = 0;
        b1 = this._b;
      case 2:
        state0 = 0;
        c1 = this._c;
      case 3:
        state0 = 0;
        d1 = this._d;
      case 4:
        state0 = 0;
        tx1 = this._tx;
      case 5:
        state0 = 0;
        ty1 = this._ty;
      case 6:
        state0 = 0;
        det1 = this._det;
      case 7:
        state0 = 0;
        a2 = matrix.get$a();
      case 8:
        state0 = 0;
        b2 = matrix.get$b();
      case 9:
        state0 = 0;
        c2 = matrix.get$c();
      case 10:
        state0 = 0;
        d2 = matrix.get$d();
      case 11:
        state0 = 0;
        tx2 = matrix.get$tx();
      case 12:
        state0 = 0;
        ty2 = matrix.get$ty();
      case 13:
        state0 = 0;
        det2 = matrix.get$det();
      case 14:
        var a1, matrix, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26;
        state0 = 0;
        t15 = $.getInterceptor$JSNumber(a1);
        t16 = t15.operator$mul$1(a1, a2);
        t17 = $.getInterceptor$JSNumber(b1);
        t18 = t17.operator$mul$1(b1, c2);
        this._a = $.getInterceptor$JSNumber(t16).operator$add$1(t16, t18);
        t15 = t15.operator$mul$1(a1, b2);
        t17 = t17.operator$mul$1(b1, d2);
        this._b = $.getInterceptor$JSNumber(t15).operator$add$1(t15, t17);
        t19 = $.getInterceptor$JSNumber(c1);
        t20 = t19.operator$mul$1(c1, a2);
        t21 = $.getInterceptor$JSNumber(d1);
        t22 = t21.operator$mul$1(d1, c2);
        this._c = $.getInterceptor$JSNumber(t20).operator$add$1(t20, t22);
        t19 = t19.operator$mul$1(c1, b2);
        t21 = t21.operator$mul$1(d1, d2);
        this._d = $.getInterceptor$JSNumber(t19).operator$add$1(t19, t21);
        t23 = $.getInterceptor$JSNumber(tx1);
        t24 = t23.operator$mul$1(tx1, a2);
        t25 = $.getInterceptor$JSNumber(ty1);
        t26 = t25.operator$mul$1(ty1, c2);
        t26 = $.getInterceptor$JSNumber(t24).operator$add$1(t24, t26);
        this._tx = $.getInterceptor$JSNumber(t26).operator$add$1(t26, tx2);
        t23 = t23.operator$mul$1(tx1, b2);
        t25 = t25.operator$mul$1(ty1, d2);
        t25 = $.getInterceptor$JSNumber(t23).operator$add$1(t23, t25);
        this._ty = $.getInterceptor$JSNumber(t25).operator$add$1(t25, ty2);
        this._det = $.getInterceptor$JSNumber(det1).operator$mul$1(det1, det2);
    }
  },
  identity$0: function() {
    this._a = 1;
    this._b = 0;
    this._c = 0;
    this._d = 1;
    this._tx = 0;
    this._ty = 0;
    this._det = 1;
  },
  invert$0: function() {
    var a, b, c, d, tx, ty, det, t1, t2, t3, t4, t5;
    a = this._a;
    b = this._b;
    c = this._c;
    d = this._d;
    tx = this._tx;
    ty = this._ty;
    det = this._det;
    this._a = $.getInterceptor$JSNumber(d).operator$div$1(d, det);
    t1 = $.getInterceptor$JSNumber(b).operator$div$1(b, det);
    this._b = $.getInterceptor$JSNumber(t1).operator$negate$0(t1);
    t2 = $.getInterceptor$JSNumber(c).operator$div$1(c, det);
    this._c = $.getInterceptor$JSNumber(t2).operator$negate$0(t2);
    this._d = $.getInterceptor$JSNumber(a).operator$div$1(a, det);
    t3 = this._a;
    t3 = $.getInterceptor$JSNumber(t3).operator$mul$1(t3, tx);
    t4 = this._c;
    t4 = $.getInterceptor$JSNumber(t4).operator$mul$1(t4, ty);
    t4 = $.getInterceptor$JSNumber(t3).operator$add$1(t3, t4);
    this._tx = $.getInterceptor$JSNumber(t4).operator$negate$0(t4);
    t3 = this._b;
    t3 = $.getInterceptor$JSNumber(t3).operator$mul$1(t3, tx);
    t5 = this._d;
    t5 = $.getInterceptor$JSNumber(t5).operator$mul$1(t5, ty);
    t5 = $.getInterceptor$JSNumber(t3).operator$add$1(t3, t5);
    this._ty = $.getInterceptor$JSNumber(t5).operator$negate$0(t5);
    if (typeof det !== "number")
      throw $.iae(det);
    this._det = 1 / det;
  },
  setTo$6: function(a, b, c, d, tx, ty) {
    var t1, t2;
    this._a = a;
    this._b = b;
    this._c = c;
    this._d = d;
    this._tx = tx;
    this._ty = ty;
    t1 = $.getInterceptor$JSNumber(a).operator$mul$1(a, d);
    t2 = $.getInterceptor$JSNumber(b).operator$mul$1(b, c);
    this._det = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, t2);
  },
  copyFrom$1: function(matrix) {
    this._a = matrix.get$a();
    this._b = matrix.get$b();
    this._c = matrix.get$c();
    this._d = matrix.get$d();
    this._tx = matrix.get$tx();
    this._ty = matrix.get$ty();
    this._det = matrix.get$det();
  },
  copyFromAndConcat$2: function(copyMatrix, concatMatrix) {
    var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
    a1 = copyMatrix.get$a();
    if (typeof a1 !== "number")
      return this.copyFromAndConcat$2$bailout(1, copyMatrix, concatMatrix, a1);
    b1 = copyMatrix.get$b();
    if (typeof b1 !== "number")
      return this.copyFromAndConcat$2$bailout(2, copyMatrix, concatMatrix, a1, b1);
    c1 = copyMatrix.get$c();
    if (typeof c1 !== "number")
      return this.copyFromAndConcat$2$bailout(3, copyMatrix, concatMatrix, a1, b1, c1);
    d1 = copyMatrix.get$d();
    if (typeof d1 !== "number")
      return this.copyFromAndConcat$2$bailout(4, copyMatrix, concatMatrix, a1, b1, c1, d1);
    tx1 = copyMatrix.get$tx();
    if (typeof tx1 !== "number")
      return this.copyFromAndConcat$2$bailout(5, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1);
    ty1 = copyMatrix.get$ty();
    if (typeof ty1 !== "number")
      return this.copyFromAndConcat$2$bailout(6, copyMatrix, concatMatrix, a1, b1, c1, d1, tx1, ty1);
    det1 = copyMatrix.get$det();
    if (typeof det1 !== "number")
      return this.copyFromAndConcat$2$bailout(7, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1);
    a2 = concatMatrix.get$a();
    if (typeof a2 !== "number")
      return this.copyFromAndConcat$2$bailout(8, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2);
    b2 = concatMatrix.get$b();
    if (typeof b2 !== "number")
      return this.copyFromAndConcat$2$bailout(9, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2);
    c2 = concatMatrix.get$c();
    if (typeof c2 !== "number")
      return this.copyFromAndConcat$2$bailout(10, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2);
    d2 = concatMatrix.get$d();
    if (typeof d2 !== "number")
      return this.copyFromAndConcat$2$bailout(11, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2);
    tx2 = concatMatrix.get$tx();
    if (typeof tx2 !== "number")
      return this.copyFromAndConcat$2$bailout(12, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2);
    ty2 = concatMatrix.get$ty();
    if (typeof ty2 !== "number")
      return this.copyFromAndConcat$2$bailout(13, concatMatrix, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2);
    det2 = concatMatrix.get$det();
    if (typeof det2 !== "number")
      return this.copyFromAndConcat$2$bailout(14, a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2);
    this._a = a1 * a2 + b1 * c2;
    this._b = a1 * b2 + b1 * d2;
    this._c = c1 * a2 + d1 * c2;
    this._d = c1 * b2 + d1 * d2;
    this._tx = tx1 * a2 + ty1 * c2 + tx2;
    this._ty = tx1 * b2 + ty1 * d2 + ty2;
    this._det = det1 * det2;
  },
  copyFromAndConcat$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
    switch (state0) {
      case 1:
        a1 = env2;
        concatMatrix = env1;
        copyMatrix = env0;
        break;
      case 2:
        b1 = env3;
        a1 = env2;
        concatMatrix = env1;
        copyMatrix = env0;
        break;
      case 3:
        c1 = env4;
        b1 = env3;
        a1 = env2;
        concatMatrix = env1;
        copyMatrix = env0;
        break;
      case 4:
        d1 = env5;
        c1 = env4;
        b1 = env3;
        a1 = env2;
        concatMatrix = env1;
        copyMatrix = env0;
        break;
      case 5:
        tx1 = env6;
        d1 = env5;
        c1 = env4;
        b1 = env3;
        a1 = env2;
        concatMatrix = env1;
        copyMatrix = env0;
        break;
      case 6:
        ty1 = env7;
        tx1 = env6;
        d1 = env5;
        c1 = env4;
        b1 = env3;
        a1 = env2;
        concatMatrix = env1;
        copyMatrix = env0;
        break;
      case 7:
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        concatMatrix = env0;
        break;
      case 8:
        a2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        concatMatrix = env0;
        break;
      case 9:
        b2 = env9;
        a2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        concatMatrix = env0;
        break;
      case 10:
        c2 = env10;
        b2 = env9;
        a2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        concatMatrix = env0;
        break;
      case 11:
        d2 = env11;
        c2 = env10;
        b2 = env9;
        a2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        concatMatrix = env0;
        break;
      case 12:
        tx2 = env12;
        d2 = env11;
        c2 = env10;
        b2 = env9;
        a2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        concatMatrix = env0;
        break;
      case 13:
        ty2 = env13;
        tx2 = env12;
        d2 = env11;
        c2 = env10;
        b2 = env9;
        a2 = env8;
        det1 = env7;
        ty1 = env6;
        tx1 = env5;
        d1 = env4;
        c1 = env3;
        b1 = env2;
        a1 = env1;
        concatMatrix = env0;
        break;
      case 14:
        det2 = env13;
        ty2 = env12;
        tx2 = env11;
        d2 = env10;
        c2 = env9;
        b2 = env8;
        a2 = env7;
        det1 = env6;
        ty1 = env5;
        tx1 = env4;
        d1 = env3;
        c1 = env2;
        b1 = env1;
        a1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        a1 = copyMatrix.get$a();
      case 1:
        state0 = 0;
        b1 = copyMatrix.get$b();
      case 2:
        state0 = 0;
        c1 = copyMatrix.get$c();
      case 3:
        state0 = 0;
        d1 = copyMatrix.get$d();
      case 4:
        state0 = 0;
        tx1 = copyMatrix.get$tx();
      case 5:
        state0 = 0;
        ty1 = copyMatrix.get$ty();
      case 6:
        state0 = 0;
        det1 = copyMatrix.get$det();
      case 7:
        state0 = 0;
        a2 = concatMatrix.get$a();
      case 8:
        state0 = 0;
        b2 = concatMatrix.get$b();
      case 9:
        state0 = 0;
        c2 = concatMatrix.get$c();
      case 10:
        state0 = 0;
        d2 = concatMatrix.get$d();
      case 11:
        state0 = 0;
        tx2 = concatMatrix.get$tx();
      case 12:
        state0 = 0;
        ty2 = concatMatrix.get$ty();
      case 13:
        state0 = 0;
        det2 = concatMatrix.get$det();
      case 14:
        var a1, concatMatrix, copyMatrix, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26;
        state0 = 0;
        t15 = $.getInterceptor$JSNumber(a1);
        t16 = t15.operator$mul$1(a1, a2);
        t17 = $.getInterceptor$JSNumber(b1);
        t18 = t17.operator$mul$1(b1, c2);
        this._a = $.getInterceptor$JSNumber(t16).operator$add$1(t16, t18);
        t15 = t15.operator$mul$1(a1, b2);
        t17 = t17.operator$mul$1(b1, d2);
        this._b = $.getInterceptor$JSNumber(t15).operator$add$1(t15, t17);
        t19 = $.getInterceptor$JSNumber(c1);
        t20 = t19.operator$mul$1(c1, a2);
        t21 = $.getInterceptor$JSNumber(d1);
        t22 = t21.operator$mul$1(d1, c2);
        this._c = $.getInterceptor$JSNumber(t20).operator$add$1(t20, t22);
        t19 = t19.operator$mul$1(c1, b2);
        t21 = t21.operator$mul$1(d1, d2);
        this._d = $.getInterceptor$JSNumber(t19).operator$add$1(t19, t21);
        t23 = $.getInterceptor$JSNumber(tx1);
        t24 = t23.operator$mul$1(tx1, a2);
        t25 = $.getInterceptor$JSNumber(ty1);
        t26 = t25.operator$mul$1(ty1, c2);
        t26 = $.getInterceptor$JSNumber(t24).operator$add$1(t24, t26);
        this._tx = $.getInterceptor$JSNumber(t26).operator$add$1(t26, tx2);
        t23 = t23.operator$mul$1(tx1, b2);
        t25 = t25.operator$mul$1(ty1, d2);
        t25 = $.getInterceptor$JSNumber(t23).operator$add$1(t23, t25);
        this._ty = $.getInterceptor$JSNumber(t25).operator$add$1(t25, ty2);
        this._det = $.getInterceptor$JSNumber(det1).operator$mul$1(det1, det2);
    }
  }
};

$$.RenderLoop = {"": "Object;_juggler,_stages,_renderTime,_enterFrameIndex,_enterFrameEvent",
  get$juggler: function() {
    return this._juggler;
  },
  _onAnimationFrame$1: function(currentTime) {
    var t1, deltaTime, deltaTimeSec, i;
    if (typeof currentTime !== "number")
      return this._onAnimationFrame$1$bailout(1, currentTime);
    window.requestAnimationFrame$1(this.get$_onAnimationFrame());
    t1 = this._renderTime;
    if (typeof t1 !== "number")
      return this._onAnimationFrame$1$bailout(2, currentTime, t1);
    if ($.CONSTANT7.get$isNaN(t1) === true)
      this._renderTime = currentTime;
    t1 = this._renderTime;
    if (typeof t1 !== "number")
      return this._onAnimationFrame$1$bailout(3, currentTime, t1);
    if (t1 > currentTime)
      this._renderTime = currentTime;
    t1 = this._renderTime;
    if (typeof t1 !== "number")
      return this._onAnimationFrame$1$bailout(4, currentTime, t1);
    deltaTime = currentTime - t1;
    deltaTimeSec = deltaTime / 1000;
    if (deltaTime >= 1) {
      this._renderTime = currentTime;
      this._enterFrameEvent.set$_passedTime(deltaTimeSec);
      this._enterFrameIndex.dispatchEvent$1(this._enterFrameEvent);
      this._juggler.advanceTime$1(deltaTimeSec);
      i = 0;
      while (true) {
        t1 = this._stages;
        t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
        if (typeof t1 !== "number")
          return this._onAnimationFrame$1$bailout(5, i, t1);
        if (!(i < t1))
          break;
        t1 = this._stages;
        if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
          return this._onAnimationFrame$1$bailout(6, t1, i);
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i].materialize$0();
        ++i;
      }
    }
  },
  _onAnimationFrame$1$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        currentTime = env0;
        break;
      case 2:
        t1 = env1;
        currentTime = env0;
        break;
      case 3:
        t1 = env1;
        currentTime = env0;
        break;
      case 4:
        t1 = env1;
        currentTime = env0;
        break;
      case 5:
        t1 = env1;
        i = env0;
        break;
      case 6:
        i = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        window.requestAnimationFrame$1(this.get$_onAnimationFrame());
        t1 = this._renderTime;
      case 2:
        state0 = 0;
        if ($.getInterceptor$JSNumber(t1).get$isNaN(t1) === true)
          this._renderTime = currentTime;
        t1 = this._renderTime;
      case 3:
        state0 = 0;
        if ($.gtB(t1, currentTime))
          this._renderTime = currentTime;
        t1 = this._renderTime;
      case 4:
        state0 = 0;
        deltaTime = $.getInterceptor$JSNumber(currentTime).operator$sub$1(currentTime, t1);
        deltaTimeSec = $.getInterceptor$JSNumber(deltaTime).operator$div$1(deltaTime, 1000);
      default:
        var currentTime, t1, deltaTime, deltaTimeSec, i;
        if (state0 === 6 || state0 === 5 || state0 === 0 && $.geB(deltaTime, 1))
          switch (state0) {
            case 0:
              this._renderTime = currentTime;
              this._enterFrameEvent.set$_passedTime(deltaTimeSec);
              this._enterFrameIndex.dispatchEvent$1(this._enterFrameEvent);
              this._juggler.advanceTime$1(deltaTimeSec);
              i = 0;
            default:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      t1 = this._stages;
                      t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
                    case 5:
                      state0 = 0;
                      if (!$.ltB(i, t1))
                        break L0;
                      t1 = this._stages;
                    case 6:
                      state0 = 0;
                      $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i).materialize$0();
                      ++i;
                  }
          }
    }
  },
  get$_onAnimationFrame: function() {
    return new $.BoundClosure(this, "_onAnimationFrame$1");
  },
  addStage$1: function(stage) {
    var t1 = this._stages;
    $.getInterceptor$JSArray(t1).add$1(t1, stage);
  },
  RenderLoop$0: function() {
    this._juggler = $.Juggler$();
    this._stages = $.List_List(0);
    this._renderTime = (0/0);
    this._enterFrameIndex = $.get$_EventListenerListIndex_enterFrame();
    this._enterFrameEvent = $.EnterFrameEvent$(0);
    $.window().requestAnimationFrame$1(this.get$_onAnimationFrame());
  }
};

$$.RenderState = {"": "Object;_context,_matrices,_alphas,_depth",
  get$context: function() {
    return this._context;
  },
  reset$0: function() {
    var t1, m, a;
    this._depth = 0;
    t1 = this._matrices;
    if (0 >= t1.length)
      throw $.ioore(0);
    m = t1[0];
    t1 = this._alphas;
    if (0 >= t1.length)
      throw $.ioore(0);
    a = t1[0];
    this._context.setTransform$6(m.get$a(), m.get$b(), m.get$c(), m.get$d(), m.get$tx(), m.get$ty());
    this._context.set$globalAlpha(a);
    t1 = this._context;
    t1.clearRect$4(0, 0, t1.get$canvas().get$width(), this._context.get$canvas().get$height());
  },
  renderDisplayObject$1: function(displayObject) {
    var d1, d2, t1, t2, m1, m2, t3, a1, t5, a2;
    d1 = this._depth;
    d2 = d1 + 1;
    t1 = this._matrices;
    t2 = t1.length;
    if (d1 < 0 || d1 >= t2)
      throw $.ioore(d1);
    m1 = t1[d1];
    if (d2 < 0 || d2 >= t2)
      throw $.ioore(d2);
    m2 = t1[d2];
    t1 = this._alphas;
    t3 = t1.length;
    if (d1 >= t3)
      throw $.ioore(d1);
    a1 = t1[d1];
    if (typeof a1 !== "number")
      return this.renderDisplayObject$1$bailout(1, displayObject, m2, t1, a1, t3, d1, d2, m1);
    t5 = displayObject.get$_alpha();
    if (typeof t5 !== "number")
      return this.renderDisplayObject$1$bailout(2, displayObject, m2, t1, t5, t3, a1, d1, d2, m1);
    a2 = t5 * a1;
    if (d2 >= t3)
      throw $.ioore(d2);
    t1[d2] = a2;
    m2.copyFromAndConcat$2(displayObject.get$_transformationMatrix(), m1);
    this._context.setTransform$6(m2.get$a(), m2.get$b(), m2.get$c(), m2.get$d(), m2.get$tx(), m2.get$ty());
    this._context.set$globalAlpha(a2);
    this._depth = d2;
    if (displayObject.get$mask() == null)
      displayObject.render$1(this);
    else {
      this._context.save$0();
      displayObject.get$mask().render$1(this);
      displayObject.render$1(this);
      this._context.restore$0();
    }
    this._depth = d1;
  },
  renderDisplayObject$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
    switch (state0) {
      case 1:
        m1 = env7;
        d2 = env6;
        d1 = env5;
        t3 = env4;
        a1 = env3;
        t1 = env2;
        m2 = env1;
        displayObject = env0;
        break;
      case 2:
        m1 = env8;
        d2 = env7;
        d1 = env6;
        a1 = env5;
        t3 = env4;
        t5 = env3;
        t1 = env2;
        m2 = env1;
        displayObject = env0;
        break;
    }
    switch (state0) {
      case 0:
        d1 = this._depth;
        d2 = d1 + 1;
        t1 = this._matrices;
        t2 = t1.length;
        if (d1 < 0 || d1 >= t2)
          throw $.ioore(d1);
        m1 = t1[d1];
        if (d2 < 0 || d2 >= t2)
          throw $.ioore(d2);
        m2 = t1[d2];
        t1 = this._alphas;
        t3 = t1.length;
        if (d1 >= t3)
          throw $.ioore(d1);
        a1 = t1[d1];
      case 1:
        state0 = 0;
        t5 = displayObject.get$_alpha();
      case 2:
        var d1, d2, t1, t2, m1, m2, t3, a1, displayObject, t5, a2;
        state0 = 0;
        a2 = $.getInterceptor$JSNumber(t5).operator$mul$1(t5, a1);
        if (d2 >= t3)
          throw $.ioore(d2);
        t1[d2] = a2;
        m2.copyFromAndConcat$2(displayObject.get$_transformationMatrix(), m1);
        this._context.setTransform$6(m2.get$a(), m2.get$b(), m2.get$c(), m2.get$d(), m2.get$tx(), m2.get$ty());
        this._context.set$globalAlpha(a2);
        this._depth = d2;
        if (displayObject.get$mask() == null)
          displayObject.render$1(this);
        else {
          this._context.save$0();
          displayObject.get$mask().render$1(this);
          displayObject.render$1(this);
          this._context.restore$0();
        }
        this._depth = d1;
    }
  },
  RenderState$fromCanvasRenderingContext2D$2: function(context, matrix) {
    var i, t1, t2, m, a;
    this._context = context;
    this._matrices = $.List_List$fixedLength(100, null);
    this._alphas = $.List_List$fixedLength(100, null);
    for (i = 0; i < 100; ++i) {
      t1 = this._matrices;
      t2 = $.Matrix$fromIdentity();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
      t2 = this._alphas;
      if (i >= t2.length)
        throw $.ioore(i);
      t2[i] = 1;
    }
    this._depth = 0;
    if (!(matrix == null)) {
      t1 = this._matrices;
      if (0 >= t1.length)
        throw $.ioore(0);
      t1[0].copyFrom$1(matrix);
    }
    t1 = this._matrices;
    if (0 >= t1.length)
      throw $.ioore(0);
    m = t1[0];
    t1 = this._alphas;
    if (0 >= t1.length)
      throw $.ioore(0);
    a = t1[0];
    this._context.setTransform$6(m.get$a(), m.get$b(), m.get$c(), m.get$d(), m.get$tx(), m.get$ty());
    this._context.set$globalAlpha(a);
  }
};

$$.Event = {"": "Object;_type,_bubbles,_eventPhase<,_liblib2$_target<,_currentTarget<,_stopsPropagation<,_stopsImmediatePropagation<",
  _reset$2: function(type, bubbles) {
    this._type = type;
    this._bubbles = bubbles;
    this._eventPhase = 2;
    this._liblib2$_target = null;
    this._currentTarget = null;
    this._stopsPropagation = false;
    this._stopsImmediatePropagation = false;
  },
  get$stopsPropagation: function() {
    return this._stopsPropagation;
  },
  get$stopsImmediatePropagation: function() {
    return this._stopsImmediatePropagation;
  },
  get$type: function() {
    return this._type;
  },
  get$eventPhase: function() {
    return this._eventPhase;
  },
  get$bubbles: function() {
    return this._bubbles;
  },
  get$captures: function() {
    return true;
  },
  get$target: function() {
    return this._liblib2$_target;
  },
  Event$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.EventDispatcher = {"": "Object;_eventListenerLists",
  hasEventListener$1: function(type) {
    var t1 = this._eventListenerLists;
    return !(t1 == null) && t1.containsKey$1(type) === true;
  },
  addEventListener$3: function(type, eventListener, useCapture) {
    this._getEventListenerList$1(type).add$2(eventListener, useCapture);
  },
  addEventListener$2: function(type, eventListener) {
    return this.addEventListener$3(type, eventListener, false);
  },
  dispatchEvent$1: function(event$) {
    this._dispatchEventInternal$4(event$, this, this, 2);
  },
  _dispatchEventInternal$4: function(event$, target, currentTarget, eventPhase) {
    var t1, t2, eventListenerList;
    t1 = this._eventListenerLists;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this._dispatchEventInternal$4$bailout(1, event$, target, currentTarget, eventPhase, t1);
    t2 = event$.get$type();
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    eventListenerList = t1[t2];
    if (!(eventListenerList == null)) {
      event$.set$_liblib2$_target(target);
      event$.set$_currentTarget(currentTarget);
      event$.set$_eventPhase(eventPhase);
      event$.set$_stopsPropagation(false);
      event$.set$_stopsImmediatePropagation(false);
      eventListenerList.dispatchEvent$1(event$);
    }
  },
  _dispatchEventInternal$4$bailout: function(state0, event$, target, currentTarget, eventPhase, t1) {
    var t2, eventListenerList;
    if (!(t1 == null)) {
      t2 = event$.get$type();
      eventListenerList = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, t2);
      if (!(eventListenerList == null)) {
        event$.set$_liblib2$_target(target);
        event$.set$_currentTarget(currentTarget);
        event$.set$_eventPhase(eventPhase);
        event$.set$_stopsPropagation(false);
        event$.set$_stopsImmediatePropagation(false);
        eventListenerList.dispatchEvent$1(event$);
      }
    }
  },
  _getEventListenerList$1: function(type) {
    var t1, eventListenerList;
    if (this._eventListenerLists == null)
      this._eventListenerLists = $.Map_Map();
    t1 = this._eventListenerLists;
    eventListenerList = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, type);
    if (eventListenerList == null) {
      t1 = this._eventListenerLists;
      eventListenerList = $.EventListenerList$(this, type);
      $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, type, eventListenerList);
    }
    return eventListenerList;
  }
};

$$._EventListenerUseCapture = {"": "Object;eventListener>,useCapture>",
  eventListener$1: function(arg0) {
    return this.eventListener.call$1(arg0);
  }
};

$$.EventListenerList = {"": "Object;_eventDispatcher,_liblib2$_eventType,_liblib2$_list",
  get$eventDispatcher: function() {
    return this._eventDispatcher;
  },
  add$2: function(eventListener, useCapture) {
    var i, t1, t2;
    for (i = 0; t1 = this._liblib2$_list, t2 = t1.length, i < t2; ++i) {
      if ($.eqB(t1[i].get$eventListener(), eventListener)) {
        t1 = this._liblib2$_list;
        if (i >= t1.length)
          throw $.ioore(i);
        t2 = $.eqB(t1[i].get$useCapture(), useCapture);
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        return;
    }
    t1 = this._liblib2$_eventType;
    if (typeof t1 !== "string")
      return this.add$2$bailout(1, eventListener, useCapture, t1);
    if (t1 === "enterFrame" && t2 === 0) {
      t1 = $.get$_EventListenerListIndex_enterFrame();
      $.getInterceptor$JSArray(t1).add$1(t1, this);
    }
    $.CONSTANT3.add$1(this._liblib2$_list, $._EventListenerUseCapture$(eventListener, useCapture));
  },
  add$2$bailout: function(state0, eventListener, useCapture, t1) {
    if ($.eqB(t1, "enterFrame") && this._liblib2$_list.length === 0) {
      t1 = $.get$_EventListenerListIndex_enterFrame();
      $.getInterceptor$JSArray(t1).add$1(t1, this);
    }
    $.CONSTANT3.add$1(this._liblib2$_list, $._EventListenerUseCapture$(eventListener, useCapture));
  },
  add$1: function(eventListener) {
    return this.add$2(eventListener, false);
  },
  remove$2: function(eventListener, useCapture) {
    var i, t1, t2;
    for (i = 0; t1 = this._liblib2$_list, i < t1.length; ++i) {
      if ($.eqB(t1[i].get$eventListener(), eventListener)) {
        t1 = this._liblib2$_list;
        if (i >= t1.length)
          throw $.ioore(i);
        t2 = $.eqB(t1[i].get$useCapture(), useCapture);
        t1 = t2;
      } else
        t1 = false;
      if (t1) {
        this._liblib2$_list = $.List_List$from(this._liblib2$_list);
        $.CONSTANT3.removeAt$1(this._liblib2$_list, i);
        t1 = this._liblib2$_eventType;
        if (typeof t1 !== "string")
          return this.remove$2$bailout(1, eventListener, useCapture, t1);
        if (t1 === "enterFrame" && this._liblib2$_list.length === 0) {
          t1 = $.get$_EventListenerListIndex_enterFrame();
          $.getInterceptor$JSArray(t1).remove$1(t1, this);
        }
        break;
      }
    }
  },
  remove$2$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        t1 = env2;
        useCapture = env1;
        eventListener = env0;
        break;
    }
    switch (state0) {
      case 0:
        i = 0;
      case 1:
        var i, t1, t2, useCapture, eventListener;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this._liblib2$_list;
                if (!(i < t1.length))
                  break L0;
                if ($.eqB(t1[i].get$eventListener(), eventListener)) {
                  t1 = this._liblib2$_list;
                  if (i >= t1.length)
                    throw $.ioore(i);
                  t2 = $.eqB(t1[i].get$useCapture(), useCapture);
                  t1 = t2;
                } else
                  t1 = false;
              case 1:
                if (state0 === 1 || state0 === 0 && t1)
                  switch (state0) {
                    case 0:
                      this._liblib2$_list = $.List_List$from(this._liblib2$_list);
                      $.CONSTANT3.removeAt$1(this._liblib2$_list, i);
                      t1 = this._liblib2$_eventType;
                    case 1:
                      state0 = 0;
                      if ($.eqB(t1, "enterFrame") && this._liblib2$_list.length === 0) {
                        t1 = $.get$_EventListenerListIndex_enterFrame();
                        $.getInterceptor$JSArray(t1).remove$1(t1, this);
                      }
                      break L0;
                  }
                ++i;
            }
    }
  },
  remove$1: function(eventListener) {
    return this.remove$2(eventListener, false);
  },
  operator$add$1: function(eventListener) {
    this.add$2(eventListener, false);
  },
  operator$sub$1: function(eventListener) {
    this.remove$2(eventListener, false);
  },
  dispatchEvent$1: function(event$) {
    var i, t1, t2;
    for (i = 0; i < this._liblib2$_list.length; ++i) {
      if ($.eqB(event$.get$eventPhase(), 1)) {
        t1 = this._liblib2$_list;
        if (i >= t1.length)
          throw $.ioore(i);
        t2 = t1[i].get$useCapture() === true;
        t1 = t2;
      } else
        t1 = true;
      if (t1)
        if ($.eqB(event$.get$stopsImmediatePropagation(), false)) {
          t1 = this._liblib2$_list;
          if (i >= t1.length)
            throw $.ioore(i);
          t1[i].eventListener$1(event$);
        }
    }
  },
  EventListenerList$2: function(eventDispatcher, eventType) {
    this._eventDispatcher = eventDispatcher;
    this._liblib2$_eventType = eventType;
    this._liblib2$_list = $.List_List(0);
  }
};

$$._EventListenerListIndex = {"": "Object;_lists",
  add$1: function(list) {
    this._lists.push(list);
  },
  remove$1: function(list) {
    var index, t1;
    index = $.CONSTANT3.indexOf$1(this._lists, list);
    if (typeof index !== "number")
      return this.remove$1$bailout1(1, index);
    if (!(index === -1)) {
      t1 = this._lists;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t1.length)
        throw $.ioore(index);
      t1[index] = null;
    }
  },
  remove$1$bailout1: function(state0, index) {
    var t1;
    if (!$.eqB(index, -1)) {
      t1 = this._lists;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t1.length)
        throw $.ioore(index);
      t1[index] = null;
    }
  },
  dispatchEvent$1: function(event$) {
    var listsLength, c, i, t1, eventListenerList, t2, c0, t3;
    listsLength = this._lists.length;
    for (c = 0, i = 0; i < listsLength; ++i) {
      t1 = this._lists;
      if (i >= t1.length)
        throw $.ioore(i);
      eventListenerList = t1[i];
      if (!(eventListenerList == null)) {
        event$.set$_liblib2$_target(eventListenerList.get$eventDispatcher());
        event$.set$_currentTarget(eventListenerList.get$eventDispatcher());
        event$.set$_eventPhase(2);
        eventListenerList.dispatchEvent$1(event$);
        if (c !== i) {
          t1 = this._lists;
          if (c >= t1.length)
            throw $.ioore(c);
          t1[c] = eventListenerList;
        }
        ++c;
      }
    }
    for (t1 = this._lists, t2 = t1.length, i = listsLength; i < t2; ++i, c = c0) {
      c0 = c + 1;
      t3 = t1[i];
      if (c >= t2)
        throw $.ioore(c);
      t1[c] = t3;
    }
    $.CONSTANT3.set$length(t1, c);
  },
  _EventListenerListIndex$0: function() {
    this._lists = $.List_List(0);
  }
};

$$.EnterFrameEvent = {"": "Event;_passedTime<,_type,_bubbles,_eventPhase,_liblib2$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  get$captures: function() {
    return false;
  },
  EnterFrameEvent$1: function(passedTime) {
    this._passedTime = passedTime;
  }
};

$$.MouseEvent = {"": "Event;_localX,_localY,_stageX,_stageY,_buttonDown<,_altKey<,_controlKey,_ctrlKey<,_shiftKey<,_clickCount<,_deltaX,_deltaY,_type,_bubbles,_eventPhase,_liblib2$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._localY = 0;
    this._localX = 0;
    this._stageY = 0;
    this._stageX = 0;
    this._buttonDown = false;
    this._altKey = false;
    this._controlKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._clickCount = 0;
    this._deltaX = 0;
    this._deltaY = 0;
  },
  set$_localPoint: function(point) {
    this._localX = point.get$x();
    this._localY = point.get$y();
  },
  set$_stagePoint: function(point) {
    this._stageX = point.get$x();
    this._stageY = point.get$y();
  },
  get$buttonDown: function() {
    return this._buttonDown;
  },
  get$altKey: function() {
    return this._altKey;
  },
  get$ctrlKey: function() {
    return this._ctrlKey;
  },
  get$shiftKey: function() {
    return this._shiftKey;
  },
  get$clickCount: function() {
    return this._clickCount;
  },
  MouseEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.KeyboardEvent = {"": "Event;_altKey<,_ctrlKey<,_shiftKey<,_commandKey,_controlKey,_charCode<,_keyCode<,_keyLocation<,_type,_bubbles,_eventPhase,_liblib2$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._altKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._commandKey = false;
    this._controlKey = false;
    this._charCode = 0;
    this._keyCode = 0;
    this._keyLocation = 0;
  },
  get$altKey: function() {
    return this._altKey;
  },
  get$ctrlKey: function() {
    return this._ctrlKey;
  },
  get$shiftKey: function() {
    return this._shiftKey;
  },
  get$charCode: function() {
    return this._charCode;
  },
  get$keyCode: function() {
    return this._keyCode;
  },
  get$keyLocation: function() {
    return this._keyLocation;
  },
  KeyboardEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.TextEvent = {"": "Event;_text,_type,_bubbles,_eventPhase,_liblib2$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation"};

$$.TouchEvent = {"": "Event;_touchPointID<,_isPrimaryTouchPoint<,_localX,_localY,_stageX,_stageY,_altKey<,_controlKey,_ctrlKey<,_shiftKey<,_pressure,_sizeX,_sizeY,_type,_bubbles,_eventPhase,_liblib2$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
  _reset$2: function(type, bubbles) {
    $.Event.prototype._reset$2.call(this, type, bubbles);
    this._touchPointID = 0;
    this._isPrimaryTouchPoint = false;
    this._localY = 0;
    this._localX = 0;
    this._stageY = 0;
    this._stageX = 0;
    this._altKey = false;
    this._controlKey = false;
    this._ctrlKey = false;
    this._shiftKey = false;
    this._pressure = 1;
    this._sizeX = 0;
    this._sizeY = 0;
  },
  set$_localPoint: function(point) {
    this._localX = point.get$x();
    this._localY = point.get$y();
  },
  set$_stagePoint: function(point) {
    this._stageX = point.get$x();
    this._stageY = point.get$y();
  },
  get$touchPointID: function() {
    return this._touchPointID;
  },
  get$altKey: function() {
    return this._altKey;
  },
  get$ctrlKey: function() {
    return this._ctrlKey;
  },
  get$shiftKey: function() {
    return this._shiftKey;
  },
  TouchEvent$2: function(type, bubbles) {
    this._reset$2(type, bubbles);
  }
};

$$.DisplayObject = {"": "EventDispatcher;_alpha>,_parent>,mask>",
  get$x: function() {
    return this._x;
  },
  get$y: function() {
    return this._y;
  },
  get$pivotX: function() {
    return this._pivotX;
  },
  get$pivotY: function() {
    return this._pivotY;
  },
  get$scaleX: function() {
    return this._scaleX;
  },
  get$scaleY: function() {
    return this._scaleY;
  },
  get$alpha: function() {
    return this._alpha;
  },
  get$visible: function() {
    return this._visible;
  },
  get$parent: function() {
    return this._parent;
  },
  get$root: function() {
    var currentObject, currentObject0;
    for (currentObject = this; currentObject0 = currentObject.get$_parent(), !(currentObject0 == null); currentObject = currentObject0)
      ;
    return currentObject;
  },
  get$stage: function() {
    var root = this.get$root();
    if (typeof root === "object" && root !== null && !!root.is$Stage)
      return root;
    return;
  },
  set$x: function(value) {
    this._x = value;
    this._transformationMatrixRefresh = true;
  },
  set$y: function(value) {
    this._y = value;
    this._transformationMatrixRefresh = true;
  },
  set$scaleX: function(value) {
    this._scaleX = value;
    this._transformationMatrixRefresh = true;
  },
  set$scaleY: function(value) {
    this._scaleY = value;
    this._transformationMatrixRefresh = true;
  },
  get$width: function() {
    return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$width();
  },
  get$height: function() {
    return this.getBoundsTransformed$1(this.get$_transformationMatrix()).get$height();
  },
  set$width: function(value) {
    var normalWidth;
    this.set$scaleX(1);
    normalWidth = this.get$width();
    this.set$scaleX(!$.eqB(normalWidth, 0) ? $.getInterceptor$JSNumber(value).operator$div$1(value, normalWidth) : 1);
  },
  set$height: function(value) {
    var normalHeight;
    this.set$scaleY(1);
    normalHeight = this.get$height();
    this.set$scaleY(!$.eqB(normalHeight, 0) ? $.getInterceptor$JSNumber(value).operator$div$1(value, normalHeight) : 1);
  },
  addTo$1: function(parent$) {
    parent$.addChild$1(this);
  },
  removeFromParent$0: function() {
    var t1 = this._parent;
    if (!(t1 == null))
      t1.removeChild$1(this);
  },
  get$_transformationMatrix: function() {
    var t1, t2, t3, t4, t5, t6, t7, cosR, sinR, a, b, c, d, tx, ty;
    if (this._transformationMatrixRefresh) {
      this._transformationMatrixRefresh = false;
      t1 = this._rotation;
      if (t1 === 0) {
        t1 = this._transformationMatrixPrivate;
        t2 = this._scaleX;
        t3 = this._scaleY;
        t4 = this._x;
        t5 = this._pivotX;
        if (typeof t2 !== "number")
          throw $.iae(t2);
        t5 *= t2;
        t5 = $.getInterceptor$JSNumber(t4).operator$sub$1(t4, t5);
        t4 = this._y;
        t6 = this._pivotY;
        t7 = this._scaleY;
        if (typeof t7 !== "number")
          throw $.iae(t7);
        t7 = t6 * t7;
        t1.setTo$6(t2, 0, 0, t3, t5, $.getInterceptor$JSNumber(t4).operator$sub$1(t4, t7));
      } else {
        cosR = $.cos(t1);
        sinR = $.sin(t1);
        t1 = this._scaleX;
        a = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, cosR);
        t1 = this._scaleX;
        b = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, sinR);
        t1 = this._scaleY;
        t1 = $.getInterceptor$JSNumber(t1).operator$negate$0(t1);
        c = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, sinR);
        t1 = this._scaleY;
        d = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, cosR);
        t1 = this._x;
        t2 = this._pivotX;
        if (typeof a !== "number")
          throw $.iae(a);
        t2 *= a;
        t2 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, t2);
        t1 = this._pivotY;
        if (typeof c !== "number")
          throw $.iae(c);
        t1 *= c;
        tx = $.getInterceptor$JSNumber(t2).operator$sub$1(t2, t1);
        t1 = this._y;
        t2 = this._pivotX;
        if (typeof b !== "number")
          throw $.iae(b);
        t2 *= b;
        t2 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, t2);
        t1 = this._pivotY;
        if (typeof d !== "number")
          throw $.iae(d);
        t1 *= d;
        ty = $.getInterceptor$JSNumber(t2).operator$sub$1(t2, t1);
        this._transformationMatrixPrivate.setTo$6(a, b, c, d, tx, ty);
      }
    }
    return this._transformationMatrixPrivate;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    returnRectangle.set$x(matrix.get$tx());
    returnRectangle.set$y(matrix.get$ty());
    returnRectangle.set$width(0);
    returnRectangle.set$height(0);
    return returnRectangle;
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1 = this.getBoundsTransformed$1(this._tmpMatrixIdentity);
    if ($.getInterceptor$JSString(t1).contains$2(t1, localX, localY) === true)
      return this;
    return;
  },
  globalToLocal$1: function(globalPoint) {
    var displayObject, t1, t2;
    this._tmpMatrix.identity$0();
    for (displayObject = this; t1 = !(displayObject == null), t2 = this._tmpMatrix, t1; displayObject = displayObject.get$_parent())
      t2.concat$1(displayObject.get$_transformationMatrix());
    t2.invert$0();
    return this._tmpMatrix.transformPoint$1(globalPoint);
  },
  dispatchEvent$1: function(event$) {
    var ancestor, ancestors, t1, t2, i;
    if (event$.get$captures() === true || event$.get$bubbles() === true) {
      for (ancestor = this._parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_parent())
        if (ancestor.hasEventListener$1(event$.get$type()) === true) {
          if (ancestors == null)
            ancestors = $.List_List(0);
          $.getInterceptor$JSArray(ancestors).add$1(ancestors, ancestor);
        }
    } else
      ancestors = null;
    if (event$.get$captures() === true && !(ancestors == null)) {
      t1 = $.getInterceptor$JSStringJSArray(ancestors);
      t2 = t1.get$length(ancestors);
      if (typeof t2 !== "number")
        return this.dispatchEvent$1$bailout(1, event$, ancestors, t1, t2);
      i = t2 - 1;
      for (; i >= 0; --i) {
        t2 = event$.get$stopsPropagation();
        if (typeof t2 !== "boolean")
          return this.dispatchEvent$1$bailout(2, event$, i, ancestors, t2, t1);
        if (!t2)
          t1.operator$index$1(ancestors, i)._dispatchEventInternal$4(event$, this, t1.operator$index$1(ancestors, i), 1);
      }
    }
    t1 = event$.get$stopsPropagation();
    if (typeof t1 !== "boolean")
      return this.dispatchEvent$1$bailout(3, event$, t1, ancestors);
    if (!t1)
      this._dispatchEventInternal$4(event$, this, this, 2);
    if (event$.get$bubbles() === true && !(ancestors == null)) {
      t1 = $.getInterceptor$JSStringJSArray(ancestors);
      i = 0;
      while (true) {
        t2 = t1.get$length(ancestors);
        if (typeof t2 !== "number")
          return this.dispatchEvent$1$bailout(4, event$, t1, ancestors, i, t2);
        if (!(i < t2))
          break;
        t2 = event$.get$stopsPropagation();
        if (typeof t2 !== "boolean")
          return this.dispatchEvent$1$bailout(5, event$, t2, t1, ancestors, i);
        if (!t2)
          t1.operator$index$1(ancestors, i)._dispatchEventInternal$4(event$, this, t1.operator$index$1(ancestors, i), 3);
        ++i;
      }
    }
  },
  dispatchEvent$1$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        t2 = env3;
        t1 = env2;
        ancestors = env1;
        event$ = env0;
        break;
      case 2:
        t1 = env4;
        t2 = env3;
        ancestors = env2;
        i = env1;
        event$ = env0;
        break;
      case 3:
        ancestors = env2;
        t1 = env1;
        event$ = env0;
        break;
      case 4:
        t2 = env4;
        i = env3;
        ancestors = env2;
        t1 = env1;
        event$ = env0;
        break;
      case 5:
        i = env4;
        ancestors = env3;
        t1 = env2;
        t2 = env1;
        event$ = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (event$.get$captures() === true || event$.get$bubbles() === true) {
          for (ancestor = this._parent, ancestors = null; !(ancestor == null); ancestor = ancestor.get$_parent())
            if (ancestor.hasEventListener$1(event$.get$type()) === true) {
              if (ancestors == null)
                ancestors = $.List_List(0);
              $.getInterceptor$JSArray(ancestors).add$1(ancestors, ancestor);
            }
        } else
          ancestors = null;
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && event$.get$captures() === true && !(ancestors == null))
          switch (state0) {
            case 0:
              t1 = $.getInterceptor$JSStringJSArray(ancestors);
              t2 = t1.get$length(ancestors);
            case 1:
              state0 = 0;
              i = $.getInterceptor$JSNumber(t2).operator$sub$1(t2, 1);
            case 2:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      if (!$.geB(i, 0))
                        break L0;
                      t2 = event$.get$stopsPropagation();
                    case 2:
                      state0 = 0;
                      if ($.eqB(t2, false))
                        t1.operator$index$1(ancestors, i)._dispatchEventInternal$4(event$, this, t1.operator$index$1(ancestors, i), 1);
                      i = $.getInterceptor$JSNumber(i).operator$sub$1(i, 1);
                  }
          }
        t1 = event$.get$stopsPropagation();
      case 3:
        state0 = 0;
        if ($.eqB(t1, false))
          this._dispatchEventInternal$4(event$, this, this, 2);
      case 4:
      case 5:
        var ancestor, ancestors, t1, t2, event$, i;
        if (state0 === 5 || state0 === 4 || state0 === 0 && event$.get$bubbles() === true && !(ancestors == null))
          switch (state0) {
            case 0:
              t1 = $.getInterceptor$JSStringJSArray(ancestors);
              i = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = t1.get$length(ancestors);
                    case 4:
                      state0 = 0;
                      if (!$.ltB(i, t2))
                        break L1;
                      t2 = event$.get$stopsPropagation();
                    case 5:
                      state0 = 0;
                      if ($.eqB(t2, false))
                        t1.operator$index$1(ancestors, i)._dispatchEventInternal$4(event$, this, t1.operator$index$1(ancestors, i), 3);
                      ++i;
                  }
          }
    }
  },
  _setParent$1: function(value) {
    var ancestor;
    for (ancestor = value; !(ancestor == null); ancestor = ancestor.get$_parent())
      if ($.eqB(ancestor, this))
        throw $.$$throw($.ArgumentError$("Error #2150: An object cannot be added as a child to one of it's children (or children's children, etc.)."));
    this._parent = value;
  },
  DisplayObject$0: function() {
    this._transformationMatrixPrivate = $.Matrix$fromIdentity();
    this._transformationMatrixRefresh = true;
    this._tmpMatrix = $.Matrix$fromIdentity();
    this._tmpMatrixIdentity = $.Matrix$fromIdentity();
  }
};

$$.InteractiveObject = {"": "DisplayObject;doubleClickEnabled>", is$InteractiveObject: true};

$$.DisplayObjectContainer = {"": "InteractiveObject;",
  addChild$1: function(child) {
    var t1, t2, index;
    t1 = $.eqB(child.get$parent(), this);
    t2 = this._children;
    if (t1) {
      index = $.CONSTANT3.indexOf$1(t2, child);
      $.CONSTANT3.removeAt$1(this._children, index);
      this._children.push(child);
    } else
      this.addChildAt$2(child, t2.length);
  },
  addChildAt$2: function(child, index) {
    var t1;
    if (index < 0 && false)
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    if ($.eqB(child, this))
      throw $.$$throw($.ArgumentError$("Error #2024: An object cannot be added as a child of itself."));
    if ($.eqB(child.get$parent(), this)) {
      t1 = this._children;
      $.CONSTANT3.removeAt$1(t1, $.CONSTANT3.indexOf$1(t1, child));
      t1 = this._children;
      $.CONSTANT3.insertRange$3(t1, index > t1.length ? index - 1 : index, 1, child);
    } else {
      child.removeFromParent$0();
      child._setParent$1(this);
      $.CONSTANT3.insertRange$3(this._children, index, 1, child);
      child.dispatchEvent$1($.Event$("added", true));
      if (!(this.get$stage() == null))
        this._dispatchEventOnChildren$2(child, $.Event$("addedToStage", false));
    }
  },
  removeChild$1: function(child) {
    var childIndex = $.CONSTANT3.indexOf$1(this._children, child);
    if ($.eqB(childIndex, -1))
      throw $.$$throw($.ArgumentError$("Error #2025: The supplied DisplayObject must be a child of the caller."));
    this.removeChildAt$1(childIndex);
  },
  removeChildAt$1: function(index) {
    var t1, child;
    if ($.ltB(index, 0) && $.geB(index, this._children.length))
      throw $.$$throw($.ArgumentError$("Error #2006: The supplied index is out of bounds."));
    t1 = this._children;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    child = t1[index];
    child.dispatchEvent$1($.Event$("removed", true));
    if (!(this.get$stage() == null))
      this._dispatchEventOnChildren$2(child, $.Event$("removedFromStage", false));
    child._setParent$1(null);
    $.CONSTANT3.removeAt$1(this._children, index);
  },
  contains$1: function(child) {
    for (; !(child == null); child = child.get$_parent())
      if ($.eqB(child, this))
        return true;
    return false;
  },
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1, right, top$, bottom, i, left, t2, t3, rectangle;
    if (returnRectangle == null)
      returnRectangle = $.Rectangle$zero();
    t1 = this._children.length;
    if (t1 === 0)
      return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
    for (right = (-1/0), top$ = (1/0), bottom = (-1/0), i = 0, left = (1/0); i < t1; ++i) {
      t2 = this._tmpMatrix;
      t3 = this._children;
      if (i >= t3.length)
        throw $.ioore(i);
      t2.copyFromAndConcat$2(t3[i].get$_transformationMatrix(), matrix);
      t2 = this._children;
      if (i >= t2.length)
        throw $.ioore(i);
      rectangle = t2[i].getBoundsTransformed$2(this._tmpMatrix, returnRectangle);
      t2 = rectangle.get$left();
      if (typeof t2 !== "number")
        return this.getBoundsTransformed$2$bailout(1, matrix, right, top$, bottom, t1, i, rectangle, left, t2, returnRectangle);
      if (t2 < left) {
        left = rectangle.get$left();
        if (typeof left !== "number")
          return this.getBoundsTransformed$2$bailout(2, left, matrix, right, top$, bottom, t1, i, rectangle, returnRectangle);
      }
      t2 = rectangle.get$top();
      if (typeof t2 !== "number")
        return this.getBoundsTransformed$2$bailout(3, matrix, left, right, bottom, t2, i, t1, rectangle, top$, returnRectangle);
      if (t2 < top$) {
        top$ = rectangle.get$top();
        if (typeof top$ !== "number")
          return this.getBoundsTransformed$2$bailout(4, matrix, left, right, bottom, t1, i, rectangle, top$, returnRectangle);
      }
      t2 = rectangle.get$right();
      if (typeof t2 !== "number")
        return this.getBoundsTransformed$2$bailout(5, matrix, left, right, bottom, t1, i, rectangle, top$, returnRectangle, t2);
      if (t2 > right) {
        right = rectangle.get$right();
        if (typeof right !== "number")
          return this.getBoundsTransformed$2$bailout(6, matrix, left, right, bottom, t1, i, rectangle, top$, returnRectangle);
      }
      t2 = rectangle.get$bottom();
      if (typeof t2 !== "number")
        return this.getBoundsTransformed$2$bailout(7, matrix, left, bottom, t1, i, right, rectangle, t2, top$, returnRectangle);
      if (t2 > bottom) {
        bottom = rectangle.get$bottom();
        if (typeof bottom !== "number")
          return this.getBoundsTransformed$2$bailout(8, matrix, left, t1, right, i, top$, bottom, returnRectangle);
      }
    }
    returnRectangle.set$x(left);
    returnRectangle.set$y(top$);
    returnRectangle.set$width(right - left);
    returnRectangle.set$height(bottom - top$);
    return returnRectangle;
  },
  getBoundsTransformed$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9) {
    switch (state0) {
      case 1:
        returnRectangle = env9;
        t2 = env8;
        left = env7;
        rectangle = env6;
        i = env5;
        t1 = env4;
        bottom = env3;
        top$ = env2;
        right = env1;
        matrix = env0;
        break;
      case 2:
        returnRectangle = env8;
        rectangle = env7;
        i = env6;
        t1 = env5;
        bottom = env4;
        top$ = env3;
        right = env2;
        matrix = env1;
        left = env0;
        break;
      case 3:
        returnRectangle = env9;
        top$ = env8;
        rectangle = env7;
        t1 = env6;
        i = env5;
        t2 = env4;
        bottom = env3;
        right = env2;
        left = env1;
        matrix = env0;
        break;
      case 4:
        returnRectangle = env8;
        top$ = env7;
        rectangle = env6;
        i = env5;
        t1 = env4;
        bottom = env3;
        right = env2;
        left = env1;
        matrix = env0;
        break;
      case 5:
        t2 = env9;
        returnRectangle = env8;
        top$ = env7;
        rectangle = env6;
        i = env5;
        t1 = env4;
        bottom = env3;
        right = env2;
        left = env1;
        matrix = env0;
        break;
      case 6:
        returnRectangle = env8;
        top$ = env7;
        rectangle = env6;
        i = env5;
        t1 = env4;
        bottom = env3;
        right = env2;
        left = env1;
        matrix = env0;
        break;
      case 7:
        returnRectangle = env9;
        top$ = env8;
        t2 = env7;
        rectangle = env6;
        right = env5;
        i = env4;
        t1 = env3;
        bottom = env2;
        left = env1;
        matrix = env0;
        break;
      case 8:
        returnRectangle = env7;
        bottom = env6;
        top$ = env5;
        i = env4;
        right = env3;
        t1 = env2;
        left = env1;
        matrix = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (returnRectangle == null)
          returnRectangle = $.Rectangle$zero();
        t1 = this._children.length;
        if (t1 === 0)
          return $.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
        right = (-1/0);
        top$ = (1/0);
        bottom = (-1/0);
        i = 0;
        left = (1/0);
      default:
        var returnRectangle, t1, right, top$, bottom, i, left, t2, t3, rectangle, matrix;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(i < t1))
                  break L0;
                t2 = this._tmpMatrix;
                t3 = this._children;
                if (i >= t3.length)
                  throw $.ioore(i);
                t2.copyFromAndConcat$2(t3[i].get$_transformationMatrix(), matrix);
                t2 = this._children;
                if (i >= t2.length)
                  throw $.ioore(i);
                rectangle = t2[i].getBoundsTransformed$2(this._tmpMatrix, returnRectangle);
                t2 = rectangle.get$left();
              case 1:
                state0 = 0;
              case 2:
                if (state0 === 2 || state0 === 0 && $.ltB(t2, left))
                  switch (state0) {
                    case 0:
                      left = rectangle.get$left();
                    case 2:
                      state0 = 0;
                  }
                t2 = rectangle.get$top();
              case 3:
                state0 = 0;
              case 4:
                if (state0 === 4 || state0 === 0 && $.ltB(t2, top$))
                  switch (state0) {
                    case 0:
                      top$ = rectangle.get$top();
                    case 4:
                      state0 = 0;
                  }
                t2 = rectangle.get$right();
              case 5:
                state0 = 0;
              case 6:
                if (state0 === 6 || state0 === 0 && $.gtB(t2, right))
                  switch (state0) {
                    case 0:
                      right = rectangle.get$right();
                    case 6:
                      state0 = 0;
                  }
                t2 = rectangle.get$bottom();
              case 7:
                state0 = 0;
              case 8:
                if (state0 === 8 || state0 === 0 && $.gtB(t2, bottom))
                  switch (state0) {
                    case 0:
                      bottom = rectangle.get$bottom();
                    case 8:
                      state0 = 0;
                  }
                ++i;
            }
        returnRectangle.set$x(left);
        returnRectangle.set$y(top$);
        returnRectangle.set$width($.getInterceptor$JSNumber(right).operator$sub$1(right, left));
        returnRectangle.set$height($.getInterceptor$JSNumber(bottom).operator$sub$1(bottom, top$));
        return returnRectangle;
    }
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var i, hit, t1, child, matrix, deltaX, deltaY, t5, t7, childX, t9, t11, displayObject;
    if (typeof localX !== "number")
      return this.hitTestInput$2$bailout(1, localX, localY);
    if (typeof localY !== "number")
      return this.hitTestInput$2$bailout(1, localX, localY);
    for (i = this._children.length - 1, hit = null; i >= 0; --i) {
      t1 = this._children;
      if (i >= t1.length)
        throw $.ioore(i);
      child = t1[i];
      if (child.get$visible() === true) {
        matrix = child.get$_transformationMatrix();
        t1 = matrix.get$tx();
        if (typeof t1 !== "number")
          return this.hitTestInput$2$bailout(2, localX, localY, $.CONSTANT7, matrix, i, child, hit, t1, $.CONSTANT7);
        deltaX = localX - t1;
        t1 = matrix.get$ty();
        if (typeof t1 !== "number")
          return this.hitTestInput$2$bailout(3, deltaX, localY, $.CONSTANT7, localX, t1, $.CONSTANT7, child, hit, matrix, i);
        deltaY = localY - t1;
        t1 = matrix.get$d();
        if (typeof t1 !== "number")
          return this.hitTestInput$2$bailout(4, deltaX, localX, localY, deltaY, t1, $.CONSTANT7, child, $.CONSTANT7, hit, matrix, i);
        t1 *= deltaX;
        t5 = matrix.get$c();
        if (typeof t5 !== "number")
          return this.hitTestInput$2$bailout(5, deltaX, localX, localY, deltaY, $.CONSTANT7, t1, t5, child, hit, i, matrix, $.CONSTANT7);
        t1 -= t5 * deltaY;
        t7 = matrix.get$det();
        if (typeof t7 !== "number")
          return this.hitTestInput$2$bailout(6, deltaX, localX, localY, deltaY, $.CONSTANT7, child, t1, t7, hit, i, matrix, $.CONSTANT7);
        childX = t1 / t7;
        t7 = matrix.get$a();
        if (typeof t7 !== "number")
          return this.hitTestInput$2$bailout(7, deltaX, localY, $.CONSTANT7, deltaY, localX, child, hit, childX, i, t7, matrix, $.CONSTANT7);
        t7 *= deltaY;
        t9 = matrix.get$b();
        if (typeof t9 !== "number")
          return this.hitTestInput$2$bailout(8, deltaX, localY, $.CONSTANT7, localX, child, hit, childX, i, t7, t9, matrix, $.CONSTANT7);
        t7 -= t9 * deltaX;
        t11 = matrix.get$det();
        if (typeof t11 !== "number")
          return this.hitTestInput$2$bailout(9, localX, localY, $.CONSTANT7, $.CONSTANT7, t7, t11, child, hit, i, childX);
        displayObject = child.hitTestInput$2(childX, t7 / t11);
        if (!(displayObject == null)) {
          if (typeof displayObject === "object" && displayObject !== null && !!displayObject.is$InteractiveObject)
            if (displayObject.mouseEnabled)
              return this._mouseChildren ? displayObject : this;
          hit = this;
        }
      }
    }
    return hit;
  },
  hitTestInput$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
    switch (state0) {
      case 1:
        localY = env1;
        localX = env0;
        break;
      case 2:
        t1 = env8;
        t3 = env7;
        hit = env6;
        child = env5;
        i = env4;
        matrix = env3;
        t2 = env2;
        localY = env1;
        localX = env0;
        break;
      case 3:
        i = env9;
        matrix = env8;
        hit = env7;
        child = env6;
        t1 = env5;
        t3 = env4;
        localX = env3;
        t2 = env2;
        localY = env1;
        deltaX = env0;
        break;
      case 4:
        i = env10;
        matrix = env9;
        hit = env8;
        t1 = env7;
        child = env6;
        t2 = env5;
        t3 = env4;
        deltaY = env3;
        localY = env2;
        localX = env1;
        deltaX = env0;
        break;
      case 5:
        t1 = env11;
        matrix = env10;
        i = env9;
        hit = env8;
        child = env7;
        t7 = env6;
        t3 = env5;
        t2 = env4;
        deltaY = env3;
        localY = env2;
        localX = env1;
        deltaX = env0;
        break;
      case 6:
        t1 = env11;
        matrix = env10;
        i = env9;
        hit = env8;
        t3 = env7;
        t7 = env6;
        child = env5;
        t2 = env4;
        deltaY = env3;
        localY = env2;
        localX = env1;
        deltaX = env0;
        break;
      case 7:
        t1 = env11;
        matrix = env10;
        t3 = env9;
        i = env8;
        childX = env7;
        hit = env6;
        child = env5;
        localX = env4;
        deltaY = env3;
        t2 = env2;
        localY = env1;
        deltaX = env0;
        break;
      case 8:
        t1 = env11;
        matrix = env10;
        t10 = env9;
        t3 = env8;
        i = env7;
        childX = env6;
        hit = env5;
        child = env4;
        localX = env3;
        t2 = env2;
        localY = env1;
        deltaX = env0;
        break;
      case 9:
        childX = env9;
        i = env8;
        hit = env7;
        child = env6;
        t3 = env5;
        t10 = env4;
        t1 = env3;
        t2 = env2;
        localY = env1;
        localX = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        i = this._children.length - 1;
        t1 = $.getInterceptor$JSNumber(localX);
        t2 = $.getInterceptor$JSNumber(localY);
        hit = null;
      default:
        var localY, localX, i, t1, t2, hit, t3, child, matrix, deltaX, deltaY, t7, childX, t10, displayObject;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(i >= 0))
                  break L0;
                t3 = this._children;
                if (i >= t3.length)
                  throw $.ioore(i);
                child = t3[i];
              default:
                if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && child.get$visible() === true)
                  switch (state0) {
                    case 0:
                      matrix = child.get$_transformationMatrix();
                      t3 = matrix.get$tx();
                    case 2:
                      state0 = 0;
                      deltaX = t1.operator$sub$1(localX, t3);
                      t3 = matrix.get$ty();
                    case 3:
                      state0 = 0;
                      deltaY = t2.operator$sub$1(localY, t3);
                      t3 = matrix.get$d();
                    case 4:
                      state0 = 0;
                      t3 = $.getInterceptor$JSNumber(t3).operator$mul$1(t3, deltaX);
                      t7 = matrix.get$c();
                    case 5:
                      state0 = 0;
                      t7 = $.getInterceptor$JSNumber(t7).operator$mul$1(t7, deltaY);
                      t7 = $.getInterceptor$JSNumber(t3).operator$sub$1(t3, t7);
                      t3 = matrix.get$det();
                    case 6:
                      state0 = 0;
                      childX = $.getInterceptor$JSNumber(t7).operator$div$1(t7, t3);
                      t3 = matrix.get$a();
                    case 7:
                      state0 = 0;
                      t3 = $.getInterceptor$JSNumber(t3).operator$mul$1(t3, deltaY);
                      t10 = matrix.get$b();
                    case 8:
                      state0 = 0;
                      t10 = $.getInterceptor$JSNumber(t10).operator$mul$1(t10, deltaX);
                      t10 = $.getInterceptor$JSNumber(t3).operator$sub$1(t3, t10);
                      t3 = matrix.get$det();
                    case 9:
                      state0 = 0;
                      displayObject = child.hitTestInput$2(childX, $.getInterceptor$JSNumber(t10).operator$div$1(t10, t3));
                      if (!(displayObject == null)) {
                        if (typeof displayObject === "object" && displayObject !== null && !!displayObject.is$InteractiveObject)
                          if (displayObject.mouseEnabled)
                            return this._mouseChildren ? displayObject : this;
                        hit = this;
                      }
                  }
                --i;
            }
        return hit;
    }
  },
  render$1: function(renderState) {
    var i, t1, child;
    for (i = 0; t1 = this._children, i < t1.length; ++i) {
      child = t1[i];
      if (child.get$visible() === true)
        renderState.renderDisplayObject$1(child);
    }
  },
  _dispatchEventOnChildren$2: function(displayObject, event$) {
    var children, childrenLength, i;
    displayObject.dispatchEvent$1(event$);
    if (typeof displayObject === "object" && displayObject !== null && !!displayObject.is$DisplayObjectContainer) {
      children = $.List_List$from(displayObject._children);
      childrenLength = children.length;
      for (i = 0; i < childrenLength; ++i) {
        if (i >= children.length)
          throw $.ioore(i);
        this._dispatchEventOnChildren$2(children[i], event$);
      }
    }
  },
  DisplayObjectContainer$0: function() {
    this._children = $.List_List(0);
  },
  is$DisplayObjectContainer: true
};

$$._MouseButton = {"": "Object;target=,buttonDown=,clickTime=,clickCount=,mouseDownEventType>,mouseUpEventType>,mouseClickEventType>,mouseDoubleClickEventType>"};

$$._Touch = {"": "Object;touchPointID>,target=,primaryTouchPoint>"};

$$.Stage = {"": "DisplayObjectContainer;_canvas,_context,_focus,_renderState,_renderMode,_mouseCursor,_mousePosition,_mouseTarget,_mouseButtons,_touches,_mouseEvent,_keyboardEvent,_touchEvent,_onMouseEventHandler,_onTouchEventHandler,_touchEventSubscriptions,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,tabEnabled,tabIndex,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_transformationMatrixPrivate,_transformationMatrixRefresh,_alpha,_visible,_name,_parent,mask,_tmpMatrix,_tmpMatrixIdentity,_eventListenerLists",
  get$focus: function() {
    return this._focus;
  },
  focus$0: function() {
    return this.get$focus().call$0();
  },
  _throwStageException$0: function() {
    throw $.$$throw($.UnsupportedError$("Error #2071: The Stage class does not implement this property or method."));
  },
  set$x: function(value) {
    this._throwStageException$0();
  },
  set$y: function(value) {
    this._throwStageException$0();
  },
  set$scaleX: function(value) {
    this._throwStageException$0();
  },
  set$scaleY: function(value) {
    this._throwStageException$0();
  },
  set$width: function(value) {
    this._throwStageException$0();
  },
  set$height: function(value) {
    this._throwStageException$0();
  },
  materialize$0: function() {
    var t1 = this._renderMode;
    if (typeof t1 !== "string")
      return this.materialize$0$bailout(1, t1);
    if (t1 === "auto" || t1 === "once") {
      this._renderState.reset$0();
      this.render$1(this._renderState);
      t1 = this._renderMode;
      if (typeof t1 !== "string")
        return this.materialize$0$bailout(3, t1);
      if (t1 === "once")
        this._renderMode = "stop";
    }
  },
  materialize$0$bailout: function(state0, env0) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        t1 = env0;
        break;
      case 3:
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._renderMode;
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && !$.eqB(t1, "auto"))
          switch (state0) {
            case 0:
              t1 = this._renderMode;
            case 2:
              state0 = 0;
              t1 = $.eqB(t1, "once");
          }
        else
          t1 = true;
      case 3:
        var t1;
        if (state0 === 3 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              this._renderState.reset$0();
              this.render$1(this._renderState);
              t1 = this._renderMode;
            case 3:
              state0 = 0;
              if ($.eqB(t1, "once"))
                this._renderMode = "stop";
          }
    }
  },
  _onMouseCursorChanged$1: function(event$) {
    var t1 = $.Mouse__getCssStyle(this._mouseCursor);
    this._canvas.get$style().set$cursor(t1);
  },
  get$_onMouseCursorChanged: function() {
    return new $.BoundClosure(this, "_onMouseCursorChanged$1");
  },
  _onMouseEvent$1: function(event$) {
    var clientRect, time, button, t1, t2, t3, stagePoint, mouseButton, target, mouseCursor, t4, mouseEventType, isClick, isDoubleClick, localPoint;
    event$.preventDefault$0();
    clientRect = this._canvas.getBoundingClientRect$0();
    time = $.Date_Date$now().get$millisecondsSinceEpoch();
    button = event$.get$button();
    t1 = event$.get$clientX();
    t2 = clientRect.get$left();
    t2 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, t2);
    t1 = event$.get$clientY();
    t3 = clientRect.get$top();
    stagePoint = $.Point$(t2, $.getInterceptor$JSNumber(t1).operator$sub$1(t1, t3));
    if ($.ltB(button, 0) || $.gtB(button, 2))
      return;
    if ($.eqB(event$.get$type(), "mousemove") && this._mousePosition.equals$1(stagePoint) === true)
      return;
    t1 = this._mouseButtons;
    mouseButton = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, button);
    this._mousePosition = stagePoint;
    target = !$.eqB(event$.get$type(), "mouseout") ? $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), "is$InteractiveObject") : null;
    if (typeof target === "object" && target !== null && !!target.is$Sprite)
      mouseCursor = target.useHandCursor === true ? "button" : "arrow";
    else
      mouseCursor = "arrow";
    if (typeof target === "object" && target !== null && !!target.is$SimpleButton)
      if (target.useHandCursor === true)
        mouseCursor = "button";
    if (!$.eqB(this._mouseCursor, mouseCursor)) {
      this._mouseCursor = mouseCursor;
      t1 = $.Mouse__getCssStyle(mouseCursor);
      this._canvas.get$style().set$cursor(t1);
    }
    t1 = this._mouseTarget;
    if (!(t1 == null) && !$.eqB(t1, target)) {
      t1 = this._mouseTarget;
      t2 = mouseButton.get$buttonDown();
      t3 = !(this._mouseTarget.get$stage() == null) ? this._mouseTarget.globalToLocal$1(stagePoint) : $.Point$zero();
      t4 = this._mouseEvent;
      t4._reset$2("mouseOut", true);
      t4.set$_localPoint(t3);
      t4.set$_stagePoint(stagePoint);
      t4.set$_buttonDown(t2);
      t1.dispatchEvent$1(t4);
      this._mouseTarget = null;
    }
    t1 = !(target == null);
    if (t1 && !$.eqB(target, this._mouseTarget)) {
      t2 = mouseButton.get$buttonDown();
      t3 = target.globalToLocal$1(stagePoint);
      t4 = this._mouseEvent;
      t4._reset$2("mouseOver", true);
      t4.set$_localPoint(t3);
      t4.set$_stagePoint(stagePoint);
      t4.set$_buttonDown(t2);
      target.dispatchEvent$1(t4);
      this._mouseTarget = target;
    }
    if ($.eqB(event$.get$type(), "mousedown")) {
      mouseEventType = mouseButton.get$mouseDownEventType();
      if ($.eqB(target, mouseButton.get$target())) {
        t2 = mouseButton.get$clickTime();
        t3 = $.gtB(time, $.getInterceptor$JSNumber(t2).operator$add$1(t2, 500));
        t2 = t3;
      } else
        t2 = true;
      if (t2)
        mouseButton.set$clickCount(0);
      mouseButton.set$buttonDown(true);
      mouseButton.set$target(target);
      mouseButton.set$clickTime(time);
      t2 = mouseButton.get$clickCount();
      mouseButton.set$clickCount($.getInterceptor$JSNumber(t2).operator$add$1(t2, 1));
    } else
      mouseEventType = null;
    if ($.eqB(event$.get$type(), "mouseup")) {
      mouseEventType = mouseButton.get$mouseUpEventType();
      mouseButton.set$buttonDown(false);
      isClick = $.eq(mouseButton.get$target(), target);
      if (isClick === true) {
        t2 = mouseButton.get$clickCount();
        if ($.getInterceptor$JSInt(t2).get$isEven(t2) === true) {
          t2 = mouseButton.get$clickTime();
          t3 = $.ltB(time, $.getInterceptor$JSNumber(t2).operator$add$1(t2, 500));
          isDoubleClick = t3;
        } else
          isDoubleClick = false;
      } else
        isDoubleClick = false;
    } else {
      isDoubleClick = false;
      isClick = false;
    }
    if ($.eqB(event$.get$type(), "mousemove"))
      mouseEventType = "mouseMove";
    if (!(mouseEventType == null) && t1) {
      localPoint = target.globalToLocal$1(stagePoint);
      t1 = mouseButton.get$clickCount();
      t2 = mouseButton.get$buttonDown();
      t3 = this._mouseEvent;
      t3._reset$2(mouseEventType, true);
      t3.set$_localPoint(localPoint);
      t3.set$_stagePoint(stagePoint);
      t3.set$_buttonDown(t2);
      t3.set$_clickCount(t1);
      target.dispatchEvent$1(t3);
      if (isClick === true)
        if (isDoubleClick && target.get$doubleClickEnabled() === true) {
          t1 = mouseButton.get$buttonDown();
          t2 = this._mouseEvent;
          t2._reset$2(mouseButton.get$mouseDoubleClickEventType(), true);
          t2.set$_localPoint(localPoint);
          t2.set$_stagePoint(stagePoint);
          t2.set$_buttonDown(t1);
          target.dispatchEvent$1(t2);
        } else {
          t1 = mouseButton.get$buttonDown();
          t2 = this._mouseEvent;
          t2._reset$2(mouseButton.get$mouseClickEventType(), true);
          t2.set$_localPoint(localPoint);
          t2.set$_stagePoint(stagePoint);
          t2.set$_buttonDown(t1);
          target.dispatchEvent$1(t2);
        }
    }
  },
  get$_onMouseEvent: function() {
    return new $.BoundClosure(this, "_onMouseEvent$1");
  },
  _onMultitouchInputModeChanged$1: function(event$) {
    $.CONSTANT3.forEach$1(this._touchEventSubscriptions, new $.Stage__onMultitouchInputModeChanged_anon());
    $.Multitouch__initialize();
    if ($.eqB($.Multitouch__inputMode, "touchPoint"))
      this._touchEventSubscriptions = [this._canvas.get$onTouchStart().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchEnd().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchMove().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchEnter().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchLeave().listen$1(this._onTouchEventHandler), this._canvas.get$onTouchCancel().listen$1(this._onTouchEventHandler)];
  },
  get$_onMultitouchInputModeChanged: function() {
    return new $.BoundClosure(this, "_onMultitouchInputModeChanged$1");
  },
  _onTouchEvent$1: function(event$) {
    var clientRect, t1, t2, identifier, t3, t4, stagePoint, target, touch, t5, t6, touchEventType;
    event$.preventDefault$0();
    clientRect = this._canvas.getBoundingClientRect$0();
    for (t1 = event$.get$changedTouches(), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      identifier = t2.get$identifier();
      t3 = t2.get$clientX();
      t4 = clientRect.get$left();
      t4 = $.getInterceptor$JSNumber(t3).operator$sub$1(t3, t4);
      t2 = t2.get$clientY();
      t3 = clientRect.get$top();
      stagePoint = $.Point$(t4, $.getInterceptor$JSNumber(t2).operator$sub$1(t2, t3));
      target = $.propertyTypeCast(this.hitTestInput$2(stagePoint.x, stagePoint.y), "is$InteractiveObject");
      t2 = this._touches.containsKey$1(identifier) === true;
      t3 = this._touches;
      touch = t2 ? $.getInterceptor$JSStringJSArray(t3).operator$index$1(t3, identifier) : $._Touch$(target, $.eq($.getInterceptor$JSStringJSArray(t3).get$length(t3), 0));
      if (!(touch.get$target() == null) && !$.eqB(touch.get$target(), target)) {
        t2 = touch.get$target();
        t3 = touch.get$primaryTouchPoint();
        t4 = touch.get$touchPointID();
        t5 = !(touch.get$target().get$stage() == null) ? touch.get$target().globalToLocal$1(stagePoint) : $.Point$zero();
        t6 = this._touchEvent;
        t6._reset$2("touchOut", true);
        t6.set$_localPoint(t5);
        t6.set$_stagePoint(stagePoint);
        t6.set$_touchPointID(t4);
        t6.set$_isPrimaryTouchPoint(t3);
        t2.dispatchEvent$1(t6);
        touch.set$target(null);
      }
      t2 = !(target == null);
      if (t2 && !$.eqB(target, touch.get$target())) {
        t3 = touch.get$primaryTouchPoint();
        t4 = touch.get$touchPointID();
        t5 = target.globalToLocal$1(stagePoint);
        t6 = this._touchEvent;
        t6._reset$2("touchOver", true);
        t6.set$_localPoint(t5);
        t6.set$_stagePoint(stagePoint);
        t6.set$_touchPointID(t4);
        t6.set$_isPrimaryTouchPoint(t3);
        target.dispatchEvent$1(t6);
        touch.set$target(target);
      }
      if ($.eqB(event$.get$type(), "touchstart")) {
        t3 = this._touches;
        $.getInterceptor$JSArray(t3).operator$indexSet$2(t3, identifier, touch);
        touchEventType = "touchBegin";
      } else
        touchEventType = null;
      if ($.eqB(event$.get$type(), "touchend")) {
        t3 = this._touches;
        $.getInterceptor$JSArray(t3).remove$1(t3, identifier);
        touchEventType = "touchEnd";
      }
      if ($.eqB(event$.get$type(), "touchcancel")) {
        t3 = this._touches;
        $.getInterceptor$JSArray(t3).remove$1(t3, identifier);
        touchEventType = "touchCancel";
      }
      if ($.eqB(event$.get$type(), "touchmove"))
        touchEventType = "touchMove";
      if (!(touchEventType == null) && t2) {
        t2 = touch.get$primaryTouchPoint();
        t3 = touch.get$touchPointID();
        t4 = target.globalToLocal$1(stagePoint);
        t5 = this._touchEvent;
        t5._reset$2(touchEventType, true);
        t5.set$_localPoint(t4);
        t5.set$_stagePoint(stagePoint);
        t5.set$_touchPointID(t3);
        t5.set$_isPrimaryTouchPoint(t2);
        target.dispatchEvent$1(t5);
      }
    }
  },
  get$_onTouchEvent: function() {
    return new $.BoundClosure(this, "_onTouchEvent$1");
  },
  _onKeyEvent$1: function(event$) {
    var keyboardEventType, t1, t2, t3, t4, t5, t6;
    event$.preventDefault$0();
    keyboardEventType = $.eqB(event$.get$type(), "keyup") ? "keyUp" : null;
    if ($.eqB(event$.get$type(), "keydown"))
      keyboardEventType = "keyDown";
    t1 = event$.get$keyCode();
    t2 = event$.get$charCode();
    t3 = event$.get$shiftKey();
    t4 = event$.get$ctrlKey();
    t5 = event$.get$altKey();
    t6 = this._keyboardEvent;
    t6._reset$2(keyboardEventType, true);
    t6.set$_altKey(t5);
    t6.set$_ctrlKey(t4);
    t6.set$_shiftKey(t3);
    t6.set$_charCode(t2);
    t6.set$_keyCode(t1);
    t6.set$_keyLocation(0);
    if ($.eqB(event$.get$keyLocation(), 1))
      this._keyboardEvent.set$_keyLocation(1);
    if ($.eqB(event$.get$keyLocation(), 2))
      this._keyboardEvent.set$_keyLocation(2);
    if ($.eqB(event$.get$keyLocation(), 3))
      this._keyboardEvent.set$_keyLocation(3);
    if ($.eqB(event$.get$keyLocation(), 5))
      this._keyboardEvent.set$_keyLocation(4);
    if ($.eqB(event$.get$keyLocation(), 4))
      this._keyboardEvent.set$_keyLocation(4);
    t1 = this._focus;
    if (!(t1 == null))
      t1.dispatchEvent$1(this._keyboardEvent);
  },
  get$_onKeyEvent: function() {
    return new $.BoundClosure(this, "_onKeyEvent$1");
  },
  _onTextEvent$1: function(event$) {
    var charCode, textEvent, t1;
    charCode = !$.eqB(event$.get$charCode(), 0) ? event$.get$charCode() : event$.get$keyCode();
    textEvent = $.TextEvent$("textInput", true);
    textEvent._text = $.String_String$fromCharCodes([charCode]);
    t1 = this._focus;
    if (!(t1 == null))
      t1.dispatchEvent$1(textEvent);
  },
  get$_onTextEvent: function() {
    return new $.BoundClosure(this, "_onTextEvent$1");
  },
  Stage$2: function(name$, canvas) {
    this._name = name$;
    this._canvas = canvas;
    this._canvas.focus$0();
    this._context = canvas.get$context2d();
    this._renderState = $.RenderState$fromCanvasRenderingContext2D(this._context, null);
    this._renderMode = "auto";
    this._mouseCursor = "arrow";
    $.get$Mouse__eventDispatcher().addEventListener$2("mouseCursorChanged", this.get$_onMouseCursorChanged());
    this._mouseButtons = [$._MouseButton$("mouseDown", "mouseUp", "click", "doubleClick"), $._MouseButton$("middleMouseDown", "middleMouseUp", "middleClick", "middleClick"), $._MouseButton$("rightMouseDown", "rightMouseUp", "rightClick", "rightClick")];
    this._mouseTarget = null;
    this._mousePosition = $.Point$(0, 0);
    this._mouseEvent = $.MouseEvent$("click", true);
    this._onMouseEventHandler = this.get$_onMouseEvent();
    this._canvas.get$onMouseDown().listen$1(this._onMouseEventHandler);
    this._canvas.get$onMouseUp().listen$1(this._onMouseEventHandler);
    this._canvas.get$onMouseMove().listen$1(this._onMouseEventHandler);
    this._canvas.get$onMouseOut().listen$1(this._onMouseEventHandler);
    this._canvas.get$onMouseWheel().listen$1(this._onMouseEventHandler);
    this._touches = $.Map_Map();
    this._touchEvent = $.TouchEvent$("touchBegin", true);
    this._onTouchEventHandler = this.get$_onTouchEvent();
    $.get$Multitouch__eventDispatcher().addEventListener$2("inputModeChanged", this.get$_onMultitouchInputModeChanged());
    this._onMultitouchInputModeChanged$1(null);
    this._keyboardEvent = $.KeyboardEvent$("keyDown", true);
    this._canvas.get$onKeyDown().listen$1(this.get$_onKeyEvent());
    this._canvas.get$onKeyUp().listen$1(this.get$_onKeyEvent());
    this._canvas.get$onKeyPress().listen$1(this.get$_onTextEvent());
  },
  is$Stage: true
};

$$.Bitmap = {"": "DisplayObject;bitmapData,pixelSnapping,clipRectangle,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_transformationMatrixPrivate,_transformationMatrixRefresh,_alpha,_visible,_name,_parent,mask,_tmpMatrix,_tmpMatrixIdentity,_eventListenerLists",
  getBoundsTransformed$2: function(matrix, returnRectangle) {
    var t1, t2, t3, width, height;
    t1 = this.bitmapData;
    t2 = !(t1 == null);
    if (t2) {
      t3 = t1.get$width();
      if (typeof t3 !== "number")
        return this.getBoundsTransformed$2$bailout0(1, matrix, returnRectangle, t2, t1, t3);
      width = t3;
    } else
      width = 0;
    if (t2) {
      t1 = t1.get$height();
      if (typeof t1 !== "number")
        return this.getBoundsTransformed$2$bailout0(2, matrix, returnRectangle, width, t1);
      height = t1;
    } else
      height = 0;
    return $._getBoundsTransformedHelper(matrix, width, height, returnRectangle);
  },
  getBoundsTransformed$2$bailout0: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        t3 = env4;
        t1 = env3;
        t2 = env2;
        returnRectangle = env1;
        matrix = env0;
        break;
      case 2:
        t1 = env3;
        width = env2;
        returnRectangle = env1;
        matrix = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.bitmapData;
        t2 = !(t1 == null);
      case 1:
        if (state0 === 1 || state0 === 0 && t2)
          switch (state0) {
            case 0:
              t3 = t1.get$width();
            case 1:
              state0 = 0;
              width = t3;
          }
        else
          width = 0;
      case 2:
        var t1, t2, t3, returnRectangle, matrix, width, height;
        if (state0 === 2 || state0 === 0 && t2)
          switch (state0) {
            case 0:
              t1 = t1.get$height();
            case 2:
              state0 = 0;
              height = t1;
          }
        else
          height = 0;
        return $._getBoundsTransformedHelper(matrix, width, height, returnRectangle);
    }
  },
  getBoundsTransformed$1: function(matrix) {
    return this.getBoundsTransformed$2(matrix, null);
  },
  hitTestInput$2: function(localX, localY) {
    var t1, t2;
    if (typeof localX !== "number")
      return this.hitTestInput$2$bailout0(1, localX, localY);
    if (typeof localY !== "number")
      return this.hitTestInput$2$bailout0(1, localX, localY);
    t1 = this.bitmapData;
    if (!(t1 == null))
      if (localX >= 0)
        if (localY >= 0) {
          t2 = t1.get$width();
          if (typeof t2 !== "number")
            return this.hitTestInput$2$bailout0(2, localX, localY, t2, t1);
          if (localX < t2) {
            t1 = t1.get$height();
            if (typeof t1 !== "number")
              return this.hitTestInput$2$bailout0(3, localY, t1);
            t1 = localY < t1;
          } else
            t1 = false;
        } else
          t1 = false;
      else
        t1 = false;
    else
      t1 = false;
    if (t1)
      return this;
    return;
  },
  hitTestInput$2$bailout0: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        localY = env1;
        localX = env0;
        break;
      case 2:
        t1 = env3;
        t2 = env2;
        localY = env1;
        localX = env0;
        break;
      case 3:
        t1 = env1;
        localY = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.bitmapData;
      default:
        var localY, localX, t1, t2;
        if (state0 === 3 || state0 === 2 || state0 === 0 && !(t1 == null))
          switch (state0) {
            case 0:
            default:
              if (state0 === 3 || state0 === 2 || state0 === 0 && $.geB(localX, 0))
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 3 || state0 === 2 || state0 === 0 && $.geB(localY, 0))
                      switch (state0) {
                        case 0:
                          t2 = t1.get$width();
                        case 2:
                          state0 = 0;
                        case 3:
                          if (state0 === 3 || state0 === 0 && $.ltB(localX, t2))
                            switch (state0) {
                              case 0:
                                t1 = t1.get$height();
                              case 3:
                                state0 = 0;
                                t1 = $.ltB(localY, t1);
                            }
                          else
                            t1 = false;
                      }
                    else
                      t1 = false;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
        if (t1)
          return this;
        return;
    }
  },
  render$1: function(renderState) {
    var t1, t2;
    t1 = this.bitmapData;
    if (!(t1 == null)) {
      t2 = this.clipRectangle;
      if (t2 == null)
        t1.render$1(renderState);
      else
        t1.renderClipped$2(renderState, t2);
    }
  },
  Bitmap$2: function(bitmapData, pixelSnapping) {
    this.clipRectangle = null;
  }
};

$$.BitmapData = {"": "Object;_width,_height,_transparent,_liblib2$_element,_context,_frameMode,_frameOffsetX,_frameOffsetY,_frameX,_frameY,_frameWidth,_frameHeight",
  get$width: function() {
    return this._width;
  },
  get$height: function() {
    return this._height;
  },
  render$1: function(renderState) {
    var t1, t2, t3, t4, t5, t6, t7;
    switch (this._frameMode) {
      case 0:
        renderState.get$context().drawImage$3(this._liblib2$_element, 0, 0);
        break;
      case 1:
        t1 = renderState.get$context();
        t2 = this._liblib2$_element;
        t3 = this._frameX;
        t4 = this._frameY;
        t5 = this._frameWidth;
        t6 = this._frameHeight;
        t1.drawImage$9(t2, t3, t4, t5, t6, this._frameOffsetX, this._frameOffsetY, t5, t6);
        break;
      case 2:
        t1 = renderState.get$context();
        t2 = this._frameOffsetX;
        t3 = this._frameOffsetY;
        t4 = this._frameHeight;
        t1.transform$6(0, -1, 1, 0, t2, $.CONSTANT4.operator$add$1(t3, t4));
        t2 = renderState.get$context();
        t1 = this._liblib2$_element;
        t5 = this._frameX;
        t6 = this._frameY;
        t7 = this._frameWidth;
        t2.drawImage$9(t1, t5, t6, t4, t7, 0, 0, t4, t7);
        break;
    }
  },
  renderClipped$2: function(renderState, clipRectangle) {
    var fLeft, fTop, fRight, fBottom, t1, t2, t3, cLeft, t4, cTop, cRight, cBottom, iLeft, iTop, iRight, iBottom, iOffsetX, iOffsetY, iWidth, iHeight;
    if ($.leB(clipRectangle.get$width(), 0) || $.leB(clipRectangle.get$height(), 0))
      return;
    switch (this._frameMode) {
      case 0:
        renderState.get$context().drawImage$9(this._liblib2$_element, clipRectangle.get$x(), clipRectangle.get$y(), clipRectangle.get$width(), clipRectangle.get$height(), clipRectangle.get$x(), clipRectangle.get$y(), clipRectangle.get$width(), clipRectangle.get$height());
        break;
      case 1:
        fLeft = this._frameX;
        fTop = this._frameY;
        fRight = $.CONSTANT4.operator$add$1(fLeft, this._frameWidth);
        fBottom = $.CONSTANT4.operator$add$1(fTop, this._frameHeight);
        t1 = this._frameOffsetX;
        t2 = $.CONSTANT4.operator$sub$1(fLeft, t1);
        t3 = clipRectangle.get$x();
        cLeft = $.getInterceptor$JSNumber(t2).operator$add$1(t2, t3);
        t3 = this._frameOffsetY;
        t2 = $.CONSTANT4.operator$sub$1(fTop, t3);
        t4 = clipRectangle.get$y();
        cTop = $.getInterceptor$JSNumber(t2).operator$add$1(t2, t4);
        t4 = clipRectangle.get$width();
        cRight = $.getInterceptor$JSNumber(cLeft).operator$add$1(cLeft, t4);
        t4 = clipRectangle.get$height();
        cBottom = $.getInterceptor$JSNumber(cTop).operator$add$1(cTop, t4);
        iLeft = $.gtB(fLeft, cLeft) ? fLeft : cLeft;
        iTop = $.gtB(fTop, cTop) ? fTop : cTop;
        iRight = $.ltB(fRight, cRight) ? fRight : cRight;
        iBottom = $.ltB(fBottom, cBottom) ? fBottom : cBottom;
        t1 = $.CONSTANT4.operator$sub$1(t1, fLeft);
        iOffsetX = $.getInterceptor$JSNumber(t1).operator$add$1(t1, iLeft);
        t3 = $.CONSTANT4.operator$sub$1(t3, fTop);
        iOffsetY = $.getInterceptor$JSNumber(t3).operator$add$1(t3, iTop);
        iWidth = $.getInterceptor$JSNumber(iRight).operator$sub$1(iRight, iLeft);
        iHeight = $.getInterceptor$JSNumber(iBottom).operator$sub$1(iBottom, iTop);
        if ($.gtB(iWidth, 0) && $.gtB(iHeight, 0))
          renderState.get$context().drawImage$9(this._liblib2$_element, iLeft, iTop, iWidth, iHeight, iOffsetX, iOffsetY, iWidth, iHeight);
        break;
      case 2:
        fLeft = this._frameX;
        fTop = this._frameY;
        t1 = this._frameHeight;
        fRight = $.CONSTANT4.operator$add$1(fLeft, t1);
        fBottom = $.CONSTANT4.operator$add$1(fTop, this._frameWidth);
        t2 = this._frameOffsetY;
        t3 = $.CONSTANT4.operator$add$1(fLeft, t2);
        t4 = clipRectangle.get$y();
        t4 = $.getInterceptor$JSNumber(t3).operator$sub$1(t3, t4);
        t1 = $.getInterceptor$JSNumber(t4).operator$add$1(t4, t1);
        t4 = clipRectangle.get$height();
        cLeft = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, t4);
        t4 = this._frameOffsetX;
        t1 = $.CONSTANT4.operator$sub$1(fTop, t4);
        t3 = clipRectangle.get$x();
        cTop = $.getInterceptor$JSNumber(t1).operator$add$1(t1, t3);
        t3 = clipRectangle.get$height();
        cRight = $.getInterceptor$JSNumber(cLeft).operator$add$1(cLeft, t3);
        t3 = clipRectangle.get$width();
        cBottom = $.getInterceptor$JSNumber(cTop).operator$add$1(cTop, t3);
        iLeft = $.gtB(fLeft, cLeft) ? fLeft : cLeft;
        iTop = $.gtB(fTop, cTop) ? fTop : cTop;
        iRight = $.ltB(fRight, cRight) ? fRight : cRight;
        iBottom = $.ltB(fBottom, cBottom) ? fBottom : cBottom;
        t1 = $.CONSTANT4.operator$sub$1(t4, fTop);
        iOffsetX = $.getInterceptor$JSNumber(t1).operator$add$1(t1, iTop);
        t2 = $.CONSTANT4.operator$add$1(t2, fRight);
        iOffsetY = $.getInterceptor$JSNumber(t2).operator$sub$1(t2, iRight);
        iWidth = $.getInterceptor$JSNumber(iBottom).operator$sub$1(iBottom, iTop);
        iHeight = $.getInterceptor$JSNumber(iRight).operator$sub$1(iRight, iLeft);
        if ($.gtB(iWidth, 0) && $.gtB(iHeight, 0)) {
          renderState.get$context().transform$6(0, -1, 1, 0, iOffsetX, $.getInterceptor$JSNumber(iOffsetY).operator$add$1(iOffsetY, iHeight));
          renderState.get$context().drawImage$9(this._liblib2$_element, iLeft, iTop, iHeight, iWidth, 0, 0, iHeight, iWidth);
        }
        break;
    }
  },
  BitmapData$fromImageElement$1: function(imageElement) {
    this._width = imageElement.get$naturalWidth();
    this._height = imageElement.get$naturalHeight();
    this._transparent = true;
    this._liblib2$_element = imageElement;
    this._frameMode = 0;
  }
};

$$.FlumpLibrary = {"": "Object;_url,_md5,_frameRate>,_movieDatas,_textureGroups",
  _getFlumpMovieData$1: function(name$) {
    var t1, t2;
    for (t1 = this._movieDatas, t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if ($.eqB(t2.get$id(), name$))
        return t2;
    }
    throw $.$$throw($.ArgumentError$("The movie '" + $.S(name$) + "' is not available."));
  },
  _createSymbol$1: function(name$) {
    var t1, t2;
    for (t1 = this._textureGroups, t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (t2.get$flumpTextures().containsKey$1(name$) === true) {
        t2 = t2.get$flumpTextures();
        if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
          return this._createSymbol$1$bailout(1, name$, t2, t1);
        if (name$ !== (name$ | 0))
          throw $.iae(name$);
        if (name$ < 0 || name$ >= t2.length)
          throw $.ioore(name$);
        return t2[name$];
      }
    }
    for (t1 = this._movieDatas, t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;)
      if ($.eqB(t1.get$current().get$id(), name$))
        return $.FlumpMovie$(this, name$);
    throw $.$$throw($.ArgumentError$("The symbol '" + $.S(name$) + "' is not available."));
  },
  _createSymbol$1$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        t1 = env2;
        t2 = env1;
        name$ = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._textureGroups;
        t1 = $.getInterceptor$JSArray(t1).get$iterator(t1);
      case 1:
        var t1, t2, name$;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(t1.moveNext$0() === true))
                  break L0;
                t2 = t1.get$current();
              case 1:
                if (state0 === 1 || state0 === 0 && t2.get$flumpTextures().containsKey$1(name$) === true)
                  switch (state0) {
                    case 0:
                      t2 = t2.get$flumpTextures();
                    case 1:
                      state0 = 0;
                      return $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, name$);
                  }
            }
        for (t1 = this._movieDatas, t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;)
          if ($.eqB(t1.get$current().get$id(), name$))
            return $.FlumpMovie$(this, name$);
        throw $.$$throw($.ArgumentError$("The symbol '" + $.S(name$) + "' is not available."));
    }
  }
};

$$.FlumpMovie = {"": "DisplayObject;_flumpLibrary,_flumpMovieData,_flumpMovieLayers,_time,_duration,_frame,_frames,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_transformationMatrixPrivate,_transformationMatrixRefresh,_alpha,_visible,_name,_parent,mask,_tmpMatrix,_tmpMatrixIdentity,_eventListenerLists",
  advanceTime$1: function(time) {
    var t1, t2, t3, frameTime, t4, t6, t7;
    t1 = this._time;
    if (typeof time !== "number")
      throw $.iae(time);
    this._time = t1 + time;
    t2 = this._time;
    t3 = this._duration;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    frameTime = $.CONSTANT7.operator$mod$1(t2, t3);
    t3 = this._frames;
    if (typeof t3 !== "number")
      return this.advanceTime$1$bailout0(1, time, t3, frameTime);
    t3 *= frameTime;
    t4 = this._duration;
    if (typeof t4 !== "number")
      return this.advanceTime$1$bailout0(2, time, t4, t3);
    t6 = $.CONSTANT22.toInt$0(t3 / t4);
    t7 = this._frames;
    if (typeof t7 !== "number")
      return this.advanceTime$1$bailout0(3, time, t6, t7);
    this._frame = $.min(t6, t7 - 1);
    for (t1 = $.CONSTANT3.get$iterator(this._flumpMovieLayers); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t2.advanceTime$1(time);
      t2.setFrame$1(this._frame);
    }
    return true;
  },
  advanceTime$1$bailout0: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        frameTime = env2;
        t3 = env1;
        time = env0;
        break;
      case 2:
        t3 = env2;
        t4 = env1;
        time = env0;
        break;
      case 3:
        t3 = env2;
        t4 = env1;
        time = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._time;
        if (typeof time !== "number")
          throw $.iae(time);
        this._time = t1 + time;
        t2 = this._time;
        t3 = this._duration;
        if (typeof t3 !== "number")
          throw $.iae(t3);
        frameTime = $.CONSTANT7.operator$mod$1(t2, t3);
        t3 = this._frames;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSNumber(t3).operator$mul$1(t3, frameTime);
        t4 = this._duration;
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(t3).operator$div$1(t3, t4);
        t4 = $.getInterceptor$JSNumber(t4).toInt$0(t4);
        t3 = this._frames;
      case 3:
        var t1, t2, t3, frameTime, time, t4;
        state0 = 0;
        this._frame = $.min(t4, $.getInterceptor$JSNumber(t3).operator$sub$1(t3, 1));
        for (t1 = $.CONSTANT3.get$iterator(this._flumpMovieLayers); t1.moveNext$0() === true;) {
          t2 = t1.get$current();
          t2.advanceTime$1(time);
          t2.setFrame$1(this._frame);
        }
        return true;
    }
  },
  render$1: function(renderState) {
    var t1, t2;
    for (t1 = $.CONSTANT3.get$iterator(this._flumpMovieLayers); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (t2.get$visible() === true)
        renderState.renderDisplayObject$1(t2);
    }
  },
  FlumpMovie$2: function(flumpLibrary, name$) {
    var t1, t2, flashMovieLayer;
    this._flumpLibrary = flumpLibrary;
    this._flumpMovieData = flumpLibrary._getFlumpMovieData$1(name$);
    this._flumpMovieLayers = $.List_List(0);
    for (t1 = this._flumpMovieData.get$flumpLayerDatas(), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      flashMovieLayer = $._FlumpMovieLayer$(this._flumpLibrary, t2);
      this._flumpMovieLayers.push(flashMovieLayer);
    }
    this._frames = this._flumpMovieData.get$frames();
    t1 = this._frames;
    t2 = this._flumpLibrary.get$_frameRate();
    this._duration = $.getInterceptor$JSNumber(t1).operator$div$1(t1, t2);
  },
  is$Animatable: true
};

$$._FlumpMovieLayer = {"": "DisplayObject;symbols,symbol,flumpLayerData,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_rotation,_transformationMatrixPrivate,_transformationMatrixRefresh,_alpha,_visible,_name,_parent,mask,_tmpMatrix,_tmpMatrixIdentity,_eventListenerLists",
  advanceTime$1: function(time) {
    var t1 = this.symbol;
    if (typeof t1 === "object" && t1 !== null && !!t1.is$Animatable)
      $.propertyTypeCast(this.symbol, "is$Animatable").advanceTime$1(time);
  },
  setFrame$1: function(frame) {
    var t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, t2, nextKeyframe, t3, interped, ease, inv, t, interped0, t5, t7, t9, t11, t13, a, b, c, d, tx, ty;
    if (typeof frame !== "number")
      return this.setFrame$1$bailout(1, frame);
    t1 = this.flumpLayerData;
    keyframe = t1.getKeyframeForFrame$1(frame);
    x = keyframe.get$x();
    if (typeof x !== "number")
      return this.setFrame$1$bailout(2, frame, t1, keyframe, x);
    y = keyframe.get$y();
    if (typeof y !== "number")
      return this.setFrame$1$bailout(3, frame, t1, keyframe, x, y);
    scaleX = keyframe.get$scaleX();
    if (typeof scaleX !== "number")
      return this.setFrame$1$bailout(4, frame, keyframe, x, y, scaleX, t1);
    scaleY = keyframe.get$scaleY();
    if (typeof scaleY !== "number")
      return this.setFrame$1$bailout(5, frame, keyframe, x, y, scaleX, scaleY, t1);
    skewX = keyframe.get$skewX();
    if (typeof skewX !== "number")
      return this.setFrame$1$bailout(6, frame, keyframe, x, y, scaleX, scaleY, skewX, t1);
    skewY = keyframe.get$skewY();
    if (typeof skewY !== "number")
      return this.setFrame$1$bailout(7, frame, keyframe, x, y, scaleX, scaleY, skewX, skewY, t1);
    pivotX = keyframe.get$pivotX();
    if (typeof pivotX !== "number")
      return this.setFrame$1$bailout(8, frame, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, t1);
    pivotY = keyframe.get$pivotY();
    if (typeof pivotY !== "number")
      return this.setFrame$1$bailout(9, frame, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, t1);
    alpha = keyframe.get$alpha();
    if (typeof alpha !== "number")
      return this.setFrame$1$bailout(10, frame, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, t1);
    t2 = keyframe.get$index();
    if (typeof t2 !== "number")
      return this.setFrame$1$bailout(11, frame, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, t2, t1);
    if (!(t2 === frame) && keyframe.get$tweened() === true) {
      nextKeyframe = t1.getKeyframeAfter$1(keyframe);
      if (!(nextKeyframe == null)) {
        t1 = keyframe.get$index();
        if (typeof t1 !== "number")
          return this.setFrame$1$bailout(12, frame, nextKeyframe, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, t1);
        t1 = frame - t1;
        t3 = keyframe.get$duration();
        if (typeof t3 !== "number")
          return this.setFrame$1$bailout(13, nextKeyframe, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, t3, t1);
        interped = t1 / t3;
        ease = keyframe.get$ease();
        if (typeof ease !== "number")
          return this.setFrame$1$bailout(14, nextKeyframe, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, interped, ease);
        if (!(ease === 0)) {
          if (ease < 0) {
            inv = 1 - interped;
            t = 1 - inv * inv;
            ease = 0 - ease;
          } else
            t = interped * interped;
          interped0 = ease * t + (1 - ease) * interped;
          interped = interped0;
        }
        t1 = nextKeyframe.get$x();
        if (typeof t1 !== "number")
          return this.setFrame$1$bailout(15, nextKeyframe, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, interped, t1);
        x += (t1 - x) * interped;
        t3 = nextKeyframe.get$y();
        if (typeof t3 !== "number")
          return this.setFrame$1$bailout(16, t3, nextKeyframe, keyframe, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, interped, x);
        y += (t3 - y) * interped;
        t5 = nextKeyframe.get$scaleX();
        if (typeof t5 !== "number")
          return this.setFrame$1$bailout(17, nextKeyframe, keyframe, y, t5, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, interped, x);
        scaleX += (t5 - scaleX) * interped;
        t7 = nextKeyframe.get$scaleY();
        if (typeof t7 !== "number")
          return this.setFrame$1$bailout(18, nextKeyframe, keyframe, y, scaleY, skewX, skewY, pivotX, pivotY, alpha, scaleX, t7, interped, x);
        scaleY += (t7 - scaleY) * interped;
        t9 = nextKeyframe.get$skewX();
        if (typeof t9 !== "number")
          return this.setFrame$1$bailout(19, nextKeyframe, keyframe, y, skewX, skewY, pivotX, pivotY, alpha, scaleX, scaleY, t9, interped, x);
        skewX += (t9 - skewX) * interped;
        t11 = nextKeyframe.get$skewY();
        if (typeof t11 !== "number")
          return this.setFrame$1$bailout(20, nextKeyframe, keyframe, y, skewY, pivotX, pivotY, alpha, scaleX, scaleY, interped, skewX, t11, x);
        skewY += (t11 - skewY) * interped;
        t13 = nextKeyframe.get$alpha();
        if (typeof t13 !== "number")
          return this.setFrame$1$bailout(21, skewY, t13, keyframe, y, pivotX, pivotY, alpha, scaleX, scaleY, interped, skewX, x);
        alpha += (t13 - alpha) * interped;
      }
    }
    a = scaleX * Math.cos($.checkNum(skewY));
    b = scaleX * Math.sin($.checkNum(skewY));
    c = -scaleY * Math.sin($.checkNum(skewX));
    d = scaleY * Math.cos($.checkNum(skewX));
    tx = x - (pivotX * a + pivotY * c);
    ty = y - (pivotX * b + pivotY * d);
    this._transformationMatrixRefresh = false;
    this._transformationMatrixPrivate.setTo$6(a, b, c, d, tx, ty);
    this._alpha = alpha;
    this._visible = keyframe.get$visible();
    t1 = keyframe.get$ref();
    if (!(t1 == null)) {
      t2 = this.symbols;
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
        return this.setFrame$1$bailout(22, t2, t1);
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      t1 = t2[t1];
    } else
      t1 = null;
    this.symbol = t1;
  },
  setFrame$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12) {
    switch (state0) {
      case 1:
        frame = env0;
        break;
      case 2:
        x = env3;
        keyframe = env2;
        t1 = env1;
        frame = env0;
        break;
      case 3:
        y = env4;
        x = env3;
        keyframe = env2;
        t1 = env1;
        frame = env0;
        break;
      case 4:
        t1 = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        frame = env0;
        break;
      case 5:
        t1 = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        frame = env0;
        break;
      case 6:
        t1 = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        frame = env0;
        break;
      case 7:
        t1 = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        frame = env0;
        break;
      case 8:
        t1 = env9;
        pivotX = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        frame = env0;
        break;
      case 9:
        t1 = env10;
        pivotY = env9;
        pivotX = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        frame = env0;
        break;
      case 10:
        t1 = env11;
        alpha = env10;
        pivotY = env9;
        pivotX = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        frame = env0;
        break;
      case 11:
        t1 = env12;
        t2 = env11;
        alpha = env10;
        pivotY = env9;
        pivotX = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        frame = env0;
        break;
      case 12:
        t1 = env12;
        alpha = env11;
        pivotY = env10;
        pivotX = env9;
        skewY = env8;
        skewX = env7;
        scaleY = env6;
        scaleX = env5;
        y = env4;
        x = env3;
        keyframe = env2;
        nextKeyframe = env1;
        frame = env0;
        break;
      case 13:
        t1 = env12;
        t3 = env11;
        alpha = env10;
        pivotY = env9;
        pivotX = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        nextKeyframe = env0;
        break;
      case 14:
        ease = env12;
        interped = env11;
        alpha = env10;
        pivotY = env9;
        pivotX = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        nextKeyframe = env0;
        break;
      case 15:
        t1 = env12;
        interped = env11;
        alpha = env10;
        pivotY = env9;
        pivotX = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        x = env2;
        keyframe = env1;
        nextKeyframe = env0;
        break;
      case 16:
        x = env12;
        interped = env11;
        alpha = env10;
        pivotY = env9;
        pivotX = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        y = env3;
        keyframe = env2;
        nextKeyframe = env1;
        t1 = env0;
        break;
      case 17:
        x = env12;
        interped = env11;
        alpha = env10;
        pivotY = env9;
        pivotX = env8;
        skewY = env7;
        skewX = env6;
        scaleY = env5;
        scaleX = env4;
        t1 = env3;
        y = env2;
        keyframe = env1;
        nextKeyframe = env0;
        break;
      case 18:
        x = env12;
        interped = env11;
        t1 = env10;
        scaleX = env9;
        alpha = env8;
        pivotY = env7;
        pivotX = env6;
        skewY = env5;
        skewX = env4;
        scaleY = env3;
        y = env2;
        keyframe = env1;
        nextKeyframe = env0;
        break;
      case 19:
        x = env12;
        interped = env11;
        t1 = env10;
        scaleY = env9;
        scaleX = env8;
        alpha = env7;
        pivotY = env6;
        pivotX = env5;
        skewY = env4;
        skewX = env3;
        y = env2;
        keyframe = env1;
        nextKeyframe = env0;
        break;
      case 20:
        x = env12;
        t1 = env11;
        skewX = env10;
        interped = env9;
        scaleY = env8;
        scaleX = env7;
        alpha = env6;
        pivotY = env5;
        pivotX = env4;
        skewY = env3;
        y = env2;
        keyframe = env1;
        nextKeyframe = env0;
        break;
      case 21:
        x = env11;
        skewX = env10;
        interped = env9;
        scaleY = env8;
        scaleX = env7;
        alpha = env6;
        pivotY = env5;
        pivotX = env4;
        y = env3;
        keyframe = env2;
        t1 = env1;
        skewY = env0;
        break;
      case 22:
        t1 = env1;
        t2 = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.flumpLayerData;
        keyframe = t1.getKeyframeForFrame$1(frame);
        x = keyframe.get$x();
      case 2:
        state0 = 0;
        y = keyframe.get$y();
      case 3:
        state0 = 0;
        scaleX = keyframe.get$scaleX();
      case 4:
        state0 = 0;
        scaleY = keyframe.get$scaleY();
      case 5:
        state0 = 0;
        skewX = keyframe.get$skewX();
      case 6:
        state0 = 0;
        skewY = keyframe.get$skewY();
      case 7:
        state0 = 0;
        pivotX = keyframe.get$pivotX();
      case 8:
        state0 = 0;
        pivotY = keyframe.get$pivotY();
      case 9:
        state0 = 0;
        alpha = keyframe.get$alpha();
      case 10:
        state0 = 0;
        t2 = keyframe.get$index();
      case 11:
        state0 = 0;
      default:
        if (state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 0 && !$.eqB(t2, frame) && keyframe.get$tweened() === true)
          switch (state0) {
            case 0:
              nextKeyframe = t1.getKeyframeAfter$1(keyframe);
            default:
              if (state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 0 && !(nextKeyframe == null))
                switch (state0) {
                  case 0:
                    t1 = keyframe.get$index();
                  case 12:
                    state0 = 0;
                    t1 = $.getInterceptor$JSNumber(frame).operator$sub$1(frame, t1);
                    t3 = keyframe.get$duration();
                  case 13:
                    state0 = 0;
                    interped = $.getInterceptor$JSNumber(t1).operator$div$1(t1, t3);
                    ease = keyframe.get$ease();
                  case 14:
                    state0 = 0;
                    if (!$.eqB(ease, 0)) {
                      if ($.ltB(ease, 0)) {
                        if (typeof interped !== "number")
                          throw $.iae(interped);
                        inv = 1 - interped;
                        t = 1 - inv * inv;
                        if (typeof ease !== "number")
                          throw $.iae(ease);
                        ease = 0 - ease;
                      } else
                        t = $.getInterceptor$JSNumber(interped).operator$mul$1(interped, interped);
                      t1 = $.getInterceptor$JSNumber(ease).operator$mul$1(ease, t);
                      if (typeof ease !== "number")
                        throw $.iae(ease);
                      t2 = 1 - ease;
                      if (typeof interped !== "number")
                        throw $.iae(interped);
                      t2 *= interped;
                      interped = $.getInterceptor$JSNumber(t1).operator$add$1(t1, t2);
                    }
                    t1 = nextKeyframe.get$x();
                  case 15:
                    state0 = 0;
                    t1 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, x);
                    t1 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, interped);
                    x = $.getInterceptor$JSNumber(x).operator$add$1(x, t1);
                    t1 = nextKeyframe.get$y();
                  case 16:
                    state0 = 0;
                    t1 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, y);
                    t1 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, interped);
                    y = $.getInterceptor$JSNumber(y).operator$add$1(y, t1);
                    t1 = nextKeyframe.get$scaleX();
                  case 17:
                    state0 = 0;
                    t1 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, scaleX);
                    t1 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, interped);
                    scaleX = $.getInterceptor$JSNumber(scaleX).operator$add$1(scaleX, t1);
                    t1 = nextKeyframe.get$scaleY();
                  case 18:
                    state0 = 0;
                    t1 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, scaleY);
                    t1 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, interped);
                    scaleY = $.getInterceptor$JSNumber(scaleY).operator$add$1(scaleY, t1);
                    t1 = nextKeyframe.get$skewX();
                  case 19:
                    state0 = 0;
                    t1 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, skewX);
                    t1 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, interped);
                    skewX = $.getInterceptor$JSNumber(skewX).operator$add$1(skewX, t1);
                    t1 = nextKeyframe.get$skewY();
                  case 20:
                    state0 = 0;
                    t1 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, skewY);
                    t1 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, interped);
                    skewY = $.getInterceptor$JSNumber(skewY).operator$add$1(skewY, t1);
                    t1 = nextKeyframe.get$alpha();
                  case 21:
                    state0 = 0;
                    t1 = $.getInterceptor$JSNumber(t1).operator$sub$1(t1, alpha);
                    t1 = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, interped);
                    alpha = $.getInterceptor$JSNumber(alpha).operator$add$1(alpha, t1);
                }
          }
        t1 = Math.cos($.checkNum(skewY));
        t2 = $.getInterceptor$JSNumber(scaleX);
        a = t2.operator$mul$1(scaleX, t1);
        b = t2.operator$mul$1(scaleX, Math.sin($.checkNum(skewY)));
        t2 = $.getInterceptor$JSNumber(scaleY);
        t1 = t2.operator$negate$0(scaleY);
        t3 = Math.sin($.checkNum(skewX));
        c = $.getInterceptor$JSNumber(t1).operator$mul$1(t1, t3);
        d = t2.operator$mul$1(scaleY, Math.cos($.checkNum(skewX)));
        t2 = $.getInterceptor$JSNumber(pivotX);
        t3 = t2.operator$mul$1(pivotX, a);
        t1 = $.getInterceptor$JSNumber(pivotY);
        t4 = t1.operator$mul$1(pivotY, c);
        t4 = $.getInterceptor$JSNumber(t3).operator$add$1(t3, t4);
        tx = $.getInterceptor$JSNumber(x).operator$sub$1(x, t4);
        t2 = t2.operator$mul$1(pivotX, b);
        t1 = t1.operator$mul$1(pivotY, d);
        t1 = $.getInterceptor$JSNumber(t2).operator$add$1(t2, t1);
        ty = $.getInterceptor$JSNumber(y).operator$sub$1(y, t1);
        this._transformationMatrixRefresh = false;
        this._transformationMatrixPrivate.setTo$6(a, b, c, d, tx, ty);
        this._alpha = alpha;
        this._visible = keyframe.get$visible();
        t1 = keyframe.get$ref();
      case 22:
        var frame, t1, keyframe, x, y, scaleX, scaleY, skewX, skewY, pivotX, pivotY, alpha, t2, nextKeyframe, t3, interped, ease, inv, t, a, b, c, d, t4, tx, ty;
        if (state0 === 22 || state0 === 0 && !(t1 == null))
          switch (state0) {
            case 0:
              t2 = this.symbols;
            case 22:
              state0 = 0;
              t1 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, t1);
          }
        else
          t1 = null;
        this.symbol = t1;
    }
  },
  render$1: function(renderState) {
    var t1 = this.symbol;
    if (!(t1 == null))
      t1.render$1(renderState);
  },
  _FlumpMovieLayer$2: function(flumpLibrary, flumpLayerData) {
    var t1, t2, t3, t4;
    this.symbols = $.Map_Map();
    for (t1 = this.flumpLayerData.get$flumpKeyframeDatas(), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = t2.get$ref();
      if (!(t3 == null) && $.eqB(this.symbols.containsKey$1(t3), false)) {
        t3 = this.symbols;
        t2 = t2.get$ref();
        t4 = flumpLibrary._createSymbol$1(t2);
        $.getInterceptor$JSArray(t3).operator$indexSet$2(t3, t2, t4);
      }
    }
    this.setFrame$1(0);
  },
  is$Animatable: true
};

$$._FlumpMovieData = {"": "Object;id=,flumpLibrary,flumpLayerDatas>",
  get$frames: function() {
    var t1, frames$;
    for (t1 = $.CONSTANT3.get$iterator(this.flumpLayerDatas), frames$ = 0; t1.moveNext$0() === true;)
      frames$ = $.max(frames$, t1.get$current().get$frames());
    return frames$;
  },
  _FlumpMovieData$2: function(json, flumpLibrary) {
    var t1, flumpLayerData;
    t1 = $.getInterceptor$JSStringJSArray(json);
    this.id = t1.operator$index$1(json, "id");
    this.flumpLayerDatas = $.List_List(0);
    for (t1 = t1.operator$index$1(json, "layers"), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      flumpLayerData = $._FlumpLayerData$(t1.get$current());
      this.flumpLayerDatas.push(flumpLayerData);
    }
  }
};

$$._FlumpLayerData = {"": "Object;name,flumpKeyframeDatas>,flipbook",
  get$frames: function() {
    var t1, t2, t3, flumpKeyframeData;
    t1 = this.flumpKeyframeDatas;
    t2 = t1.length;
    t3 = t2 - 1;
    if (t3 < 0)
      throw $.ioore(t3);
    flumpKeyframeData = t1[t3];
    t3 = flumpKeyframeData.get$index();
    t1 = flumpKeyframeData.get$duration();
    return $.getInterceptor$JSNumber(t3).operator$add$1(t3, t1);
  },
  getKeyframeForFrame$1: function(frame) {
    var i, t1, t2;
    if (typeof frame !== "number")
      return this.getKeyframeForFrame$1$bailout(1, frame);
    i = 1;
    while (true) {
      t1 = this.flumpKeyframeDatas;
      if (!(i < t1.length && $.leB(t1[i].get$index(), frame)))
        break;
      ++i;
    }
    t1 = this.flumpKeyframeDatas;
    t2 = i - 1;
    if (t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  getKeyframeForFrame$1$bailout: function(state0, frame) {
    var i, t1, t2;
    i = 1;
    while (true) {
      t1 = this.flumpKeyframeDatas;
      if (!(i < t1.length && $.leB(t1[i].get$index(), frame)))
        break;
      ++i;
    }
    t1 = this.flumpKeyframeDatas;
    t2 = i - 1;
    if (t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  getKeyframeAfter$1: function(flumpKeyframeData) {
    var t1, t2, i, t3;
    for (t1 = this.flumpKeyframeDatas, t2 = t1.length, i = 0; i < t2 - 1; ++i) {
      t3 = t1[i];
      if (t3 == null ? flumpKeyframeData == null : t3 === flumpKeyframeData)
        return t1[i + 1];
    }
    return;
  },
  _FlumpLayerData$1: function(json) {
    var t1, flumpKeyframeData;
    t1 = $.getInterceptor$JSStringJSArray(json);
    this.name = t1.operator$index$1(json, "name");
    this.flumpKeyframeDatas = $.List_List(0);
    this.flipbook = json.containsKey$1("flipbook") === true && t1.operator$index$1(json, "flipbook");
    for (t1 = t1.operator$index$1(json, "keyframes"), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      flumpKeyframeData = $._FlumpKeyframeData$(t1.get$current());
      this.flumpKeyframeDatas.push(flumpKeyframeData);
    }
  }
};

$$._FlumpKeyframeData = {"": "Object;index>,duration>,ref>,label,x=,y=,scaleX>,scaleY>,skewX>,skewY>,pivotX>,pivotY>,visible>,alpha>,tweened>,ease>",
  _FlumpKeyframeData$1: function(json) {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(json);
    this.index = t1.operator$index$1(json, "index");
    this.duration = t1.operator$index$1(json, "duration");
    this.ref = json.containsKey$1("ref") === true ? t1.operator$index$1(json, "ref") : null;
    this.label = json.containsKey$1("label") === true ? t1.operator$index$1(json, "label") : null;
    if (json.containsKey$1("loc") === true) {
      t2 = t1.operator$index$1(json, "loc");
      t2 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, 0);
    } else
      t2 = 0;
    this.x = t2;
    if (json.containsKey$1("loc") === true) {
      t2 = t1.operator$index$1(json, "loc");
      t2 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, 1);
    } else
      t2 = 0;
    this.y = t2;
    if (json.containsKey$1("scale") === true) {
      t2 = t1.operator$index$1(json, "scale");
      t2 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, 0);
    } else
      t2 = 1;
    this.scaleX = t2;
    if (json.containsKey$1("scale") === true) {
      t2 = t1.operator$index$1(json, "scale");
      t2 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, 1);
    } else
      t2 = 1;
    this.scaleY = t2;
    if (json.containsKey$1("skew") === true) {
      t2 = t1.operator$index$1(json, "skew");
      t2 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, 0);
    } else
      t2 = 0;
    this.skewX = t2;
    if (json.containsKey$1("skew") === true) {
      t2 = t1.operator$index$1(json, "skew");
      t2 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, 1);
    } else
      t2 = 0;
    this.skewY = t2;
    if (json.containsKey$1("pivot") === true) {
      t2 = t1.operator$index$1(json, "pivot");
      t2 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, 0);
    } else
      t2 = 0;
    this.pivotX = t2;
    if (json.containsKey$1("pivot") === true) {
      t2 = t1.operator$index$1(json, "pivot");
      t2 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, 1);
    } else
      t2 = 0;
    this.pivotY = t2;
    this.visible = json.containsKey$1("visible") !== true || t1.operator$index$1(json, "visible");
    this.alpha = json.containsKey$1("alpha") === true ? t1.operator$index$1(json, "alpha") : 1;
    this.tweened = json.containsKey$1("tweened") !== true || t1.operator$index$1(json, "tweened");
    this.ease = json.containsKey$1("ease") === true ? t1.operator$index$1(json, "ease") : 0;
  }
};

$$._FlumpTextureGroup = {"": "Object;flumpLibrary,flumpTextures>,completer>",
  _FlumpTextureGroup$2: function(json, flumpLibrary, box_0) {
    var t1, t2, t3, t4, file, url, t5, imageElement, symbol, rect, origin, t6, t7, t8, flumpTexture;
    this.flumpTextures = $.Map_Map();
    this.completer = $.Completer_Completer();
    box_0.imageLoadCount_0 = 0;
    for (t1 = $.listTypeCast($.getInterceptor$JSStringJSArray(json).operator$index$1(json, "atlases")), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1), t2 = this.flumpLibrary; t1.moveNext$0() === true;) {
      t3 = t1.get$current();
      t4 = $.getInterceptor$JSStringJSArray(t3);
      file = $.stringTypeCast(t4.operator$index$1(t3, "file"));
      url = $._replaceFilename(t2._url, file);
      t5 = box_0.imageLoadCount_0;
      box_0.imageLoadCount_0 = $.getInterceptor$JSNumber(t5).operator$add$1(t5, 1);
      imageElement = $.ImageElement_ImageElement(null, null, null);
      imageElement.get$onLoad().listen$1(new $.anon0(box_0, this));
      imageElement.get$onError().listen$1(new $.anon1(this));
      imageElement.set$src(url);
      for (t3 = $.listTypeCast(t4.operator$index$1(t3, "textures")), t3 = $.getInterceptor$JSArray(t3).get$iterator(t3); t3.moveNext$0() === true;) {
        t4 = t3.get$current();
        t5 = $.getInterceptor$JSStringJSArray(t4);
        symbol = $.stringTypeCast(t5.operator$index$1(t4, "symbol"));
        rect = $.listTypeCast(t5.operator$index$1(t4, "rect"));
        origin = $.listTypeCast(t5.operator$index$1(t4, "origin"));
        t4 = $.getInterceptor$JSStringJSArray(rect);
        t5 = t4.operator$index$1(rect, 0);
        t6 = t4.operator$index$1(rect, 1);
        t7 = t4.operator$index$1(rect, 2);
        t4 = t4.operator$index$1(rect, 3);
        t8 = $.getInterceptor$JSStringJSArray(origin);
        flumpTexture = $._FlumpTexture$(t5, t6, t7, t4, t8.operator$index$1(origin, 0), t8.operator$index$1(origin, 1), imageElement);
        t4 = this.flumpTextures;
        $.getInterceptor$JSArray(t4).operator$indexSet$2(t4, symbol, flumpTexture);
      }
    }
  }
};

$$._FlumpTexture = {"": "Object;x=,y=,width=,height=,originX,originY,imageElement",
  render$1: function(renderState) {
    var t1, t2, t3, t4, t5, t6;
    t1 = renderState.get$context();
    t2 = this.imageElement;
    t3 = this.x;
    t4 = this.y;
    t5 = this.width;
    t6 = this.height;
    t1.drawImage$9(t2, t3, t4, t5, t6, 0, 0, t5, t6);
  }
};

$$.main_anon = {"": "Closure;stage_0,renderLoop_1",
  call$1: function(flumpLibrary) {
    var t1, t2, idle, walk, attack, defeat;
    t1 = $.BitmapData_loadImage("images/atlas0.png");
    t2 = this.stage_0;
    t1.then$1(new $.main__anon(t2));
    idle = $.FlumpMovie$(flumpLibrary, "idle");
    idle.set$x(500);
    idle.set$y(200);
    idle.addTo$1(t2);
    walk = $.FlumpMovie$(flumpLibrary, "walk");
    walk.set$x(150);
    walk.set$y(460);
    walk.addTo$1(t2);
    attack = $.FlumpMovie$(flumpLibrary, "attack");
    attack.set$x(450);
    attack.set$y(460);
    attack.addTo$1(t2);
    defeat = $.FlumpMovie$(flumpLibrary, "defeat");
    defeat.set$x(720);
    defeat.set$y(460);
    defeat.addTo$1(t2);
    t2 = this.renderLoop_1;
    t1 = t2.get$juggler();
    $.getInterceptor$JSArray(t1).add$1(t1, idle);
    t1 = t2.get$juggler();
    $.getInterceptor$JSArray(t1).add$1(t1, walk);
    t1 = t2.get$juggler();
    $.getInterceptor$JSArray(t1).add$1(t1, attack);
    t2 = t2.get$juggler();
    $.getInterceptor$JSArray(t2).add$1(t2, defeat);
  }
};

$$.main__anon = {"": "Closure;stage_2",
  call$1: function(bitmapData) {
    var bitmap = $.Bitmap$(bitmapData, "auto");
    bitmap.set$x(40);
    bitmap.set$y(40);
    this.stage_2.addChild$1(bitmap);
  }
};

$$.FlumpLibrary_load_onLoad = {"": "Closure;url_0,completer_1",
  call$1: function(event$) {
    var data, textureGroupLoaders, flumpLibrary, t1, flumpMovie, t2, flumpTextureGroup;
    data = $.callTypeCast($.parse(event$.get$target().get$responseText(), null), "is$Map");
    textureGroupLoaders = $.List_List(0);
    flumpLibrary = $.FlumpLibrary$();
    flumpLibrary._url = this.url_0;
    flumpLibrary._md5 = data.operator$index$1("md5");
    t1 = data.operator$index$1("frameRate");
    flumpLibrary._frameRate = $.getInterceptor$JSNumber(t1).toInt$0(t1);
    flumpLibrary._movieDatas = $.List_List(0);
    flumpLibrary._textureGroups = $.List_List(0);
    for (t1 = $.listTypeCast(data.operator$index$1("movies")), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      flumpMovie = $._FlumpMovieData$(t1.get$current(), flumpLibrary);
      t2 = flumpLibrary._movieDatas;
      $.getInterceptor$JSArray(t2).add$1(t2, flumpMovie);
    }
    for (t1 = $.listTypeCast(data.operator$index$1("textureGroups")), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      flumpTextureGroup = $._FlumpTextureGroup$(t1.get$current(), flumpLibrary);
      t2 = flumpLibrary._textureGroups;
      $.getInterceptor$JSArray(t2).add$1(t2, flumpTextureGroup);
      textureGroupLoaders.push(flumpTextureGroup.completer.get$future());
    }
    t1 = $._FutureImpl__FutureImpl$wait(textureGroupLoaders);
    t2 = this.completer_1;
    t1.then$1(new $.FlumpLibrary_load_onLoad_anon(t2, flumpLibrary)).catchError$1(new $.FlumpLibrary_load_onLoad_anon0(t2));
  }
};

$$.FlumpLibrary_load_onLoad_anon = {"": "Closure;completer_2,flumpLibrary_3",
  call$1: function(value) {
    this.completer_2.complete$1(this.flumpLibrary_3);
  }
};

$$.FlumpLibrary_load_onLoad_anon0 = {"": "Closure;completer_4",
  call$1: function(error) {
    this.completer_4.completeError$1($.StateError$("Failed to load image."));
  }
};

$$.FlumpLibrary_load_onError = {"": "Closure;completer_5",
  call$1: function(event$) {
    this.completer_5.completeError$1($.StateError$("Failed to load json file."));
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$1: function(_) {
    this.thenFuture_0._sendValue$1(this.value_1);
  }
};

$$.anon = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
};

$$.internalCallback = {"": "Closure;this_2,callback_3",
  call$0: function() {
    var t1, t2;
    t1 = this.callback_3;
    t2 = this.this_2;
    t1.call$1(t2);
    t2.set$_handle(null);
    t2 = $globalState.get$topEventLoop();
    t1 = t2.get$activeTimerCount();
    t2.set$activeTimerCount($.getInterceptor$JSNumber(t1).operator$sub$1(t1, 1));
  }
};

$$.Maps__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true) {
      t2 = this.result_1;
      $.getInterceptor$JSArray(t2).add$1(t2, ", ");
    }
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.Collections__emitObject(k, t1, t2);
    $.getInterceptor$JSArray(t1).add$1(t1, ": ");
    $.Collections__emitObject(v, t1, t2);
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1, t2;
    t1 = this.box_0;
    t2 = t1.count_0;
    t1.count_0 = $.getInterceptor$JSNumber(t2).operator$add$1(t2, 1);
  }
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  }
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._setValue$1(false);
  }
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setValue$1(true);
  }
};

$$._LinkedHashMapImpl_forEach_anon = {"": "Closure;f_0",
  call$1: function(entry) {
    this.f_0.call$2(entry.get$key(), entry.get$value());
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1, t2, t3;
    t1 = this.box_0;
    if ($.gtB(t1.i_1, 0)) {
      t2 = t1.sb_0;
      $.getInterceptor$JSArray(t2).add$1(t2, ", ");
    }
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, key);
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, ": ");
    t2 = t1.sb_0;
    t3 = $.Error_safeToString(value);
    $.getInterceptor$JSArray(t2).add$1(t2, t3);
    t3 = t1.i_1;
    t1.i_1 = $.getInterceptor$JSNumber(t3).operator$add$1(t3, 1);
  }
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$1: function(_) {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError() === true) {
      t1._clearUnhandledError$0();
      error = t1.get$_resultOrListeners();
      $.print("Uncaught Error: " + $.S(error.get$error()));
      t1 = error.get$stackTrace();
      if (!(t1 == null))
        $.print("Stack Trace:\n" + $.S(t1) + "\n");
      throw $.$$throw(error.get$error());
    }
  }
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$1: function(_) {
    this.errorFuture_1._sendError$1(this.error_0);
  }
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,completer_1,values_2,pos_3",
  call$1: function(value) {
    var t1, t2, t3, remaining;
    t1 = this.values_2;
    t2 = this.pos_3;
    $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, t2, value);
    t2 = this.box_0;
    t3 = t2.remaining_0;
    remaining = $.getInterceptor$JSNumber(t3).operator$sub$1(t3, 1);
    t2.remaining_0 = remaining;
    if ($.eqB(remaining, 0))
      this.completer_1.complete$1(t1);
  }
};

$$._FutureImpl__FutureImpl$wait_anon0 = {"": "Closure;box_0,completer_4",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.completed_1 !== true)
      this.completer_4.completeError$2(error.get$error(), error.get$stackTrace());
    t1.completed_1 = true;
  }
};

$$.anon0 = {"": "Closure;box_0,this_1",
  call$1: function(event$) {
    var t1, t2, imageLoadCount;
    t1 = this.box_0;
    t2 = t1.imageLoadCount_0;
    imageLoadCount = $.getInterceptor$JSNumber(t2).operator$sub$1(t2, 1);
    t1.imageLoadCount_0 = imageLoadCount;
    if ($.eqB(imageLoadCount, 0)) {
      t1 = this.this_1;
      t1.get$completer().complete$1(t1);
    }
  }
};

$$.anon1 = {"": "Closure;this_2",
  call$1: function(event$) {
    this.this_2.get$completer().completeError$1($.StateError$("Failed to load image."));
  }
};

$$.JsonParser_parseNumber_handleLiteral = {"": "Closure;box_0,this_1,start_2",
  call$1: function(position) {
    var t1, t2, t3, literal, value;
    t1 = this.this_1;
    t2 = t1.get$source();
    t3 = this.start_2;
    literal = $.getInterceptor$JSString(t2).substring$2(t2, t3, position);
    value = this.box_0.isDouble_0 === true ? $.double_parse(literal, null) : $.int_parse(literal, null, null);
    t1.get$listener().handleNumber$1(value);
    return position;
  }
};

$$.Stage__onMultitouchInputModeChanged_anon = {"": "Closure;",
  call$1: function(s) {
    return s.cancel$0();
  }
};

$$.Stream_contains_anon = {"": "Closure;box_0,match_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_contains__anon(this.match_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_contains__anon0(t2, t3, element), $._cancelAndError(t2.subscription_0, t3), null);
  }
};

$$.Stream_contains__anon = {"": "Closure;match_3,element_4",
  call$0: function() {
    return this.match_3.call$1(this.element_4);
  }
};

$$.Stream_contains__anon0 = {"": "Closure;box_0,future_5,element_6",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._setValue$1(this.element_6);
    }
  }
};

$$.Stream_contains_anon0 = {"": "Closure;future_7",
  call$0: function() {
    this.future_7._setValue$1(false);
  }
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  }
};

$$._DateImpl_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var absN, sign;
    absN = $.getInterceptor$JSNumber(n).abs$0(n);
    sign = $.ltB(n, 0) ? "-" : "";
    if ($.geB(absN, 1000))
      return $.S(n);
    if ($.geB(absN, 100))
      return sign + "0" + $.S(absN);
    if ($.geB(absN, 10))
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$._DateImpl_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.geB(n, 100))
      return $.S(n);
    if ($.geB(n, 10))
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$._DateImpl_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.geB(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.BitmapData_loadImage_anon = {"": "Closure;completer_0,image_1",
  call$1: function(event$) {
    return this.completer_0.complete$1($.BitmapData$fromImageElement(this.image_1));
  }
};

$$.BitmapData_loadImage_anon0 = {"": "Closure;completer_2",
  call$1: function(event$) {
    return this.completer_2.completeError$1($.StateError$("Error loading image."));
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1, t2;
    this.port_1.close$0();
    t1 = typeof value === "object" && value !== null && !!value.is$Exception;
    t2 = this.completer_0;
    if (t1)
      t2.completeError$1(value);
    else
      t2.complete$1(value);
  }
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.get$isWorker() === true)
      $globalState.get$mainManager().postMessage$1(workerMessage);
    else {
      t2 = $globalState.get$managers();
      t1 = t1.get$_workerId();
      manager = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, t1);
      if (!(manager == null))
        manager.postMessage$1(workerMessage);
    }
  }
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    var t1 = this.values_0;
    return $.getInterceptor$JSArray(t1).add$1(t1, v);
  }
};

$$._LinkedHashMapImpl_values_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$value();
  }
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, t5, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $globalState.get$isolates();
    t5 = t2.get$_isolateId();
    isolate = $.getInterceptor$JSStringJSArray(t4).operator$index$1(t4, t5);
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = !($globalState.get$currentContext() == null) && !$.eqB($globalState.get$currentContext().get$id(), t2.get$_isolateId());
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  }
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (!(t1.get$_receivePort().get$_callback() == null)) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  }
};

$$.Stream_toList_anon = {"": "Closure;result_0",
  call$1: function(data) {
    var t1 = this.result_0;
    $.getInterceptor$JSArray(t1).add$1(t1, data);
  }
};

$$.Stream_toList_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  }
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    var t1 = this.keys_0;
    return $.getInterceptor$JSArray(t1).add$1(t1, k);
  }
};

$$._LinkedHashMapImpl_keys_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$key();
  }
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2, t3;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    t3 = t2._dispatch$1(key);
    t2 = t2._dispatch$1(val);
    $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, t3, t2);
  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (this.this_0.runIteration$0() !== true)
      return;
    $.Timer_Timer(0, new $._EventLoop__runHelper_next_anon(this));
  }
};

$$._EventLoop__runHelper_next_anon = {"": "Closure;next_1",
  call$1: function(_) {
    return this.next_1.call$0();
  }
};

$$.BoundClosure = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$.Strings__toJsStringArray = function(strings) {
  var length$, i, string;
  if (typeof strings !== "object" || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  if (!strings.constructor === Array)
    strings = $.List_List$from(strings);
  length$ = strings.length;
  for (i = 0; i < length$; ++i) {
    if (i >= strings.length)
      throw $.ioore(i);
    string = strings[i];
    if (!(typeof string === "string"))
      throw $.$$throw($.ArgumentError$(string));
  }
  return strings;
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      if (!(!(strings == null) && strings.constructor === Array))
        strings = $.List_List$from(strings);
      t1 = $.getInterceptor$JSStringJSArray(strings);
      length$ = t1.get$length(strings);
    case 2:
      var strings, t1, length$, i, string;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        string = t1.operator$index$1(strings, i);
        if (!(typeof string === "string"))
          throw $.$$throw($.ArgumentError$(string));
      }
      return strings;
  }
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $globalState.get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $globalState.get$currentContext();
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.set$rootContext(rootContext);
  $globalState.set$currentContext(rootContext);
  rootContext.eval$1(entry);
  $globalState.get$topEventLoop().run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var t1, t2, src;
  for (t1 = $.CONSTANT3.get$iterator(document.getElementsByTagName('script')); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    src = t2 && t2.src;
    if (!(src == null)) {
      t2 = $.getInterceptor$JSString(src);
      t2 = t2.endsWith$1(src, "test_controller.js") !== true && t2.endsWith$1(src, "dart.js") !== true;
    } else
      t2 = false;
    if (t2)
      return src;
  }
  return;
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$JSStringJSArray(msg);
  switch (t1.operator$index$1(msg, "command")) {
    case "start":
      t2 = t1.operator$index$1(msg, "id");
      $globalState.set$currentManagerId(t2);
      entryPoint = $[t1.operator$index$1(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.operator$index$1(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.get$topEventLoop().enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.set$currentContext(context);
      $globalState.get$topEventLoop().run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.operator$index$1(msg, "functionName"), t1.operator$index$1(msg, "uri"), t1.operator$index$1(msg, "replyPort"));
      break;
    case "message":
      if (!(t1.operator$index$1(msg, "port") == null))
        t1.operator$index$1(msg, "port").send$2(t1.operator$index$1(msg, "msg"), t1.operator$index$1(msg, "replyTo"));
      $globalState.get$topEventLoop().run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      t1 = $globalState.get$managers();
      t2 = sender.get$id();
      $.getInterceptor$JSArray(t1).remove$1(t1, t2);
      sender.terminate$0();
      $globalState.get$topEventLoop().run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.operator$index$1(msg, "msg"));
      break;
    case "print":
      if ($globalState.get$isWorker() === true)
        $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.print(t1.operator$index$1(msg, "msg"));
      break;
    case "error":
      throw $.$$throw(t1.operator$index$1(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, t1, exception;
  if ($globalState.get$isWorker() === true)
    $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      t1 = msg;
      $.get$globalThis().console.log(t1);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($.Exception_Exception(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePort_ReceivePort();
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  replyTo.send$2("spawned", $.lazyPort.toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.get$nextManagerId();
  t1.set$nextManagerId($.getInterceptor$JSNumber(workerId).operator$add$1(workerId, 1));
  worker.set$id(workerId);
  t1 = $globalState.get$managers();
  $.getInterceptor$JSArray(t1).operator$indexSet$2(t1, workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.getInterceptor$JSNumber(t1).operator$add$1(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return !($.get$globalThis().setTimeout == null);
};

$._ArrayIterator$ = function(_list) {
  return new $._ArrayIterator(_list, -1, null);
};

$.gt = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a >= b : $.ge$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a < b : $.lt$slow(a, b);
};

$.le = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a <= b : $.le$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a <= b : $.le$slow(a, b) === true;
};

$.checkNumbers = function(a, b) {
  if (typeof a === "number")
    if (typeof b === "number")
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash, t1;
  hash = object.$identityHash;
  if (hash == null) {
    t1 = $.Primitives_hashCodeSeed;
    hash = $.getInterceptor$JSNumber(t1).operator$add$1(t1, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives__throwFormatException = function(string) {
  throw $.$$throw($.FormatException$(string));
};

$.Primitives_parseInt = function(source, radix, handleError) {
  var match, t1, maxCharCode, digitsPart, i;
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    if (!(match == null)) {
      t1 = $.getInterceptor$JSStringJSArray(match);
      if (!(t1.operator$index$1(match, 2) == null))
        return parseInt(source, 16);
      if (!(t1.operator$index$1(match, 3) == null))
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    if (!(typeof radix === "number" && Math.floor(radix) === radix))
      throw $.$$throw($.ArgumentError$("Radix is not an integer"));
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$("Radix " + $.S(radix) + " not in range 2..36"));
    if (!(match == null)) {
      if (radix === 10 && !($.getInterceptor$JSStringJSArray(match).operator$index$1(match, 3) == null))
        return parseInt(source, 10);
      if (radix < 10 || $.getInterceptor$JSStringJSArray(match).operator$index$1(match, 3) == null) {
        maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
        t1 = $.getInterceptor$JSStringJSArray(match).operator$index$1(match, 1);
        digitsPart = $.getInterceptor$JSString(t1).toLowerCase$0(t1);
        for (t1 = $.getInterceptor$JSStringJSArray(digitsPart), i = 0; $.ltB(i, t1.get$length(digitsPart)); ++i)
          if ($.gtB(t1.charCodeAt$1(digitsPart, i), maxCharCode))
            return handleError.call$1(source);
      }
    }
    radix = radix;
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
};

$.Primitives_parseDouble = function(source, handleError) {
  var result;
  $.checkString(source);
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(source))
    return handleError.call$1(source);
  result = parseFloat(source);
  if ($.CONSTANT7.get$isNaN(result) === true && !$.eqB(source, "NaN"))
    return handleError.call$1(source);
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_newFixedList = function(length$) {
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, i, result, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, i = 0, result = ""; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CONSTANT3.get$iterator(codePoints); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.CONSTANT4.operator$shr$1(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CONSTANT3.get$iterator(charCodes); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.listInsertRange = function(receiver, start, length$, initialValue) {
  var receiverLength, t1, t2, t3, i;
  if (typeof receiver !== "object" || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.is$JavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, length$, initialValue);
  if ($.eqB(length$, 0))
    return;
  if (!(typeof length$ === "number" && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof start === "number" && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + length$;
  $.CONSTANT3.set$length(receiver, t1);
  t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (t3 = receiver.length, i = start; i < t2; ++i) {
      if (i < 0 || i >= t3)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.CONSTANT3.set$length(receiver, t1);
};

$.listInsertRange$bailout = function(state0, receiver, start, length$, initialValue) {
  var receiverLength, t1, t2, i;
  if ($.eqB(length$, 0))
    return;
  if (!(typeof length$ === "number" && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof start === "number" && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + length$;
  $.CONSTANT3.set$length(receiver, t1);
  t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (i = start; i < t2; ++i)
      $.CONSTANT3.operator$indexSet$2(receiver, i, initialValue);
  $.CONSTANT3.set$length(receiver, t1);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT0;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  var t1 = this;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === "string")
      if ($.CONSTANT2.endsWith$1(message, "is null") === true || $.CONSTANT2.endsWith$1(message, "is undefined") === true || $.CONSTANT2.endsWith$1(message, "is null or undefined") === true || $.CONSTANT2.endsWith$1(message, "of undefined") === true || $.CONSTANT2.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === "string" ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, t1, key;
  iterator = $.CONSTANT3.get$iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (t1 = $.getInterceptor$JSArray(result); iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    t1.operator$indexSet$2(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  $._currentIsolate();
  function$ = function($0, $1) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, $0, $1); };
  closure.$identity = function$;
  return function$;
};

$.stringTypeCast = function(value) {
  if (typeof value === "string" || value == null)
    return value;
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), "String"));
};

$.propertyTypeCastError = function(value, property) {
  var actualType, t1;
  actualType = $.Primitives_objectTypeName(value);
  t1 = $.getInterceptor$JSStringJSArray(property);
  throw $.$$throw($.CastErrorImplementation$(actualType, t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.callTypeCast = function(value, property) {
  var t1;
  if (!(value == null))
    t1 = typeof value === "object" && value[property]();
  else
    t1 = true;
  if (t1)
    return value;
  $.propertyTypeCastError(value, property);
};

$.listTypeCast = function(value) {
  if (typeof value === "object" && value !== null && (value.constructor === Array || value.is$List()) || value == null)
    return value;
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), "List"));
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name$ = tag;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  return name$;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  if (name$ === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === "string")
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function(function$, object, property) {
  return function$.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT23));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT23)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, t2, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (isMultiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (isCaseSensitive !== true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(0);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.getInterceptor$JSNumber(position).operator$add$1(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.getInterceptor$JSNumber(startIndex).operator$add$1(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === "string")
    return !$.eqB($.CONSTANT2.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === "object" && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT2.substring$1(receiver, startIndex));
  else {
    substr = $.CONSTANT2.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).get$iterator(t1).moveNext$0();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl$immediate(value);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListener__FutureListener$wrap = function(future) {
  return $._FutureListenerWrapper$(future);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, completer, values, i, t3, i0;
  t1 = {};
  t2 = $.getInterceptor$JSStringJSArray(futures);
  if (t2.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CONSTANT6);
  completer = $.Completer_Completer();
  t1.remaining_0 = t2.get$length(futures);
  values = $.List_List$fixedLength(t2.get$length(futures), null);
  t1.completed_1 = false;
  for (t2 = t2.get$iterator(futures), i = 0; t2.moveNext$0() === true; i = i0) {
    t3 = t2.get$current();
    i0 = i + 1;
    t3.then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, completer, values, i)).catchError$1(new $._FutureImpl__FutureImpl$wait_anon0(t1, completer));
  }
  return completer.get$future();
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$._runUserCode = function(userCode, onSuccess, onError, cause) {
  var result, e, e0, s, exception, t1;
  result = null;
  try {
    result = userCode.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.is$AsyncError) {
      e = t1;
      return onError.call$1(e);
    } else {
      e0 = t1;
      s = $.getTraceFromException(exception);
      if (cause == null)
        onError.call$1($.AsyncError$(e0, s));
      else
        onError.call$1($.AsyncError$withCause(e0, s, cause));
    }
  }

  onSuccess.call$1(result);
};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$.Timer_Timer = function(milliseconds, callback) {
  return $.TimerImpl$(milliseconds, callback);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t2, t3, t1;
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart) {
    i = srcStart + count - 1;
    if (i !== (i | 0))
      return $.Arrays_copy$bailout(2, src, dst, count, i, dstStart, srcStart);
    j = dstStart + count - 1;
    t2 = src.length;
    t3 = dst.length;
    for (; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t1 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t1;
    }
  } else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      count = env4;
      dstStart = env3;
      dst = env2;
      srcStart = env1;
      src = env0;
      break;
    case 2:
      srcStart = env5;
      dstStart = env4;
      i = env3;
      count = env2;
      dst = env1;
      src = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    case 2:
      var count, dstStart, dst, srcStart, src, i, j;
      if (state0 === 2 || state0 === 0 && srcStart < dstStart)
        switch (state0) {
          case 0:
            i = srcStart + count - 1;
          case 2:
            state0 = 0;
            j = dstStart + count - 1;
            for (; i >= srcStart; --i, --j) {
              if (i !== (i | 0))
                throw $.iae(i);
              if (i < 0 || i >= src.length)
                throw $.ioore(i);
              $.CONSTANT3.operator$indexSet$2(dst, j, src[i]);
            }
        }
      else
        for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
          if (i < 0 || i >= src.length)
            throw $.ioore(i);
          $.CONSTANT3.operator$indexSet$2(dst, j, src[i]);
        }
  }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable); t1.moveNext$0() === true;)
    if (element === t1.get$current())
      return true;
  return false;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(0));
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.is$List());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, t2);
  for (t2 = $.getInterceptor$JSArray(c).get$iterator(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = typeof o === "object" && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}";
      $.getInterceptor$JSArray(result).add$1(result, t1);
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).get$iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(0));
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  t1 = new $.Maps__emitMap_anon(t1, result, visiting);
  $.getInterceptor$JSArray(m).forEach$1(m, t1);
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.MappedIterable$ = function(_iterable, _f) {
  return new $.MappedIterable(_iterable, _f);
};

$.MappedIterator$ = function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$.double_parse = function(source, handleError) {
  return $.Primitives_parseDouble(source, handleError);
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === "string") {
    t1 = $.CONSTANT2.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.int_parse = function(source, onError, radix) {
  return $.Primitives_parseInt(source, radix, onError);
};

$.List_List = function(length$) {
  if (!(typeof length$ === "number" && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length$) + "."));
  return new Array(length$);
};

$.List_List$fixedLength = function(length$, fill) {
  var result, t1, i;
  if (!(typeof length$ === "number" && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length$) + "."));
  result = $.Primitives_newFixedList(length$);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.is$JavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, length$, fill, result);
  if (!$.eqB(length$, 0) && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, length$, fill, result) {
  var i;
  if (!$.eqB(length$, 0) && !(fill == null))
    for (i = 0; i < result.length; ++i)
      $.CONSTANT3.operator$indexSet$2(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.getInterceptor$JSArray(other).get$iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.CONSTANT4.operator$tdiv$1(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  var t1, t2;
  t1 = $.getInterceptor$JSNumber(currentProbe).operator$add$1(currentProbe, numberOfProbes);
  t2 = $.getInterceptor$JSNumber(length$).operator$sub$1(length$, 1);
  return $.getInterceptor$JSNumber(t1).operator$and$1(t1, t2);
};

$._HashMapImplKeyIterable$ = function(_map) {
  return new $._HashMapImplKeyIterable(_map);
};

$._HashMapImplValueIterable$ = function(_map) {
  return new $._HashMapImplValueIterable(_map);
};

$._HashMapImplKeyIterator$ = function(map) {
  return new $._HashMapImplKeyIterator(map, -1, null);
};

$._HashMapImplValueIterator$ = function(map) {
  return new $._HashMapImplValueIterator(map, -1, null);
};

$._HashMapImplIndexIterator$ = function(map) {
  return new $._HashMapImplIndexIterator(map, -1, null);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.print = function(object) {
  if (typeof object === "string")
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.getInterceptor(object).toString$0(object));
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(sentinel) {
  return new $._DoubleLinkedQueueIterator(sentinel, sentinel, null);
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!charCodes.constructor === Array)
    charCodes = $.List_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.window = function() {
  return window;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.Element__determineMouseWheelEventType = function(e) {
  if (e.onwheel !== undefined)
    return "wheel";
  else if (e.onmousewheel !== undefined)
    return "mousewheel";
  else
    return "DOMMouseScroll";
};

$.HttpRequest_HttpRequest = function() {
  return new XMLHttpRequest();
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = document.$$dom_createElement$1("img");
  if (!(src == null))
    e.set$src(src);
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Opera", 0);
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor$JSString(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Firefox", 0);
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = window;
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.getInterceptor$JSStringJSArray(array).get$length(array), -1, null);
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, i;
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.geB(startIndex, t1.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.getInterceptor$JSNumber(i).operator$add$1(i, 1))
    if ($.eqB(t1.operator$index$1(a, i), element))
      return i;
  return -1;
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$.parse = function(json, reviver) {
  var listener = reviver == null ? $.BuildJsonListener$() : $.ReviverJsonListener$(reviver);
  $.JsonParser$(json, listener).parse$0();
  return listener.get$result();
};

$.BuildJsonListener$ = function() {
  return new $.BuildJsonListener([], null, null, null);
};

$.ReviverJsonListener$ = function(reviver) {
  return new $.ReviverJsonListener(reviver, [], null, null, null);
};

$.JsonParser$ = function(source, listener) {
  return new $.JsonParser(source, listener);
};

$.min = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.CONSTANT22.get$isNegative(b) === true || $.CONSTANT22.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return a + b;
        if ($.CONSTANT22.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.CONSTANT7.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.main = function() {
  var stage, renderLoop;
  stage = $.Stage$("myStage", document.query$1("#stage"));
  renderLoop = $.RenderLoop$();
  renderLoop.addStage$1(stage);
  $.FlumpLibrary_load("images/library.json").then$1(new $.main_anon(stage, renderLoop));
};

$.Juggler$ = function() {
  var t1 = new $.Juggler(null, null, null);
  t1.Juggler$0();
  return t1;
};

$.Bitmap$ = function(bitmapData, pixelSnapping) {
  var t1 = new $.Bitmap(bitmapData, pixelSnapping, null, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, "", null, null, null, null, null);
  t1.DisplayObject$0();
  t1.Bitmap$2(bitmapData, pixelSnapping);
  return t1;
};

$.BitmapData$fromImageElement = function(imageElement) {
  var t1 = new $.BitmapData(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.BitmapData$fromImageElement$1(imageElement);
  return t1;
};

$.BitmapData_loadImage = function(url) {
  var completer, image;
  completer = $.Completer_Completer();
  image = $.ImageElement_ImageElement(null, null, null);
  image.get$onLoad().listen$1(new $.BitmapData_loadImage_anon(completer, image));
  image.get$onError().listen$1(new $.BitmapData_loadImage_anon0(completer));
  image.set$src(url);
  return completer.get$future();
};

$._MouseButton$ = function(mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType) {
  return new $._MouseButton(null, false, 0, 0, mouseDownEventType, mouseUpEventType, mouseClickEventType, mouseDoubleClickEventType);
};

$._Touch$ = function(target, primaryTouchPoint) {
  var t1 = $._Touch__globalTouchPointID;
  $._Touch__globalTouchPointID = $.getInterceptor$JSNumber(t1).operator$add$1(t1, 1);
  return new $._Touch(t1, target, primaryTouchPoint);
};

$.Stage$ = function(name$, canvas) {
  var t1 = new $.Stage(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, [], null, true, true, false, true, true, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, "", null, null, null, null, null);
  t1.DisplayObject$0();
  t1.DisplayObjectContainer$0();
  t1.Stage$2(name$, canvas);
  return t1;
};

$.FlumpLibrary$ = function() {
  return new $.FlumpLibrary(null, null, null, null, null);
};

$.FlumpLibrary_load = function(url) {
  var completer, t1, t2, request;
  completer = $.Completer_Completer();
  t1 = new $.FlumpLibrary_load_onLoad(url, completer);
  t2 = new $.FlumpLibrary_load_onError(completer);
  request = $.HttpRequest_HttpRequest();
  request.get$onLoad().listen$1(t1);
  request.get$onError().listen$1(t2);
  request.open$3("GET", url, true);
  request.send$0();
  return completer.get$future();
};

$.FlumpMovie$ = function(flumpLibrary, name$) {
  var t1 = new $.FlumpMovie(null, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, "", null, null, null, null, null);
  t1.DisplayObject$0();
  t1.FlumpMovie$2(flumpLibrary, name$);
  return t1;
};

$._FlumpMovieLayer$ = function(flumpLibrary, flumpLayerData) {
  var t1 = new $._FlumpMovieLayer(null, null, flumpLayerData, 0, 0, 0, 0, 1, 1, 0, null, null, 1, true, "", null, null, null, null, null);
  t1.DisplayObject$0();
  t1._FlumpMovieLayer$2(flumpLibrary, flumpLayerData);
  return t1;
};

$._FlumpMovieData$ = function(json, flumpLibrary) {
  var t1 = new $._FlumpMovieData(null, flumpLibrary, null);
  t1._FlumpMovieData$2(json, flumpLibrary);
  return t1;
};

$._FlumpLayerData$ = function(json) {
  var t1 = new $._FlumpLayerData(null, null, null);
  t1._FlumpLayerData$1(json);
  return t1;
};

$._FlumpKeyframeData$ = function(json) {
  var t1 = new $._FlumpKeyframeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1._FlumpKeyframeData$1(json);
  return t1;
};

$._FlumpTextureGroup$ = function(json, flumpLibrary) {
  var t1, t2;
  t1 = {};
  t2 = new $._FlumpTextureGroup(flumpLibrary, null, null);
  t2._FlumpTextureGroup$2(json, flumpLibrary, t1);
  return t2;
};

$._FlumpTexture$ = function(x, y, width, height, originX, originY, imageElement) {
  return new $._FlumpTexture(x, y, width, height, originX, originY, imageElement);
};

$.RenderLoop$ = function() {
  var t1 = new $.RenderLoop(null, null, null, null, null);
  t1.RenderLoop$0();
  return t1;
};

$.RenderState$fromCanvasRenderingContext2D = function(context, matrix) {
  var t1 = new $.RenderState(null, null, null, null);
  t1.RenderState$fromCanvasRenderingContext2D$2(context, matrix);
  return t1;
};

$.EnterFrameEvent$ = function(passedTime) {
  var t1 = new $.EnterFrameEvent(null, null, null, null, null, null, null, null);
  t1.Event$2("enterFrame", false);
  t1.EnterFrameEvent$1(passedTime);
  return t1;
};

$.Event$ = function(type, bubbles) {
  var t1 = new $.Event(null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$.EventDispatcher$ = function() {
  return new $.EventDispatcher(null);
};

$._EventListenerUseCapture$ = function(eventListener, useCapture) {
  return new $._EventListenerUseCapture(eventListener, useCapture);
};

$.EventListenerList$ = function(eventDispatcher, eventType) {
  var t1 = new $.EventListenerList(null, null, null);
  t1.EventListenerList$2(eventDispatcher, eventType);
  return t1;
};

$._EventListenerListIndex$ = function() {
  var t1 = new $._EventListenerListIndex(null);
  t1._EventListenerListIndex$0();
  return t1;
};

$.KeyboardEvent$ = function(type, bubbles) {
  var t1 = new $.KeyboardEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.KeyboardEvent$2(type, bubbles);
  return t1;
};

$.MouseEvent$ = function(type, bubbles) {
  var t1 = new $.MouseEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.MouseEvent$2(type, bubbles);
  return t1;
};

$.TextEvent$ = function(type, bubbles) {
  var t1 = new $.TextEvent("", null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  return t1;
};

$.TouchEvent$ = function(type, bubbles) {
  var t1 = new $.TouchEvent(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Event$2(type, bubbles);
  t1.TouchEvent$2(type, bubbles);
  return t1;
};

$.Matrix$fromIdentity = function() {
  return new $.Matrix(1, 0, 0, 1, 0, 0, 1);
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.Point$zero = function() {
  return new $.Point(0, 0);
};

$.Rectangle$zero = function() {
  return new $.Rectangle(0, 0, 0, 0);
};

$.Mouse__getCssStyle = function(mouseCursor) {
  var cursor, style;
  cursor = !$.eqB($.Mouse__customCursor, "auto") ? $.Mouse__customCursor : mouseCursor;
  style = "auto";
  switch (cursor) {
    case "auto":
      style = "auto";
      break;
    case "arrow":
      style = "default";
      break;
    case "button":
      style = "pointer";
      break;
    case "hand":
      style = "move";
      break;
    case "ibeam":
      style = "text";
      break;
    case "wait":
      style = "wait";
      break;
  }
  return $.Mouse__isCursorHidden === true ? "none" : style;
};

$.Multitouch__initialize = function() {
  var ua, t1;
  if ($.eqB($.Multitouch__initialized, false)) {
    $.Multitouch__initialized = true;
    ua = window.get$navigator().get$userAgent();
    t1 = $.getInterceptor$JSStringJSArray(ua);
    if (t1.contains$1(ua, "iPhone") === true || t1.contains$1(ua, "iPad") === true || t1.contains$1(ua, "iPod") === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if (t1.contains$1(ua, "Android") === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
    if (t1.contains$1(ua, "IEMobile") === true) {
      $.Multitouch__supportsTouchEvents = true;
      $.Multitouch__maxTouchPoints = 10;
    }
  }
};

$._replaceFilename = function(url, filename) {
  var path = $.RegExp_RegExp("^(.*/)?(?:$|(.+?)(?:(\\.[^.]*$)|$))", false, false).firstMatch$1(url).group$1(1);
  return path == null ? filename : $.S(path) + $.S(filename);
};

$._getBoundsTransformedHelper = function(matrix, width, height, returnRectangle) {
  var t1, t2, x2, y2, t3, t4, x3, y3, x4, y4, left, top$, right, bottom;
  t1 = matrix.get$a();
  t2 = $.getInterceptor$JSNumber(width);
  x2 = t2.operator$mul$1(width, t1);
  y2 = t2.operator$mul$1(width, matrix.get$b());
  t1 = t2.operator$mul$1(width, matrix.get$a());
  t3 = matrix.get$c();
  t4 = $.getInterceptor$JSNumber(height);
  t3 = t4.operator$mul$1(height, t3);
  x3 = $.getInterceptor$JSNumber(t1).operator$add$1(t1, t3);
  t2 = t2.operator$mul$1(width, matrix.get$b());
  t3 = t4.operator$mul$1(height, matrix.get$d());
  y3 = $.getInterceptor$JSNumber(t2).operator$add$1(t2, t3);
  x4 = t4.operator$mul$1(height, matrix.get$c());
  y4 = t4.operator$mul$1(height, matrix.get$d());
  left = $.gtB(0, x2) ? x2 : 0;
  if ($.gtB(left, x3))
    left = x3;
  if ($.gtB(left, x4))
    left = x4;
  top$ = $.gtB(0, y2) ? y2 : 0;
  if ($.gtB(top$, y3))
    top$ = y3;
  if ($.gtB(top$, y4))
    top$ = y4;
  right = $.ltB(0, x2) ? x2 : 0;
  if ($.ltB(right, x3))
    right = x3;
  if ($.ltB(right, x4))
    right = x4;
  bottom = $.ltB(0, y2) ? y2 : 0;
  if ($.ltB(bottom, y3))
    bottom = y3;
  if ($.ltB(bottom, y4))
    bottom = y4;
  if (returnRectangle == null)
    returnRectangle = $.Rectangle$zero();
  t1 = matrix.get$tx();
  returnRectangle.set$x($.getInterceptor$JSNumber(t1).operator$add$1(t1, left));
  t2 = matrix.get$ty();
  returnRectangle.set$y($.getInterceptor$JSNumber(t2).operator$add$1(t2, top$));
  returnRectangle.set$width($.getInterceptor$JSNumber(right).operator$sub$1(right, left));
  returnRectangle.set$height($.getInterceptor$JSNumber(bottom).operator$sub$1(bottom, top$));
  return returnRectangle;
};

$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.Primitives__throwFormatException.call$1 = $.Primitives__throwFormatException;
$.Primitives__throwFormatException.$name = "Primitives__throwFormatException";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.Element__determineMouseWheelEventType.call$1 = $.Element__determineMouseWheelEventType;
$.Element__determineMouseWheelEventType.$name = "Element__determineMouseWheelEventType";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
Isolate.$finishClasses($$);
$$ = {};
$.List = {builtin$cls: 'List'};
$.Touch = {builtin$cls: 'Touch'};
$.BitmapDrawable = {builtin$cls: 'BitmapDrawable'};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
$.Match = {builtin$cls: 'Match'};
$.bool = {builtin$cls: 'bool'};
$.Node = {builtin$cls: 'Node'};
$.$double = {builtin$cls: '$double'};
$.String = {builtin$cls: 'String'};
$.Animatable = {builtin$cls: 'Animatable'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
$.$int = {builtin$cls: '$int'};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT6 = Isolate.makeConstantList([]);
$.CONSTANT19 = new Isolate.$isolateProperties.EventStreamProvider("mousemove");
$.CONSTANT18 = new Isolate.$isolateProperties.EventStreamProvider("mouseout");
$.CONSTANT5 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT20 = new Isolate.$isolateProperties.EventStreamProvider("mouseup");
$.CONSTANT3 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT7 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT4 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT22 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT2 = new Isolate.$isolateProperties.JSString();
$.CONSTANT1 = new Isolate.$isolateProperties.EventStreamProvider("load");
$.CONSTANT16 = new Isolate.$isolateProperties.EventStreamProvider("touchstart");
$.CONSTANT8 = new Isolate.$isolateProperties.EventStreamProvider("keypress");
$.CONSTANT23 = new Isolate.$isolateProperties.Object();
$.CONSTANT0 = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT11 = new Isolate.$isolateProperties.EventStreamProvider("touchcancel");
$.CONSTANT21 = new Isolate.$isolateProperties.EventStreamProvider("mousedown");
$.CONSTANT14 = new Isolate.$isolateProperties.EventStreamProvider("touchmove");
$.CONSTANT9 = new Isolate.$isolateProperties.EventStreamProvider("keyup");
$.CONSTANT15 = new Isolate.$isolateProperties.EventStreamProvider("touchend");
$.CONSTANT17 = new Isolate.$isolateProperties._CustomEventStreamProvider(Isolate.$isolateProperties.Element__determineMouseWheelEventType);
$.CONSTANT12 = new Isolate.$isolateProperties.EventStreamProvider("touchleave");
$.CONSTANT = new Isolate.$isolateProperties.EventStreamProvider("error");
$.CONSTANT13 = new Isolate.$isolateProperties.EventStreamProvider("touchenter");
$.CONSTANT10 = new Isolate.$isolateProperties.EventStreamProvider("keydown");
$.MouseCursor_WAIT = "wait";
$.JsonParser_RBRACKET = 93;
$.JsonParser_CHAR_a = 97;
$.JsonParser_CHAR_e = 101;
$.JsonParser_CHAR_b = 98;
$.JsonParser_CHAR_f = 102;
$.JsonParser_CHAR_l = 108;
$.JsonParser_CHAR_n = 110;
$.JsonParser_CHAR_r = 114;
$.EventPhase_CAPTURING_PHASE = 1;
$.JsonParser_CHAR_s = 115;
$.EventPhase_AT_TARGET = 2;
$.JsonParser_CHAR_t = 116;
$.EventPhase_BUBBLING_PHASE = 3;
$.JsonParser_CHAR_u = 117;
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.JsonParser_LBRACE = 123;
$.JsonParser_RBRACE = 125;
$.BodyElement_errorEvent = Isolate.$isolateProperties.CONSTANT;
$.BodyElement_loadEvent = Isolate.$isolateProperties.CONSTANT1;
$._Touch__globalTouchPointID = 0;
$.Multitouch__initialized = false;
$.Multitouch__supportsTouchEvents = false;
$.Multitouch__maxTouchPoints = 0;
$.MouseEvent_CLICK = "click";
$.MouseEvent_DOUBLE_CLICK = "doubleClick";
$.MouseEvent_MOUSE_DOWN = "mouseDown";
$.MouseEvent_MOUSE_UP = "mouseUp";
$.Multitouch__inputMode = "none";
$.MouseEvent_MOUSE_MOVE = "mouseMove";
$.MouseEvent_MOUSE_OUT = "mouseOut";
$.MouseEvent_MOUSE_OVER = "mouseOver";
$.MouseEvent_MIDDLE_CLICK = "middleClick";
$.MouseEvent_MIDDLE_MOUSE_DOWN = "middleMouseDown";
$.MouseEvent_RIGHT_CLICK = "rightClick";
$.MouseEvent_MIDDLE_MOUSE_UP = "middleMouseUp";
$.MouseEvent_RIGHT_MOUSE_DOWN = "rightMouseDown";
$.MouseEvent_RIGHT_MOUSE_UP = "rightMouseUp";
$.TextEvent_TEXT_INPUT = "textInput";
$._getTypeNameOf = null;
$.KeyLocation_STANDARD = 0;
$.KeyLocation_LEFT = 1;
$.KeyLocation_RIGHT = 2;
$.KeyLocation_NUM_PAD = 3;
$.KeyLocation_D_PAD = 4;
$.KeyLocation_LEFT0 = 1;
$.KeyLocation_RIGHT0 = 2;
$.KeyLocation_NUMPAD = 3;
$.KeyLocation_MOBILE = 4;
$.KeyLocation_JOYSTICK = 5;
$.MultitouchInputMode_NONE = "none";
$.MultitouchInputMode_TOUCH_POINT = "touchPoint";
$.Event_ADDED = "added";
$.Event_ADDED_TO_STAGE = "addedToStage";
$.Event_ENTER_FRAME = "enterFrame";
$.Event_REMOVED = "removed";
$.Event_REMOVED_FROM_STAGE = "removedFromStage";
$._cachedBrowserPrefix = null;
$.Element_mouseWheelEvent = Isolate.$isolateProperties.CONSTANT17;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT5;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.KeyboardEvent_KEY_DOWN = "keyDown";
$.KeyboardEvent_KEY_UP = "keyUp";
$.StageRenderMode_AUTO = "auto";
$.StageRenderMode_STOP = "stop";
$.StageRenderMode_ONCE = "once";
$.Element_errorEvent = Isolate.$isolateProperties.CONSTANT;
$.Element_keyDownEvent = Isolate.$isolateProperties.CONSTANT10;
$.Element_keyPressEvent = Isolate.$isolateProperties.CONSTANT8;
$.Element_keyUpEvent = Isolate.$isolateProperties.CONSTANT9;
$.Element_loadEvent = Isolate.$isolateProperties.CONSTANT1;
$.Element_mouseDownEvent = Isolate.$isolateProperties.CONSTANT21;
$.Element_mouseMoveEvent = Isolate.$isolateProperties.CONSTANT19;
$.Element_mouseOutEvent = Isolate.$isolateProperties.CONSTANT18;
$.TouchEvent_TOUCH_BEGIN = "touchBegin";
$.TouchEvent_TOUCH_END = "touchEnd";
$.Element_mouseUpEvent = Isolate.$isolateProperties.CONSTANT20;
$.TouchEvent_TOUCH_CANCEL = "touchCancel";
$.TouchEvent_TOUCH_MOVE = "touchMove";
$.TouchEvent_TOUCH_OVER = "touchOver";
$.TouchEvent_TOUCH_OUT = "touchOut";
$.Element_touchCancelEvent = Isolate.$isolateProperties.CONSTANT11;
$.Element_touchEndEvent = Isolate.$isolateProperties.CONSTANT15;
$.Element_touchEnterEvent = Isolate.$isolateProperties.CONSTANT13;
$.Element_touchLeaveEvent = Isolate.$isolateProperties.CONSTANT12;
$.Element_touchMoveEvent = Isolate.$isolateProperties.CONSTANT14;
$.Element_touchStartEvent = Isolate.$isolateProperties.CONSTANT16;
$.ReceivePortImpl__nextFreeId = 1;
$.double_NAN = (0/0);
$.double_INFINITY = (1/0);
$.double_NEGATIVE_INFINITY = (-1/0);
$.lazyPort = null;
$._SPAWNED_SIGNAL = "spawned";
$.Primitives_hashCodeSeed = 0;
$.HttpRequestUpload_errorEvent = Isolate.$isolateProperties.CONSTANT;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.HttpRequestUpload_loadEvent = Isolate.$isolateProperties.CONSTANT1;
$.JsonParser_INSIDE_ARRAY = 1;
$.JsonParser_INSIDE_OBJECT = 2;
$.JsonParser_AFTER_COLON = 3;
$.JsonParser_ALLOW_STRING_MASK = 8;
$._FutureImpl__INCOMPLETE = 0;
$._FutureImpl__VALUE = 1;
$.JsonParser_ALLOW_VALUE = 0;
$._FutureImpl__ERROR = 2;
$.JsonParser_STRING_ONLY = 4;
$._FutureImpl__UNHANDLED_ERROR = 4;
$.JsonParser_ALLOW_VALUE_MASK = 4;
$.JsonParser_EMPTY = 0;
$.JsonParser_NON_EMPTY = 16;
$.JsonParser_NO_VALUES = 12;
$.JsonParser_VALUE_READ_BITS = 28;
$.JsonParser_STATE_INITIAL = 0;
$.JsonParser_STATE_END = 28;
$.JsonParser_STATE_ARRAY_EMPTY = 1;
$.JsonParser_STATE_ARRAY_VALUE = 29;
$.JsonParser_STATE_ARRAY_COMMA = 17;
$.JsonParser_STATE_OBJECT_EMPTY = 6;
$.JsonParser_STATE_OBJECT_KEY = 30;
$.JsonParser_STATE_OBJECT_COLON = 19;
$.JsonParser_STATE_OBJECT_VALUE = 31;
$.JsonParser_STATE_OBJECT_COMMA = 22;
$.JsonParser_BACKSPACE = 8;
$.HttpRequest_errorEvent = Isolate.$isolateProperties.CONSTANT;
$.JsonParser_TAB = 9;
$.HttpRequest_loadEvent = Isolate.$isolateProperties.CONSTANT1;
$.JsonParser_NEWLINE = 10;
$.JsonParser_CARRIAGE_RETURN = 13;
$.JsonParser_FORM_FEED = 12;
$.JsonParser_SPACE = 32;
$.JsonParser_QUOTE = 34;
$.JsonParser_PLUS = 43;
$.MouseCursor_AUTO = "auto";
$.JsonParser_COMMA = 44;
$.MouseCursor_ARROW = "arrow";
$.JsonParser_MINUS = 45;
$.MouseCursor_BUTTON = "button";
$.JsonParser_DECIMALPOINT = 46;
$.MouseCursor_HAND = "hand";
$.JsonParser_SLASH = 47;
$.MouseCursor_IBEAM = "ibeam";
$.JsonParser_CHAR_0 = 48;
$.JsonParser_CHAR_9 = 57;
$.JsonParser_COLON = 58;
$.Mouse__customCursor = "auto";
$.JsonParser_CHAR_E = 69;
$.JsonParser_LBRACKET = 91;
$.Mouse__isCursorHidden = false;
$.JsonParser_BACKSLASH = 92;
$.getInterceptor$JSInt = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSNumber.prototype;
  }
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, 'thisScript', 'IsolateNatives_thisScript', 'get$IsolateNatives_thisScript', function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, 'globalPostMessageDefined', 'globalPostMessageDefined', 'get$globalPostMessageDefined', function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
Isolate.$lazy($, 'globalThis', 'globalThis', 'get$globalThis', function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, 'globalWindow', 'globalWindow', 'get$globalWindow', function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, 'globalWorker', 'globalWorker', 'get$globalWorker', function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, '_eventDispatcher', 'Mouse__eventDispatcher', 'get$Mouse__eventDispatcher', function() {
  return $.EventDispatcher$();
});
Isolate.$lazy($, 'enterFrame', '_EventListenerListIndex_enterFrame', 'get$_EventListenerListIndex_enterFrame', function() {
  return $._EventListenerListIndex$();
});
Isolate.$lazy($, '_eventDispatcher', 'Multitouch__eventDispatcher', 'get$Multitouch__eventDispatcher', function() {
  return $.EventDispatcher$();
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  is$JavaScriptIndexingBehavior: function() {
    return false;
  },
  is$Collection: function() {
    return false;
  },
  is$List: function() {
    return false;
  },
  is$Map: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "target=,type>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLAreaElement", {"": "target="});

$.$defineNativeClass("HTMLBaseElement", {"": "target="});

$.$defineNativeClass("Blob", {"": "type>"});

$.$defineNativeClass("HTMLBodyElement", {
  get$onError: function() {
    return $.CONSTANT.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT1.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLButtonElement", {"": "type>,value="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width=",
  getContext$1: function(contextId) {
    return this.getContext(contextId);
  },
  get$context2d: function() {
    return this.getContext$1("2d");
  }
});

$.$defineNativeClass("CanvasRenderingContext", {"": "canvas>"});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "globalAlpha<",
  clearRect$4: function(x, y, width, height) {
    return this.clearRect(x,y,width,height);
  },
  drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
    return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
  },
  drawImage$3: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y) {
    return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y);
  },
  restore$0: function() {
    return this.restore();
  },
  save$0: function() {
    return this.save();
  },
  setTransform$6: function(m11, m12, m21, m22, dx, dy) {
    return this.setTransform(m11,m12,m21,m22,dx,dy);
  },
  transform$6: function(m11, m12, m21, m22, dx, dy) {
    return this.transform(m11,m12,m21,m22,dx,dy);
  }
});

$.$defineNativeClass("CharacterData", {"": "length>",
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("ClientRect", {"": "bottom>,height>,left>,right>,top>,width>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  _getPropertyValue$1: function(propertyName) {
    return this.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this._getPropertyValue$1(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  get$bottom: function() {
    return this.getPropertyValue$1("bottom");
  },
  get$clear: function() {
    return this.getPropertyValue$1("clear");
  },
  clear$0: function() {
    return this.get$clear().call$0();
  },
  set$cursor: function(value) {
    this.setProperty$3("cursor", value, "");
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  get$left: function() {
    return this.getPropertyValue$1("left");
  },
  get$mask: function() {
    return this.getPropertyValue$1($.S($._browserPrefix()) + "mask");
  },
  get$right: function() {
    return this.getPropertyValue$1("right");
  },
  set$src: function(value) {
    this.setProperty$3("src", value, "");
  },
  get$top: function() {
    return this.getPropertyValue$1("top");
  },
  get$transform: function() {
    return this.getPropertyValue$1($.S($._browserPrefix()) + "transform");
  },
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  }
});

$.$defineNativeClass("HTMLDetailsElement", {
  open$3: function(arg0, arg1, arg2) {
    return this.open.call$3(arg0, arg1, arg2);
  }
});

$.$defineNativeClass("DeviceOrientationEvent", {"": "alpha>"});

$.$defineNativeClass("Document", {
  $$dom_createElement$1: function(tagName) {
    return this.createElement(tagName);
  },
  $$dom_getElementById$1: function(elementId) {
    return this.getElementById(elementId);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  get$onError: function() {
    return $.CONSTANT.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT8.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT1.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT20.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT15.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT14.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT16.forTarget$1(this);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors) === true)
      return this.$$dom_getElementById$1($.CONSTANT2.substring$1(selectors, 1));
    return this.$$dom_querySelector$1(selectors);
  }
});

$.$defineNativeClass("DocumentFragment", {
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  get$id: function() {
    return "";
  },
  get$parent: function() {
    return;
  },
  get$style: function() {
    return $.Element_Element$tag("div").get$style();
  },
  focus$0: function() {
  },
  set$id: function(value) {
    throw $.$$throw($.UnsupportedError$("ID can't be set for document fragments."));
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  }
});

$.$defineNativeClass("DOMException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "id=,style>",
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  focus$0: function() {
    return this.focus();
  },
  getBoundingClientRect$0: function() {
    return this.getBoundingClientRect();
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  get$onError: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$onError")) {
      return $.CONSTANT.forTarget$1(this);
    } else
      return Object.prototype.get$onError.call(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT8.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onLoad: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$onLoad")) {
      return $.CONSTANT1.forTarget$1(this);
    } else
      return Object.prototype.get$onLoad.call(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT20.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT15.forTarget$1(this);
  },
  get$onTouchEnter: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onTouchLeave: function() {
    return $.CONSTANT12.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT14.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT16.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height=,src<,type>,width="});

$.$defineNativeClass("Event", {"": "bubbles>,eventPhase>,type>",
  get$target: function() {
    return $._convertNativeToDart_EventTarget(this.target);
  },
  preventDefault$0: function() {
    return this.preventDefault();
  }
});

$.$defineNativeClass("EventException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "type>"});

$.$defineNativeClass("FileException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>,target=",
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("XMLHttpRequest", {"": "responseText>",
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  open$5: function(method, url, async, user, password) {
    return this.open(method,url,async,user,password);
  },
  open$3: function(method, url, async) {
    return this.open(method, url, async);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  send$1: function(data) {
    return this.send(data);
  },
  send$0: function() {
    return this.send();
  },
  get$onError: function() {
    return $.CONSTANT.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT1.forTarget$1(this);
  }
});

$.$defineNativeClass("XMLHttpRequestException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("XMLHttpRequestUpload", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onError: function() {
    return $.CONSTANT.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT1.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,src<,width="});

$.$defineNativeClass("HTMLImageElement", {"": "height=,naturalHeight>,naturalWidth>,src<,width=,x>,y>",
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "height=,pattern>,src<,type>,value=,width="});

$.$defineNativeClass("KeyboardEvent", {"": "altKey>,ctrlKey>,keyLocation>,shiftKey>",
  get$keyCode: function() {
    return this.keyCode;
  },
  get$charCode: function() {
    return this.charCode;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "type>"});

$.$defineNativeClass("HTMLLIElement", {"": "type>,value="});

$.$defineNativeClass("HTMLLinkElement", {"": "type>"});

$.$defineNativeClass("HTMLMediaElement", {"": "duration>,error>,src<"});

$.$defineNativeClass("MessageEvent", {"": "ports>",
  get$source: function() {
    return $._convertNativeToDart_Window(this.source);
  }
});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MouseEvent", {"": "altKey>,button>,clientX>,clientY>,ctrlKey>,shiftKey>,x>,y>"});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Navigator", {"": "userAgent>"});

$.$defineNativeClass("Node", {"": "parent:parentElement~",
  remove$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$0")) {
      var t1 = this.parentNode;
      if (!(t1 == null))
        t1.$$dom_removeChild$1(this);
    } else
      return Object.prototype.remove$0.call(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type>"});

$.$defineNativeClass("HTMLObjectElement", {"": "height=,type>,width="});

$.$defineNativeClass("HTMLOptionElement", {"": "index>,value="});

$.$defineNativeClass("HTMLOutputElement", {"": "type>,value="});

$.$defineNativeClass("HTMLParamElement", {"": "value="});

$.$defineNativeClass("ProcessingInstruction", {"": "target>"});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("RangeException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "src<,type>"});

$.$defineNativeClass("HTMLSelectElement", {"": "length=,type>,value="});

$.$defineNativeClass("HTMLSourceElement", {"": "src<,type>"});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("SpeechRecognitionEvent", {"": "result>"});

$.$defineNativeClass("SpeechRecognitionResult", {"": "length>"});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return !(this.$$dom_getItem$1(key) == null);
  },
  operator$index$1: function(key) {
    return this.$$dom_getItem$1(key);
  },
  operator$indexSet$2: function(key, value) {
    this.$$dom_setItem$2(key, value);
  },
  remove$1: function(key) {
    var value = this.operator$index$1(key);
    this.$$dom_removeItem$1(key);
    return value;
  },
  clear$0: function() {
    return this.$$dom_clear$0();
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(i);
      if (key == null)
        return;
      f.call$2(key, this.operator$index$1(key));
    }
  },
  get$keys: function() {
    var keys = [];
    this.forEach$1(new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function() {
    var values = [];
    this.forEach$1(new $.Storage_values_anon(values));
    return values;
  },
  get$length: function() {
    return this.length;
  },
  get$isEmpty: function() {
    return this.$$dom_key$1(0) == null;
  },
  $$dom_clear$0: function() {
    return this.clear();
  },
  $$dom_getItem$1: function(key) {
    return this.getItem(key);
  },
  $$dom_key$1: function(index) {
    return this.key(index);
  },
  $$dom_removeItem$1: function(key) {
    return this.removeItem(key);
  },
  $$dom_setItem$2: function(key, data) {
    return this.setItem(key,data);
  },
  is$Map: function() {
    return true;
  }
});

$.$defineNativeClass("StorageEvent", {"": "key>"});

$.$defineNativeClass("HTMLStyleElement", {"": "type>"});

$.$defineNativeClass("HTMLTextAreaElement", {"": "type>,value="});

$.$defineNativeClass("Touch", {"": "clientX>,clientY>,identifier>",
  get$target: function() {
    return $._convertNativeToDart_EventTarget(this.target);
  }
});

$.$defineNativeClass("TouchEvent", {"": "altKey>,changedTouches>,ctrlKey>,shiftKey>"});

$.$defineNativeClass("TouchList", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLTrackElement", {"": "src<"});

$.$defineNativeClass("WebKitTransitionEvent", {
  propertyName$0: function() {
    return this.propertyName.call$0();
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  operator$index$1: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("operator$index$1")) {
      return this[index];
    } else
      return Object.prototype.operator$index$1.call(this, index);
  },
  operator$indexSet$2: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("operator$indexSet$2")) {
      this[index] = value;
    } else
      return Object.prototype.operator$indexSet$2.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  contains$1: function(element) {
    if (Object.getPrototypeOf(this).hasOwnProperty("contains$1")) {
      return $.IterableMixinWorkaround_contains(this, element);
    } else
      return Object.prototype.contains$1.call(this, element);
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  toList$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$0")) {
      return $.List_List$from(this);
    } else
      return Object.prototype.toList$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  addLast$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addLast$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addLast$1.call(this, value);
  },
  set$length: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$length")) {
      throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
    } else
      return Object.prototype.set$length.call(this, value);
  },
  clear$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("clear$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
    } else
      return Object.prototype.clear$0.call(this);
  },
  indexOf$2: function(element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
    } else
      return Object.prototype.indexOf$2.call(this, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAt$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAt$1.call(this, pos);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    if (Object.getPrototypeOf(this).hasOwnProperty("insertRange$3")) {
      throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
    } else
      return Object.prototype.insertRange$3.call(this, start, rangeLength, initialValue);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("DOMWindow", {"": "navigator>",
  open$3: function(url, name$, options) {
    if (options == null)
      return $._DOMWindowCrossFrame__createSafe(this.open(url,name$));
    else
      return $._DOMWindowCrossFrame__createSafe(this.open(url,name$,options));
  },
  requestAnimationFrame$1: function(callback) {
    this._ensureRequestAnimationFrame$0();
    return this._requestAnimationFrame$1(callback);
  },
  _requestAnimationFrame$1: function(callback) {
    return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function() {
    if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
  },
  get$parent: function() {
    return $._convertNativeToDart_Window(this.parent);
  },
  get$top: function() {
    return $._convertNativeToDart_Window(this.top);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onError: function() {
    return $.CONSTANT.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT8.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT1.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT20.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onTouchCancel: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT15.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT14.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT16.forTarget$1(this);
  }
});

$.$defineNativeClass("XPathException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGAElement", {"": "target>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGCircleElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGClipPathElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type>"});

$.$defineNativeClass("SVGCursorElement", {"": "x>,y>"});

$.$defineNativeClass("SVGDefsElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGEllipseElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type>,height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type>,height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGGElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x=,y="});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGLineElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPathElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPolygonElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGPolylineElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGScriptElement", {"": "type>"});

$.$defineNativeClass("SVGStyleElement", {"": "type>"});

$.$defineNativeClass("SVGElement", {
  get$id: function() {
    return this.id;
  },
  set$id: function(value) {
    this.id = value;
  }
});

$.$defineNativeClass("SVGException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGSwitchElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGTextElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x>,y>"});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

// 121 dynamic classes.
// 244 classes
// 23 !leaf
(function() {
  var v0_TextPositioningElement = "SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement", v1_ComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEFuncBElement", v2_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v3_SvgElement = [v0_TextPositioningElement, v1_ComponentTransferFunctionElement, "SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEDiffuseLightingElement|SVGFEDropShadowElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEFloodElement|SVGFEConvolveMatrixElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEMergeElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFEOffsetElement|SVGFETileElement|SVGFETurbulenceElement|SVGFESpotLightElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFilterElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGHKernElement|SVGImageElement|SVGForeignObjectElement|SVGLineElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGFontElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGViewElement|SVGVKernElement"].join("|"), v4_MouseEvent = "MouseEvent|WheelEvent", v5_Element = [v2_MediaElement, v3_SvgElement, "Element|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement|HTMLElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement"].join("|"), v6_DocumentFragment = "DocumentFragment|ShadowRoot", v7_CharacterData = "CharacterData|Text|CDATASection|Comment", v8_Document = "Document|SVGDocument|HTMLDocument", v9_Node = [v5_Element, v6_DocumentFragment, v7_CharacterData, v8_Document, "Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction"].join("|");
  $.dynamicSetMetadata([["SVGComponentTransferFunctionElement", v1_ComponentTransferFunctionElement], ["Blob", "Blob|File"], ["CanvasRenderingContext", "CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D"], ["CharacterData", v7_CharacterData], ["Document", v8_Document], ["DocumentFragment", v6_DocumentFragment], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["HTMLMediaElement", v2_MediaElement], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGElement", v3_SvgElement], ["Element", v5_Element], ["MouseEvent", v4_MouseEvent], ["Event", [v4_MouseEvent, "Event|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|UIEvent|TextEvent|TouchEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|DeviceMotionEvent|CloseEvent|DeviceOrientationEvent|CustomEvent|ErrorEvent|HashChangeEvent|ProgressEvent|XMLHttpRequestProgressEvent|AudioProcessingEvent|WebKitAnimationEvent|OfflineAudioCompletionEvent|BeforeLoadEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent|PopStateEvent"].join("|")], ["Node", v9_Node], ["EventTarget", [v9_Node, "EventTarget|DOMWindow|XMLHttpRequest|XMLHttpRequestUpload"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["NodeList", "NodeList|RadioNodeList"]]);
})();

$.main.call$0 = $.main;

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } finally {
          if (result === sentinelUndefined) {
            if ($[fieldName] === sentinelInProgress) {
              $[fieldName] = null;
            }
          }
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=flump.dart.js.map